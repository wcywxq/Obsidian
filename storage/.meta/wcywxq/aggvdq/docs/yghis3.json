{
  "id": 73626184,
  "slug": "yghis3",
  "title": "webx",
  "description": "介绍最初的话这个项目的雏形其实是叫「统一码」，核心理念就是说希望可以通过一个码（一般指二维码）来进行任意投放，具体来讲就是使用普通浏览器扫码能打开 H5 营销页面，微信扫码能打开小程序，并在小程序打开对应页面，支付宝扫码能打开支付宝小程序，并在小程序打开具体页面等等。其实本质上二维码投放的就是...",
  "cover": "",
  "user_id": 732231,
  "book_id": 24987782,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"61a3ec66\"><span class=\"ne-text\">介绍</span></h2><p id=\"u215f551a\" class=\"ne-p\"><br></p><p id=\"u8a96380f\" class=\"ne-p\"><span class=\"ne-text\">最初的话这个项目的雏形其实是叫「统一码」，核心理念就是说希望可以通过一个码（一般指二维码）来进行任意投放，具体来讲就是使用普通浏览器扫码能打开 </span><code class=\"ne-code\"><span class=\"ne-text\">H5</span></code><span class=\"ne-text\"> 营销页面，微信扫码能打开小程序，并在小程序打开对应页面，支付宝扫码能打开支付宝小程序，并在小程序打开具体页面等等。其实本质上二维码投放的就是一个特殊的链接，我们通过解析链接的域名，</span><code class=\"ne-code\"><span class=\"ne-text\">path</span></code><span class=\"ne-text\">，动态 </span><code class=\"ne-code\"><span class=\"ne-text\">path</span></code><span class=\"ne-text\"> 参数等信息来在不同平台做不同的解析，以达到上述效果。里面就涉及到了服务端的重定向、具体的 </span><code class=\"ne-code\"><span class=\"ne-text\">H5</span></code><span class=\"ne-text\"> 跟 </span><code class=\"ne-code\"><span class=\"ne-text\">path</span></code><span class=\"ne-text\"> 参数一一对应的处理、小程序的处理等</span></p><p id=\"u40635046\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u53c2f2fc\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">webx-mp-sdk</span></code><span class=\"ne-text\">，实际上就是小程序这一块的工作内容</span></p><p id=\"u0636438b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"uc71dddaa\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\">九章是以 </span><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\">技术体系为基础，建设一套集团流量分发的数据标准和规范，目的在于持续建设增长数据体系，服务全集团的用户增长拉新。</span></p><p id=\"u4f5f1b33\" class=\"ne-p\"><br></p><p id=\"ue01b2d61\" class=\"ne-p\"><span class=\"ne-text\">实现这个能力的话我们首先需要原生平台的支持，微信和支付宝小程序其实都在那时候提供了扫描普通链接二维码打开小程序的能力，这其实就对我们实现这个能力提供了可能性。后续这个能力整体升级成 </span><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\">，并建立了 </span><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\"> 团队，也给统一码平台起了个新名字叫赤兔平台（赤兔马（码））--- 一站式营销活动平台。</span></p><p id=\"u1d3bab54\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u9df50cbe\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">dchn</span></code><span class=\"ne-text\"> 是 </span><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\"> 体系中一个重要的概念，一个 </span><code class=\"ne-code\"><span class=\"ne-text\">dchn</span></code><span class=\"ne-text\"> 是一个投放 id，对应一个具体投放。每一个投放出去的最小力度也就是一个 “码”，也就是一个 </span><code class=\"ne-code\"><span class=\"ne-text\">dchn</span></code><span class=\"ne-text\">。根据不同的投放方式，</span><code class=\"ne-code\"><span class=\"ne-text\">dchn</span></code><span class=\"ne-text\">可以体现为：链接、图形码、</span><code class=\"ne-code\"><span class=\"ne-text\">Scheme</span></code><span class=\"ne-text\">等多种形式。在 </span><code class=\"ne-code\"><span class=\"ne-text\">dchn</span></code><span class=\"ne-text\"> 访问时，</span><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\"> 服务会根据 </span><code class=\"ne-code\"><span class=\"ne-text\">dchn</span></code><span class=\"ne-text\"> 所属活动与产品，结合当前终端环境 </span><code class=\"ne-code\"><span class=\"ne-text\">xenv</span></code><span class=\"ne-text\">，进行跳转决策。</span></p><p id=\"ua315fbe5\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u5a83e968\" class=\"ne-p\"><span class=\"ne-text\">从产品维度来看，小程序内页面分为三种类型：</span></p><ul class=\"ne-ul\"><li id=\"uff6d5dc2\"><span class=\"ne-text\">公共页面，如目的地选择页面</span></li><li id=\"u85c08e51\"><span class=\"ne-text\">产品页面，有明确产品归属的页面</span></li><li id=\"u59cf326b\"><span class=\"ne-text\">未定义类别页面</span></li><li id=\"ufc34569b\"><span class=\"ne-text\">webview 页面，h5 投放页</span></li></ul><p id=\"ud40edbef\" class=\"ne-p\"><br></p><p id=\"u8c28de77\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">xpsid</span></code><span class=\"ne-text\"> 是全局唯一的 </span><code class=\"ne-code\"><span class=\"ne-text\">id</span></code><span class=\"ne-text\">，标识用户某次产品访问的会话实例(即：用来记录会话生成与信息记录)。</span><code class=\"ne-code\"><span class=\"ne-text\">xpsid</span></code><span class=\"ne-text\"> 由用户访问产品时系统分配 </span><code class=\"ne-code\"><span class=\"ne-text\">xpsid</span></code><span class=\"ne-text\">，并进行信息记录。当用户访问产品时，一个 </span><code class=\"ne-code\"><span class=\"ne-text\">xpsid</span></code><span class=\"ne-text\"> 作为用户访问某一产品(</span><code class=\"ne-code\"><span class=\"ne-text\">prod_key</span></code><span class=\"ne-text\">)的一个实例标识，作为埋点与请求公参进行上报，同时在跳转到下一个产品时需要作为来源进行传递。</span></p><p id=\"u448a3dfd\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u50d86421\" class=\"ne-p\"><span class=\"ne-text\">赤兔平台了许多功能，如：</span></p><ul class=\"ne-ul\"><li id=\"ub67a6ae5\"><span class=\"ne-text\">统一物料二维码</span></li><li id=\"uf16f98fd\"><span class=\"ne-text\">自动适配扫码 app、根据投放平台一键生成对应格式链接</span></li><li id=\"ue79d1430\"><span class=\"ne-text\">投放关联标准入口渠道，自动聚合统计分析</span></li><li id=\"u7959730a\"><span class=\"ne-text\">整合各营销平台与服务，各类产品与工具快速接入中</span></li></ul><p id=\"u38690f32\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ude679f77\" class=\"ne-p\"><span class=\"ne-text\">赤兔平台为营销活动提供策略配置，协同管理，分组实验(ab实验)，物料分享，数据分析以及支持强大的投放场景等全流程的投放支持。</span></p><hr id=\"v1cBI\" class=\"ne-hr\"><p id=\"u0ae4cb7c\" class=\"ne-p\"><span class=\"ne-text\">这一块本质上就是请求服务端并返回配置信息我们做对应操作</span></p><p id=\"ud7bb2005\" class=\"ne-p\"><br></p><p id=\"ud26540d1\" class=\"ne-p\"><span class=\"ne-text\">难点其实是在于我们对于统一码这个功能保持继续维护的情况下，需要新增其他各种各样的能力，</span><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\"> 的主要目标是提供统一的集团工具库，计划会</span><strong><span class=\"ne-text\">收入什么埋点</span></strong><span class=\"ne-text\">呀、</span><strong><span class=\"ne-text\">接口请求</span></strong><span class=\"ne-text\">啊、</span><strong><span class=\"ne-text\">链接跳转</span></strong><span class=\"ne-text\">、以及</span><strong><span class=\"ne-text\">各种通用工具</span></strong><span class=\"ne-text\">、比如</span><code class=\"ne-code\"><span class=\"ne-text\">H5</span></code><span class=\"ne-text\">在小程序中的</span><strong><span class=\"ne-text\">分享</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">消息订阅</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">跳转原生页面</span></strong><span class=\"ne-text\">，以及</span><strong><span class=\"ne-text\">统一的 passport 登录接入</span></strong><span class=\"ne-text\">，以及对应的跨端功能抹平</span></p><hr id=\"WHQXq\" class=\"ne-hr\"><p id=\"ude986537\" class=\"ne-p\"><span class=\"ne-text\">之前的九章信息全部是页面维度的，改成了一个队列中心，同时也为以后接入这些功能做准备</span></p><p id=\"ued87e62d\" class=\"ne-p\"><br></p><p id=\"u2f3add32\" class=\"ne-p\"><span class=\"ne-text\">之前是直接在页面上上报，现在是把所有的信息直接推送进任务队列里面，依次执行，也提供了各式各样的任务接口，可以推送 </span><code class=\"ne-code\"><span class=\"ne-text\">omega</span></code><span class=\"ne-text\"> 埋点任务、普通函数执行任务等，只要是推送进来的任务，都是会被保证按顺序执行的，也支持异步任务</span></p><p id=\"ue0295807\" class=\"ne-p\"><br></p><p id=\"u6feb6e94\" class=\"ne-p\"><span class=\"ne-text\">以前是 </span><code class=\"ne-code\"><span class=\"ne-text\">A</span></code><span class=\"ne-text\"> 跳 </span><code class=\"ne-code\"><span class=\"ne-text\">B</span></code><span class=\"ne-text\">，在 </span><code class=\"ne-code\"><span class=\"ne-text\">A</span></code><span class=\"ne-text\"> 中上报 </span><code class=\"ne-code\"><span class=\"ne-text\">A</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">B</span></code><span class=\"ne-text\"> 中上报 </span><code class=\"ne-code\"><span class=\"ne-text\">B</span></code><span class=\"ne-text\">，现在是 </span><code class=\"ne-code\"><span class=\"ne-text\">A</span></code><span class=\"ne-text\"> 在 </span><code class=\"ne-code\"><span class=\"ne-text\">A</span></code><span class=\"ne-text\"> 中 </span><code class=\"ne-code\"><span class=\"ne-text\">push</span></code><span class=\"ne-text\"> 任务到队列，</span><code class=\"ne-code\"><span class=\"ne-text\">B</span></code><span class=\"ne-text\"> 中 </span><code class=\"ne-code\"><span class=\"ne-text\">push</span></code><span class=\"ne-text\"> 任务到队列，</span><strong><span class=\"ne-text\">队列按顺序处理</span></strong><span class=\"ne-text\">，自动建立 </span><code class=\"ne-code\"><span class=\"ne-text\">A</span></code><span class=\"ne-text\"> 到 </span><code class=\"ne-code\"><span class=\"ne-text\">B</span></code><span class=\"ne-text\"> 的关系。之前是因为两个页面中上报会导致上报时机偏差问题，也不能很好的建立 A 和 B 之间的关系</span></p><p id=\"u6c557985\" class=\"ne-p\"><br></p><h2 id=\"a4425dc2\"><span class=\"ne-text\">任务队列实现</span></h2><p id=\"u698a818e\" class=\"ne-p\"><br></p><pre data-language=\"javascript\" id=\"22e0591c\" class=\"ne-codeblock language-javascript\">class ImmeExecPromise {\n    constructor() {\n        this.task = []\n        this.executing = false\n    }\n    push(data) {\n        // 可封装多个 push 来实现不同任务的推送\n        this.task.push(data)\n        this.exec()\n    }\n    create(data) {\n        let cachePromise\n        let cacheResolve = new Promise(r =&gt; {\n            cachePromise = r\n        })\n        this.task.push(\n            new Promise(resolve =&gt; {\n                cachePromise((rest = {}) =&gt; resolve(Object.assign(data, rest)))\n                setTimeout(() =&gt; {\n                    resolve(data)\n                }, 2000) // 超时\n            })\n        )\n        this.exec()\n        return cacheResolve\n    }\n    async exec() {\n        if (this.executing) return\n        this.executing = true\n        while (this.task.length) {\n            let data = await (this.task.shift() || {})\n            console.log(data) // 这里根据 data 的 type 可以调用对应执行函数\n        }\n        this.executing = false\n    }\n}\n\nlet p = new ImmeExecPromise()\n\np.push({ key: &quot;a&quot; })\np.push({ key: &quot;b&quot; })\nlet r = p.create({ key: &quot;c&quot; })\np.push({ key: &quot;d&quot; })\nsetTimeout(() =&gt; {\n    r.then(f =&gt; f({ sub: &quot;cc&quot; }))\n}, 1500)\nlet r2 = p.create({ key: &quot;e&quot; })\nsetTimeout(() =&gt; {\n    r.then(f =&gt; f({ sub: &quot;ee&quot; }))\n}, 2500) // 超时，自动执行，打印中不存在 sub 属性</pre></div>",
  "body": "<a name=\"61a3ec66\"></a>\n## 介绍\n\n最初的话这个项目的雏形其实是叫「统一码」，核心理念就是说希望可以通过一个码（一般指二维码）来进行任意投放，具体来讲就是使用普通浏览器扫码能打开 `H5` 营销页面，微信扫码能打开小程序，并在小程序打开对应页面，支付宝扫码能打开支付宝小程序，并在小程序打开具体页面等等。其实本质上二维码投放的就是一个特殊的链接，我们通过解析链接的域名，`path`，动态 `path` 参数等信息来在不同平台做不同的解析，以达到上述效果。里面就涉及到了服务端的重定向、具体的 `H5` 跟 `path` 参数一一对应的处理、小程序的处理等\n\n`webx-mp-sdk`，实际上就是小程序这一块的工作内容\n\n`webx`九章是以 `webx`技术体系为基础，建设一套集团流量分发的数据标准和规范，目的在于持续建设增长数据体系，服务全集团的用户增长拉新。\n\n实现这个能力的话我们首先需要原生平台的支持，微信和支付宝小程序其实都在那时候提供了扫描普通链接二维码打开小程序的能力，这其实就对我们实现这个能力提供了可能性。后续这个能力整体升级成 `webx`，并建立了 `webx` 团队，也给统一码平台起了个新名字叫赤兔平台（赤兔马（码））--- 一站式营销活动平台。\n\n`dchn` 是 `webx` 体系中一个重要的概念，一个 `dchn` 是一个投放 id，对应一个具体投放。每一个投放出去的最小力度也就是一个 “码”，也就是一个 `dchn`。根据不同的投放方式，`dchn`可以体现为：链接、图形码、`Scheme`等多种形式。在 `dchn` 访问时，`webx` 服务会根据 `dchn` 所属活动与产品，结合当前终端环境 `xenv`，进行跳转决策。\n\n从产品维度来看，小程序内页面分为三种类型：\n\n- 公共页面，如目的地选择页面\n- 产品页面，有明确产品归属的页面\n- 未定义类别页面\n- webview 页面，h5 投放页\n\n`xpsid` 是全局唯一的 `id`，标识用户某次产品访问的会话实例(即：用来记录会话生成与信息记录)。`xpsid` 由用户访问产品时系统分配 `xpsid`，并进行信息记录。当用户访问产品时，一个 `xpsid` 作为用户访问某一产品(`prod_key`)的一个实例标识，作为埋点与请求公参进行上报，同时在跳转到下一个产品时需要作为来源进行传递。\n\n赤兔平台了许多功能，如：\n\n- 统一物料二维码\n- 自动适配扫码 app、根据投放平台一键生成对应格式链接\n- 投放关联标准入口渠道，自动聚合统计分析\n- 整合各营销平台与服务，各类产品与工具快速接入中\n\n赤兔平台为营销活动提供策略配置，协同管理，分组实验(ab实验)，物料分享，数据分析以及支持强大的投放场景等全流程的投放支持。\n\n---\n\n这一块本质上就是请求服务端并返回配置信息我们做对应操作\n\n难点其实是在于我们对于统一码这个功能保持继续维护的情况下，需要新增其他各种各样的能力，`webx` 的主要目标是提供统一的集团工具库，计划会**收入什么埋点**呀、**接口请求**啊、**链接跳转**、以及**各种通用工具**、比如`H5`在小程序中的**分享**、**消息订阅**、**跳转原生页面**，以及**统一的 passport 登录接入**，以及对应的跨端功能抹平\n\n---\n\n之前的九章信息全部是页面维度的，改成了一个队列中心，同时也为以后接入这些功能做准备\n\n之前是直接在页面上上报，现在是把所有的信息直接推送进任务队列里面，依次执行，也提供了各式各样的任务接口，可以推送 `omega` 埋点任务、普通函数执行任务等，只要是推送进来的任务，都是会被保证按顺序执行的，也支持异步任务\n\n以前是 `A` 跳 `B`，在 `A` 中上报 `A`，`B` 中上报 `B`，现在是 `A` 在 `A` 中 `push` 任务到队列，`B` 中 `push` 任务到队列，**队列按顺序处理**，自动建立 `A` 到 `B` 的关系。之前是因为两个页面中上报会导致上报时机偏差问题，也不能很好的建立 A 和 B 之间的关系\n\n<a name=\"a4425dc2\"></a>\n## 任务队列实现\n\n```javascript\nclass ImmeExecPromise {\n    constructor() {\n        this.task = []\n        this.executing = false\n    }\n    push(data) {\n        // 可封装多个 push 来实现不同任务的推送\n        this.task.push(data)\n        this.exec()\n    }\n    create(data) {\n        let cachePromise\n        let cacheResolve = new Promise(r => {\n            cachePromise = r\n        })\n        this.task.push(\n            new Promise(resolve => {\n                cachePromise((rest = {}) => resolve(Object.assign(data, rest)))\n                setTimeout(() => {\n                    resolve(data)\n                }, 2000) // 超时\n            })\n        )\n        this.exec()\n        return cacheResolve\n    }\n    async exec() {\n        if (this.executing) return\n        this.executing = true\n        while (this.task.length) {\n            let data = await (this.task.shift() || {})\n            console.log(data) // 这里根据 data 的 type 可以调用对应执行函数\n        }\n        this.executing = false\n    }\n}\n\nlet p = new ImmeExecPromise()\n\np.push({ key: \"a\" })\np.push({ key: \"b\" })\nlet r = p.create({ key: \"c\" })\np.push({ key: \"d\" })\nsetTimeout(() => {\n    r.then(f => f({ sub: \"cc\" }))\n}, 1500)\nlet r2 = p.create({ key: \"e\" })\nsetTimeout(() => {\n    r.then(f => f({ sub: \"ee\" }))\n}, 2500) // 超时，自动执行，打印中不存在 sub 属性\n```\n",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"61a3ec66\"><span class=\"ne-text\">介绍</span></h2><p id=\"u215f551a\" class=\"ne-p\"><br></p><p id=\"u8a96380f\" class=\"ne-p\"><span class=\"ne-text\">最初的话这个项目的雏形其实是叫「统一码」，核心理念就是说希望可以通过一个码（一般指二维码）来进行任意投放，具体来讲就是使用普通浏览器扫码能打开 </span><code class=\"ne-code\"><span class=\"ne-text\">H5</span></code><span class=\"ne-text\"> 营销页面，微信扫码能打开小程序，并在小程序打开对应页面，支付宝扫码能打开支付宝小程序，并在小程序打开具体页面等等。其实本质上二维码投放的就是一个特殊的链接，我们通过解析链接的域名，</span><code class=\"ne-code\"><span class=\"ne-text\">path</span></code><span class=\"ne-text\">，动态 </span><code class=\"ne-code\"><span class=\"ne-text\">path</span></code><span class=\"ne-text\"> 参数等信息来在不同平台做不同的解析，以达到上述效果。里面就涉及到了服务端的重定向、具体的 </span><code class=\"ne-code\"><span class=\"ne-text\">H5</span></code><span class=\"ne-text\"> 跟 </span><code class=\"ne-code\"><span class=\"ne-text\">path</span></code><span class=\"ne-text\"> 参数一一对应的处理、小程序的处理等</span></p><p id=\"u40635046\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u53c2f2fc\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">webx-mp-sdk</span></code><span class=\"ne-text\">，实际上就是小程序这一块的工作内容</span></p><p id=\"u0636438b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"uc71dddaa\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\">九章是以 </span><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\">技术体系为基础，建设一套集团流量分发的数据标准和规范，目的在于持续建设增长数据体系，服务全集团的用户增长拉新。</span></p><p id=\"u4f5f1b33\" class=\"ne-p\"><br></p><p id=\"ue01b2d61\" class=\"ne-p\"><span class=\"ne-text\">实现这个能力的话我们首先需要原生平台的支持，微信和支付宝小程序其实都在那时候提供了扫描普通链接二维码打开小程序的能力，这其实就对我们实现这个能力提供了可能性。后续这个能力整体升级成 </span><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\">，并建立了 </span><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\"> 团队，也给统一码平台起了个新名字叫赤兔平台（赤兔马（码））--- 一站式营销活动平台。</span></p><p id=\"u1d3bab54\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u9df50cbe\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">dchn</span></code><span class=\"ne-text\"> 是 </span><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\"> 体系中一个重要的概念，一个 </span><code class=\"ne-code\"><span class=\"ne-text\">dchn</span></code><span class=\"ne-text\"> 是一个投放 id，对应一个具体投放。每一个投放出去的最小力度也就是一个 “码”，也就是一个 </span><code class=\"ne-code\"><span class=\"ne-text\">dchn</span></code><span class=\"ne-text\">。根据不同的投放方式，</span><code class=\"ne-code\"><span class=\"ne-text\">dchn</span></code><span class=\"ne-text\">可以体现为：链接、图形码、</span><code class=\"ne-code\"><span class=\"ne-text\">Scheme</span></code><span class=\"ne-text\">等多种形式。在 </span><code class=\"ne-code\"><span class=\"ne-text\">dchn</span></code><span class=\"ne-text\"> 访问时，</span><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\"> 服务会根据 </span><code class=\"ne-code\"><span class=\"ne-text\">dchn</span></code><span class=\"ne-text\"> 所属活动与产品，结合当前终端环境 </span><code class=\"ne-code\"><span class=\"ne-text\">xenv</span></code><span class=\"ne-text\">，进行跳转决策。</span></p><p id=\"ua315fbe5\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u5a83e968\" class=\"ne-p\"><span class=\"ne-text\">从产品维度来看，小程序内页面分为三种类型：</span></p><ul class=\"ne-ul\"><li id=\"uff6d5dc2\"><span class=\"ne-text\">公共页面，如目的地选择页面</span></li><li id=\"u85c08e51\"><span class=\"ne-text\">产品页面，有明确产品归属的页面</span></li><li id=\"u59cf326b\"><span class=\"ne-text\">未定义类别页面</span></li><li id=\"ufc34569b\"><span class=\"ne-text\">webview 页面，h5 投放页</span></li></ul><p id=\"ud40edbef\" class=\"ne-p\"><br></p><p id=\"u8c28de77\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">xpsid</span></code><span class=\"ne-text\"> 是全局唯一的 </span><code class=\"ne-code\"><span class=\"ne-text\">id</span></code><span class=\"ne-text\">，标识用户某次产品访问的会话实例(即：用来记录会话生成与信息记录)。</span><code class=\"ne-code\"><span class=\"ne-text\">xpsid</span></code><span class=\"ne-text\"> 由用户访问产品时系统分配 </span><code class=\"ne-code\"><span class=\"ne-text\">xpsid</span></code><span class=\"ne-text\">，并进行信息记录。当用户访问产品时，一个 </span><code class=\"ne-code\"><span class=\"ne-text\">xpsid</span></code><span class=\"ne-text\"> 作为用户访问某一产品(</span><code class=\"ne-code\"><span class=\"ne-text\">prod_key</span></code><span class=\"ne-text\">)的一个实例标识，作为埋点与请求公参进行上报，同时在跳转到下一个产品时需要作为来源进行传递。</span></p><p id=\"u448a3dfd\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u50d86421\" class=\"ne-p\"><span class=\"ne-text\">赤兔平台了许多功能，如：</span></p><ul class=\"ne-ul\"><li id=\"ub67a6ae5\"><span class=\"ne-text\">统一物料二维码</span></li><li id=\"uf16f98fd\"><span class=\"ne-text\">自动适配扫码 app、根据投放平台一键生成对应格式链接</span></li><li id=\"ue79d1430\"><span class=\"ne-text\">投放关联标准入口渠道，自动聚合统计分析</span></li><li id=\"u7959730a\"><span class=\"ne-text\">整合各营销平台与服务，各类产品与工具快速接入中</span></li></ul><p id=\"u38690f32\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ude679f77\" class=\"ne-p\"><span class=\"ne-text\">赤兔平台为营销活动提供策略配置，协同管理，分组实验(ab实验)，物料分享，数据分析以及支持强大的投放场景等全流程的投放支持。</span></p><hr id=\"v1cBI\" class=\"ne-hr\"><p id=\"u0ae4cb7c\" class=\"ne-p\"><span class=\"ne-text\">这一块本质上就是请求服务端并返回配置信息我们做对应操作</span></p><p id=\"ud7bb2005\" class=\"ne-p\"><br></p><p id=\"ud26540d1\" class=\"ne-p\"><span class=\"ne-text\">难点其实是在于我们对于统一码这个功能保持继续维护的情况下，需要新增其他各种各样的能力，</span><code class=\"ne-code\"><span class=\"ne-text\">webx</span></code><span class=\"ne-text\"> 的主要目标是提供统一的集团工具库，计划会</span><strong><span class=\"ne-text\">收入什么埋点</span></strong><span class=\"ne-text\">呀、</span><strong><span class=\"ne-text\">接口请求</span></strong><span class=\"ne-text\">啊、</span><strong><span class=\"ne-text\">链接跳转</span></strong><span class=\"ne-text\">、以及</span><strong><span class=\"ne-text\">各种通用工具</span></strong><span class=\"ne-text\">、比如</span><code class=\"ne-code\"><span class=\"ne-text\">H5</span></code><span class=\"ne-text\">在小程序中的</span><strong><span class=\"ne-text\">分享</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">消息订阅</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">跳转原生页面</span></strong><span class=\"ne-text\">，以及</span><strong><span class=\"ne-text\">统一的 passport 登录接入</span></strong><span class=\"ne-text\">，以及对应的跨端功能抹平</span></p><hr id=\"WHQXq\" class=\"ne-hr\"><p id=\"ude986537\" class=\"ne-p\"><span class=\"ne-text\">之前的九章信息全部是页面维度的，改成了一个队列中心，同时也为以后接入这些功能做准备</span></p><p id=\"ued87e62d\" class=\"ne-p\"><br></p><p id=\"u2f3add32\" class=\"ne-p\"><span class=\"ne-text\">之前是直接在页面上上报，现在是把所有的信息直接推送进任务队列里面，依次执行，也提供了各式各样的任务接口，可以推送 </span><code class=\"ne-code\"><span class=\"ne-text\">omega</span></code><span class=\"ne-text\"> 埋点任务、普通函数执行任务等，只要是推送进来的任务，都是会被保证按顺序执行的，也支持异步任务</span></p><p id=\"ue0295807\" class=\"ne-p\"><br></p><p id=\"u6feb6e94\" class=\"ne-p\"><span class=\"ne-text\">以前是 </span><code class=\"ne-code\"><span class=\"ne-text\">A</span></code><span class=\"ne-text\"> 跳 </span><code class=\"ne-code\"><span class=\"ne-text\">B</span></code><span class=\"ne-text\">，在 </span><code class=\"ne-code\"><span class=\"ne-text\">A</span></code><span class=\"ne-text\"> 中上报 </span><code class=\"ne-code\"><span class=\"ne-text\">A</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">B</span></code><span class=\"ne-text\"> 中上报 </span><code class=\"ne-code\"><span class=\"ne-text\">B</span></code><span class=\"ne-text\">，现在是 </span><code class=\"ne-code\"><span class=\"ne-text\">A</span></code><span class=\"ne-text\"> 在 </span><code class=\"ne-code\"><span class=\"ne-text\">A</span></code><span class=\"ne-text\"> 中 </span><code class=\"ne-code\"><span class=\"ne-text\">push</span></code><span class=\"ne-text\"> 任务到队列，</span><code class=\"ne-code\"><span class=\"ne-text\">B</span></code><span class=\"ne-text\"> 中 </span><code class=\"ne-code\"><span class=\"ne-text\">push</span></code><span class=\"ne-text\"> 任务到队列，</span><strong><span class=\"ne-text\">队列按顺序处理</span></strong><span class=\"ne-text\">，自动建立 </span><code class=\"ne-code\"><span class=\"ne-text\">A</span></code><span class=\"ne-text\"> 到 </span><code class=\"ne-code\"><span class=\"ne-text\">B</span></code><span class=\"ne-text\"> 的关系。之前是因为两个页面中上报会导致上报时机偏差问题，也不能很好的建立 A 和 B 之间的关系</span></p><p id=\"u6c557985\" class=\"ne-p\"><br></p><h2 id=\"a4425dc2\"><span class=\"ne-text\">任务队列实现</span></h2><p id=\"u698a818e\" class=\"ne-p\"><br></p><pre data-language=\"javascript\" id=\"22e0591c\" class=\"ne-codeblock language-javascript\">class ImmeExecPromise {\n    constructor() {\n        this.task = []\n        this.executing = false\n    }\n    push(data) {\n        // 可封装多个 push 来实现不同任务的推送\n        this.task.push(data)\n        this.exec()\n    }\n    create(data) {\n        let cachePromise\n        let cacheResolve = new Promise(r =&gt; {\n            cachePromise = r\n        })\n        this.task.push(\n            new Promise(resolve =&gt; {\n                cachePromise((rest = {}) =&gt; resolve(Object.assign(data, rest)))\n                setTimeout(() =&gt; {\n                    resolve(data)\n                }, 2000) // 超时\n            })\n        )\n        this.exec()\n        return cacheResolve\n    }\n    async exec() {\n        if (this.executing) return\n        this.executing = true\n        while (this.task.length) {\n            let data = await (this.task.shift() || {})\n            console.log(data) // 这里根据 data 的 type 可以调用对应执行函数\n        }\n        this.executing = false\n    }\n}\n\nlet p = new ImmeExecPromise()\n\np.push({ key: &quot;a&quot; })\np.push({ key: &quot;b&quot; })\nlet r = p.create({ key: &quot;c&quot; })\np.push({ key: &quot;d&quot; })\nsetTimeout(() =&gt; {\n    r.then(f =&gt; f({ sub: &quot;cc&quot; }))\n}, 1500)\nlet r2 = p.create({ key: &quot;e&quot; })\nsetTimeout(() =&gt; {\n    r.then(f =&gt; f({ sub: &quot;ee&quot; }))\n}, 2500) // 超时，自动执行，打印中不存在 sub 属性</pre></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"fixed\" /><h2 data-lake-id=\"61a3ec66\" id=\"61a3ec66\"><span data-lake-id=\"u277709c2\" id=\"u277709c2\">介绍</span></h2><p data-lake-id=\"u215f551a\" id=\"u215f551a\"><br></p><p data-lake-id=\"u8a96380f\" id=\"u8a96380f\"><span data-lake-id=\"u9e54abf4\" id=\"u9e54abf4\">最初的话这个项目的雏形其实是叫「统一码」，核心理念就是说希望可以通过一个码（一般指二维码）来进行任意投放，具体来讲就是使用普通浏览器扫码能打开 </span><code data-lake-id=\"u9cbc034a\" id=\"u9cbc034a\"><span data-lake-id=\"u549cfc36\" id=\"u549cfc36\">H5</span></code><span data-lake-id=\"uaa5db578\" id=\"uaa5db578\"> 营销页面，微信扫码能打开小程序，并在小程序打开对应页面，支付宝扫码能打开支付宝小程序，并在小程序打开具体页面等等。其实本质上二维码投放的就是一个特殊的链接，我们通过解析链接的域名，</span><code data-lake-id=\"u858646de\" id=\"u858646de\"><span data-lake-id=\"u8dca4d79\" id=\"u8dca4d79\">path</span></code><span data-lake-id=\"u28f20142\" id=\"u28f20142\">，动态 </span><code data-lake-id=\"u8bebcef7\" id=\"u8bebcef7\"><span data-lake-id=\"uaf904e2d\" id=\"uaf904e2d\">path</span></code><span data-lake-id=\"ud47b7181\" id=\"ud47b7181\"> 参数等信息来在不同平台做不同的解析，以达到上述效果。里面就涉及到了服务端的重定向、具体的 </span><code data-lake-id=\"u46ead1c6\" id=\"u46ead1c6\"><span data-lake-id=\"ud5df6182\" id=\"ud5df6182\">H5</span></code><span data-lake-id=\"uc9de9939\" id=\"uc9de9939\"> 跟 </span><code data-lake-id=\"u53c4217b\" id=\"u53c4217b\"><span data-lake-id=\"u90a177a9\" id=\"u90a177a9\">path</span></code><span data-lake-id=\"u4eb85c6c\" id=\"u4eb85c6c\"> 参数一一对应的处理、小程序的处理等</span></p><p data-lake-id=\"u40635046\" id=\"u40635046\"><span data-lake-id=\"u7baadd2f\" id=\"u7baadd2f\">​</span><br></p><p data-lake-id=\"u53c2f2fc\" id=\"u53c2f2fc\"><code data-lake-id=\"u939acaad\" id=\"u939acaad\"><span data-lake-id=\"uf3b512d7\" id=\"uf3b512d7\">webx-mp-sdk</span></code><span data-lake-id=\"u5a938930\" id=\"u5a938930\">，实际上就是小程序这一块的工作内容</span></p><p data-lake-id=\"u0636438b\" id=\"u0636438b\"><span data-lake-id=\"uf5ed018a\" id=\"uf5ed018a\">​</span><br></p><p data-lake-id=\"uc71dddaa\" id=\"uc71dddaa\"><code data-lake-id=\"u46098bbc\" id=\"u46098bbc\"><span data-lake-id=\"u9569cc11\" id=\"u9569cc11\">webx</span></code><span data-lake-id=\"uc5d375ba\" id=\"uc5d375ba\">九章是以 </span><code data-lake-id=\"ud4fd1be5\" id=\"ud4fd1be5\"><span data-lake-id=\"u77351c39\" id=\"u77351c39\">webx</span></code><span data-lake-id=\"u412cb92e\" id=\"u412cb92e\">技术体系为基础，建设一套集团流量分发的数据标准和规范，目的在于持续建设增长数据体系，服务全集团的用户增长拉新。</span></p><p data-lake-id=\"u4f5f1b33\" id=\"u4f5f1b33\"><br></p><p data-lake-id=\"ue01b2d61\" id=\"ue01b2d61\"><span data-lake-id=\"u2aa9ea6b\" id=\"u2aa9ea6b\">实现这个能力的话我们首先需要原生平台的支持，微信和支付宝小程序其实都在那时候提供了扫描普通链接二维码打开小程序的能力，这其实就对我们实现这个能力提供了可能性。后续这个能力整体升级成 </span><code data-lake-id=\"ua2978a0e\" id=\"ua2978a0e\"><span data-lake-id=\"ua022ad4c\" id=\"ua022ad4c\">webx</span></code><span data-lake-id=\"u1dfe4642\" id=\"u1dfe4642\">，并建立了 </span><code data-lake-id=\"u38ca25c7\" id=\"u38ca25c7\"><span data-lake-id=\"u6bee75c8\" id=\"u6bee75c8\">webx</span></code><span data-lake-id=\"u588898f1\" id=\"u588898f1\"> 团队，也给统一码平台起了个新名字叫赤兔平台（赤兔马（码））--- 一站式营销活动平台。</span></p><p data-lake-id=\"u1d3bab54\" id=\"u1d3bab54\"><span data-lake-id=\"uef8186ac\" id=\"uef8186ac\">​</span><br></p><p data-lake-id=\"u9df50cbe\" id=\"u9df50cbe\"><code data-lake-id=\"u2d375bd4\" id=\"u2d375bd4\"><span data-lake-id=\"u3f83be12\" id=\"u3f83be12\">dchn</span></code><span data-lake-id=\"u19fe687b\" id=\"u19fe687b\"> 是 </span><code data-lake-id=\"ubb2ccf6b\" id=\"ubb2ccf6b\"><span data-lake-id=\"u2baf2b68\" id=\"u2baf2b68\">webx</span></code><span data-lake-id=\"u1b22084f\" id=\"u1b22084f\"> 体系中一个重要的概念，一个 </span><code data-lake-id=\"u5af4f91d\" id=\"u5af4f91d\"><span data-lake-id=\"u9d3ead4f\" id=\"u9d3ead4f\">dchn</span></code><span data-lake-id=\"uf0cfbd01\" id=\"uf0cfbd01\"> 是一个投放 id，对应一个具体投放。每一个投放出去的最小力度也就是一个 “码”，也就是一个 </span><code data-lake-id=\"ufd314ce1\" id=\"ufd314ce1\"><span data-lake-id=\"u15c1a05d\" id=\"u15c1a05d\">dchn</span></code><span data-lake-id=\"u4c87e2ba\" id=\"u4c87e2ba\">。根据不同的投放方式，</span><code data-lake-id=\"u89fcc184\" id=\"u89fcc184\"><span data-lake-id=\"u752b3126\" id=\"u752b3126\">dchn</span></code><span data-lake-id=\"u9eb6d5a7\" id=\"u9eb6d5a7\">可以体现为：链接、图形码、</span><code data-lake-id=\"u0ef644d3\" id=\"u0ef644d3\"><span data-lake-id=\"uf227aff6\" id=\"uf227aff6\">Scheme</span></code><span data-lake-id=\"uf34ef0bc\" id=\"uf34ef0bc\">等多种形式。在 </span><code data-lake-id=\"ub49038fe\" id=\"ub49038fe\"><span data-lake-id=\"u1737505f\" id=\"u1737505f\">dchn</span></code><span data-lake-id=\"u94179bcb\" id=\"u94179bcb\"> 访问时，</span><code data-lake-id=\"uf874c6de\" id=\"uf874c6de\"><span data-lake-id=\"udf418f6d\" id=\"udf418f6d\">webx</span></code><span data-lake-id=\"u7a12a526\" id=\"u7a12a526\"> 服务会根据 </span><code data-lake-id=\"u50087f05\" id=\"u50087f05\"><span data-lake-id=\"u2ce0ae50\" id=\"u2ce0ae50\">dchn</span></code><span data-lake-id=\"u869a34ca\" id=\"u869a34ca\"> 所属活动与产品，结合当前终端环境 </span><code data-lake-id=\"udef5d807\" id=\"udef5d807\"><span data-lake-id=\"u12b1ec5c\" id=\"u12b1ec5c\">xenv</span></code><span data-lake-id=\"u10979be7\" id=\"u10979be7\">，进行跳转决策。</span></p><p data-lake-id=\"ua315fbe5\" id=\"ua315fbe5\"><span data-lake-id=\"uab51b158\" id=\"uab51b158\">​</span><br></p><p data-lake-id=\"u5a83e968\" id=\"u5a83e968\"><span data-lake-id=\"ud2432386\" id=\"ud2432386\">从产品维度来看，小程序内页面分为三种类型：</span></p><ul list=\"ue4cadd58\"><li fid=\"u3fb6a4be\" data-lake-id=\"uff6d5dc2\" id=\"uff6d5dc2\"><span data-lake-id=\"u9eec9db1\" id=\"u9eec9db1\">公共页面，如目的地选择页面</span></li><li fid=\"u3fb6a4be\" data-lake-id=\"u85c08e51\" id=\"u85c08e51\"><span data-lake-id=\"u12ff8e47\" id=\"u12ff8e47\">产品页面，有明确产品归属的页面</span></li><li fid=\"u3fb6a4be\" data-lake-id=\"u59cf326b\" id=\"u59cf326b\"><span data-lake-id=\"u5bd58955\" id=\"u5bd58955\">未定义类别页面</span></li><li fid=\"u3fb6a4be\" data-lake-id=\"ufc34569b\" id=\"ufc34569b\"><span data-lake-id=\"u0a971e7e\" id=\"u0a971e7e\">webview 页面，h5 投放页</span></li></ul><p data-lake-id=\"ud40edbef\" id=\"ud40edbef\"><br></p><p data-lake-id=\"u8c28de77\" id=\"u8c28de77\"><code data-lake-id=\"u5135f32b\" id=\"u5135f32b\"><span data-lake-id=\"u65431c60\" id=\"u65431c60\">xpsid</span></code><span data-lake-id=\"u79f0c6e0\" id=\"u79f0c6e0\"> 是全局唯一的 </span><code data-lake-id=\"u081201c7\" id=\"u081201c7\"><span data-lake-id=\"u134a83f2\" id=\"u134a83f2\">id</span></code><span data-lake-id=\"ud7849e34\" id=\"ud7849e34\">，标识用户某次产品访问的会话实例(即：用来记录会话生成与信息记录)。</span><code data-lake-id=\"ud8ada191\" id=\"ud8ada191\"><span data-lake-id=\"ube270208\" id=\"ube270208\">xpsid</span></code><span data-lake-id=\"uf6efedb7\" id=\"uf6efedb7\"> 由用户访问产品时系统分配 </span><code data-lake-id=\"uedbc8c4c\" id=\"uedbc8c4c\"><span data-lake-id=\"u5696e8e6\" id=\"u5696e8e6\">xpsid</span></code><span data-lake-id=\"u5ee0e142\" id=\"u5ee0e142\">，并进行信息记录。当用户访问产品时，一个 </span><code data-lake-id=\"u4111af38\" id=\"u4111af38\"><span data-lake-id=\"u1aac4e9f\" id=\"u1aac4e9f\">xpsid</span></code><span data-lake-id=\"ue1280b60\" id=\"ue1280b60\"> 作为用户访问某一产品(</span><code data-lake-id=\"u1d2a08a3\" id=\"u1d2a08a3\"><span data-lake-id=\"ufd249433\" id=\"ufd249433\">prod_key</span></code><span data-lake-id=\"u832312d6\" id=\"u832312d6\">)的一个实例标识，作为埋点与请求公参进行上报，同时在跳转到下一个产品时需要作为来源进行传递。</span></p><p data-lake-id=\"u448a3dfd\" id=\"u448a3dfd\"><span data-lake-id=\"u65b38299\" id=\"u65b38299\">​</span><br></p><p data-lake-id=\"u50d86421\" id=\"u50d86421\"><span data-lake-id=\"u4e70e6d1\" id=\"u4e70e6d1\">赤兔平台了许多功能，如：</span></p><ul list=\"u4d64cbba\"><li fid=\"u0be16b41\" data-lake-id=\"ub67a6ae5\" id=\"ub67a6ae5\"><span data-lake-id=\"u41b6ba7c\" id=\"u41b6ba7c\">统一物料二维码</span></li><li fid=\"u0be16b41\" data-lake-id=\"uf16f98fd\" id=\"uf16f98fd\"><span data-lake-id=\"u06e9b3d4\" id=\"u06e9b3d4\">自动适配扫码 app、根据投放平台一键生成对应格式链接</span></li><li fid=\"u0be16b41\" data-lake-id=\"ue79d1430\" id=\"ue79d1430\"><span data-lake-id=\"uc76555c7\" id=\"uc76555c7\">投放关联标准入口渠道，自动聚合统计分析</span></li><li fid=\"u0be16b41\" data-lake-id=\"u7959730a\" id=\"u7959730a\"><span data-lake-id=\"u8d1668f0\" id=\"u8d1668f0\">整合各营销平台与服务，各类产品与工具快速接入中</span></li></ul><p data-lake-id=\"u38690f32\" id=\"u38690f32\"><span data-lake-id=\"uec359cef\" id=\"uec359cef\">​</span><br></p><p data-lake-id=\"ude679f77\" id=\"ude679f77\"><span data-lake-id=\"ucfee2e23\" id=\"ucfee2e23\">赤兔平台为营销活动提供策略配置，协同管理，分组实验(ab实验)，物料分享，数据分析以及支持强大的投放场景等全流程的投放支持。</span></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22v1cBI%22%7D\"></card><p data-lake-id=\"u0ae4cb7c\" id=\"u0ae4cb7c\"><span data-lake-id=\"ue7959988\" id=\"ue7959988\">这一块本质上就是请求服务端并返回配置信息我们做对应操作</span></p><p data-lake-id=\"ud7bb2005\" id=\"ud7bb2005\"><br></p><p data-lake-id=\"ud26540d1\" id=\"ud26540d1\"><span data-lake-id=\"uf5fa3d43\" id=\"uf5fa3d43\">难点其实是在于我们对于统一码这个功能保持继续维护的情况下，需要新增其他各种各样的能力，</span><code data-lake-id=\"u0b1f27a0\" id=\"u0b1f27a0\"><span data-lake-id=\"u1938710b\" id=\"u1938710b\">webx</span></code><span data-lake-id=\"u49118ab2\" id=\"u49118ab2\"> 的主要目标是提供统一的集团工具库，计划会</span><strong><span data-lake-id=\"ud21965d9\" id=\"ud21965d9\">收入什么埋点</span></strong><span data-lake-id=\"u1047f986\" id=\"u1047f986\">呀、</span><strong><span data-lake-id=\"ua90900d9\" id=\"ua90900d9\">接口请求</span></strong><span data-lake-id=\"u66afa1f4\" id=\"u66afa1f4\">啊、</span><strong><span data-lake-id=\"u5868de62\" id=\"u5868de62\">链接跳转</span></strong><span data-lake-id=\"u55f8a26e\" id=\"u55f8a26e\">、以及</span><strong><span data-lake-id=\"ubc8859a6\" id=\"ubc8859a6\">各种通用工具</span></strong><span data-lake-id=\"uacf8d1ab\" id=\"uacf8d1ab\">、比如</span><code data-lake-id=\"u95d91a5f\" id=\"u95d91a5f\"><span data-lake-id=\"u2c7bd87d\" id=\"u2c7bd87d\">H5</span></code><span data-lake-id=\"u4612a2d8\" id=\"u4612a2d8\">在小程序中的</span><strong><span data-lake-id=\"ufce8ef3d\" id=\"ufce8ef3d\">分享</span></strong><span data-lake-id=\"u042e9534\" id=\"u042e9534\">、</span><strong><span data-lake-id=\"uc2624e63\" id=\"uc2624e63\">消息订阅</span></strong><span data-lake-id=\"u550348f0\" id=\"u550348f0\">、</span><strong><span data-lake-id=\"u6222a1f9\" id=\"u6222a1f9\">跳转原生页面</span></strong><span data-lake-id=\"u30bdef58\" id=\"u30bdef58\">，以及</span><strong><span data-lake-id=\"u2752217a\" id=\"u2752217a\">统一的 passport 登录接入</span></strong><span data-lake-id=\"u5b0e7100\" id=\"u5b0e7100\">，以及对应的跨端功能抹平</span></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22WHQXq%22%7D\"></card><p data-lake-id=\"ude986537\" id=\"ude986537\"><span data-lake-id=\"uea39ee84\" id=\"uea39ee84\">之前的九章信息全部是页面维度的，改成了一个队列中心，同时也为以后接入这些功能做准备</span></p><p data-lake-id=\"ued87e62d\" id=\"ued87e62d\"><br></p><p data-lake-id=\"u2f3add32\" id=\"u2f3add32\"><span data-lake-id=\"u22aab0b0\" id=\"u22aab0b0\">之前是直接在页面上上报，现在是把所有的信息直接推送进任务队列里面，依次执行，也提供了各式各样的任务接口，可以推送 </span><code data-lake-id=\"u892ef50c\" id=\"u892ef50c\"><span data-lake-id=\"ue8a7f7a3\" id=\"ue8a7f7a3\">omega</span></code><span data-lake-id=\"u2d00b0c8\" id=\"u2d00b0c8\"> 埋点任务、普通函数执行任务等，只要是推送进来的任务，都是会被保证按顺序执行的，也支持异步任务</span></p><p data-lake-id=\"ue0295807\" id=\"ue0295807\"><br></p><p data-lake-id=\"u6feb6e94\" id=\"u6feb6e94\"><span data-lake-id=\"ue46924c9\" id=\"ue46924c9\">以前是 </span><code data-lake-id=\"u18e73f92\" id=\"u18e73f92\"><span data-lake-id=\"u1f37920a\" id=\"u1f37920a\">A</span></code><span data-lake-id=\"ucb669a67\" id=\"ucb669a67\"> 跳 </span><code data-lake-id=\"ue4394353\" id=\"ue4394353\"><span data-lake-id=\"u6840dd5c\" id=\"u6840dd5c\">B</span></code><span data-lake-id=\"ue3cb300f\" id=\"ue3cb300f\">，在 </span><code data-lake-id=\"u802c46d0\" id=\"u802c46d0\"><span data-lake-id=\"uef60f4cf\" id=\"uef60f4cf\">A</span></code><span data-lake-id=\"ud9a0cd02\" id=\"ud9a0cd02\"> 中上报 </span><code data-lake-id=\"u12e6b14c\" id=\"u12e6b14c\"><span data-lake-id=\"u95b5c053\" id=\"u95b5c053\">A</span></code><span data-lake-id=\"u4b7bfcd6\" id=\"u4b7bfcd6\">，</span><code data-lake-id=\"u2881921e\" id=\"u2881921e\"><span data-lake-id=\"u2008b5aa\" id=\"u2008b5aa\">B</span></code><span data-lake-id=\"ue5a949d0\" id=\"ue5a949d0\"> 中上报 </span><code data-lake-id=\"uf8e2e9fd\" id=\"uf8e2e9fd\"><span data-lake-id=\"ue48e64c3\" id=\"ue48e64c3\">B</span></code><span data-lake-id=\"udec557cd\" id=\"udec557cd\">，现在是 </span><code data-lake-id=\"uc9b92cf7\" id=\"uc9b92cf7\"><span data-lake-id=\"u9328c03c\" id=\"u9328c03c\">A</span></code><span data-lake-id=\"u22145546\" id=\"u22145546\"> 在 </span><code data-lake-id=\"ud6295cdd\" id=\"ud6295cdd\"><span data-lake-id=\"u198e6fad\" id=\"u198e6fad\">A</span></code><span data-lake-id=\"u053436b5\" id=\"u053436b5\"> 中 </span><code data-lake-id=\"ue891befe\" id=\"ue891befe\"><span data-lake-id=\"u4283c700\" id=\"u4283c700\">push</span></code><span data-lake-id=\"u8b731247\" id=\"u8b731247\"> 任务到队列，</span><code data-lake-id=\"uf907385a\" id=\"uf907385a\"><span data-lake-id=\"u2fa611ba\" id=\"u2fa611ba\">B</span></code><span data-lake-id=\"uc4d22f5f\" id=\"uc4d22f5f\"> 中 </span><code data-lake-id=\"u5603c60d\" id=\"u5603c60d\"><span data-lake-id=\"u1cb8b11d\" id=\"u1cb8b11d\">push</span></code><span data-lake-id=\"u35e5891f\" id=\"u35e5891f\"> 任务到队列，</span><strong><span data-lake-id=\"u9581b4a3\" id=\"u9581b4a3\">队列按顺序处理</span></strong><span data-lake-id=\"u74864f37\" id=\"u74864f37\">，自动建立 </span><code data-lake-id=\"u5b5d4cb1\" id=\"u5b5d4cb1\"><span data-lake-id=\"u28c859f0\" id=\"u28c859f0\">A</span></code><span data-lake-id=\"udab63a7b\" id=\"udab63a7b\"> 到 </span><code data-lake-id=\"u82777e8c\" id=\"u82777e8c\"><span data-lake-id=\"u89a26107\" id=\"u89a26107\">B</span></code><span data-lake-id=\"u10797b66\" id=\"u10797b66\"> 的关系。之前是因为两个页面中上报会导致上报时机偏差问题，也不能很好的建立 A 和 B 之间的关系</span></p><p data-lake-id=\"u6c557985\" id=\"u6c557985\"><br></p><h2 data-lake-id=\"a4425dc2\" id=\"a4425dc2\"><span data-lake-id=\"uad5a4dd0\" id=\"uad5a4dd0\">任务队列实现</span></h2><p data-lake-id=\"u698a818e\" id=\"u698a818e\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22class%20ImmeExecPromise%20%7B%5Cn%20%20%20%20constructor()%20%7B%5Cn%20%20%20%20%20%20%20%20this.task%20%3D%20%5B%5D%5Cn%20%20%20%20%20%20%20%20this.executing%20%3D%20false%5Cn%20%20%20%20%7D%5Cn%20%20%20%20push(data)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%8F%AF%E5%B0%81%E8%A3%85%E5%A4%9A%E4%B8%AA%20push%20%E6%9D%A5%E5%AE%9E%E7%8E%B0%E4%B8%8D%E5%90%8C%E4%BB%BB%E5%8A%A1%E7%9A%84%E6%8E%A8%E9%80%81%5Cn%20%20%20%20%20%20%20%20this.task.push(data)%5Cn%20%20%20%20%20%20%20%20this.exec()%5Cn%20%20%20%20%7D%5Cn%20%20%20%20create(data)%20%7B%5Cn%20%20%20%20%20%20%20%20let%20cachePromise%5Cn%20%20%20%20%20%20%20%20let%20cacheResolve%20%3D%20new%20Promise(r%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20cachePromise%20%3D%20r%5Cn%20%20%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20%20%20%20this.task.push(%5Cn%20%20%20%20%20%20%20%20%20%20%20%20new%20Promise(resolve%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20cachePromise((rest%20%3D%20%7B%7D)%20%3D%3E%20resolve(Object.assign(data%2C%20rest)))%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20resolve(data)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%2C%202000)%20%2F%2F%20%E8%B6%85%E6%97%B6%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20%20%20%20)%5Cn%20%20%20%20%20%20%20%20this.exec()%5Cn%20%20%20%20%20%20%20%20return%20cacheResolve%5Cn%20%20%20%20%7D%5Cn%20%20%20%20async%20exec()%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(this.executing)%20return%5Cn%20%20%20%20%20%20%20%20this.executing%20%3D%20true%5Cn%20%20%20%20%20%20%20%20while%20(this.task.length)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20let%20data%20%3D%20await%20(this.task.shift()%20%7C%7C%20%7B%7D)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20console.log(data)%20%2F%2F%20%E8%BF%99%E9%87%8C%E6%A0%B9%E6%8D%AE%20data%20%E7%9A%84%20type%20%E5%8F%AF%E4%BB%A5%E8%B0%83%E7%94%A8%E5%AF%B9%E5%BA%94%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20this.executing%20%3D%20false%5Cn%20%20%20%20%7D%5Cn%7D%5Cn%5Cnlet%20p%20%3D%20new%20ImmeExecPromise()%5Cn%5Cnp.push(%7B%20key%3A%20%5C%22a%5C%22%20%7D)%5Cnp.push(%7B%20key%3A%20%5C%22b%5C%22%20%7D)%5Cnlet%20r%20%3D%20p.create(%7B%20key%3A%20%5C%22c%5C%22%20%7D)%5Cnp.push(%7B%20key%3A%20%5C%22d%5C%22%20%7D)%5CnsetTimeout(()%20%3D%3E%20%7B%5Cn%20%20%20%20r.then(f%20%3D%3E%20f(%7B%20sub%3A%20%5C%22cc%5C%22%20%7D))%5Cn%7D%2C%201500)%5Cnlet%20r2%20%3D%20p.create(%7B%20key%3A%20%5C%22e%5C%22%20%7D)%5CnsetTimeout(()%20%3D%3E%20%7B%5Cn%20%20%20%20r.then(f%20%3D%3E%20f(%7B%20sub%3A%20%5C%22ee%5C%22%20%7D))%5Cn%7D%2C%202500)%20%2F%2F%20%E8%B6%85%E6%97%B6%EF%BC%8C%E8%87%AA%E5%8A%A8%E6%89%A7%E8%A1%8C%EF%BC%8C%E6%89%93%E5%8D%B0%E4%B8%AD%E4%B8%8D%E5%AD%98%E5%9C%A8%20sub%20%E5%B1%9E%E6%80%A7%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22id%22%3A%2222e0591c%22%7D\"></card>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 1530,
  "created_at": "2022-04-15T06:17:58.000Z",
  "updated_at": "2022-04-27T07:21:08.000Z",
  "content_updated_at": "2022-04-27T07:13:26.000Z",
  "published_at": "2022-04-27T07:21:07.000Z",
  "first_published_at": "2022-04-15T06:18:17.049Z",
  "book": {
    "id": 24987782,
    "type": "Book",
    "slug": "aggvdq",
    "name": "项目梳理",
    "user_id": 732231,
    "description": "用来梳理一些项目的内容",
    "toc_yml": "- type: META\n  count: 27\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 219001536\n  published: true\n  max_level: 2\n  last_updated_at: 2022-07-05T05:31:54.296Z\n  version_id: 219001620\n- type: DOC\n  title: 自我介绍\n  uuid: czSnLwlZX5r2CJfX\n  url: nowm78\n  prev_uuid: ''\n  sibling_uuid: 0Z_QJNT6lajGoxNa\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 71314643\n  level: 0\n  id: 71314643\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 面经\n  uuid: 0Z_QJNT6lajGoxNa\n  url: uhv9t2\n  prev_uuid: czSnLwlZX5r2CJfX\n  sibling_uuid: BAls4pP-NeY80xRi\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 73218284\n  level: 0\n  id: 73218284\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 项目\n  uuid: BAls4pP-NeY80xRi\n  url: ''\n  prev_uuid: 0Z_QJNT6lajGoxNa\n  sibling_uuid: OBIPwt2GqG4q-vpQ\n  child_uuid: iAehDOuKbi90rUiI\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: mpx\n  uuid: iAehDOuKbi90rUiI\n  url: flzwri\n  prev_uuid: BAls4pP-NeY80xRi\n  sibling_uuid: ZBy9d0lBfyBCBXpu\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 82395946\n  level: 1\n  id: 82395946\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 滴滴出行小程序\n  uuid: ZBy9d0lBfyBCBXpu\n  url: ''\n  prev_uuid: iAehDOuKbi90rUiI\n  sibling_uuid: GLK4TI6bZt4Xxu6b\n  child_uuid: '-dL8H8y1HcmyCKgY'\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 小程序包体积优化\n  uuid: '-dL8H8y1HcmyCKgY'\n  url: qf3q0x\n  prev_uuid: ZBy9d0lBfyBCBXpu\n  sibling_uuid: EJe2oPQpRB-N11Xb\n  child_uuid: ''\n  parent_uuid: ZBy9d0lBfyBCBXpu\n  doc_id: 75039167\n  level: 2\n  id: 75039167\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: mpx 性能优化\n  uuid: EJe2oPQpRB-N11Xb\n  url: hgoyws\n  prev_uuid: '-dL8H8y1HcmyCKgY'\n  sibling_uuid: guwD9YXgthBX_ez4\n  child_uuid: ''\n  parent_uuid: ZBy9d0lBfyBCBXpu\n  doc_id: 74717740\n  level: 2\n  id: 74717740\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 冒泡页\n  uuid: guwD9YXgthBX_ez4\n  url: mo05y7\n  prev_uuid: EJe2oPQpRB-N11Xb\n  sibling_uuid: jVVd9OODBN3wWQ5P\n  child_uuid: ''\n  parent_uuid: ZBy9d0lBfyBCBXpu\n  doc_id: 73628145\n  level: 2\n  id: 73628145\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 行程中\n  uuid: jVVd9OODBN3wWQ5P\n  url: oyxdqe\n  prev_uuid: guwD9YXgthBX_ez4\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: ZBy9d0lBfyBCBXpu\n  doc_id: 73628172\n  level: 2\n  id: 73628172\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 小程序上线管理平台\n  uuid: GLK4TI6bZt4Xxu6b\n  url: ''\n  prev_uuid: ZBy9d0lBfyBCBXpu\n  sibling_uuid: 1Y-EVaBFWkuKnN0_\n  child_uuid: xpKQHRV_K7bfp3gb\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 介绍\n  uuid: xpKQHRV_K7bfp3gb\n  url: klkzoy\n  prev_uuid: GLK4TI6bZt4Xxu6b\n  sibling_uuid: xCty9hwaaVernWqJ\n  child_uuid: ''\n  parent_uuid: GLK4TI6bZt4Xxu6b\n  doc_id: 66948082\n  level: 2\n  id: 66948082\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 发布方式\n  uuid: xCty9hwaaVernWqJ\n  url: ohsgmx\n  prev_uuid: xpKQHRV_K7bfp3gb\n  sibling_uuid: 1robqYdQQG0wFPvT\n  child_uuid: ''\n  parent_uuid: GLK4TI6bZt4Xxu6b\n  doc_id: 75212608\n  level: 2\n  id: 75212608\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数据库表设计\n  uuid: 1robqYdQQG0wFPvT\n  url: csg8d4\n  prev_uuid: xCty9hwaaVernWqJ\n  sibling_uuid: Dvglyu8bpWNiJpBK\n  child_uuid: ''\n  parent_uuid: GLK4TI6bZt4Xxu6b\n  doc_id: 66912281\n  level: 2\n  id: 66912281\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 原型设计\n  uuid: Dvglyu8bpWNiJpBK\n  url: ktgzlc\n  prev_uuid: 1robqYdQQG0wFPvT\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: GLK4TI6bZt4Xxu6b\n  doc_id: 67155542\n  level: 2\n  id: 67155542\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: webx\n  uuid: 1Y-EVaBFWkuKnN0_\n  url: yghis3\n  prev_uuid: GLK4TI6bZt4Xxu6b\n  sibling_uuid: s3s0XuEuOPAMWB6v\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 73626184\n  level: 1\n  id: 73626184\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: TypeScript 在团队内部的实践总结\n  uuid: s3s0XuEuOPAMWB6v\n  url: bp0lie\n  prev_uuid: 1Y-EVaBFWkuKnN0_\n  sibling_uuid: cBBVzib8WHiSWbfw\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 70125424\n  level: 1\n  id: 70125424\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 利用 ts + proxy 增强 api 类型推导功能\n  uuid: cBBVzib8WHiSWbfw\n  url: wagl2t\n  prev_uuid: s3s0XuEuOPAMWB6v\n  sibling_uuid: OSV3qUcGRRunfF_K\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 75215879\n  level: 1\n  id: 75215879\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 人工审核系统\n  uuid: OSV3qUcGRRunfF_K\n  url: nw2hf8\n  prev_uuid: cBBVzib8WHiSWbfw\n  sibling_uuid: Z9NSZiuYLWhda8gH\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 75041091\n  level: 1\n  id: 75041091\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 长列表性能优化\n  uuid: Z9NSZiuYLWhda8gH\n  url: gkfqwb\n  prev_uuid: OSV3qUcGRRunfF_K\n  sibling_uuid: Xkshht2CcjCCitea\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 75286551\n  level: 1\n  id: 75286551\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序体验分优化\n  uuid: Xkshht2CcjCCitea\n  url: kdytb8\n  prev_uuid: Z9NSZiuYLWhda8gH\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 75216281\n  level: 1\n  id: 75216281\n  open_window: 0\n  visible: 0\n- type: TITLE\n  title: 小程序接入原子化 css 样式库并支持分包输出\n  uuid: OBIPwt2GqG4q-vpQ\n  url: ''\n  prev_uuid: BAls4pP-NeY80xRi\n  sibling_uuid: aPheiwf1071mw6tU\n  child_uuid: tpFBhK_D2hlsZj9w\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 备忘录\n  uuid: tpFBhK_D2hlsZj9w\n  url: pbxykl\n  prev_uuid: OBIPwt2GqG4q-vpQ\n  sibling_uuid: iJCb_ylpdQ6AVtDy\n  child_uuid: ''\n  parent_uuid: OBIPwt2GqG4q-vpQ\n  doc_id: 67295600\n  level: 1\n  id: 67295600\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 架构设计\n  uuid: iJCb_ylpdQ6AVtDy\n  url: elafeo\n  prev_uuid: tpFBhK_D2hlsZj9w\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: OBIPwt2GqG4q-vpQ\n  doc_id: 70799795\n  level: 1\n  id: 70799795\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 研发流程\n  uuid: aPheiwf1071mw6tU\n  url: rl51ig\n  prev_uuid: OBIPwt2GqG4q-vpQ\n  sibling_uuid: KiBu4V9imsSGolKk\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 70125489\n  level: 0\n  id: 70125489\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 一些分享\n  uuid: KiBu4V9imsSGolKk\n  url: guat9s\n  prev_uuid: aPheiwf1071mw6tU\n  sibling_uuid: 5AwFIGCO-4sox4yt\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 71173266\n  level: 0\n  id: 71173266\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 字节面经\n  uuid: 5AwFIGCO-4sox4yt\n  url: gq8kd3\n  prev_uuid: KiBu4V9imsSGolKk\n  sibling_uuid: 8ot1aeLekjpB9XKV\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 81937341\n  level: 0\n  id: 81937341\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: polyfill\n  uuid: 8ot1aeLekjpB9XKV\n  url: nzrear\n  prev_uuid: 5AwFIGCO-4sox4yt\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 81938260\n  level: 0\n  id: 81938260\n  open_window: 0\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 23,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2022-12-25T07:59:52.340Z",
    "created_at": "2022-03-03T15:06:25.000Z",
    "updated_at": "2023-11-07T15:52:14.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-23T19:11:28.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/aggvdq",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-23T19:11:28.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 957242411,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-23T19:11:28.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}