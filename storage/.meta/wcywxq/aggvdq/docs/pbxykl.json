{
  "id": 67295600,
  "slug": "pbxykl",
  "title": "备忘录",
  "description": "第一阶段第一轮疑问✅兼容性(兼容到哪个版本/特性的 tailwind / postcss)，这决定了未来 fork 哪个仓库哪个版本最新版本，tailwind 和 windicss 同时支持🔲类 tailwind 库的调研以及是否适配，例如 windicss(目前内置 JIT 后似乎差别不大...",
  "cover": "",
  "user_id": 732231,
  "book_id": 24987782,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"WZxVH\"><span class=\"ne-text\">第一阶段</span></h2><p id=\"u998d8fd0\" class=\"ne-p\"><br></p><h3 id=\"lsGay\"><span class=\"ne-text\">第一轮疑问</span></h3><p id=\"u91f66a36\" class=\"ne-p\"><br></p><ul class=\"ne-tl\"><li id=\"u5f38f900\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">兼容性(兼容到哪个版本/特性的 tailwind / postcss)，这决定了未来 fork 哪个仓库哪个版本</span></li></ul><div class=\"ne-quote\"><p id=\"ua71dd455\" class=\"ne-p\"><span class=\"ne-text\">最新版本，tailwind 和 windicss 同时支持</span></p></div><ul class=\"ne-tl\"><li id=\"u154039bc\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">类 tailwind 库的调研以及是否适配，例如 windicss(目前内置 JIT 后似乎差别不大，代确认)</span></li><li id=\"ue6576bc8\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">postcss 和 npx 两种模式下的差异对比</span></li></ul><div class=\"ne-quote\"><p id=\"u527a368e\" class=\"ne-p\"><span class=\"ne-text\">在 v3 版本，原子类不多时性能接近，需要在 demo 手动引入大量原子类，或者粗糙地写一个重构工具，跑在小程序项目上</span></p></div><ul class=\"ne-tl\"><li id=\"uf718f1dd\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">全局样式只能作用于 page 级，无法作用到 component 级 </span><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html#%E5%85%A8%E5%B1%80%E6%A0%B7%E5%BC%8F%E4%B8%8E%E5%B1%80%E9%83%A8%E6%A0%B7%E5%BC%8F\" data-href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html#%E5%85%A8%E5%B1%80%E6%A0%B7%E5%BC%8F%E4%B8%8E%E5%B1%80%E9%83%A8%E6%A0%B7%E5%BC%8F\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">参考文档</span></a></li><li id=\"u64c76f14\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">未来分包输出的粒度(page/component) ? 初步思路，按照分包划分，框架层，除主包页面，其余自动 import 分包原子类集合 (区别于目前 stylus 的显示操作)</span></li></ul><div class=\"ne-quote\"><p id=\"ufb5eb420\" class=\"ne-p\"><span class=\"ne-text\">按分包维度输出，分包内页面做 import 即可，组件开启 apply-shared 就可以拿到</span></p></div><ul class=\"ne-tl\"><li id=\"ua7cad5eb\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">未来是否要修改老代码？如果要，是否考虑自动化重构工具</span></li></ul><div class=\"ne-quote\"><p id=\"uc448f7b1\" class=\"ne-p\"><span class=\"ne-text\">未来会像 TypeScript 那样逐步改造并推动成为规范，重构工具待确认</span></p></div><ul class=\"ne-tl\"><li id=\"u91e452c0\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">自定义预设集的设计，以及未来是否以单独文档形式展示，甚至是提供一个 playground，能在原始 css 和类 tailwind 语法间进行双向转换</span></li><li id=\"u7f0ddce4\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">样式隔离</span></li></ul><div class=\"ne-quote\"><p id=\"u51c9438b\" class=\"ne-p\"><span class=\"ne-text\">利用 apply-shared 实现</span></p></div><p id=\"u3a97ffa7\" class=\"ne-p\"><span class=\"ne-text\">最重要的：融合 mpx 策略(分包策略，如何嵌入到目前的构建流程，如指令、cli)</span></p><p id=\"u133654c2\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"lFIct\"><span class=\"ne-text\">第一轮沟通结果</span></h3><p id=\"udfeb8aa0\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uf6bf382a\"><span class=\"ne-text\">扫描 mpx 文件的过程中，记录原子类是在哪个分包下被使用，实现主包一份，每个分包一份的输出，在当前分包各页面 import 当前分包的原子类文件(测试：组件不用 import 就能拿到?)</span></li><li id=\"ucc249315\"><span class=\"ne-text\">对于组件在多分包间使用的情况，如果开启 apply-shared 能够将 app.wxss 注入，则无需特殊处理，如果不能，则需要</span></li></ul><p id=\"ub34e49c3\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"aHkMO\"><span class=\"ne-text\">第一轮 TODO</span></h3><p id=\"u60054476\" class=\"ne-p\"><br></p><ul class=\"ne-tl\"><li id=\"u9c50c838\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">postcss 流程跑通</span></li><li id=\"u612c8a29\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">自定义预设集原理(以及 mpx issue 里提到的插件调研)</span></li></ul><ul class=\"ne-tl\"><li id=\"u7621d80c\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">大量原子类时的生成性能</span></li><li id=\"u46191a8e\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">JIT 开闭性能对比</span></li></ul><ul class=\"ne-ul\"><li id=\"uf64b3c83\"><span class=\"ne-text\" style=\"text-decoration: line-through\">postcss 插件原理</span></li><li id=\"uf950cedc\"><span class=\"ne-text\" style=\"text-decoration: line-through\">tailwind 原理</span></li></ul><ul class=\"ne-ul\"><li id=\"uc4426010\"><span class=\"ne-text\" style=\"text-decoration: line-through\">mpx 原理</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uca65fdfc\"><span class=\"ne-text\" style=\"text-decoration: line-through\">style-compiler (目前无需改动)</span></li><li id=\"uaf04df4c\"><span class=\"ne-text\" style=\"text-decoration: line-through\">getPackageInfo</span></li></ul></ul><p id=\"ue8369531\" class=\"ne-p\"><span class=\"ne-text\" style=\"text-decoration: line-through\"></span></p><h3 id=\"IKr9m\"><span class=\"ne-text\">进度记录</span></h3><p id=\"ue3904827\" class=\"ne-p\"><br></p><p id=\"u3521b61c\" class=\"ne-p\"><span class=\"ne-text\">完善 demo</span></p><ul class=\"ne-ul\"><li id=\"ue99024c1\"><span class=\"ne-text\">能力：多分包，组件分层嵌套，组件跨分包共享</span></li><li id=\"u52a83fe6\"><span class=\"ne-text\">TODO: 模拟组件间无样式隔离时样式注入会产生 bug 的情况</span></li></ul><ul class=\"ne-ul\"><li id=\"u9c59c440\"><span class=\"ne-text\">已验证：npx 执行无需安装 postcss</span></li><li id=\"ua579d1c0\"><span class=\"ne-text\">待验证：验证 tailwind3 和 postcss8 在 mpx demo 上可以正常表现，并且 tailwind cli 形式比 tailwind2.x 有显著提升</span></li></ul><p id=\"u6dfd5682\" class=\"ne-p\"><span class=\"ne-text\"></span></p><hr id=\"c3WV8\" class=\"ne-hr\"><h2 id=\"AL1M9\"><span class=\"ne-text\">第二阶段</span></h2><p id=\"u49e577e9\" class=\"ne-p\"><br></p><h3 id=\"oyq06\"><span class=\"ne-text\">第二轮疑问</span></h3><p id=\"u55d9541d\" class=\"ne-p\"><br></p><ul class=\"ne-tl\"><li id=\"uf0b1fb0f\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">是否应该新建一个页面和逻辑稍微复杂的 demo (主要目的是面面聚到，包括：组件嵌套、分包能力、组件在分包间共享、store 划分)，如果已有，是否应该做适当升级</span></li></ul><div class=\"ne-quote\"><p id=\"u9f77400d\" class=\"ne-p\"><span class=\"ne-text\">可以做，未来也可以考虑成为一个新的 mpx-example</span></p></div><ul class=\"ne-tl\"><li id=\"u92449094\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">执行方式，loader 模式 or 手动执行 script 模式</span></li></ul><div class=\"ne-quote\"><p id=\"ufab44cdf\" class=\"ne-p\"><span class=\"ne-text\">暂时手动执行 cli 模式</span></p></div><ul class=\"ne-tl\"><li id=\"u10343490\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">全量扫描 mpx 过程中对分包的记录</span></li></ul><div class=\"ne-quote\"><p id=\"u84493644\" class=\"ne-p\"><span class=\"ne-text\">需要在denpendences 中进行修改，问题：如何在扫描过程中记录分包</span></p><p id=\"uac6a3438\" class=\"ne-p\"><span class=\"ne-text\">最直观的通过 changedContent(tailwind 全量扫描 mpx 后缀文件得到的路径数组)，或者通过正则来过滤分包</span></p></div><ul class=\"ne-tl\"><li id=\"u033e2469\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">能否做到，只有在修改 class 部分时，才自动执行 tailwind</span></li><li id=\"u1c9599d0\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">tailwindcss cli 下的 watch 模式</span></li></ul><ul class=\"ne-tl\"><li id=\"ud953b42f\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">apply-shared 是否会与原来的样式隔离有冲突</span></li><li id=\"uc3360452\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">是否应该强依赖于某个库，未来如果该库不维护，或者项目内无人跟进新特性，造成的影响是多少</span></li></ul><ul class=\"ne-tl\"><li id=\"u943666b9\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">预设的嵌入模式</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-tl\"><li id=\"u522d98f0\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">直接写在 tailwind.config.js</span></li><li id=\"u571a064d\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">加在项目 build 流程</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-tl\"><li id=\"u7d167282\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">以预设包形式独立</span></li><li id=\"u7185994b\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">模仿 taro，以 plugin 的形式接入，设置项直接写在 plugin 配置里</span></li></ul></ul><p id=\"ud2975c75\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"DT8Mf\"><span class=\"ne-text\">关于构建方式</span></h3><p id=\"u607b91df\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u0caa4096\"><span class=\"ne-text\">postcss cli 和 tailwind cli 代码设计差异</span></li><li id=\"u5ec92205\"><span class=\"ne-text\">性能对比</span></li></ul><ul class=\"ne-ul\"><li id=\"u8f1d03cf\"><span class=\"ne-text\">tailwind cli 有完整的 glob 支持 </span><a href=\"https://www.tailwindcss.cn/docs/just-in-time-mode#styles-rebuild-in-an-infinite-loop\" data-href=\"https://www.tailwindcss.cn/docs/just-in-time-mode#styles-rebuild-in-an-infinite-loop\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://www.tailwindcss.cn/docs/just-in-time-mode#styles-rebuild-in-an-infinite-loop</span></a></li></ul><p id=\"u61351c36\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"lNw0M\"><span class=\"ne-text\">关于接入版本</span></h3><p id=\"u59efe23b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u1000a967\" class=\"ne-p\"><span class=\"ne-text\">目前 tailwind3 和postcss8 在 mpx demo 均正常表现，并且 tailwind cli 速度比 v2 版本有较大提升，小程序项目将 postcss 升级到 8+ 有哪些阻力</span></p><p id=\"ucf78a6b8\" class=\"ne-p\"><span class=\"ne-text\">autoprefixer 已被 postcss8 内置，结合 tailwind 是否有效，待验证</span></p><p id=\"u8f154f38\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"iFkV5\"><span class=\"ne-text\">关于分包策略</span></h3><p id=\"uce530493\" class=\"ne-p\"><br></p><p id=\"u6785f844\" class=\"ne-p\"><span class=\"ne-text\">直接与 tailwind 解耦，但需要对 h-[918px] 这种动态 class 语法做兼容处理</span></p><p id=\"u0102172a\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"dKVn6\"><span class=\"ne-text\">关于复杂 class</span></h3><p id=\"uf8926a3c\" class=\"ne-p\"><br></p><p id=\"u3550bb00\" class=\"ne-p\"><span class=\"ne-text\">windicss 可以在 template 中处理截断并用 js 处理 class, tailwind 不可能截断 class，把选择权交给使用者</span></p><p id=\"u1f4ad01b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"PTuvs\"><span class=\"ne-text\">关于与处理器冲突</span></h3><p id=\"u694df23d\" class=\"ne-p\"><br></p><p id=\"u122d6053\" class=\"ne-p\"><span class=\"ne-text\">后续改为扫描原生打包后的代码，解决了此问题</span></p><p id=\"u6e718533\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"sMYla\"><span class=\"ne-text\">关于预设</span></h3><p id=\"uafeef18d\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uc003a770\"><span class=\"ne-text\">以什么形式维护</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ud219a8d4\"><span class=\"ne-text\">直接写在 tailwind.config.js</span></li><li id=\"u7b61be15\"><span class=\"ne-text\">加到项目的 build 流程</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ua1cc6b00\"><span class=\"ne-text\">以预设包的形式独立出来</span></li><li id=\"u9faff0b9\"><span class=\"ne-text\">模仿 taro、以 plugin 的形式接入，设置项直接写在 plugin 配置里</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ubfd4d5d5\"><span class=\"ne-text\">可能需要自定义的属性</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u567220a3\"><span class=\"ne-text\">颜色、字体、背景...</span></li><li id=\"u19ba6a3a\"><span class=\"ne-text\">图片...</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"u6e35e295\"><span class=\"ne-text\">开发者自定义样式怎么组织</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u716e9eb9\"><span class=\"ne-text\">在 tailwind.css 处定义：最接近原生，但感觉不易于按照模块进行区分，可以按照模块再划分子目录后合并(能实现图片素材中的几种管理，例如只有一张图，想找到对应组件很难，集中管理之后就可以直接在相应文件夹的图片列表中找到，也需要耐心和运气)</span></li><li id=\"u184da34a\"><span class=\"ne-text\">像原来一样写死在组件内 style 里，但此时需要用传统 class 写法，想象一个自定义 className，可能会与原子类混用</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ue05f1a67\"><span class=\"ne-text\">如果所有使用 css 特性，在 tailwind 中无对应 match rule，tailwind 中是否有提示，没有的话是不是要自己增加 warning(如何与自定义 class 的区别)</span></li></ul><p id=\"u3bb95b3d\" class=\"ne-p\"><br></p><h3 id=\"WtYH8\"><span class=\"ne-text\">关于抹平</span></h3><p id=\"uaf2ac613\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u3325e3ac\"><span class=\"ne-text\">特殊符号 </span><code class=\"ne-code\"><span class=\"ne-text\">./</span></code><span class=\"ne-text\"> 的抹平思路</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uacf977d7\"><span class=\"ne-text\">taro: 统一替换为下划线</span></li><li id=\"u0be2832a\"><span class=\"ne-text\">其他框架：-div-、-dot-</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"uf2cc3cea\"><span class=\"ne-text\">theme 验证</span></li><li id=\"ufd6bb0fc\"><span class=\"ne-text\">variant 验证</span></li></ul><ul class=\"ne-ul\"><li id=\"u1e0859bd\"><span class=\"ne-text\">corePlugin 验证</span></li><li id=\"ua9e61b70\"><span class=\"ne-text\">需要写哪些 plugin</span></li></ul><p id=\"uadbe702c\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"uJrRH\"><span class=\"ne-text\">测试 demo 及数据</span></h3><p id=\"u2af7c908\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uc437888c\"><span class=\"ne-text\">mpx 是否需要，新增或对某个已有 demo 进行改造，增强能力，主要目的是面面俱到，包括组件嵌套、分包能力、组件在分包间共享、store 划分...</span></li><li id=\"u335113fd\"><span class=\"ne-text\">性能测试数据</span></li></ul><ul class=\"ne-ul\"><li id=\"ua1e0074a\"><span class=\"ne-text\">大量原子类场景下的性能以及体积验证</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ud7b1c83d\"><span class=\"ne-text\">从官网手动复制粘贴到 demo</span></li><li id=\"uaf454208\"><span class=\"ne-text\">提前写一个粗糙的重构工具，完成从 selector 到 class 拼接的映射，用到滴滴小程序上再做验证</span></li></ul></ul><p id=\"ue2ad55cc\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"fWglg\"><span class=\"ne-text\">第二轮沟通结果</span></h3><p id=\"u5438e776\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uf0ed8b76\"><span class=\"ne-text\">扫描 dist</span></li><li id=\"u231e2570\"><span class=\"ne-text\">可以预见的优点</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u95350c37\"><span class=\"ne-text\">不需要再全量扫描 mpx 文件所有内容，而是只扫 template / wxml 部分，提升性能</span></li><li id=\"u862391aa\"><span class=\"ne-text\">基于打出来的原生小程序，利于开源</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u0f4d40f6\"><span class=\"ne-text\">解决了如果扫描源文件，还需要扫描依赖中第三方业务的问题</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ua17d563d\"><span class=\"ne-text\">postcss 升级</span></li><li id=\"u04563c2c\"><span class=\"ne-text\">componentMapping</span></li></ul><ul class=\"ne-ul\"><li id=\"u8103510b\"><span class=\"ne-text\">非通用样式就以原生样式书写，尽量保持只有一份 config</span></li></ul><p id=\"u52b5879b\" class=\"ne-p\"><br></p><h3 id=\"mBVIh\"><span class=\"ne-text\">分包策略</span></h3><p id=\"u3ee2fbd8\" class=\"ne-p\"><br></p><p id=\"ue1a63ef0\" class=\"ne-p\"><span class=\"ne-text\">通过 node 脚本异步处理 dist/wx 下每一个分包，并在分包目录下输出样式文件</span></p><div class=\"ne-quote\"><p id=\"u2f4df015\" class=\"ne-p\"><span class=\"ne-text\">注意：此处需要额外做一个处理，tailwind 扫描文件的依据是 config.content，所以例如扫描 subpackage1 时，需要将当前 config.content 动态处理成 </span><code class=\"ne-code\"><span class=\"ne-text\">['./dist/wx/subpackage1/**/*.wxml']</span></code><span class=\"ne-text\">，以此类推</span></p></div><p id=\"u57cf29c8\" class=\"ne-p\"><span class=\"ne-text\">边界处理(是否要把 cli 内容给加到 node 脚本，粒度待讨论)</span></p><ul class=\"ne-ul\"><li id=\"u186a6f41\"><span class=\"ne-text\">分包 page 自动 import 当前分包打出的样式</span></li><li id=\"u7f8ed26b\"><span class=\"ne-text\">检查分包下所有 index.json 是否开启 apply-shared，没有则输出 warning 或者自动加上(添加 usingComponent 判断避免误伤)</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u6b4fdb60\"><span class=\"ne-text\">待确定：如果用户之前的 styleIsolation 设置为其他值应该如何处理</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ua7517847\"><span class=\"ne-text\">识别无 wxml 文件目录，跳过处理(是否借助 fast-glob，或者糅合 cli 流程)，或者等打出空目录之后，在公共样式提取阶段，对空文件进行删除</span></li><li id=\"u3c76d483\"><span class=\"ne-text\">识别非分包目录，统一按主包文件扫描处理(待确认是否 ok)</span></li></ul><p id=\"udf9ef149\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"L8grL\"><span class=\"ne-text\">多分包共用原子类去重提重</span></h3><p id=\"u9d5f4068\" class=\"ne-p\"><br></p><p id=\"uc8911e51\" class=\"ne-p\"><span class=\"ne-text\">删除并提取每个分包下的公共原子类，并提升到主包或独立样式分包(孰优孰劣待验证，如果会导致主包超级大，就改到独立样式分包)</span></p><p id=\"ud438ae64\" class=\"ne-p\"><span class=\"ne-text\">方案：以 postcss 插件形式</span></p><p id=\"uc64a75ef\" class=\"ne-p\"><span class=\"ne-text\">Q: 是否增加去重策略，比如用户可以自定义分包重复 n 次的类才会提取到主包，以达到动态调整主包样式体积到最佳的目的</span></p><p id=\"uab0e8dc0\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"uc3383c08\" class=\"ne-p\"><span class=\"ne-text\">config 样式融合(怎样达到心智负担最低)</span></p><p id=\"uc1128ec3\" class=\"ne-p\"><span class=\"ne-text\">统一扫文件和记录 app.json 的方式(选择 fast-glob)</span></p><p id=\"u2855c420\" class=\"ne-p\"><span class=\"ne-text\">小程序只支持 import 相对路径</span></p><p id=\"uc9844e41\" class=\"ne-p\"><span class=\"ne-text\">省略冗余操作，分包全扫，输出时全部获取</span></p><p id=\"u585ee9d7\" class=\"ne-p\"><span class=\"ne-text\"></span></p><ul class=\"ne-ul\"><li id=\"u2ed05348\"><span class=\"ne-text\">关闭分包内除第一层的操作</span></li></ul><p id=\"ue7dfb31e\" class=\"ne-p\"><span class=\"ne-text\">怎样区分主包和分包</span></p><p id=\"ua8714648\" class=\"ne-p\"><span class=\"ne-text\">策略模式优化</span></p><p id=\"ufa02711b\" class=\"ne-p\"><span class=\"ne-text\">是否需要 import 主包样式</span></p><p id=\"u37587513\" class=\"ne-p\"><span class=\"ne-text\">是否增加文件内部的重复判断(躲避 tailwind 或者其他原因产生的 bug)</span></p><p id=\"u691e03bc\" class=\"ne-p\"><span class=\"ne-text\">原项目问题，未对主包做样式输出(只做了剔除处理)</span></p><p id=\"u1f57e15c\" class=\"ne-p\"><span class=\"ne-text\">粒度调整(重复 n 次)</span></p><p id=\"uc0c46dba\" class=\"ne-p\"><span class=\"ne-text\">是否应该保留 css 全量扫描，检测防止用户自定义 class 与 tailwind 命名冲突</span></p><p id=\"uffbc8f4d\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"Pa3dt\"><span class=\"ne-text\">动态值语法抹平</span></h3><p id=\"ubd105e37\" class=\"ne-p\"><br></p><p id=\"u912f5524\" class=\"ne-p\"><span class=\"ne-text\">参考：</span><a href=\"https://www.tailwindcss.cn/docs/just-in-time-mode#arbitrary-value-support\" data-href=\"https://www.tailwindcss.cn/docs/just-in-time-mode#arbitrary-value-support\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://www.tailwindcss.cn/docs/just-in-time-mode#arbitrary-value-support</span></a></p><p id=\"u56d3a522\" class=\"ne-p\"><span class=\"ne-text\">例如：色值，样式 url 等自定义样式可以直接写在方括号中，那么之前想的绝大部分需要自定义的场景都不需要了，工作就转换为怎样支持例如 </span><code class=\"ne-code\"><span class=\"ne-text\">h-[918px]</span></code><span class=\"ne-text\"> </span><code class=\"ne-code\"><span class=\"ne-text\">bg-[#1da1f1]</span></code><span class=\"ne-text\"> 这样的语法。如果解决成本很高，或者特别麻烦，则考虑</span></p><ul class=\"ne-ul\"><li id=\"u42dbb2e9\"><span class=\"ne-text\">不用动态值，混用原来的写法</span></li><li id=\"ua5ceef24\"><span class=\"ne-text\">类似 taro 那样直接换用 windicss，windicss 可以直接支持 </span><code class=\"ne-code\"><span class=\"ne-text\">h-[918px]</span></code><span class=\"ne-text\"> </span><code class=\"ne-code\"><span class=\"ne-text\">bg-[#1da1f1]</span></code></li></ul><p id=\"u17e119c0\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"F3TIi\"><span class=\"ne-text\">自定义样式</span></h3><p id=\"u872be3ce\" class=\"ne-p\"><br></p><p id=\"ud54a9acf\" class=\"ne-p\"><span class=\"ne-text\">虽然 </span><code class=\"ne-code\"><span class=\"ne-text\">[..]</span></code><span class=\"ne-text\"> 语法解决了绝大多数以前需要自定义的情况，但仍免不了开发时有可能需要手动自动义的情况，需要考虑自定义样式怎么写，会不会被覆盖的问题</span></p><p id=\"ucb1ff613\" class=\"ne-p\"><span class=\"ne-text\">初步拟定：只用一份 tailwind.config，再其下的分包划分子目录，对应分包的自定义样式放在对应文件下，最后全部合并(注：考虑第三方分包的情况)</span></p><p id=\"u370fbe3e\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"Hs7Ks\"><span class=\"ne-text\">接入 windicss</span></h3><p id=\"u0243b962\" class=\"ne-p\"><br></p><p id=\"ube5e0135\" class=\"ne-p\"><span class=\"ne-text\">接入 windicss，让使用者可以自行选择</span></p><p id=\"ue571a7a2\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"GSCbG\"><span class=\"ne-text\">Tailwind cli 兼容</span></h3><p id=\"uc353539b\" class=\"ne-p\"><br></p><p id=\"u59c97d2a\" class=\"ne-p\"><span class=\"ne-text\">问题升级：</span></p><ul class=\"ne-ul\"><li id=\"ub0556683\"><span class=\"ne-text\">学习 tailwind cli 中 rebuild 的思路，实现 rebuild 速度提升</span></li><li id=\"u53fd154b\"><span class=\"ne-text\">如何兼容 cli 提供的配置</span></li></ul><p id=\"u9cdd8aca\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"W0ygJ\"><span class=\"ne-text\">demo 完善</span></h3><p id=\"u79add53c\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u822b6bb8\"><span class=\"ne-text\">增加分包的组件目录</span></li><li id=\"uae7aba44\"><span class=\"ne-text\">增加测试的原子类数据</span></li></ul><p id=\"uc6c8e947\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"QLhAw\"><span class=\"ne-text\">自动重构工具</span></h3><p id=\"ufde413b2\" class=\"ne-p\"><br></p><p id=\"ud98af8bc\" class=\"ne-p\"><span class=\"ne-text\">有三种情况可能需要重构工具</span></p><ul class=\"ne-ul\"><li id=\"u7c5f49ac\"><span class=\"ne-text\">未来对滴滴小程序项目逐步重构</span></li><li id=\"u10f6f9c9\"><span class=\"ne-text\">正式重构前，可能需要先对小程序项目粗糙地进行全量改造(用于性能和体积测试，评估效益)</span></li></ul><ul class=\"ne-ul\"><li id=\"u74b9f82b\"><span class=\"ne-text\">方便外部使用者</span></li></ul><p id=\"u096546b9\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u7ecf512e\" class=\"ne-p\"><span class=\"ne-text\">尽量使用自动化重构 + 人工 review 的方案</span></p><p id=\"u8d29b432\" class=\"ne-p\"><span class=\"ne-text\">参考 tailwind，对样式表做反向映射</span></p><p id=\"ud9402d44\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"gxBQI\"><span class=\"ne-text\">确认版本</span></h3><p id=\"u2f943242\" class=\"ne-p\"><br></p><p id=\"u87a3d08b\" class=\"ne-p\"><span class=\"ne-text\">需要确认滴滴小程序 postcss 的配套插件都有能升级并兼容到 v8+ 的版本</span></p><h3 id=\"Gwygs\"><span class=\"ne-text\">第二轮进度</span></h3><p id=\"u45721407\" class=\"ne-p\"><br></p><p id=\"uf74020b3\" class=\"ne-p\"><span class=\"ne-text\">提重插件接入适配</span></p><p id=\"u3dc2154d\" class=\"ne-p\"><span class=\"ne-text\">探究 windi 的 input file 数组实现</span></p><p id=\"ua71e22b5\" class=\"ne-p\"><span class=\"ne-text\">tailwind 中动态更改 config content</span></p><p id=\"ue9bac68c\" class=\"ne-p\"><span class=\"ne-text\">脚手架化，自定义 config 配置设计，ali argvs 注入原生脚手架设计</span></p><p id=\"u30aa6db5\" class=\"ne-p\"><span class=\"ne-text\">fast-glob &amp; node-glob (windi使用)调研，将原方法改造为 glob 扫描</span></p><p id=\"u6a7c01e6\" class=\"ne-p\"><span class=\"ne-text\">windi 接入</span></p><p id=\"u43dbed7e\" class=\"ne-p\"><span class=\"ne-text\">分包扫描概念确定</span></p><p id=\"u7a0f5678\" class=\"ne-p\"><span class=\"ne-text\">分包名可能是类似 a/b/c，所以最佳还是通过 app.json 拼出分包路径再进行扫描</span></p><p id=\"u2e78e193\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"ejjFc\"><span class=\"ne-text\">初步设想</span></h3><p id=\"u63248c51\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u98b94c40\"><span class=\"ne-text\">思路</span></li></ul><p id=\"uefbdf92c\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u150d06c7\" class=\"ne-p\"><span class=\"ne-text\">向外提供一套完整的原生小程序接入/重构 tailwind 方案(将以下能力集成并配置化)</span></p><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u6fd793d7\"><span class=\"ne-text\">用户可以选择切换 tailwind 模式或 windicss 模式</span></li><li id=\"u1cf964b1\"><span class=\"ne-text\">分包处理 + 公共样式提取(可配置场景：用户可以选择是否使用分包场景；可配置样式表生成方案，例如主包一份/分包各自一份/独立分包一份/指定分包输出)</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u97dd515a\"><span class=\"ne-text\">更细化的小程序专用预设，以及提供给使用者更多的选择(解决动态值的抹平；针对 toB 和 toC 有格子定制场景，比如 toB 侧重复用模版，toC 侧重自定义值)</span></li><li id=\"u06b9dcb3\"><span class=\"ne-text\">提供 demo + 配套的自动化重构工具</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u81a8a421\"><span class=\"ne-text\">基于官方的 playground，写入自己的 config，然后生成分享链接，作为定制小程序语法的 playground</span></li></ul></ul><div class=\"ne-quote\"><p id=\"uebdf8416\" class=\"ne-p\"><span class=\"ne-text\">适用场景：所有原生小程序 + 所有原小程序框架处理后打包出的原生小程序文件</span></p></div><ul class=\"ne-ul\"><li id=\"u4944e133\"><span class=\"ne-text\">大致目录划分</span></li></ul><pre data-language=\"markdown\" id=\"vp0Wh\" class=\"ne-codeblock language-markdown\">不知道取啥名              \n├── lib\n│ ├── processSubpackage.ts // 核心流程:按分包输出样式 + postcss插件提重         \n│ ├── accessWatch.ts       // watch &amp; rebuild\n├── presets           // 针对小程序场景的内置预设\n│ ├── tailwindPreset  // tailwind 预设集\n│ └── windiPrset      // windicss 预设集\n├── customStyle       // 用户自定义原子类\n│ ├──subpackageName   // 根据app.json的扫描得到的分包自动生成目录\n├── utils             // 工具集\n│ ├── extractPlugin   // 用于提重的postcss插件\n│ ├── refactHelper    // 自动重构工具\n├── config.ts         // 用户配置文件(例如选择tail或windi/是否分包处理)\n├── index.ts          // config.js 处理 &amp; cli配置\n└── example           // demo(自带分包+测试类)</pre><ul class=\"ne-ul\"><li id=\"ub49b2b7a\"><span class=\"ne-text\">优点</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u53476e16\"><span class=\"ne-text\">基于原生，适用全场景，与小程序框架解耦</span></li><li id=\"u73723673\"><span class=\"ne-text\">基于 tailwind cli 和 windicss cli 上层封装，与 tailwind 和 windicss 源码本身解耦，可以随时间同步新特性</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u06d9c008\"><span class=\"ne-text\">高度自定义(将特性都做成用户可配置，例如样式库选择，分包输出策略 ，去重策略等)</span></li><li id=\"u3b7c45d7\"><span class=\"ne-text\">提供重构工具，快速改造旧项目</span></li></ul></ul><p id=\"u3c86db2f\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"gCEGD\"><span class=\"ne-text\">对当前最佳实践的探索</span></h3><p id=\"u8a56dc15\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u6d1b14c6\"><span class=\"ne-text\">vscode 插件：Tailwind Css IntelliSense 关联 mpx 以及 wxml</span></li><li id=\"ufbb871e2\"><span class=\"ne-text\">组件拿到页面样式：</span><code class=\"ne-code\"><span class=\"ne-text\">&quot;stylelsolation&quot;: &quot;apply-shared&quot;</span></code></li></ul><ul class=\"ne-ul\"><li id=\"u8b6abab6\"><span class=\"ne-text\">demo 目前在 node v14.18.0 下不会报错</span></li></ul><p id=\"ude99afc3\" class=\"ne-p\"><br></p><h2 id=\"ibiyG\"><span class=\"ne-text\">第三阶段</span></h2><p id=\"u1dc98ee4\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u5d344447\"><span class=\"ne-text\">问题</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ub9a7b3ae\"><span class=\"ne-text\">可调试性变差，之前可以直接在开发者工具增删改 css</span></li><li id=\"u830b2283\"><span class=\"ne-text\">windicss 给 web 调试提供了 windi:devtools，待验证小程序中是否生效</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u9a29bf9a\"><span class=\"ne-text\">watch 提速</span></li><li id=\"u5cacc13a\"><span class=\"ne-text\">增加 debug 模式，例如开启核心变量 console，debugger</span></li></ul></ul><p id=\"uc312bbf5\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h1 id=\"unLPb\"><span class=\"ne-text\">附</span></h1><h2 id=\"taezl\"><span class=\"ne-text\">参考文档</span></h2><p id=\"u16a1a48e\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ud8f0c44d\" class=\"ne-p\"><span class=\"ne-text\">系列文章：</span><a href=\"https://developers.weixin.qq.com/community/personal/oCJUsw1GWHOwOLn7MZ4Rbb8T-FVE\" data-href=\"https://developers.weixin.qq.com/community/personal/oCJUsw1GWHOwOLn7MZ4Rbb8T-FVE\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://developers.weixin.qq.com/community/personal/oCJUsw1GWHOwOLn7MZ4Rbb8T-FVE</span></a></p><p id=\"u1b5141e6\" class=\"ne-p\"><span class=\"ne-text\">purge 分析：</span><a href=\"https://gitee.com/sl1673495/pictures/issues/I3CJER?_from=gitee_search\" data-href=\"https://gitee.com/sl1673495/pictures/issues/I3CJER?_from=gitee_search\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://gitee.com/sl1673495/pictures/issues/I3CJER?_from=gitee_search</span></a></p><p id=\"uebd8d1c7\" class=\"ne-p\"><span class=\"ne-text\">小程序文档-样式隔离：</span><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html\" data-href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html</span></a></p><h2 id=\"TzYwE\"><span class=\"ne-text\">参考仓库及分支</span></h2><p id=\"u4844a32f\" class=\"ne-p\"><span class=\"ne-text\">demo：</span><a href=\"https://github.com/gloomyKevin/mpx-example-king\" data-href=\"https://github.com/gloomyKevin/mpx-example-king\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://github.com/gloomyKevin/mpx-example-king</span></a></p><ul class=\"ne-ul\"><li id=\"u85c700e0\"><span class=\"ne-text\">features 集成分支：dev</span></li><li id=\"ubdcb2833\"><span class=\"ne-text\">预设：</span><a href=\"https://github.com/gloomyKevin/tailwindcss-miniprogram-preset\" data-href=\"https://github.com/gloomyKevin/tailwindcss-miniprogram-preset\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://github.com/gloomyKevin/tailwindcss-miniprogram-preset</span></a></li></ul><ul class=\"ne-ul\"><li id=\"u6a9806d7\"><span class=\"ne-text\">fork 下来后独立发包：</span><a href=\"https://www.npmjs.com/package/mpx-tailwindcss-preset\" data-href=\"https://www.npmjs.com/package/mpx-tailwindcss-preset\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://www.npmjs.com/package/mpx-tailwindcss-preset</span></a></li></ul><p id=\"u1f930f03\" class=\"ne-p\"><span class=\"ne-text\">当前版本：2.1.4</span></p><ul class=\"ne-ul\"><li id=\"u759bea68\"><span class=\"ne-text\">插件：</span><a href=\"https://github.com/theowenyoung/mini-tailwind\" data-href=\"https://github.com/theowenyoung/mini-tailwind\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://github.com/theowenyoung/mini-tailwind</span></a></li><li id=\"u37846ee1\"><span class=\"ne-text\">新版 taro 插件：</span><a href=\"https://github.com/pcdotfan/taro-plugin-tailwind\" data-href=\"https://github.com/pcdotfan/taro-plugin-tailwind\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://github.com/pcdotfan/taro-plugin-tailwind</span></a></li></ul><ul class=\"ne-ul\"><li id=\"ue41808bc\"><span class=\"ne-text\">旧版 taro 插件：</span><a href=\"https://github.com/windedge/taro-tailwind\" data-href=\"https://github.com/windedge/taro-tailwind\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://github.com/windedge/taro-tailwind</span></a></li></ul></div>",
  "body": "<a name=\"WZxVH\"></a>\n## 第一阶段\n\n<a name=\"lsGay\"></a>\n### 第一轮疑问\n\n- [x] 兼容性(兼容到哪个版本/特性的 tailwind / postcss)，这决定了未来 fork 哪个仓库哪个版本\n> 最新版本，tailwind 和 windicss 同时支持\n\n- [ ] 类 tailwind 库的调研以及是否适配，例如 windicss(目前内置 JIT 后似乎差别不大，代确认)\n- [ ] postcss 和 npx 两种模式下的差异对比\n> 在 v3 版本，原子类不多时性能接近，需要在 demo 手动引入大量原子类，或者粗糙地写一个重构工具，跑在小程序项目上\n\n- [x] 全局样式只能作用于 page 级，无法作用到 component 级 [参考文档](https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html#%E5%85%A8%E5%B1%80%E6%A0%B7%E5%BC%8F%E4%B8%8E%E5%B1%80%E9%83%A8%E6%A0%B7%E5%BC%8F)\n- [x] 未来分包输出的粒度(page/component) ? 初步思路，按照分包划分，框架层，除主包页面，其余自动 import 分包原子类集合 (区别于目前 stylus 的显示操作)\n> 按分包维度输出，分包内页面做 import 即可，组件开启 apply-shared 就可以拿到\n\n- [x] 未来是否要修改老代码？如果要，是否考虑自动化重构工具\n> 未来会像 TypeScript 那样逐步改造并推动成为规范，重构工具待确认\n\n- [x] 自定义预设集的设计，以及未来是否以单独文档形式展示，甚至是提供一个 playground，能在原始 css 和类 tailwind 语法间进行双向转换\n- [x] 样式隔离\n> 利用 apply-shared 实现\n\n最重要的：融合 mpx 策略(分包策略，如何嵌入到目前的构建流程，如指令、cli)\n\n<a name=\"lFIct\"></a>\n### 第一轮沟通结果\n\n- 扫描 mpx 文件的过程中，记录原子类是在哪个分包下被使用，实现主包一份，每个分包一份的输出，在当前分包各页面 import 当前分包的原子类文件(测试：组件不用 import 就能拿到?)\n- 对于组件在多分包间使用的情况，如果开启 apply-shared 能够将 app.wxss 注入，则无需特殊处理，如果不能，则需要\n\n<a name=\"aHkMO\"></a>\n### 第一轮 TODO\n\n- [x] postcss 流程跑通\n- [x] 自定义预设集原理(以及 mpx issue 里提到的插件调研)\n- [x] 大量原子类时的生成性能\n- [x] JIT 开闭性能对比\n- ~~postcss 插件原理~~\n- ~~tailwind 原理~~\n- ~~mpx 原理~~\n   - ~~style-compiler (目前无需改动)~~\n   - ~~getPackageInfo~~\n\n<br />\n<a name=\"IKr9m\"></a>\n### 进度记录\n\n完善 demo\n\n- 能力：多分包，组件分层嵌套，组件跨分包共享\n- TODO: 模拟组件间无样式隔离时样式注入会产生 bug 的情况\n- 已验证：npx 执行无需安装 postcss\n- 待验证：验证 tailwind3 和 postcss8 在 mpx demo 上可以正常表现，并且 tailwind cli 形式比 tailwind2.x 有显著提升\n\n---\n\n<a name=\"AL1M9\"></a>\n## 第二阶段\n\n<a name=\"oyq06\"></a>\n### 第二轮疑问\n\n- [x] 是否应该新建一个页面和逻辑稍微复杂的 demo (主要目的是面面聚到，包括：组件嵌套、分包能力、组件在分包间共享、store 划分)，如果已有，是否应该做适当升级\n> 可以做，未来也可以考虑成为一个新的 mpx-example\n\n- [ ] 执行方式，loader 模式 or 手动执行 script 模式\n> 暂时手动执行 cli 模式\n\n- [ ] 全量扫描 mpx 过程中对分包的记录\n> 需要在denpendences 中进行修改，问题：如何在扫描过程中记录分包\n> 最直观的通过 changedContent(tailwind 全量扫描 mpx 后缀文件得到的路径数组)，或者通过正则来过滤分包\n\n- [ ] 能否做到，只有在修改 class 部分时，才自动执行 tailwind\n- [ ] tailwindcss cli 下的 watch 模式\n- [ ] apply-shared 是否会与原来的样式隔离有冲突\n- [ ] 是否应该强依赖于某个库，未来如果该库不维护，或者项目内无人跟进新特性，造成的影响是多少\n- [ ] 预设的嵌入模式\n- [ ] 直接写在 tailwind.config.js\n- [ ] 加在项目 build 流程\n- [ ] 以预设包形式独立\n- [ ] 模仿 taro，以 plugin 的形式接入，设置项直接写在 plugin 配置里\n\n<a name=\"DT8Mf\"></a>\n### 关于构建方式\n\n- postcss cli 和 tailwind cli 代码设计差异\n- 性能对比\n- tailwind cli 有完整的 glob 支持 [https://www.tailwindcss.cn/docs/just-in-time-mode#styles-rebuild-in-an-infinite-loop](https://www.tailwindcss.cn/docs/just-in-time-mode#styles-rebuild-in-an-infinite-loop)\n\n<a name=\"lNw0M\"></a>\n### 关于接入版本\n\n目前 tailwind3 和postcss8 在 mpx demo 均正常表现，并且 tailwind cli 速度比 v2 版本有较大提升，小程序项目将 postcss 升级到 8+ 有哪些阻力<br />autoprefixer 已被 postcss8 内置，结合 tailwind 是否有效，待验证\n\n<a name=\"iFkV5\"></a>\n### 关于分包策略\n\n直接与 tailwind 解耦，但需要对 h-[918px] 这种动态 class 语法做兼容处理\n\n<a name=\"dKVn6\"></a>\n### 关于复杂 class\n\nwindicss 可以在 template 中处理截断并用 js 处理 class, tailwind 不可能截断 class，把选择权交给使用者\n\n<a name=\"PTuvs\"></a>\n### 关于与处理器冲突\n\n后续改为扫描原生打包后的代码，解决了此问题\n\n<a name=\"sMYla\"></a>\n### 关于预设\n\n- 以什么形式维护\n   - 直接写在 tailwind.config.js\n   - 加到项目的 build 流程\n   - 以预设包的形式独立出来\n   - 模仿 taro、以 plugin 的形式接入，设置项直接写在 plugin 配置里\n- 可能需要自定义的属性\n   - 颜色、字体、背景...\n   - 图片...\n- 开发者自定义样式怎么组织\n   - 在 tailwind.css 处定义：最接近原生，但感觉不易于按照模块进行区分，可以按照模块再划分子目录后合并(能实现图片素材中的几种管理，例如只有一张图，想找到对应组件很难，集中管理之后就可以直接在相应文件夹的图片列表中找到，也需要耐心和运气)\n   - 像原来一样写死在组件内 style 里，但此时需要用传统 class 写法，想象一个自定义 className，可能会与原子类混用\n- 如果所有使用 css 特性，在 tailwind 中无对应 match rule，tailwind 中是否有提示，没有的话是不是要自己增加 warning(如何与自定义 class 的区别)\n\n<a name=\"WtYH8\"></a>\n### 关于抹平\n\n- 特殊符号 `./` 的抹平思路\n   - taro: 统一替换为下划线\n   - 其他框架：-div-、-dot-\n- theme 验证\n- variant 验证\n- corePlugin 验证\n- 需要写哪些 plugin\n\n<a name=\"uJrRH\"></a>\n### 测试 demo 及数据\n\n- mpx 是否需要，新增或对某个已有 demo 进行改造，增强能力，主要目的是面面俱到，包括组件嵌套、分包能力、组件在分包间共享、store 划分...\n- 性能测试数据\n- 大量原子类场景下的性能以及体积验证\n   - 从官网手动复制粘贴到 demo\n   - 提前写一个粗糙的重构工具，完成从 selector 到 class 拼接的映射，用到滴滴小程序上再做验证\n\n<a name=\"fWglg\"></a>\n### 第二轮沟通结果\n\n- 扫描 dist\n- 可以预见的优点\n   - 不需要再全量扫描 mpx 文件所有内容，而是只扫 template / wxml 部分，提升性能\n   - 基于打出来的原生小程序，利于开源\n   - 解决了如果扫描源文件，还需要扫描依赖中第三方业务的问题\n- postcss 升级\n- componentMapping\n- 非通用样式就以原生样式书写，尽量保持只有一份 config\n\n<a name=\"mBVIh\"></a>\n### 分包策略\n\n通过 node 脚本异步处理 dist/wx 下每一个分包，并在分包目录下输出样式文件\n> 注意：此处需要额外做一个处理，tailwind 扫描文件的依据是 config.content，所以例如扫描 subpackage1 时，需要将当前 config.content 动态处理成 `['./dist/wx/subpackage1/**/*.wxml']`，以此类推\n\n边界处理(是否要把 cli 内容给加到 node 脚本，粒度待讨论)\n\n- 分包 page 自动 import 当前分包打出的样式\n- 检查分包下所有 index.json 是否开启 apply-shared，没有则输出 warning 或者自动加上(添加 usingComponent 判断避免误伤)\n   - 待确定：如果用户之前的 styleIsolation 设置为其他值应该如何处理\n- 识别无 wxml 文件目录，跳过处理(是否借助 fast-glob，或者糅合 cli 流程)，或者等打出空目录之后，在公共样式提取阶段，对空文件进行删除\n- 识别非分包目录，统一按主包文件扫描处理(待确认是否 ok)\n\n<a name=\"L8grL\"></a>\n### 多分包共用原子类去重提重\n\n删除并提取每个分包下的公共原子类，并提升到主包或独立样式分包(孰优孰劣待验证，如果会导致主包超级大，就改到独立样式分包)<br />方案：以 postcss 插件形式<br />Q: 是否增加去重策略，比如用户可以自定义分包重复 n 次的类才会提取到主包，以达到动态调整主包样式体积到最佳的目的\n\nconfig 样式融合(怎样达到心智负担最低)<br />统一扫文件和记录 app.json 的方式(选择 fast-glob)<br />小程序只支持 import 相对路径<br />省略冗余操作，分包全扫，输出时全部获取\n\n- 关闭分包内除第一层的操作\n\n怎样区分主包和分包<br />策略模式优化<br />是否需要 import 主包样式<br />是否增加文件内部的重复判断(躲避 tailwind 或者其他原因产生的 bug)<br />原项目问题，未对主包做样式输出(只做了剔除处理)<br />粒度调整(重复 n 次)<br />是否应该保留 css 全量扫描，检测防止用户自定义 class 与 tailwind 命名冲突\n\n<a name=\"Pa3dt\"></a>\n### 动态值语法抹平\n\n参考：[https://www.tailwindcss.cn/docs/just-in-time-mode#arbitrary-value-support](https://www.tailwindcss.cn/docs/just-in-time-mode#arbitrary-value-support)<br />例如：色值，样式 url 等自定义样式可以直接写在方括号中，那么之前想的绝大部分需要自定义的场景都不需要了，工作就转换为怎样支持例如 `h-[918px]` `bg-[#1da1f1]` 这样的语法。如果解决成本很高，或者特别麻烦，则考虑\n\n- 不用动态值，混用原来的写法\n- 类似 taro 那样直接换用 windicss，windicss 可以直接支持 `h-[918px]` `bg-[#1da1f1]`\n\n<a name=\"F3TIi\"></a>\n### 自定义样式\n\n虽然 `[..]` 语法解决了绝大多数以前需要自定义的情况，但仍免不了开发时有可能需要手动自动义的情况，需要考虑自定义样式怎么写，会不会被覆盖的问题<br />初步拟定：只用一份 tailwind.config，再其下的分包划分子目录，对应分包的自定义样式放在对应文件下，最后全部合并(注：考虑第三方分包的情况)\n\n<a name=\"Hs7Ks\"></a>\n### 接入 windicss\n\n接入 windicss，让使用者可以自行选择\n\n<a name=\"GSCbG\"></a>\n### Tailwind cli 兼容\n\n问题升级：\n\n- 学习 tailwind cli 中 rebuild 的思路，实现 rebuild 速度提升\n- 如何兼容 cli 提供的配置\n\n<a name=\"W0ygJ\"></a>\n### demo 完善\n\n- 增加分包的组件目录\n- 增加测试的原子类数据\n\n<a name=\"QLhAw\"></a>\n### 自动重构工具\n\n有三种情况可能需要重构工具\n\n- 未来对滴滴小程序项目逐步重构\n- 正式重构前，可能需要先对小程序项目粗糙地进行全量改造(用于性能和体积测试，评估效益)\n- 方便外部使用者\n\n尽量使用自动化重构 + 人工 review 的方案<br />参考 tailwind，对样式表做反向映射\n\n<a name=\"gxBQI\"></a>\n### 确认版本\n\n需要确认滴滴小程序 postcss 的配套插件都有能升级并兼容到 v8+ 的版本\n<a name=\"Gwygs\"></a>\n### 第二轮进度\n\n提重插件接入适配<br />探究 windi 的 input file 数组实现<br />tailwind 中动态更改 config content<br />脚手架化，自定义 config 配置设计，ali argvs 注入原生脚手架设计<br />fast-glob & node-glob (windi使用)调研，将原方法改造为 glob 扫描<br />windi 接入<br />分包扫描概念确定<br />分包名可能是类似 a/b/c，所以最佳还是通过 app.json 拼出分包路径再进行扫描\n\n<a name=\"ejjFc\"></a>\n### 初步设想\n\n- 思路\n\n向外提供一套完整的原生小程序接入/重构 tailwind 方案(将以下能力集成并配置化)\n\n   - 用户可以选择切换 tailwind 模式或 windicss 模式\n   - 分包处理 + 公共样式提取(可配置场景：用户可以选择是否使用分包场景；可配置样式表生成方案，例如主包一份/分包各自一份/独立分包一份/指定分包输出)\n   - 更细化的小程序专用预设，以及提供给使用者更多的选择(解决动态值的抹平；针对 toB 和 toC 有格子定制场景，比如 toB 侧重复用模版，toC 侧重自定义值)\n   - 提供 demo + 配套的自动化重构工具\n   - 基于官方的 playground，写入自己的 config，然后生成分享链接，作为定制小程序语法的 playground\n> 适用场景：所有原生小程序 + 所有原小程序框架处理后打包出的原生小程序文件\n\n- 大致目录划分\n```markdown\n不知道取啥名              \n├── lib\n│ ├── processSubpackage.ts // 核心流程:按分包输出样式 + postcss插件提重         \n│ ├── accessWatch.ts       // watch & rebuild\n├── presets           // 针对小程序场景的内置预设\n│ ├── tailwindPreset  // tailwind 预设集\n│ └── windiPrset      // windicss 预设集\n├── customStyle       // 用户自定义原子类\n│ ├──subpackageName   // 根据app.json的扫描得到的分包自动生成目录\n├── utils             // 工具集\n│ ├── extractPlugin   // 用于提重的postcss插件\n│ ├── refactHelper    // 自动重构工具\n├── config.ts         // 用户配置文件(例如选择tail或windi/是否分包处理)\n├── index.ts          // config.js 处理 & cli配置\n└── example           // demo(自带分包+测试类)\n```\n\n- 优点\n   - 基于原生，适用全场景，与小程序框架解耦\n   - 基于 tailwind cli 和 windicss cli 上层封装，与 tailwind 和 windicss 源码本身解耦，可以随时间同步新特性\n   - 高度自定义(将特性都做成用户可配置，例如样式库选择，分包输出策略 ，去重策略等)\n   - 提供重构工具，快速改造旧项目\n\n<a name=\"gCEGD\"></a>\n### 对当前最佳实践的探索\n\n- vscode 插件：Tailwind Css IntelliSense 关联 mpx 以及 wxml\n- 组件拿到页面样式：`\"stylelsolation\": \"apply-shared\"`\n- demo 目前在 node v14.18.0 下不会报错\n\n<a name=\"ibiyG\"></a>\n## 第三阶段\n\n- 问题\n   - 可调试性变差，之前可以直接在开发者工具增删改 css\n   - windicss 给 web 调试提供了 windi:devtools，待验证小程序中是否生效\n   - watch 提速\n   - 增加 debug 模式，例如开启核心变量 console，debugger\n\n<a name=\"unLPb\"></a>\n# 附\n<a name=\"taezl\"></a>\n## 参考文档\n\n系列文章：[https://developers.weixin.qq.com/community/personal/oCJUsw1GWHOwOLn7MZ4Rbb8T-FVE](https://developers.weixin.qq.com/community/personal/oCJUsw1GWHOwOLn7MZ4Rbb8T-FVE)<br />purge 分析：[https://gitee.com/sl1673495/pictures/issues/I3CJER?_from=gitee_search](https://gitee.com/sl1673495/pictures/issues/I3CJER?_from=gitee_search)<br />小程序文档-样式隔离：[https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html](https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html)\n<a name=\"TzYwE\"></a>\n## 参考仓库及分支\ndemo：[https://github.com/gloomyKevin/mpx-example-king](https://github.com/gloomyKevin/mpx-example-king)\n\n- features 集成分支：dev\n- 预设：[https://github.com/gloomyKevin/tailwindcss-miniprogram-preset](https://github.com/gloomyKevin/tailwindcss-miniprogram-preset)\n- fork 下来后独立发包：[https://www.npmjs.com/package/mpx-tailwindcss-preset](https://www.npmjs.com/package/mpx-tailwindcss-preset)\n\n当前版本：2.1.4\n\n- 插件：[https://github.com/theowenyoung/mini-tailwind](https://github.com/theowenyoung/mini-tailwind)\n- 新版 taro 插件：[https://github.com/pcdotfan/taro-plugin-tailwind](https://github.com/pcdotfan/taro-plugin-tailwind)\n- 旧版 taro 插件：[https://github.com/windedge/taro-tailwind](https://github.com/windedge/taro-tailwind)\n",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"WZxVH\"><span class=\"ne-text\">第一阶段</span></h2><p id=\"u998d8fd0\" class=\"ne-p\"><br></p><h3 id=\"lsGay\"><span class=\"ne-text\">第一轮疑问</span></h3><p id=\"u91f66a36\" class=\"ne-p\"><br></p><ul class=\"ne-tl\"><li id=\"u5f38f900\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">兼容性(兼容到哪个版本/特性的 tailwind / postcss)，这决定了未来 fork 哪个仓库哪个版本</span></li></ul><div class=\"ne-quote\"><p id=\"ua71dd455\" class=\"ne-p\"><span class=\"ne-text\">最新版本，tailwind 和 windicss 同时支持</span></p></div><ul class=\"ne-tl\"><li id=\"u154039bc\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">类 tailwind 库的调研以及是否适配，例如 windicss(目前内置 JIT 后似乎差别不大，代确认)</span></li><li id=\"ue6576bc8\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">postcss 和 npx 两种模式下的差异对比</span></li></ul><div class=\"ne-quote\"><p id=\"u527a368e\" class=\"ne-p\"><span class=\"ne-text\">在 v3 版本，原子类不多时性能接近，需要在 demo 手动引入大量原子类，或者粗糙地写一个重构工具，跑在小程序项目上</span></p></div><ul class=\"ne-tl\"><li id=\"uf718f1dd\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">全局样式只能作用于 page 级，无法作用到 component 级 </span><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html#%E5%85%A8%E5%B1%80%E6%A0%B7%E5%BC%8F%E4%B8%8E%E5%B1%80%E9%83%A8%E6%A0%B7%E5%BC%8F\" data-href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html#%E5%85%A8%E5%B1%80%E6%A0%B7%E5%BC%8F%E4%B8%8E%E5%B1%80%E9%83%A8%E6%A0%B7%E5%BC%8F\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">参考文档</span></a></li><li id=\"u64c76f14\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">未来分包输出的粒度(page/component) ? 初步思路，按照分包划分，框架层，除主包页面，其余自动 import 分包原子类集合 (区别于目前 stylus 的显示操作)</span></li></ul><div class=\"ne-quote\"><p id=\"ufb5eb420\" class=\"ne-p\"><span class=\"ne-text\">按分包维度输出，分包内页面做 import 即可，组件开启 apply-shared 就可以拿到</span></p></div><ul class=\"ne-tl\"><li id=\"ua7cad5eb\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">未来是否要修改老代码？如果要，是否考虑自动化重构工具</span></li></ul><div class=\"ne-quote\"><p id=\"uc448f7b1\" class=\"ne-p\"><span class=\"ne-text\">未来会像 TypeScript 那样逐步改造并推动成为规范，重构工具待确认</span></p></div><ul class=\"ne-tl\"><li id=\"u91e452c0\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">自定义预设集的设计，以及未来是否以单独文档形式展示，甚至是提供一个 playground，能在原始 css 和类 tailwind 语法间进行双向转换</span></li><li id=\"u7f0ddce4\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">样式隔离</span></li></ul><div class=\"ne-quote\"><p id=\"u51c9438b\" class=\"ne-p\"><span class=\"ne-text\">利用 apply-shared 实现</span></p></div><p id=\"u3a97ffa7\" class=\"ne-p\"><span class=\"ne-text\">最重要的：融合 mpx 策略(分包策略，如何嵌入到目前的构建流程，如指令、cli)</span></p><p id=\"u133654c2\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"lFIct\"><span class=\"ne-text\">第一轮沟通结果</span></h3><p id=\"udfeb8aa0\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uf6bf382a\"><span class=\"ne-text\">扫描 mpx 文件的过程中，记录原子类是在哪个分包下被使用，实现主包一份，每个分包一份的输出，在当前分包各页面 import 当前分包的原子类文件(测试：组件不用 import 就能拿到?)</span></li><li id=\"ucc249315\"><span class=\"ne-text\">对于组件在多分包间使用的情况，如果开启 apply-shared 能够将 app.wxss 注入，则无需特殊处理，如果不能，则需要</span></li></ul><p id=\"ub34e49c3\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"aHkMO\"><span class=\"ne-text\">第一轮 TODO</span></h3><p id=\"u60054476\" class=\"ne-p\"><br></p><ul class=\"ne-tl\"><li id=\"u9c50c838\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">postcss 流程跑通</span></li><li id=\"u612c8a29\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">自定义预设集原理(以及 mpx issue 里提到的插件调研)</span></li></ul><ul class=\"ne-tl\"><li id=\"u7621d80c\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">大量原子类时的生成性能</span></li><li id=\"u46191a8e\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">JIT 开闭性能对比</span></li></ul><ul class=\"ne-ul\"><li id=\"uf64b3c83\"><span class=\"ne-text\" style=\"text-decoration: line-through\">postcss 插件原理</span></li><li id=\"uf950cedc\"><span class=\"ne-text\" style=\"text-decoration: line-through\">tailwind 原理</span></li></ul><ul class=\"ne-ul\"><li id=\"uc4426010\"><span class=\"ne-text\" style=\"text-decoration: line-through\">mpx 原理</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uca65fdfc\"><span class=\"ne-text\" style=\"text-decoration: line-through\">style-compiler (目前无需改动)</span></li><li id=\"uaf04df4c\"><span class=\"ne-text\" style=\"text-decoration: line-through\">getPackageInfo</span></li></ul></ul><p id=\"ue8369531\" class=\"ne-p\"><span class=\"ne-text\" style=\"text-decoration: line-through\"></span></p><h3 id=\"IKr9m\"><span class=\"ne-text\">进度记录</span></h3><p id=\"ue3904827\" class=\"ne-p\"><br></p><p id=\"u3521b61c\" class=\"ne-p\"><span class=\"ne-text\">完善 demo</span></p><ul class=\"ne-ul\"><li id=\"ue99024c1\"><span class=\"ne-text\">能力：多分包，组件分层嵌套，组件跨分包共享</span></li><li id=\"u52a83fe6\"><span class=\"ne-text\">TODO: 模拟组件间无样式隔离时样式注入会产生 bug 的情况</span></li></ul><ul class=\"ne-ul\"><li id=\"u9c59c440\"><span class=\"ne-text\">已验证：npx 执行无需安装 postcss</span></li><li id=\"ua579d1c0\"><span class=\"ne-text\">待验证：验证 tailwind3 和 postcss8 在 mpx demo 上可以正常表现，并且 tailwind cli 形式比 tailwind2.x 有显著提升</span></li></ul><p id=\"u6dfd5682\" class=\"ne-p\"><span class=\"ne-text\"></span></p><hr id=\"c3WV8\" class=\"ne-hr\"><h2 id=\"AL1M9\"><span class=\"ne-text\">第二阶段</span></h2><p id=\"u49e577e9\" class=\"ne-p\"><br></p><h3 id=\"oyq06\"><span class=\"ne-text\">第二轮疑问</span></h3><p id=\"u55d9541d\" class=\"ne-p\"><br></p><ul class=\"ne-tl\"><li id=\"uf0b1fb0f\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">✅</span><span class=\"ne-text\">是否应该新建一个页面和逻辑稍微复杂的 demo (主要目的是面面聚到，包括：组件嵌套、分包能力、组件在分包间共享、store 划分)，如果已有，是否应该做适当升级</span></li></ul><div class=\"ne-quote\"><p id=\"u9f77400d\" class=\"ne-p\"><span class=\"ne-text\">可以做，未来也可以考虑成为一个新的 mpx-example</span></p></div><ul class=\"ne-tl\"><li id=\"u92449094\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">执行方式，loader 模式 or 手动执行 script 模式</span></li></ul><div class=\"ne-quote\"><p id=\"ufab44cdf\" class=\"ne-p\"><span class=\"ne-text\">暂时手动执行 cli 模式</span></p></div><ul class=\"ne-tl\"><li id=\"u10343490\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">全量扫描 mpx 过程中对分包的记录</span></li></ul><div class=\"ne-quote\"><p id=\"u84493644\" class=\"ne-p\"><span class=\"ne-text\">需要在denpendences 中进行修改，问题：如何在扫描过程中记录分包</span></p><p id=\"uac6a3438\" class=\"ne-p\"><span class=\"ne-text\">最直观的通过 changedContent(tailwind 全量扫描 mpx 后缀文件得到的路径数组)，或者通过正则来过滤分包</span></p></div><ul class=\"ne-tl\"><li id=\"u033e2469\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">能否做到，只有在修改 class 部分时，才自动执行 tailwind</span></li><li id=\"u1c9599d0\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">tailwindcss cli 下的 watch 模式</span></li></ul><ul class=\"ne-tl\"><li id=\"ud953b42f\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">apply-shared 是否会与原来的样式隔离有冲突</span></li><li id=\"uc3360452\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">是否应该强依赖于某个库，未来如果该库不维护，或者项目内无人跟进新特性，造成的影响是多少</span></li></ul><ul class=\"ne-tl\"><li id=\"u943666b9\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">预设的嵌入模式</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-tl\"><li id=\"u522d98f0\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">直接写在 tailwind.config.js</span></li><li id=\"u571a064d\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">加在项目 build 流程</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-tl\"><li id=\"u7d167282\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">以预设包形式独立</span></li><li id=\"u7185994b\"><span class=\"ne-tli-symbol\" style=\"margin: 3px 0.5ex; vertical-align: middle\">🔲</span><span class=\"ne-text\">模仿 taro，以 plugin 的形式接入，设置项直接写在 plugin 配置里</span></li></ul></ul><p id=\"ud2975c75\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"DT8Mf\"><span class=\"ne-text\">关于构建方式</span></h3><p id=\"u607b91df\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u0caa4096\"><span class=\"ne-text\">postcss cli 和 tailwind cli 代码设计差异</span></li><li id=\"u5ec92205\"><span class=\"ne-text\">性能对比</span></li></ul><ul class=\"ne-ul\"><li id=\"u8f1d03cf\"><span class=\"ne-text\">tailwind cli 有完整的 glob 支持 </span><a href=\"https://www.tailwindcss.cn/docs/just-in-time-mode#styles-rebuild-in-an-infinite-loop\" data-href=\"https://www.tailwindcss.cn/docs/just-in-time-mode#styles-rebuild-in-an-infinite-loop\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://www.tailwindcss.cn/docs/just-in-time-mode#styles-rebuild-in-an-infinite-loop</span></a></li></ul><p id=\"u61351c36\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"lNw0M\"><span class=\"ne-text\">关于接入版本</span></h3><p id=\"u59efe23b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u1000a967\" class=\"ne-p\"><span class=\"ne-text\">目前 tailwind3 和postcss8 在 mpx demo 均正常表现，并且 tailwind cli 速度比 v2 版本有较大提升，小程序项目将 postcss 升级到 8+ 有哪些阻力</span></p><p id=\"ucf78a6b8\" class=\"ne-p\"><span class=\"ne-text\">autoprefixer 已被 postcss8 内置，结合 tailwind 是否有效，待验证</span></p><p id=\"u8f154f38\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"iFkV5\"><span class=\"ne-text\">关于分包策略</span></h3><p id=\"uce530493\" class=\"ne-p\"><br></p><p id=\"u6785f844\" class=\"ne-p\"><span class=\"ne-text\">直接与 tailwind 解耦，但需要对 h-[918px] 这种动态 class 语法做兼容处理</span></p><p id=\"u0102172a\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"dKVn6\"><span class=\"ne-text\">关于复杂 class</span></h3><p id=\"uf8926a3c\" class=\"ne-p\"><br></p><p id=\"u3550bb00\" class=\"ne-p\"><span class=\"ne-text\">windicss 可以在 template 中处理截断并用 js 处理 class, tailwind 不可能截断 class，把选择权交给使用者</span></p><p id=\"u1f4ad01b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"PTuvs\"><span class=\"ne-text\">关于与处理器冲突</span></h3><p id=\"u694df23d\" class=\"ne-p\"><br></p><p id=\"u122d6053\" class=\"ne-p\"><span class=\"ne-text\">后续改为扫描原生打包后的代码，解决了此问题</span></p><p id=\"u6e718533\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"sMYla\"><span class=\"ne-text\">关于预设</span></h3><p id=\"uafeef18d\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uc003a770\"><span class=\"ne-text\">以什么形式维护</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ud219a8d4\"><span class=\"ne-text\">直接写在 tailwind.config.js</span></li><li id=\"u7b61be15\"><span class=\"ne-text\">加到项目的 build 流程</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ua1cc6b00\"><span class=\"ne-text\">以预设包的形式独立出来</span></li><li id=\"u9faff0b9\"><span class=\"ne-text\">模仿 taro、以 plugin 的形式接入，设置项直接写在 plugin 配置里</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ubfd4d5d5\"><span class=\"ne-text\">可能需要自定义的属性</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u567220a3\"><span class=\"ne-text\">颜色、字体、背景...</span></li><li id=\"u19ba6a3a\"><span class=\"ne-text\">图片...</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"u6e35e295\"><span class=\"ne-text\">开发者自定义样式怎么组织</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u716e9eb9\"><span class=\"ne-text\">在 tailwind.css 处定义：最接近原生，但感觉不易于按照模块进行区分，可以按照模块再划分子目录后合并(能实现图片素材中的几种管理，例如只有一张图，想找到对应组件很难，集中管理之后就可以直接在相应文件夹的图片列表中找到，也需要耐心和运气)</span></li><li id=\"u184da34a\"><span class=\"ne-text\">像原来一样写死在组件内 style 里，但此时需要用传统 class 写法，想象一个自定义 className，可能会与原子类混用</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ue05f1a67\"><span class=\"ne-text\">如果所有使用 css 特性，在 tailwind 中无对应 match rule，tailwind 中是否有提示，没有的话是不是要自己增加 warning(如何与自定义 class 的区别)</span></li></ul><p id=\"u3bb95b3d\" class=\"ne-p\"><br></p><h3 id=\"WtYH8\"><span class=\"ne-text\">关于抹平</span></h3><p id=\"uaf2ac613\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u3325e3ac\"><span class=\"ne-text\">特殊符号 </span><code class=\"ne-code\"><span class=\"ne-text\">./</span></code><span class=\"ne-text\"> 的抹平思路</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uacf977d7\"><span class=\"ne-text\">taro: 统一替换为下划线</span></li><li id=\"u0be2832a\"><span class=\"ne-text\">其他框架：-div-、-dot-</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"uf2cc3cea\"><span class=\"ne-text\">theme 验证</span></li><li id=\"ufd6bb0fc\"><span class=\"ne-text\">variant 验证</span></li></ul><ul class=\"ne-ul\"><li id=\"u1e0859bd\"><span class=\"ne-text\">corePlugin 验证</span></li><li id=\"ua9e61b70\"><span class=\"ne-text\">需要写哪些 plugin</span></li></ul><p id=\"uadbe702c\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"uJrRH\"><span class=\"ne-text\">测试 demo 及数据</span></h3><p id=\"u2af7c908\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uc437888c\"><span class=\"ne-text\">mpx 是否需要，新增或对某个已有 demo 进行改造，增强能力，主要目的是面面俱到，包括组件嵌套、分包能力、组件在分包间共享、store 划分...</span></li><li id=\"u335113fd\"><span class=\"ne-text\">性能测试数据</span></li></ul><ul class=\"ne-ul\"><li id=\"ua1e0074a\"><span class=\"ne-text\">大量原子类场景下的性能以及体积验证</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ud7b1c83d\"><span class=\"ne-text\">从官网手动复制粘贴到 demo</span></li><li id=\"uaf454208\"><span class=\"ne-text\">提前写一个粗糙的重构工具，完成从 selector 到 class 拼接的映射，用到滴滴小程序上再做验证</span></li></ul></ul><p id=\"ue2ad55cc\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"fWglg\"><span class=\"ne-text\">第二轮沟通结果</span></h3><p id=\"u5438e776\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uf0ed8b76\"><span class=\"ne-text\">扫描 dist</span></li><li id=\"u231e2570\"><span class=\"ne-text\">可以预见的优点</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u95350c37\"><span class=\"ne-text\">不需要再全量扫描 mpx 文件所有内容，而是只扫 template / wxml 部分，提升性能</span></li><li id=\"u862391aa\"><span class=\"ne-text\">基于打出来的原生小程序，利于开源</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u0f4d40f6\"><span class=\"ne-text\">解决了如果扫描源文件，还需要扫描依赖中第三方业务的问题</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ua17d563d\"><span class=\"ne-text\">postcss 升级</span></li><li id=\"u04563c2c\"><span class=\"ne-text\">componentMapping</span></li></ul><ul class=\"ne-ul\"><li id=\"u8103510b\"><span class=\"ne-text\">非通用样式就以原生样式书写，尽量保持只有一份 config</span></li></ul><p id=\"u52b5879b\" class=\"ne-p\"><br></p><h3 id=\"mBVIh\"><span class=\"ne-text\">分包策略</span></h3><p id=\"u3ee2fbd8\" class=\"ne-p\"><br></p><p id=\"ue1a63ef0\" class=\"ne-p\"><span class=\"ne-text\">通过 node 脚本异步处理 dist/wx 下每一个分包，并在分包目录下输出样式文件</span></p><div class=\"ne-quote\"><p id=\"u2f4df015\" class=\"ne-p\"><span class=\"ne-text\">注意：此处需要额外做一个处理，tailwind 扫描文件的依据是 config.content，所以例如扫描 subpackage1 时，需要将当前 config.content 动态处理成 </span><code class=\"ne-code\"><span class=\"ne-text\">['./dist/wx/subpackage1/**/*.wxml']</span></code><span class=\"ne-text\">，以此类推</span></p></div><p id=\"u57cf29c8\" class=\"ne-p\"><span class=\"ne-text\">边界处理(是否要把 cli 内容给加到 node 脚本，粒度待讨论)</span></p><ul class=\"ne-ul\"><li id=\"u186a6f41\"><span class=\"ne-text\">分包 page 自动 import 当前分包打出的样式</span></li><li id=\"u7f8ed26b\"><span class=\"ne-text\">检查分包下所有 index.json 是否开启 apply-shared，没有则输出 warning 或者自动加上(添加 usingComponent 判断避免误伤)</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u6b4fdb60\"><span class=\"ne-text\">待确定：如果用户之前的 styleIsolation 设置为其他值应该如何处理</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ua7517847\"><span class=\"ne-text\">识别无 wxml 文件目录，跳过处理(是否借助 fast-glob，或者糅合 cli 流程)，或者等打出空目录之后，在公共样式提取阶段，对空文件进行删除</span></li><li id=\"u3c76d483\"><span class=\"ne-text\">识别非分包目录，统一按主包文件扫描处理(待确认是否 ok)</span></li></ul><p id=\"udf9ef149\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"L8grL\"><span class=\"ne-text\">多分包共用原子类去重提重</span></h3><p id=\"u9d5f4068\" class=\"ne-p\"><br></p><p id=\"uc8911e51\" class=\"ne-p\"><span class=\"ne-text\">删除并提取每个分包下的公共原子类，并提升到主包或独立样式分包(孰优孰劣待验证，如果会导致主包超级大，就改到独立样式分包)</span></p><p id=\"ud438ae64\" class=\"ne-p\"><span class=\"ne-text\">方案：以 postcss 插件形式</span></p><p id=\"uc64a75ef\" class=\"ne-p\"><span class=\"ne-text\">Q: 是否增加去重策略，比如用户可以自定义分包重复 n 次的类才会提取到主包，以达到动态调整主包样式体积到最佳的目的</span></p><p id=\"uab0e8dc0\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"uc3383c08\" class=\"ne-p\"><span class=\"ne-text\">config 样式融合(怎样达到心智负担最低)</span></p><p id=\"uc1128ec3\" class=\"ne-p\"><span class=\"ne-text\">统一扫文件和记录 app.json 的方式(选择 fast-glob)</span></p><p id=\"u2855c420\" class=\"ne-p\"><span class=\"ne-text\">小程序只支持 import 相对路径</span></p><p id=\"uc9844e41\" class=\"ne-p\"><span class=\"ne-text\">省略冗余操作，分包全扫，输出时全部获取</span></p><p id=\"u585ee9d7\" class=\"ne-p\"><span class=\"ne-text\"></span></p><ul class=\"ne-ul\"><li id=\"u2ed05348\"><span class=\"ne-text\">关闭分包内除第一层的操作</span></li></ul><p id=\"ue7dfb31e\" class=\"ne-p\"><span class=\"ne-text\">怎样区分主包和分包</span></p><p id=\"ua8714648\" class=\"ne-p\"><span class=\"ne-text\">策略模式优化</span></p><p id=\"ufa02711b\" class=\"ne-p\"><span class=\"ne-text\">是否需要 import 主包样式</span></p><p id=\"u37587513\" class=\"ne-p\"><span class=\"ne-text\">是否增加文件内部的重复判断(躲避 tailwind 或者其他原因产生的 bug)</span></p><p id=\"u691e03bc\" class=\"ne-p\"><span class=\"ne-text\">原项目问题，未对主包做样式输出(只做了剔除处理)</span></p><p id=\"u1f57e15c\" class=\"ne-p\"><span class=\"ne-text\">粒度调整(重复 n 次)</span></p><p id=\"uc0c46dba\" class=\"ne-p\"><span class=\"ne-text\">是否应该保留 css 全量扫描，检测防止用户自定义 class 与 tailwind 命名冲突</span></p><p id=\"uffbc8f4d\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"Pa3dt\"><span class=\"ne-text\">动态值语法抹平</span></h3><p id=\"ubd105e37\" class=\"ne-p\"><br></p><p id=\"u912f5524\" class=\"ne-p\"><span class=\"ne-text\">参考：</span><a href=\"https://www.tailwindcss.cn/docs/just-in-time-mode#arbitrary-value-support\" data-href=\"https://www.tailwindcss.cn/docs/just-in-time-mode#arbitrary-value-support\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://www.tailwindcss.cn/docs/just-in-time-mode#arbitrary-value-support</span></a></p><p id=\"u56d3a522\" class=\"ne-p\"><span class=\"ne-text\">例如：色值，样式 url 等自定义样式可以直接写在方括号中，那么之前想的绝大部分需要自定义的场景都不需要了，工作就转换为怎样支持例如 </span><code class=\"ne-code\"><span class=\"ne-text\">h-[918px]</span></code><span class=\"ne-text\"> </span><code class=\"ne-code\"><span class=\"ne-text\">bg-[#1da1f1]</span></code><span class=\"ne-text\"> 这样的语法。如果解决成本很高，或者特别麻烦，则考虑</span></p><ul class=\"ne-ul\"><li id=\"u42dbb2e9\"><span class=\"ne-text\">不用动态值，混用原来的写法</span></li><li id=\"ua5ceef24\"><span class=\"ne-text\">类似 taro 那样直接换用 windicss，windicss 可以直接支持 </span><code class=\"ne-code\"><span class=\"ne-text\">h-[918px]</span></code><span class=\"ne-text\"> </span><code class=\"ne-code\"><span class=\"ne-text\">bg-[#1da1f1]</span></code></li></ul><p id=\"u17e119c0\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"F3TIi\"><span class=\"ne-text\">自定义样式</span></h3><p id=\"u872be3ce\" class=\"ne-p\"><br></p><p id=\"ud54a9acf\" class=\"ne-p\"><span class=\"ne-text\">虽然 </span><code class=\"ne-code\"><span class=\"ne-text\">[..]</span></code><span class=\"ne-text\"> 语法解决了绝大多数以前需要自定义的情况，但仍免不了开发时有可能需要手动自动义的情况，需要考虑自定义样式怎么写，会不会被覆盖的问题</span></p><p id=\"ucb1ff613\" class=\"ne-p\"><span class=\"ne-text\">初步拟定：只用一份 tailwind.config，再其下的分包划分子目录，对应分包的自定义样式放在对应文件下，最后全部合并(注：考虑第三方分包的情况)</span></p><p id=\"u370fbe3e\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"Hs7Ks\"><span class=\"ne-text\">接入 windicss</span></h3><p id=\"u0243b962\" class=\"ne-p\"><br></p><p id=\"ube5e0135\" class=\"ne-p\"><span class=\"ne-text\">接入 windicss，让使用者可以自行选择</span></p><p id=\"ue571a7a2\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"GSCbG\"><span class=\"ne-text\">Tailwind cli 兼容</span></h3><p id=\"uc353539b\" class=\"ne-p\"><br></p><p id=\"u59c97d2a\" class=\"ne-p\"><span class=\"ne-text\">问题升级：</span></p><ul class=\"ne-ul\"><li id=\"ub0556683\"><span class=\"ne-text\">学习 tailwind cli 中 rebuild 的思路，实现 rebuild 速度提升</span></li><li id=\"u53fd154b\"><span class=\"ne-text\">如何兼容 cli 提供的配置</span></li></ul><p id=\"u9cdd8aca\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"W0ygJ\"><span class=\"ne-text\">demo 完善</span></h3><p id=\"u79add53c\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u822b6bb8\"><span class=\"ne-text\">增加分包的组件目录</span></li><li id=\"uae7aba44\"><span class=\"ne-text\">增加测试的原子类数据</span></li></ul><p id=\"uc6c8e947\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"QLhAw\"><span class=\"ne-text\">自动重构工具</span></h3><p id=\"ufde413b2\" class=\"ne-p\"><br></p><p id=\"ud98af8bc\" class=\"ne-p\"><span class=\"ne-text\">有三种情况可能需要重构工具</span></p><ul class=\"ne-ul\"><li id=\"u7c5f49ac\"><span class=\"ne-text\">未来对滴滴小程序项目逐步重构</span></li><li id=\"u10f6f9c9\"><span class=\"ne-text\">正式重构前，可能需要先对小程序项目粗糙地进行全量改造(用于性能和体积测试，评估效益)</span></li></ul><ul class=\"ne-ul\"><li id=\"u74b9f82b\"><span class=\"ne-text\">方便外部使用者</span></li></ul><p id=\"u096546b9\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u7ecf512e\" class=\"ne-p\"><span class=\"ne-text\">尽量使用自动化重构 + 人工 review 的方案</span></p><p id=\"u8d29b432\" class=\"ne-p\"><span class=\"ne-text\">参考 tailwind，对样式表做反向映射</span></p><p id=\"ud9402d44\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"gxBQI\"><span class=\"ne-text\">确认版本</span></h3><p id=\"u2f943242\" class=\"ne-p\"><br></p><p id=\"u87a3d08b\" class=\"ne-p\"><span class=\"ne-text\">需要确认滴滴小程序 postcss 的配套插件都有能升级并兼容到 v8+ 的版本</span></p><h3 id=\"Gwygs\"><span class=\"ne-text\">第二轮进度</span></h3><p id=\"u45721407\" class=\"ne-p\"><br></p><p id=\"uf74020b3\" class=\"ne-p\"><span class=\"ne-text\">提重插件接入适配</span></p><p id=\"u3dc2154d\" class=\"ne-p\"><span class=\"ne-text\">探究 windi 的 input file 数组实现</span></p><p id=\"ua71e22b5\" class=\"ne-p\"><span class=\"ne-text\">tailwind 中动态更改 config content</span></p><p id=\"ue9bac68c\" class=\"ne-p\"><span class=\"ne-text\">脚手架化，自定义 config 配置设计，ali argvs 注入原生脚手架设计</span></p><p id=\"u30aa6db5\" class=\"ne-p\"><span class=\"ne-text\">fast-glob &amp; node-glob (windi使用)调研，将原方法改造为 glob 扫描</span></p><p id=\"u6a7c01e6\" class=\"ne-p\"><span class=\"ne-text\">windi 接入</span></p><p id=\"u43dbed7e\" class=\"ne-p\"><span class=\"ne-text\">分包扫描概念确定</span></p><p id=\"u7a0f5678\" class=\"ne-p\"><span class=\"ne-text\">分包名可能是类似 a/b/c，所以最佳还是通过 app.json 拼出分包路径再进行扫描</span></p><p id=\"u2e78e193\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"ejjFc\"><span class=\"ne-text\">初步设想</span></h3><p id=\"u63248c51\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u98b94c40\"><span class=\"ne-text\">思路</span></li></ul><p id=\"uefbdf92c\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u150d06c7\" class=\"ne-p\"><span class=\"ne-text\">向外提供一套完整的原生小程序接入/重构 tailwind 方案(将以下能力集成并配置化)</span></p><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u6fd793d7\"><span class=\"ne-text\">用户可以选择切换 tailwind 模式或 windicss 模式</span></li><li id=\"u1cf964b1\"><span class=\"ne-text\">分包处理 + 公共样式提取(可配置场景：用户可以选择是否使用分包场景；可配置样式表生成方案，例如主包一份/分包各自一份/独立分包一份/指定分包输出)</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u97dd515a\"><span class=\"ne-text\">更细化的小程序专用预设，以及提供给使用者更多的选择(解决动态值的抹平；针对 toB 和 toC 有格子定制场景，比如 toB 侧重复用模版，toC 侧重自定义值)</span></li><li id=\"u06b9dcb3\"><span class=\"ne-text\">提供 demo + 配套的自动化重构工具</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u81a8a421\"><span class=\"ne-text\">基于官方的 playground，写入自己的 config，然后生成分享链接，作为定制小程序语法的 playground</span></li></ul></ul><div class=\"ne-quote\"><p id=\"uebdf8416\" class=\"ne-p\"><span class=\"ne-text\">适用场景：所有原生小程序 + 所有原小程序框架处理后打包出的原生小程序文件</span></p></div><ul class=\"ne-ul\"><li id=\"u4944e133\"><span class=\"ne-text\">大致目录划分</span></li></ul><pre data-language=\"markdown\" id=\"vp0Wh\" class=\"ne-codeblock language-markdown\">不知道取啥名              \n├── lib\n│ ├── processSubpackage.ts // 核心流程:按分包输出样式 + postcss插件提重         \n│ ├── accessWatch.ts       // watch &amp; rebuild\n├── presets           // 针对小程序场景的内置预设\n│ ├── tailwindPreset  // tailwind 预设集\n│ └── windiPrset      // windicss 预设集\n├── customStyle       // 用户自定义原子类\n│ ├──subpackageName   // 根据app.json的扫描得到的分包自动生成目录\n├── utils             // 工具集\n│ ├── extractPlugin   // 用于提重的postcss插件\n│ ├── refactHelper    // 自动重构工具\n├── config.ts         // 用户配置文件(例如选择tail或windi/是否分包处理)\n├── index.ts          // config.js 处理 &amp; cli配置\n└── example           // demo(自带分包+测试类)</pre><ul class=\"ne-ul\"><li id=\"ub49b2b7a\"><span class=\"ne-text\">优点</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u53476e16\"><span class=\"ne-text\">基于原生，适用全场景，与小程序框架解耦</span></li><li id=\"u73723673\"><span class=\"ne-text\">基于 tailwind cli 和 windicss cli 上层封装，与 tailwind 和 windicss 源码本身解耦，可以随时间同步新特性</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u06d9c008\"><span class=\"ne-text\">高度自定义(将特性都做成用户可配置，例如样式库选择，分包输出策略 ，去重策略等)</span></li><li id=\"u3b7c45d7\"><span class=\"ne-text\">提供重构工具，快速改造旧项目</span></li></ul></ul><p id=\"u3c86db2f\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h3 id=\"gCEGD\"><span class=\"ne-text\">对当前最佳实践的探索</span></h3><p id=\"u8a56dc15\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u6d1b14c6\"><span class=\"ne-text\">vscode 插件：Tailwind Css IntelliSense 关联 mpx 以及 wxml</span></li><li id=\"ufbb871e2\"><span class=\"ne-text\">组件拿到页面样式：</span><code class=\"ne-code\"><span class=\"ne-text\">&quot;stylelsolation&quot;: &quot;apply-shared&quot;</span></code></li></ul><ul class=\"ne-ul\"><li id=\"u8b6abab6\"><span class=\"ne-text\">demo 目前在 node v14.18.0 下不会报错</span></li></ul><p id=\"ude99afc3\" class=\"ne-p\"><br></p><h2 id=\"ibiyG\"><span class=\"ne-text\">第三阶段</span></h2><p id=\"u1dc98ee4\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u5d344447\"><span class=\"ne-text\">问题</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ub9a7b3ae\"><span class=\"ne-text\">可调试性变差，之前可以直接在开发者工具增删改 css</span></li><li id=\"u830b2283\"><span class=\"ne-text\">windicss 给 web 调试提供了 windi:devtools，待验证小程序中是否生效</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u9a29bf9a\"><span class=\"ne-text\">watch 提速</span></li><li id=\"u5cacc13a\"><span class=\"ne-text\">增加 debug 模式，例如开启核心变量 console，debugger</span></li></ul></ul><p id=\"uc312bbf5\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h1 id=\"unLPb\"><span class=\"ne-text\">附</span></h1><h2 id=\"taezl\"><span class=\"ne-text\">参考文档</span></h2><p id=\"u16a1a48e\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ud8f0c44d\" class=\"ne-p\"><span class=\"ne-text\">系列文章：</span><a href=\"https://developers.weixin.qq.com/community/personal/oCJUsw1GWHOwOLn7MZ4Rbb8T-FVE\" data-href=\"https://developers.weixin.qq.com/community/personal/oCJUsw1GWHOwOLn7MZ4Rbb8T-FVE\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://developers.weixin.qq.com/community/personal/oCJUsw1GWHOwOLn7MZ4Rbb8T-FVE</span></a></p><p id=\"u1b5141e6\" class=\"ne-p\"><span class=\"ne-text\">purge 分析：</span><a href=\"https://gitee.com/sl1673495/pictures/issues/I3CJER?_from=gitee_search\" data-href=\"https://gitee.com/sl1673495/pictures/issues/I3CJER?_from=gitee_search\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://gitee.com/sl1673495/pictures/issues/I3CJER?_from=gitee_search</span></a></p><p id=\"uebd8d1c7\" class=\"ne-p\"><span class=\"ne-text\">小程序文档-样式隔离：</span><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html\" data-href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html</span></a></p><h2 id=\"TzYwE\"><span class=\"ne-text\">参考仓库及分支</span></h2><p id=\"u4844a32f\" class=\"ne-p\"><span class=\"ne-text\">demo：</span><a href=\"https://github.com/gloomyKevin/mpx-example-king\" data-href=\"https://github.com/gloomyKevin/mpx-example-king\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://github.com/gloomyKevin/mpx-example-king</span></a></p><ul class=\"ne-ul\"><li id=\"u85c700e0\"><span class=\"ne-text\">features 集成分支：dev</span></li><li id=\"ubdcb2833\"><span class=\"ne-text\">预设：</span><a href=\"https://github.com/gloomyKevin/tailwindcss-miniprogram-preset\" data-href=\"https://github.com/gloomyKevin/tailwindcss-miniprogram-preset\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://github.com/gloomyKevin/tailwindcss-miniprogram-preset</span></a></li></ul><ul class=\"ne-ul\"><li id=\"u6a9806d7\"><span class=\"ne-text\">fork 下来后独立发包：</span><a href=\"https://www.npmjs.com/package/mpx-tailwindcss-preset\" data-href=\"https://www.npmjs.com/package/mpx-tailwindcss-preset\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://www.npmjs.com/package/mpx-tailwindcss-preset</span></a></li></ul><p id=\"u1f930f03\" class=\"ne-p\"><span class=\"ne-text\">当前版本：2.1.4</span></p><ul class=\"ne-ul\"><li id=\"u759bea68\"><span class=\"ne-text\">插件：</span><a href=\"https://github.com/theowenyoung/mini-tailwind\" data-href=\"https://github.com/theowenyoung/mini-tailwind\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://github.com/theowenyoung/mini-tailwind</span></a></li><li id=\"u37846ee1\"><span class=\"ne-text\">新版 taro 插件：</span><a href=\"https://github.com/pcdotfan/taro-plugin-tailwind\" data-href=\"https://github.com/pcdotfan/taro-plugin-tailwind\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://github.com/pcdotfan/taro-plugin-tailwind</span></a></li></ul><ul class=\"ne-ul\"><li id=\"ue41808bc\"><span class=\"ne-text\">旧版 taro 插件：</span><a href=\"https://github.com/windedge/taro-tailwind\" data-href=\"https://github.com/windedge/taro-tailwind\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://github.com/windedge/taro-tailwind</span></a></li></ul></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"WZxVH\" id=\"WZxVH\"><span data-lake-id=\"u8a348315\" id=\"u8a348315\">第一阶段</span></h2><p data-lake-id=\"u998d8fd0\" id=\"u998d8fd0\"><br></p><h3 data-lake-id=\"lsGay\" id=\"lsGay\"><span data-lake-id=\"u6ebbe4b9\" id=\"u6ebbe4b9\">第一轮疑问</span></h3><p data-lake-id=\"u91f66a36\" id=\"u91f66a36\"><br></p><ul list=\"ub557a6d1\" class=\"lake-list\"><li fid=\"ufe535e27\" version=\"1645525239852\" data-lake-id=\"u5f38f900\" id=\"u5f38f900\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:true\"></card><span data-lake-id=\"u1da1b5d1\" id=\"u1da1b5d1\">兼容性(兼容到哪个版本/特性的 tailwind / postcss)，这决定了未来 fork 哪个仓库哪个版本</span></li></ul><blockquote data-lake-id=\"u68a18853\" id=\"u68a18853\"><p data-lake-id=\"ua71dd455\" id=\"ua71dd455\"><span data-lake-id=\"u225b2af3\" id=\"u225b2af3\">最新版本，tailwind 和 windicss 同时支持</span></p></blockquote><ul list=\"ub557a6d1\" start=\"2\" class=\"lake-list\"><li fid=\"ufe535e27\" data-lake-id=\"u154039bc\" id=\"u154039bc\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"u08e1d976\" id=\"u08e1d976\">类 tailwind 库的调研以及是否适配，例如 windicss(目前内置 JIT 后似乎差别不大，代确认)</span></li><li fid=\"ufe535e27\" data-lake-id=\"ue6576bc8\" id=\"ue6576bc8\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"u6d09a8cf\" id=\"u6d09a8cf\">postcss 和 npx 两种模式下的差异对比</span></li></ul><blockquote data-lake-id=\"u564ccc39\" id=\"u564ccc39\"><p data-lake-id=\"u527a368e\" id=\"u527a368e\"><span data-lake-id=\"u22f02183\" id=\"u22f02183\">在 v3 版本，原子类不多时性能接近，需要在 demo 手动引入大量原子类，或者粗糙地写一个重构工具，跑在小程序项目上</span></p></blockquote><ul list=\"ub557a6d1\" start=\"4\" class=\"lake-list\"><li fid=\"ufe535e27\" version=\"1645525352836\" data-lake-id=\"uf718f1dd\" id=\"uf718f1dd\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:true\"></card><span data-lake-id=\"u2e58bb48\" id=\"u2e58bb48\">全局样式只能作用于 page 级，无法作用到 component 级 </span><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html#%E5%85%A8%E5%B1%80%E6%A0%B7%E5%BC%8F%E4%B8%8E%E5%B1%80%E9%83%A8%E6%A0%B7%E5%BC%8F\" target=\"_blank\" data-lake-id=\"u4c28a65d\" id=\"u4c28a65d\"><span data-lake-id=\"u667c3f33\" id=\"u667c3f33\">参考文档</span></a></li><li fid=\"ufe535e27\" version=\"1645525624226\" data-lake-id=\"u64c76f14\" id=\"u64c76f14\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:true\"></card><span data-lake-id=\"u8fae97d3\" id=\"u8fae97d3\">未来分包输出的粒度(page/component) ? 初步思路，按照分包划分，框架层，除主包页面，其余自动 import 分包原子类集合 (区别于目前 stylus 的显示操作)</span></li></ul><blockquote data-lake-id=\"u6fccef45\" id=\"u6fccef45\"><p data-lake-id=\"ufb5eb420\" id=\"ufb5eb420\"><span data-lake-id=\"u3ecbb217\" id=\"u3ecbb217\">按分包维度输出，分包内页面做 import 即可，组件开启 apply-shared 就可以拿到</span></p></blockquote><ul list=\"ub557a6d1\" start=\"6\" class=\"lake-list\"><li fid=\"ufe535e27\" version=\"1645525687328\" data-lake-id=\"ua7cad5eb\" id=\"ua7cad5eb\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:true\"></card><span data-lake-id=\"ua30041d6\" id=\"ua30041d6\">未来是否要修改老代码？如果要，是否考虑自动化重构工具</span></li></ul><blockquote data-lake-id=\"u8395eaaa\" id=\"u8395eaaa\"><p data-lake-id=\"uc448f7b1\" id=\"uc448f7b1\"><span data-lake-id=\"u6e2d18a3\" id=\"u6e2d18a3\">未来会像 TypeScript 那样逐步改造并推动成为规范，重构工具待确认</span></p></blockquote><ul list=\"uf741d953\" class=\"lake-list\"><li fid=\"u91a1a8e1\" version=\"1645525795316\" data-lake-id=\"u91e452c0\" id=\"u91e452c0\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:true\"></card><span data-lake-id=\"u59fd2986\" id=\"u59fd2986\">自定义预设集的设计，以及未来是否以单独文档形式展示，甚至是提供一个 playground，能在原始 css 和类 tailwind 语法间进行双向转换</span></li><li fid=\"u91a1a8e1\" version=\"1645525821271\" data-lake-id=\"u7f0ddce4\" id=\"u7f0ddce4\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:true\"></card><span data-lake-id=\"u6f21d490\" id=\"u6f21d490\">样式隔离</span></li></ul><blockquote data-lake-id=\"u160b0497\" id=\"u160b0497\"><p data-lake-id=\"u51c9438b\" id=\"u51c9438b\"><span data-lake-id=\"u1ff0ed3f\" id=\"u1ff0ed3f\">利用 apply-shared 实现</span></p></blockquote><p data-lake-id=\"u3a97ffa7\" id=\"u3a97ffa7\"><span data-lake-id=\"u7094f09d\" id=\"u7094f09d\">最重要的：融合 mpx 策略(分包策略，如何嵌入到目前的构建流程，如指令、cli)</span></p><p data-lake-id=\"u133654c2\" id=\"u133654c2\"><span data-lake-id=\"u79cfa9d0\" id=\"u79cfa9d0\">​</span><br></p><h3 data-lake-id=\"lFIct\" id=\"lFIct\"><span data-lake-id=\"uda1c7822\" id=\"uda1c7822\">第一轮沟通结果</span></h3><p data-lake-id=\"udfeb8aa0\" id=\"udfeb8aa0\"><br></p><ul list=\"u0d29304a\"><li fid=\"ud66fa8f5\" data-lake-id=\"uf6bf382a\" id=\"uf6bf382a\"><span data-lake-id=\"u5c72a995\" id=\"u5c72a995\">扫描 mpx 文件的过程中，记录原子类是在哪个分包下被使用，实现主包一份，每个分包一份的输出，在当前分包各页面 import 当前分包的原子类文件(测试：组件不用 import 就能拿到?)</span></li><li fid=\"ud66fa8f5\" data-lake-id=\"ucc249315\" id=\"ucc249315\"><span data-lake-id=\"uaf3a36ae\" id=\"uaf3a36ae\">对于组件在多分包间使用的情况，如果开启 apply-shared 能够将 app.wxss 注入，则无需特殊处理，如果不能，则需要</span></li></ul><p data-lake-id=\"ub34e49c3\" id=\"ub34e49c3\"><span data-lake-id=\"u2d4d5788\" id=\"u2d4d5788\">​</span><br></p><h3 data-lake-id=\"aHkMO\" id=\"aHkMO\"><span data-lake-id=\"u852a214e\" id=\"u852a214e\">第一轮 TODO</span></h3><p data-lake-id=\"u60054476\" id=\"u60054476\"><br></p><ul list=\"uc4ce5966\" class=\"lake-list\"><li fid=\"ue02b7de5\" version=\"1645526141998\" data-lake-id=\"u9c50c838\" id=\"u9c50c838\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:true\"></card><span data-lake-id=\"u13aba33b\" id=\"u13aba33b\">postcss 流程跑通</span></li><li fid=\"ue02b7de5\" version=\"1645526142651\" data-lake-id=\"u612c8a29\" id=\"u612c8a29\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:true\"></card><span data-lake-id=\"uaf933f93\" id=\"uaf933f93\">自定义预设集原理(以及 mpx issue 里提到的插件调研)</span></li><li fid=\"ue02b7de5\" version=\"1645526155841\" data-lake-id=\"u7621d80c\" id=\"u7621d80c\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:true\"></card><span data-lake-id=\"uf1fa909e\" id=\"uf1fa909e\">大量原子类时的生成性能</span></li><li fid=\"ue02b7de5\" version=\"1645526166648\" data-lake-id=\"u46191a8e\" id=\"u46191a8e\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:true\"></card><span data-lake-id=\"uc32b7d62\" id=\"uc32b7d62\">JIT 开闭性能对比</span></li></ul><ul list=\"u56167a92\"><li fid=\"u64998f37\" data-lake-id=\"uf64b3c83\" id=\"uf64b3c83\"><del><span data-lake-id=\"u82173fa0\" id=\"u82173fa0\">postcss 插件原理</span></del></li><li fid=\"u64998f37\" data-lake-id=\"uf950cedc\" id=\"uf950cedc\"><del><span data-lake-id=\"u9af22a5f\" id=\"u9af22a5f\">tailwind 原理</span></del></li><li fid=\"u64998f37\" data-lake-id=\"uc4426010\" id=\"uc4426010\"><del><span data-lake-id=\"uf08406b4\" id=\"uf08406b4\">mpx 原理</span></del></li></ul><ul list=\"u56167a92\" data-lake-indent=\"1\"><li fid=\"u64998f37\" data-lake-id=\"uca65fdfc\" id=\"uca65fdfc\"><del><span data-lake-id=\"udbc2e50e\" id=\"udbc2e50e\">style-compiler (目前无需改动)</span></del></li><li fid=\"u64998f37\" data-lake-id=\"uaf04df4c\" id=\"uaf04df4c\"><del><span data-lake-id=\"u4850ddf4\" id=\"u4850ddf4\">getPackageInfo</span></del></li></ul><p data-lake-id=\"ue8369531\" id=\"ue8369531\"><del><span data-lake-id=\"u9afd4edc\" id=\"u9afd4edc\">​</span></del><br></p><h3 data-lake-id=\"IKr9m\" id=\"IKr9m\"><span data-lake-id=\"ua15e4a7b\" id=\"ua15e4a7b\">进度记录</span></h3><p data-lake-id=\"ue3904827\" id=\"ue3904827\"><br></p><p data-lake-id=\"u3521b61c\" id=\"u3521b61c\"><span data-lake-id=\"u55b1bd95\" id=\"u55b1bd95\">完善 demo</span></p><ul list=\"u8ab8d955\"><li fid=\"udc533a62\" data-lake-id=\"ue99024c1\" id=\"ue99024c1\"><span data-lake-id=\"u05595682\" id=\"u05595682\">能力：多分包，组件分层嵌套，组件跨分包共享</span></li><li fid=\"udc533a62\" data-lake-id=\"u52a83fe6\" id=\"u52a83fe6\"><span data-lake-id=\"uf020d049\" id=\"uf020d049\">TODO: 模拟组件间无样式隔离时样式注入会产生 bug 的情况</span></li><li fid=\"udc533a62\" data-lake-id=\"u9c59c440\" id=\"u9c59c440\"><span data-lake-id=\"u00fef1de\" id=\"u00fef1de\">已验证：npx 执行无需安装 postcss</span></li><li fid=\"udc533a62\" data-lake-id=\"ua579d1c0\" id=\"ua579d1c0\"><span data-lake-id=\"u65b5242c\" id=\"u65b5242c\">待验证：验证 tailwind3 和 postcss8 在 mpx demo 上可以正常表现，并且 tailwind cli 形式比 tailwind2.x 有显著提升</span></li></ul><p data-lake-id=\"u6dfd5682\" id=\"u6dfd5682\"><span data-lake-id=\"ub1db19cc\" id=\"ub1db19cc\">​</span><br></p><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22c3WV8%22%7D\"></card><h2 data-lake-id=\"AL1M9\" id=\"AL1M9\"><span data-lake-id=\"uab234c62\" id=\"uab234c62\">第二阶段</span></h2><p data-lake-id=\"u49e577e9\" id=\"u49e577e9\"><br></p><h3 data-lake-id=\"oyq06\" id=\"oyq06\"><span data-lake-id=\"ua4647f4c\" id=\"ua4647f4c\">第二轮疑问</span></h3><p data-lake-id=\"u55d9541d\" id=\"u55d9541d\"><br></p><ul list=\"ud03bf957\" class=\"lake-list\"><li fid=\"u4c4e3ee4\" version=\"1645526556978\" data-lake-id=\"uf0b1fb0f\" id=\"uf0b1fb0f\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:true\"></card><span data-lake-id=\"u75048be7\" id=\"u75048be7\">是否应该新建一个页面和逻辑稍微复杂的 demo (主要目的是面面聚到，包括：组件嵌套、分包能力、组件在分包间共享、store 划分)，如果已有，是否应该做适当升级</span></li></ul><blockquote data-lake-id=\"udbecda78\" id=\"udbecda78\"><p data-lake-id=\"u9f77400d\" id=\"u9f77400d\"><span data-lake-id=\"uae1a6b96\" id=\"uae1a6b96\">可以做，未来也可以考虑成为一个新的 mpx-example</span></p></blockquote><ul list=\"u6cf6b398\" class=\"lake-list\"><li fid=\"u7aaa94b2\" data-lake-id=\"u92449094\" id=\"u92449094\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"u431da18c\" id=\"u431da18c\">执行方式，loader 模式 or 手动执行 script 模式</span></li></ul><blockquote data-lake-id=\"ucb2fbc61\" id=\"ucb2fbc61\"><p data-lake-id=\"ufab44cdf\" id=\"ufab44cdf\"><span data-lake-id=\"u32d6da6c\" id=\"u32d6da6c\">暂时手动执行 cli 模式</span></p></blockquote><ul list=\"u0cf17c8a\" class=\"lake-list\"><li fid=\"ud077e17d\" data-lake-id=\"u10343490\" id=\"u10343490\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"u4855bc73\" id=\"u4855bc73\">全量扫描 mpx 过程中对分包的记录</span></li></ul><blockquote data-lake-id=\"u2ec6a9ce\" id=\"u2ec6a9ce\"><p data-lake-id=\"u84493644\" id=\"u84493644\"><span data-lake-id=\"u53f1d4c8\" id=\"u53f1d4c8\">需要在denpendences 中进行修改，问题：如何在扫描过程中记录分包</span></p><p data-lake-id=\"uac6a3438\" id=\"uac6a3438\"><span data-lake-id=\"uc20d58dc\" id=\"uc20d58dc\">最直观的通过 changedContent(tailwind 全量扫描 mpx 后缀文件得到的路径数组)，或者通过正则来过滤分包</span></p></blockquote><ul list=\"u63824df3\" class=\"lake-list\"><li fid=\"u321471b0\" data-lake-id=\"u033e2469\" id=\"u033e2469\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"u336d636e\" id=\"u336d636e\">能否做到，只有在修改 class 部分时，才自动执行 tailwind</span></li><li fid=\"u321471b0\" data-lake-id=\"u1c9599d0\" id=\"u1c9599d0\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"u1d33c8c3\" id=\"u1d33c8c3\">tailwindcss cli 下的 watch 模式</span></li><li fid=\"u321471b0\" data-lake-id=\"ud953b42f\" id=\"ud953b42f\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"ue315d93c\" id=\"ue315d93c\">apply-shared 是否会与原来的样式隔离有冲突</span></li><li fid=\"u321471b0\" data-lake-id=\"uc3360452\" id=\"uc3360452\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"u296c9a3d\" id=\"u296c9a3d\">是否应该强依赖于某个库，未来如果该库不维护，或者项目内无人跟进新特性，造成的影响是多少</span></li><li fid=\"u321471b0\" data-lake-id=\"u943666b9\" id=\"u943666b9\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"ub3286d3d\" id=\"ub3286d3d\">预设的嵌入模式</span></li></ul><ul list=\"u63824df3\" data-lake-indent=\"1\" class=\"lake-list\"><li fid=\"u321471b0\" data-lake-id=\"u522d98f0\" id=\"u522d98f0\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"uf4b6b153\" id=\"uf4b6b153\">直接写在 tailwind.config.js</span></li><li fid=\"u321471b0\" data-lake-id=\"u571a064d\" id=\"u571a064d\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"u7291fea9\" id=\"u7291fea9\">加在项目 build 流程</span></li><li fid=\"u321471b0\" data-lake-id=\"u7d167282\" id=\"u7d167282\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"u7e67c407\" id=\"u7e67c407\">以预设包形式独立</span></li><li fid=\"u321471b0\" data-lake-id=\"u7185994b\" id=\"u7185994b\" class=\"lake-list-node lake-list-task\"><card type=\"inline\" name=\"checkbox\" value=\"data:false\"></card><span data-lake-id=\"ub2b8c4f9\" id=\"ub2b8c4f9\">模仿 taro，以 plugin 的形式接入，设置项直接写在 plugin 配置里</span></li></ul><p data-lake-id=\"ud2975c75\" id=\"ud2975c75\"><span data-lake-id=\"uce00a705\" id=\"uce00a705\">​</span><br></p><h3 data-lake-id=\"DT8Mf\" id=\"DT8Mf\"><span data-lake-id=\"u74b04b1b\" id=\"u74b04b1b\">关于构建方式</span></h3><p data-lake-id=\"u607b91df\" id=\"u607b91df\"><br></p><ul list=\"u83aac2a5\"><li fid=\"uccd36c89\" data-lake-id=\"u0caa4096\" id=\"u0caa4096\"><span data-lake-id=\"uad9abbd6\" id=\"uad9abbd6\">postcss cli 和 tailwind cli 代码设计差异</span></li><li fid=\"uccd36c89\" data-lake-id=\"u5ec92205\" id=\"u5ec92205\"><span data-lake-id=\"u21747bc7\" id=\"u21747bc7\">性能对比</span></li><li fid=\"uccd36c89\" data-lake-id=\"u8f1d03cf\" id=\"u8f1d03cf\"><span data-lake-id=\"u02306e5d\" id=\"u02306e5d\">tailwind cli 有完整的 glob 支持 </span><a href=\"https://www.tailwindcss.cn/docs/just-in-time-mode#styles-rebuild-in-an-infinite-loop\" target=\"_blank\" data-lake-id=\"u59cdb1ad\" id=\"u59cdb1ad\"><span data-lake-id=\"u5867f947\" id=\"u5867f947\">https://www.tailwindcss.cn/docs/just-in-time-mode#styles-rebuild-in-an-infinite-loop</span></a></li></ul><p data-lake-id=\"u61351c36\" id=\"u61351c36\"><span data-lake-id=\"uf73efc1c\" id=\"uf73efc1c\">​</span><br></p><h3 data-lake-id=\"lNw0M\" id=\"lNw0M\"><span data-lake-id=\"u22dada5a\" id=\"u22dada5a\">关于接入版本</span></h3><p data-lake-id=\"u59efe23b\" id=\"u59efe23b\"><span data-lake-id=\"u228cfcc6\" id=\"u228cfcc6\">​</span><br></p><p data-lake-id=\"u1000a967\" id=\"u1000a967\"><span data-lake-id=\"ud4d6a7d9\" id=\"ud4d6a7d9\">目前 tailwind3 和postcss8 在 mpx demo 均正常表现，并且 tailwind cli 速度比 v2 版本有较大提升，小程序项目将 postcss 升级到 8+ 有哪些阻力</span></p><p data-lake-id=\"ucf78a6b8\" id=\"ucf78a6b8\"><span data-lake-id=\"u9567da54\" id=\"u9567da54\">autoprefixer 已被 postcss8 内置，结合 tailwind 是否有效，待验证</span></p><p data-lake-id=\"u8f154f38\" id=\"u8f154f38\"><span data-lake-id=\"u3edcab3d\" id=\"u3edcab3d\">​</span><br></p><h3 data-lake-id=\"iFkV5\" id=\"iFkV5\"><span data-lake-id=\"ua184c601\" id=\"ua184c601\">关于分包策略</span></h3><p data-lake-id=\"uce530493\" id=\"uce530493\"><br></p><p data-lake-id=\"u6785f844\" id=\"u6785f844\"><span data-lake-id=\"u520b7dc0\" id=\"u520b7dc0\">直接与 tailwind 解耦，但需要对 h-[918px] 这种动态 class 语法做兼容处理</span></p><p data-lake-id=\"u0102172a\" id=\"u0102172a\"><span data-lake-id=\"ud8917eb6\" id=\"ud8917eb6\">​</span><br></p><h3 data-lake-id=\"dKVn6\" id=\"dKVn6\"><span data-lake-id=\"u805a35b2\" id=\"u805a35b2\">关于复杂 class</span></h3><p data-lake-id=\"uf8926a3c\" id=\"uf8926a3c\"><br></p><p data-lake-id=\"u3550bb00\" id=\"u3550bb00\"><span data-lake-id=\"u66ccb913\" id=\"u66ccb913\">windicss 可以在 template 中处理截断并用 js 处理 class, tailwind 不可能截断 class，把选择权交给使用者</span></p><p data-lake-id=\"u1f4ad01b\" id=\"u1f4ad01b\"><span data-lake-id=\"u448d3aee\" id=\"u448d3aee\">​</span><br></p><h3 data-lake-id=\"PTuvs\" id=\"PTuvs\"><span data-lake-id=\"u0203dd14\" id=\"u0203dd14\">关于与处理器冲突</span></h3><p data-lake-id=\"u694df23d\" id=\"u694df23d\"><br></p><p data-lake-id=\"u122d6053\" id=\"u122d6053\"><span data-lake-id=\"u3e11fbc5\" id=\"u3e11fbc5\">后续改为扫描原生打包后的代码，解决了此问题</span></p><p data-lake-id=\"u6e718533\" id=\"u6e718533\"><span data-lake-id=\"u3c6a3a66\" id=\"u3c6a3a66\">​</span><br></p><h3 data-lake-id=\"sMYla\" id=\"sMYla\"><span data-lake-id=\"u42e82be0\" id=\"u42e82be0\">关于预设</span></h3><p data-lake-id=\"uafeef18d\" id=\"uafeef18d\"><br></p><ul list=\"u94c8a0cc\"><li fid=\"uf38ee70d\" data-lake-id=\"uc003a770\" id=\"uc003a770\"><span data-lake-id=\"ubfe6f0d0\" id=\"ubfe6f0d0\">以什么形式维护</span></li></ul><ul list=\"u94c8a0cc\" data-lake-indent=\"1\"><li fid=\"uf38ee70d\" data-lake-id=\"ud219a8d4\" id=\"ud219a8d4\"><span data-lake-id=\"u4c86536a\" id=\"u4c86536a\">直接写在 tailwind.config.js</span></li><li fid=\"uf38ee70d\" data-lake-id=\"u7b61be15\" id=\"u7b61be15\"><span data-lake-id=\"u8100687c\" id=\"u8100687c\">加到项目的 build 流程</span></li><li fid=\"uf38ee70d\" data-lake-id=\"ua1cc6b00\" id=\"ua1cc6b00\"><span data-lake-id=\"u6de43beb\" id=\"u6de43beb\">以预设包的形式独立出来</span></li><li fid=\"uf38ee70d\" data-lake-id=\"u9faff0b9\" id=\"u9faff0b9\"><span data-lake-id=\"u4f18b2c5\" id=\"u4f18b2c5\">模仿 taro、以 plugin 的形式接入，设置项直接写在 plugin 配置里</span></li></ul><ul list=\"u94c8a0cc\" start=\"2\"><li fid=\"uf38ee70d\" data-lake-id=\"ubfd4d5d5\" id=\"ubfd4d5d5\"><span data-lake-id=\"ue6173f07\" id=\"ue6173f07\">可能需要自定义的属性</span></li></ul><ul list=\"u94c8a0cc\" data-lake-indent=\"1\"><li fid=\"uf38ee70d\" data-lake-id=\"u567220a3\" id=\"u567220a3\"><span data-lake-id=\"u164bfd84\" id=\"u164bfd84\">颜色、字体、背景...</span></li><li fid=\"uf38ee70d\" data-lake-id=\"u19ba6a3a\" id=\"u19ba6a3a\"><span data-lake-id=\"ucbba0677\" id=\"ucbba0677\">图片...</span></li></ul><ul list=\"u94c8a0cc\" start=\"3\"><li fid=\"uf38ee70d\" data-lake-id=\"u6e35e295\" id=\"u6e35e295\"><span data-lake-id=\"uf5b37123\" id=\"uf5b37123\">开发者自定义样式怎么组织</span></li></ul><ul list=\"u94c8a0cc\" data-lake-indent=\"1\"><li fid=\"uf38ee70d\" data-lake-id=\"u716e9eb9\" id=\"u716e9eb9\"><span data-lake-id=\"u9d0b1c1b\" id=\"u9d0b1c1b\">在 tailwind.css 处定义：最接近原生，但感觉不易于按照模块进行区分，可以按照模块再划分子目录后合并(能实现图片素材中的几种管理，例如只有一张图，想找到对应组件很难，集中管理之后就可以直接在相应文件夹的图片列表中找到，也需要耐心和运气)</span></li><li fid=\"uf38ee70d\" data-lake-id=\"u184da34a\" id=\"u184da34a\"><span data-lake-id=\"udccf3b2f\" id=\"udccf3b2f\">像原来一样写死在组件内 style 里，但此时需要用传统 class 写法，想象一个自定义 className，可能会与原子类混用</span></li></ul><ul list=\"u94c8a0cc\" start=\"4\"><li fid=\"uf38ee70d\" data-lake-id=\"ue05f1a67\" id=\"ue05f1a67\"><span data-lake-id=\"u5492ac9f\" id=\"u5492ac9f\">如果所有使用 css 特性，在 tailwind 中无对应 match rule，tailwind 中是否有提示，没有的话是不是要自己增加 warning(如何与自定义 class 的区别)</span></li></ul><p data-lake-id=\"u3bb95b3d\" id=\"u3bb95b3d\"><br></p><h3 data-lake-id=\"WtYH8\" id=\"WtYH8\"><span data-lake-id=\"ued81e75b\" id=\"ued81e75b\">关于抹平</span></h3><p data-lake-id=\"uaf2ac613\" id=\"uaf2ac613\"><br></p><ul list=\"uc84524c6\"><li fid=\"u2530f4ce\" data-lake-id=\"u3325e3ac\" id=\"u3325e3ac\"><span data-lake-id=\"u8052bdb3\" id=\"u8052bdb3\">特殊符号 </span><code data-lake-id=\"ubbd9676d\" id=\"ubbd9676d\"><span data-lake-id=\"uab31928f\" id=\"uab31928f\">./</span></code><span data-lake-id=\"u2353f3eb\" id=\"u2353f3eb\"> 的抹平思路</span></li></ul><ul list=\"uc84524c6\" data-lake-indent=\"1\"><li fid=\"u2530f4ce\" data-lake-id=\"uacf977d7\" id=\"uacf977d7\"><span data-lake-id=\"u90fe2f0c\" id=\"u90fe2f0c\">taro: 统一替换为下划线</span></li><li fid=\"u2530f4ce\" data-lake-id=\"u0be2832a\" id=\"u0be2832a\"><span data-lake-id=\"uc33663d4\" id=\"uc33663d4\">其他框架：-div-、-dot-</span></li></ul><ul list=\"uc84524c6\" start=\"2\"><li fid=\"u2530f4ce\" data-lake-id=\"uf2cc3cea\" id=\"uf2cc3cea\"><span data-lake-id=\"u85f97915\" id=\"u85f97915\">theme 验证</span></li><li fid=\"u2530f4ce\" data-lake-id=\"ufd6bb0fc\" id=\"ufd6bb0fc\"><span data-lake-id=\"u5ca95445\" id=\"u5ca95445\">variant 验证</span></li><li fid=\"u2530f4ce\" data-lake-id=\"u1e0859bd\" id=\"u1e0859bd\"><span data-lake-id=\"ue7d1c8c9\" id=\"ue7d1c8c9\">corePlugin 验证</span></li><li fid=\"u2530f4ce\" data-lake-id=\"ua9e61b70\" id=\"ua9e61b70\"><span data-lake-id=\"u93fb5cbf\" id=\"u93fb5cbf\">需要写哪些 plugin</span></li></ul><p data-lake-id=\"uadbe702c\" id=\"uadbe702c\"><span data-lake-id=\"u8000a19a\" id=\"u8000a19a\">​</span><br></p><h3 data-lake-id=\"uJrRH\" id=\"uJrRH\"><span data-lake-id=\"ucd1fe4ff\" id=\"ucd1fe4ff\">测试 demo 及数据</span></h3><p data-lake-id=\"u2af7c908\" id=\"u2af7c908\"><br></p><ul list=\"u3cec7c18\"><li fid=\"u3bd348bc\" data-lake-id=\"uc437888c\" id=\"uc437888c\"><span data-lake-id=\"u5ae2b7b5\" id=\"u5ae2b7b5\">mpx 是否需要，新增或对某个已有 demo 进行改造，增强能力，主要目的是面面俱到，包括组件嵌套、分包能力、组件在分包间共享、store 划分...</span></li><li fid=\"u3bd348bc\" data-lake-id=\"u335113fd\" id=\"u335113fd\"><span data-lake-id=\"udedb4245\" id=\"udedb4245\">性能测试数据</span></li><li fid=\"u3bd348bc\" data-lake-id=\"ua1e0074a\" id=\"ua1e0074a\"><span data-lake-id=\"uadf62adf\" id=\"uadf62adf\">大量原子类场景下的性能以及体积验证</span></li></ul><ul list=\"u3cec7c18\" data-lake-indent=\"1\"><li fid=\"u3bd348bc\" data-lake-id=\"ud7b1c83d\" id=\"ud7b1c83d\"><span data-lake-id=\"uc4c12ac4\" id=\"uc4c12ac4\">从官网手动复制粘贴到 demo</span></li><li fid=\"u3bd348bc\" data-lake-id=\"uaf454208\" id=\"uaf454208\"><span data-lake-id=\"udfdd9247\" id=\"udfdd9247\">提前写一个粗糙的重构工具，完成从 selector 到 class 拼接的映射，用到滴滴小程序上再做验证</span></li></ul><p data-lake-id=\"ue2ad55cc\" id=\"ue2ad55cc\"><span data-lake-id=\"u862d12dd\" id=\"u862d12dd\">​</span><br></p><h3 data-lake-id=\"fWglg\" id=\"fWglg\"><span data-lake-id=\"ubed2270c\" id=\"ubed2270c\">第二轮沟通结果</span></h3><p data-lake-id=\"u5438e776\" id=\"u5438e776\"><br></p><ul list=\"u9235dfba\"><li fid=\"uaf5443db\" data-lake-id=\"uf0ed8b76\" id=\"uf0ed8b76\"><span data-lake-id=\"u48508184\" id=\"u48508184\">扫描 dist</span></li><li fid=\"uaf5443db\" data-lake-id=\"u231e2570\" id=\"u231e2570\"><span data-lake-id=\"u15125454\" id=\"u15125454\">可以预见的优点</span></li></ul><ul list=\"u9235dfba\" data-lake-indent=\"1\"><li fid=\"uaf5443db\" data-lake-id=\"u95350c37\" id=\"u95350c37\"><span data-lake-id=\"u71df3dd9\" id=\"u71df3dd9\">不需要再全量扫描 mpx 文件所有内容，而是只扫 template / wxml 部分，提升性能</span></li><li fid=\"uaf5443db\" data-lake-id=\"u862391aa\" id=\"u862391aa\"><span data-lake-id=\"ue7119a8d\" id=\"ue7119a8d\">基于打出来的原生小程序，利于开源</span></li><li fid=\"uaf5443db\" data-lake-id=\"u0f4d40f6\" id=\"u0f4d40f6\"><span data-lake-id=\"ubbffcc20\" id=\"ubbffcc20\">解决了如果扫描源文件，还需要扫描依赖中第三方业务的问题</span></li></ul><ul list=\"u9235dfba\" start=\"3\"><li fid=\"uaf5443db\" data-lake-id=\"ua17d563d\" id=\"ua17d563d\"><span data-lake-id=\"u6a7f55d6\" id=\"u6a7f55d6\">postcss 升级</span></li><li fid=\"uaf5443db\" data-lake-id=\"u04563c2c\" id=\"u04563c2c\"><span data-lake-id=\"ub097a8ce\" id=\"ub097a8ce\">componentMapping</span></li><li fid=\"uaf5443db\" data-lake-id=\"u8103510b\" id=\"u8103510b\"><span data-lake-id=\"u785e4901\" id=\"u785e4901\">非通用样式就以原生样式书写，尽量保持只有一份 config</span></li></ul><p data-lake-id=\"u52b5879b\" id=\"u52b5879b\"><br></p><h3 data-lake-id=\"mBVIh\" id=\"mBVIh\"><span data-lake-id=\"u25dd76d3\" id=\"u25dd76d3\">分包策略</span></h3><p data-lake-id=\"u3ee2fbd8\" id=\"u3ee2fbd8\"><br></p><p data-lake-id=\"ue1a63ef0\" id=\"ue1a63ef0\"><span data-lake-id=\"u10efbc0b\" id=\"u10efbc0b\">通过 node 脚本异步处理 dist/wx 下每一个分包，并在分包目录下输出样式文件</span></p><blockquote data-lake-id=\"u85b9a84e\" id=\"u85b9a84e\"><p data-lake-id=\"u2f4df015\" id=\"u2f4df015\"><span data-lake-id=\"u700697a1\" id=\"u700697a1\">注意：此处需要额外做一个处理，tailwind 扫描文件的依据是 config.content，所以例如扫描 subpackage1 时，需要将当前 config.content 动态处理成 </span><code data-lake-id=\"u9dd4d2ab\" id=\"u9dd4d2ab\"><span data-lake-id=\"udca8a0ec\" id=\"udca8a0ec\">['./dist/wx/subpackage1/**/*.wxml']</span></code><span data-lake-id=\"ue4a6963a\" id=\"ue4a6963a\">，以此类推</span></p></blockquote><p data-lake-id=\"u57cf29c8\" id=\"u57cf29c8\"><span data-lake-id=\"u2966e89f\" id=\"u2966e89f\">边界处理(是否要把 cli 内容给加到 node 脚本，粒度待讨论)</span></p><ul list=\"u600ad07e\"><li fid=\"ud574e95c\" data-lake-id=\"u186a6f41\" id=\"u186a6f41\"><span data-lake-id=\"u5be551c2\" id=\"u5be551c2\">分包 page 自动 import 当前分包打出的样式</span></li><li fid=\"ud574e95c\" data-lake-id=\"u7f8ed26b\" id=\"u7f8ed26b\"><span data-lake-id=\"uec3c1489\" id=\"uec3c1489\">检查分包下所有 index.json 是否开启 apply-shared，没有则输出 warning 或者自动加上(添加 usingComponent 判断避免误伤)</span></li></ul><ul list=\"u600ad07e\" data-lake-indent=\"1\"><li fid=\"ud574e95c\" data-lake-id=\"u6b4fdb60\" id=\"u6b4fdb60\"><span data-lake-id=\"u93870c6c\" id=\"u93870c6c\">待确定：如果用户之前的 styleIsolation 设置为其他值应该如何处理</span></li></ul><ul list=\"u600ad07e\" start=\"3\"><li fid=\"ud574e95c\" data-lake-id=\"ua7517847\" id=\"ua7517847\"><span data-lake-id=\"u3d6cf6f1\" id=\"u3d6cf6f1\">识别无 wxml 文件目录，跳过处理(是否借助 fast-glob，或者糅合 cli 流程)，或者等打出空目录之后，在公共样式提取阶段，对空文件进行删除</span></li><li fid=\"ud574e95c\" data-lake-id=\"u3c76d483\" id=\"u3c76d483\"><span data-lake-id=\"u09b95006\" id=\"u09b95006\">识别非分包目录，统一按主包文件扫描处理(待确认是否 ok)</span></li></ul><p data-lake-id=\"udf9ef149\" id=\"udf9ef149\"><span data-lake-id=\"u0ea50360\" id=\"u0ea50360\">​</span><br></p><h3 data-lake-id=\"L8grL\" id=\"L8grL\"><span data-lake-id=\"u9a495192\" id=\"u9a495192\">多分包共用原子类去重提重</span></h3><p data-lake-id=\"u9d5f4068\" id=\"u9d5f4068\"><br></p><p data-lake-id=\"uc8911e51\" id=\"uc8911e51\"><span data-lake-id=\"u74e24614\" id=\"u74e24614\">删除并提取每个分包下的公共原子类，并提升到主包或独立样式分包(孰优孰劣待验证，如果会导致主包超级大，就改到独立样式分包)</span></p><p data-lake-id=\"ud438ae64\" id=\"ud438ae64\"><span data-lake-id=\"u536360b1\" id=\"u536360b1\">方案：以 postcss 插件形式</span></p><p data-lake-id=\"uc64a75ef\" id=\"uc64a75ef\"><span data-lake-id=\"ube30469c\" id=\"ube30469c\">Q: 是否增加去重策略，比如用户可以自定义分包重复 n 次的类才会提取到主包，以达到动态调整主包样式体积到最佳的目的</span></p><p data-lake-id=\"uab0e8dc0\" id=\"uab0e8dc0\"><span data-lake-id=\"u9f68ca03\" id=\"u9f68ca03\">​</span><br></p><p data-lake-id=\"uc3383c08\" id=\"uc3383c08\"><span data-lake-id=\"uaeb702c3\" id=\"uaeb702c3\">config 样式融合(怎样达到心智负担最低)</span></p><p data-lake-id=\"uc1128ec3\" id=\"uc1128ec3\"><span data-lake-id=\"u286bbb53\" id=\"u286bbb53\">统一扫文件和记录 app.json 的方式(选择 fast-glob)</span></p><p data-lake-id=\"u2855c420\" id=\"u2855c420\"><span data-lake-id=\"ub18b8f32\" id=\"ub18b8f32\">小程序只支持 import 相对路径</span></p><p data-lake-id=\"uc9844e41\" id=\"uc9844e41\"><span data-lake-id=\"ue188988e\" id=\"ue188988e\">省略冗余操作，分包全扫，输出时全部获取</span></p><p data-lake-id=\"u585ee9d7\" id=\"u585ee9d7\"><span data-lake-id=\"u3093dad8\" id=\"u3093dad8\">​</span><br></p><ul list=\"u8a27a2db\"><li fid=\"ue7c827db\" data-lake-id=\"u2ed05348\" id=\"u2ed05348\"><span data-lake-id=\"u51005cb1\" id=\"u51005cb1\">关闭分包内除第一层的操作</span></li></ul><p data-lake-id=\"ue7dfb31e\" id=\"ue7dfb31e\"><span data-lake-id=\"ua3fd5429\" id=\"ua3fd5429\">怎样区分主包和分包</span></p><p data-lake-id=\"ua8714648\" id=\"ua8714648\"><span data-lake-id=\"ufedabf7c\" id=\"ufedabf7c\">策略模式优化</span></p><p data-lake-id=\"ufa02711b\" id=\"ufa02711b\"><span data-lake-id=\"uc858799b\" id=\"uc858799b\">是否需要 import 主包样式</span></p><p data-lake-id=\"u37587513\" id=\"u37587513\"><span data-lake-id=\"u5920ca80\" id=\"u5920ca80\">是否增加文件内部的重复判断(躲避 tailwind 或者其他原因产生的 bug)</span></p><p data-lake-id=\"u691e03bc\" id=\"u691e03bc\"><span data-lake-id=\"ua828c61a\" id=\"ua828c61a\">原项目问题，未对主包做样式输出(只做了剔除处理)</span></p><p data-lake-id=\"u1f57e15c\" id=\"u1f57e15c\"><span data-lake-id=\"u775bd14f\" id=\"u775bd14f\">粒度调整(重复 n 次)</span></p><p data-lake-id=\"uc0c46dba\" id=\"uc0c46dba\"><span data-lake-id=\"ubcae1671\" id=\"ubcae1671\">是否应该保留 css 全量扫描，检测防止用户自定义 class 与 tailwind 命名冲突</span></p><p data-lake-id=\"uffbc8f4d\" id=\"uffbc8f4d\"><span data-lake-id=\"uc4263345\" id=\"uc4263345\">​</span><br></p><h3 data-lake-id=\"Pa3dt\" id=\"Pa3dt\"><span data-lake-id=\"u5508976b\" id=\"u5508976b\">动态值语法抹平</span></h3><p data-lake-id=\"ubd105e37\" id=\"ubd105e37\"><br></p><p data-lake-id=\"u912f5524\" id=\"u912f5524\"><span data-lake-id=\"u5c28509f\" id=\"u5c28509f\">参考：</span><a href=\"https://www.tailwindcss.cn/docs/just-in-time-mode#arbitrary-value-support\" target=\"_blank\" data-lake-id=\"uf68341f4\" id=\"uf68341f4\"><span data-lake-id=\"ube8f837c\" id=\"ube8f837c\">https://www.tailwindcss.cn/docs/just-in-time-mode#arbitrary-value-support</span></a></p><p data-lake-id=\"u56d3a522\" id=\"u56d3a522\"><span data-lake-id=\"uadcbbd8b\" id=\"uadcbbd8b\">例如：色值，样式 url 等自定义样式可以直接写在方括号中，那么之前想的绝大部分需要自定义的场景都不需要了，工作就转换为怎样支持例如 </span><code data-lake-id=\"uda4fcd3a\" id=\"uda4fcd3a\"><span data-lake-id=\"udfb8f65f\" id=\"udfb8f65f\">h-[918px]</span></code><span data-lake-id=\"ud3ea9403\" id=\"ud3ea9403\"> </span><code data-lake-id=\"u65f57077\" id=\"u65f57077\"><span data-lake-id=\"u8dfaa0af\" id=\"u8dfaa0af\">bg-[#1da1f1]</span></code><span data-lake-id=\"ud867394b\" id=\"ud867394b\"> 这样的语法。如果解决成本很高，或者特别麻烦，则考虑</span></p><ul list=\"ub05940ab\"><li fid=\"uf411db59\" data-lake-id=\"u42dbb2e9\" id=\"u42dbb2e9\"><span data-lake-id=\"u8f7d1040\" id=\"u8f7d1040\">不用动态值，混用原来的写法</span></li><li fid=\"uf411db59\" data-lake-id=\"ua5ceef24\" id=\"ua5ceef24\"><span data-lake-id=\"uf06de5af\" id=\"uf06de5af\">类似 taro 那样直接换用 windicss，windicss 可以直接支持 </span><code data-lake-id=\"ue0f722e2\" id=\"ue0f722e2\"><span data-lake-id=\"ua68e2fb4\" id=\"ua68e2fb4\">h-[918px]</span></code><span data-lake-id=\"u3a3ff017\" id=\"u3a3ff017\"> </span><code data-lake-id=\"ud5bc72d7\" id=\"ud5bc72d7\"><span data-lake-id=\"uf7d80285\" id=\"uf7d80285\">bg-[#1da1f1]</span></code></li></ul><p data-lake-id=\"u17e119c0\" id=\"u17e119c0\"><span data-lake-id=\"u7e900490\" id=\"u7e900490\">​</span><br></p><h3 data-lake-id=\"F3TIi\" id=\"F3TIi\"><span data-lake-id=\"ue730cb17\" id=\"ue730cb17\">自定义样式</span></h3><p data-lake-id=\"u872be3ce\" id=\"u872be3ce\"><br></p><p data-lake-id=\"ud54a9acf\" id=\"ud54a9acf\"><span data-lake-id=\"u12fd15f3\" id=\"u12fd15f3\">虽然 </span><code data-lake-id=\"uedf76844\" id=\"uedf76844\"><span data-lake-id=\"ub0d3019e\" id=\"ub0d3019e\">[..]</span></code><span data-lake-id=\"u62d0e4f3\" id=\"u62d0e4f3\"> 语法解决了绝大多数以前需要自定义的情况，但仍免不了开发时有可能需要手动自动义的情况，需要考虑自定义样式怎么写，会不会被覆盖的问题</span></p><p data-lake-id=\"ucb1ff613\" id=\"ucb1ff613\"><span data-lake-id=\"u050c3e7b\" id=\"u050c3e7b\">初步拟定：只用一份 tailwind.config，再其下的分包划分子目录，对应分包的自定义样式放在对应文件下，最后全部合并(注：考虑第三方分包的情况)</span></p><p data-lake-id=\"u370fbe3e\" id=\"u370fbe3e\"><span data-lake-id=\"ua232c959\" id=\"ua232c959\">​</span><br></p><h3 data-lake-id=\"Hs7Ks\" id=\"Hs7Ks\"><span data-lake-id=\"u1e74899b\" id=\"u1e74899b\">接入 windicss</span></h3><p data-lake-id=\"u0243b962\" id=\"u0243b962\"><br></p><p data-lake-id=\"ube5e0135\" id=\"ube5e0135\"><span data-lake-id=\"u62b04ef9\" id=\"u62b04ef9\">接入 windicss，让使用者可以自行选择</span></p><p data-lake-id=\"ue571a7a2\" id=\"ue571a7a2\"><span data-lake-id=\"uf03df4b2\" id=\"uf03df4b2\">​</span><br></p><h3 data-lake-id=\"GSCbG\" id=\"GSCbG\"><span data-lake-id=\"u4c0f8ce4\" id=\"u4c0f8ce4\">Tailwind cli 兼容</span></h3><p data-lake-id=\"uc353539b\" id=\"uc353539b\"><br></p><p data-lake-id=\"u59c97d2a\" id=\"u59c97d2a\"><span data-lake-id=\"u8bf78801\" id=\"u8bf78801\">问题升级：</span></p><ul list=\"u105814bd\"><li fid=\"ud9e0048c\" data-lake-id=\"ub0556683\" id=\"ub0556683\"><span data-lake-id=\"ud791bf15\" id=\"ud791bf15\">学习 tailwind cli 中 rebuild 的思路，实现 rebuild 速度提升</span></li><li fid=\"ud9e0048c\" data-lake-id=\"u53fd154b\" id=\"u53fd154b\"><span data-lake-id=\"ue4d1b1e5\" id=\"ue4d1b1e5\">如何兼容 cli 提供的配置</span></li></ul><p data-lake-id=\"u9cdd8aca\" id=\"u9cdd8aca\"><span data-lake-id=\"uca80b606\" id=\"uca80b606\">​</span><br></p><h3 data-lake-id=\"W0ygJ\" id=\"W0ygJ\"><span data-lake-id=\"ub4205825\" id=\"ub4205825\">demo 完善</span></h3><p data-lake-id=\"u79add53c\" id=\"u79add53c\"><br></p><ul list=\"u810a9f9a\"><li fid=\"u8a6523fc\" data-lake-id=\"u822b6bb8\" id=\"u822b6bb8\"><span data-lake-id=\"u0aa92828\" id=\"u0aa92828\">增加分包的组件目录</span></li><li fid=\"u8a6523fc\" data-lake-id=\"uae7aba44\" id=\"uae7aba44\"><span data-lake-id=\"u815cc88e\" id=\"u815cc88e\">增加测试的原子类数据</span></li></ul><p data-lake-id=\"uc6c8e947\" id=\"uc6c8e947\"><span data-lake-id=\"ue4923cbe\" id=\"ue4923cbe\">​</span><br></p><h3 data-lake-id=\"QLhAw\" id=\"QLhAw\"><span data-lake-id=\"ua46cc7b9\" id=\"ua46cc7b9\">自动重构工具</span></h3><p data-lake-id=\"ufde413b2\" id=\"ufde413b2\"><br></p><p data-lake-id=\"ud98af8bc\" id=\"ud98af8bc\"><span data-lake-id=\"ud8f66c18\" id=\"ud8f66c18\">有三种情况可能需要重构工具</span></p><ul list=\"u0b9235ce\"><li fid=\"u20a7ab0a\" data-lake-id=\"u7c5f49ac\" id=\"u7c5f49ac\"><span data-lake-id=\"u80b31922\" id=\"u80b31922\">未来对滴滴小程序项目逐步重构</span></li><li fid=\"u20a7ab0a\" data-lake-id=\"u10f6f9c9\" id=\"u10f6f9c9\"><span data-lake-id=\"u95307f4c\" id=\"u95307f4c\">正式重构前，可能需要先对小程序项目粗糙地进行全量改造(用于性能和体积测试，评估效益)</span></li><li fid=\"u20a7ab0a\" data-lake-id=\"u74b9f82b\" id=\"u74b9f82b\"><span data-lake-id=\"u4b485bbc\" id=\"u4b485bbc\">方便外部使用者</span></li></ul><p data-lake-id=\"u096546b9\" id=\"u096546b9\"><span data-lake-id=\"u53d80462\" id=\"u53d80462\">​</span><br></p><p data-lake-id=\"u7ecf512e\" id=\"u7ecf512e\"><span data-lake-id=\"ua42d6d29\" id=\"ua42d6d29\">尽量使用自动化重构 + 人工 review 的方案</span></p><p data-lake-id=\"u8d29b432\" id=\"u8d29b432\"><span data-lake-id=\"ucf666ee9\" id=\"ucf666ee9\">参考 tailwind，对样式表做反向映射</span></p><p data-lake-id=\"ud9402d44\" id=\"ud9402d44\"><span data-lake-id=\"ufc3e6348\" id=\"ufc3e6348\">​</span><br></p><h3 data-lake-id=\"gxBQI\" id=\"gxBQI\"><span data-lake-id=\"ub822dbe9\" id=\"ub822dbe9\">确认版本</span></h3><p data-lake-id=\"u2f943242\" id=\"u2f943242\"><br></p><p data-lake-id=\"u87a3d08b\" id=\"u87a3d08b\"><span data-lake-id=\"u929d4999\" id=\"u929d4999\">需要确认滴滴小程序 postcss 的配套插件都有能升级并兼容到 v8+ 的版本</span></p><h3 data-lake-id=\"Gwygs\" id=\"Gwygs\"><span data-lake-id=\"u66d31226\" id=\"u66d31226\">第二轮进度</span></h3><p data-lake-id=\"u45721407\" id=\"u45721407\"><br></p><p data-lake-id=\"uf74020b3\" id=\"uf74020b3\"><span data-lake-id=\"u8d5633f3\" id=\"u8d5633f3\">提重插件接入适配</span></p><p data-lake-id=\"u3dc2154d\" id=\"u3dc2154d\"><span data-lake-id=\"ua4a92a60\" id=\"ua4a92a60\">探究 windi 的 input file 数组实现</span></p><p data-lake-id=\"ua71e22b5\" id=\"ua71e22b5\"><span data-lake-id=\"u84565fd7\" id=\"u84565fd7\">tailwind 中动态更改 config content</span></p><p data-lake-id=\"ue9bac68c\" id=\"ue9bac68c\"><span data-lake-id=\"u3f1cd4de\" id=\"u3f1cd4de\">脚手架化，自定义 config 配置设计，ali argvs 注入原生脚手架设计</span></p><p data-lake-id=\"u30aa6db5\" id=\"u30aa6db5\"><span data-lake-id=\"uc8d1d99e\" id=\"uc8d1d99e\">fast-glob &amp; node-glob (windi使用)调研，将原方法改造为 glob 扫描</span></p><p data-lake-id=\"u6a7c01e6\" id=\"u6a7c01e6\"><span data-lake-id=\"u0c0f5fb1\" id=\"u0c0f5fb1\">windi 接入</span></p><p data-lake-id=\"u43dbed7e\" id=\"u43dbed7e\"><span data-lake-id=\"u1669ed93\" id=\"u1669ed93\">分包扫描概念确定</span></p><p data-lake-id=\"u7a0f5678\" id=\"u7a0f5678\"><span data-lake-id=\"uda596107\" id=\"uda596107\">分包名可能是类似 a/b/c，所以最佳还是通过 app.json 拼出分包路径再进行扫描</span></p><p data-lake-id=\"u2e78e193\" id=\"u2e78e193\"><span data-lake-id=\"ua2059755\" id=\"ua2059755\">​</span><br></p><h3 data-lake-id=\"ejjFc\" id=\"ejjFc\"><span data-lake-id=\"u5a743903\" id=\"u5a743903\">初步设想</span></h3><p data-lake-id=\"u63248c51\" id=\"u63248c51\"><br></p><ul list=\"u28230c12\"><li fid=\"u1f8f80cd\" data-lake-id=\"u98b94c40\" id=\"u98b94c40\"><span data-lake-id=\"ubd30abc6\" id=\"ubd30abc6\">思路</span></li></ul><p data-lake-id=\"uefbdf92c\" id=\"uefbdf92c\"><span data-lake-id=\"u8261b97e\" id=\"u8261b97e\">​</span><br></p><p data-lake-id=\"u150d06c7\" id=\"u150d06c7\"><span data-lake-id=\"u50d35745\" id=\"u50d35745\">向外提供一套完整的原生小程序接入/重构 tailwind 方案(将以下能力集成并配置化)</span></p><ul list=\"u4c33ec59\" data-lake-indent=\"1\"><li fid=\"u99d9fd17\" data-lake-id=\"u6fd793d7\" id=\"u6fd793d7\"><span data-lake-id=\"u9ea8a1c1\" id=\"u9ea8a1c1\">用户可以选择切换 tailwind 模式或 windicss 模式</span></li><li fid=\"u99d9fd17\" data-lake-id=\"u1cf964b1\" id=\"u1cf964b1\"><span data-lake-id=\"ue723f597\" id=\"ue723f597\">分包处理 + 公共样式提取(可配置场景：用户可以选择是否使用分包场景；可配置样式表生成方案，例如主包一份/分包各自一份/独立分包一份/指定分包输出)</span></li><li fid=\"u99d9fd17\" data-lake-id=\"u97dd515a\" id=\"u97dd515a\"><span data-lake-id=\"ucf8cd773\" id=\"ucf8cd773\">更细化的小程序专用预设，以及提供给使用者更多的选择(解决动态值的抹平；针对 toB 和 toC 有格子定制场景，比如 toB 侧重复用模版，toC 侧重自定义值)</span></li><li fid=\"u99d9fd17\" data-lake-id=\"u06b9dcb3\" id=\"u06b9dcb3\"><span data-lake-id=\"u658dd820\" id=\"u658dd820\">提供 demo + 配套的自动化重构工具</span></li><li fid=\"u99d9fd17\" data-lake-id=\"u81a8a421\" id=\"u81a8a421\"><span data-lake-id=\"u38c4d5b4\" id=\"u38c4d5b4\">基于官方的 playground，写入自己的 config，然后生成分享链接，作为定制小程序语法的 playground</span></li></ul><blockquote data-lake-id=\"ud693a914\" id=\"ud693a914\"><p data-lake-id=\"uebdf8416\" id=\"uebdf8416\"><span data-lake-id=\"ue8c26ed2\" id=\"ue8c26ed2\">适用场景：所有原生小程序 + 所有原小程序框架处理后打包出的原生小程序文件</span></p></blockquote><ul list=\"u28230c12\" start=\"2\"><li fid=\"u1f8f80cd\" data-lake-id=\"u4944e133\" id=\"u4944e133\"><span data-lake-id=\"ue6189496\" id=\"ue6189496\">大致目录划分</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22markdown%22%2C%22code%22%3A%22%E4%B8%8D%E7%9F%A5%E9%81%93%E5%8F%96%E5%95%A5%E5%90%8D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5Cn%E2%94%9C%E2%94%80%E2%94%80%20lib%5Cn%E2%94%82%20%E2%94%9C%E2%94%80%E2%94%80%20processSubpackage.ts%20%2F%2F%20%E6%A0%B8%E5%BF%83%E6%B5%81%E7%A8%8B%3A%E6%8C%89%E5%88%86%E5%8C%85%E8%BE%93%E5%87%BA%E6%A0%B7%E5%BC%8F%20%2B%20postcss%E6%8F%92%E4%BB%B6%E6%8F%90%E9%87%8D%20%20%20%20%20%20%20%20%20%5Cn%E2%94%82%20%E2%94%9C%E2%94%80%E2%94%80%20accessWatch.ts%20%20%20%20%20%20%20%2F%2F%20watch%20%26%20rebuild%5Cn%E2%94%9C%E2%94%80%E2%94%80%20presets%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%E9%92%88%E5%AF%B9%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9C%BA%E6%99%AF%E7%9A%84%E5%86%85%E7%BD%AE%E9%A2%84%E8%AE%BE%5Cn%E2%94%82%20%E2%94%9C%E2%94%80%E2%94%80%20tailwindPreset%20%20%2F%2F%20tailwind%20%E9%A2%84%E8%AE%BE%E9%9B%86%5Cn%E2%94%82%20%E2%94%94%E2%94%80%E2%94%80%20windiPrset%20%20%20%20%20%20%2F%2F%20windicss%20%E9%A2%84%E8%AE%BE%E9%9B%86%5Cn%E2%94%9C%E2%94%80%E2%94%80%20customStyle%20%20%20%20%20%20%20%2F%2F%20%E7%94%A8%E6%88%B7%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8E%9F%E5%AD%90%E7%B1%BB%5Cn%E2%94%82%20%E2%94%9C%E2%94%80%E2%94%80subpackageName%20%20%20%2F%2F%20%E6%A0%B9%E6%8D%AEapp.json%E7%9A%84%E6%89%AB%E6%8F%8F%E5%BE%97%E5%88%B0%E7%9A%84%E5%88%86%E5%8C%85%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E7%9B%AE%E5%BD%95%5Cn%E2%94%9C%E2%94%80%E2%94%80%20utils%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%E5%B7%A5%E5%85%B7%E9%9B%86%5Cn%E2%94%82%20%E2%94%9C%E2%94%80%E2%94%80%20extractPlugin%20%20%20%2F%2F%20%E7%94%A8%E4%BA%8E%E6%8F%90%E9%87%8D%E7%9A%84postcss%E6%8F%92%E4%BB%B6%5Cn%E2%94%82%20%E2%94%9C%E2%94%80%E2%94%80%20refactHelper%20%20%20%20%2F%2F%20%E8%87%AA%E5%8A%A8%E9%87%8D%E6%9E%84%E5%B7%A5%E5%85%B7%5Cn%E2%94%9C%E2%94%80%E2%94%80%20config.ts%20%20%20%20%20%20%20%20%20%2F%2F%20%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6(%E4%BE%8B%E5%A6%82%E9%80%89%E6%8B%A9tail%E6%88%96windi%2F%E6%98%AF%E5%90%A6%E5%88%86%E5%8C%85%E5%A4%84%E7%90%86)%5Cn%E2%94%9C%E2%94%80%E2%94%80%20index.ts%20%20%20%20%20%20%20%20%20%20%2F%2F%20config.js%20%E5%A4%84%E7%90%86%20%26%20cli%E9%85%8D%E7%BD%AE%5Cn%E2%94%94%E2%94%80%E2%94%80%20example%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20demo(%E8%87%AA%E5%B8%A6%E5%88%86%E5%8C%85%2B%E6%B5%8B%E8%AF%95%E7%B1%BB)%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22vp0Wh%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ul list=\"ucb89e0cf\"><li fid=\"ubbe6069a\" data-lake-id=\"ub49b2b7a\" id=\"ub49b2b7a\"><span data-lake-id=\"u95a2ef9b\" id=\"u95a2ef9b\">优点</span></li></ul><ul list=\"ucb89e0cf\" data-lake-indent=\"1\"><li fid=\"ubbe6069a\" data-lake-id=\"u53476e16\" id=\"u53476e16\"><span data-lake-id=\"u6f51960e\" id=\"u6f51960e\">基于原生，适用全场景，与小程序框架解耦</span></li><li fid=\"ubbe6069a\" data-lake-id=\"u73723673\" id=\"u73723673\"><span data-lake-id=\"u67a17f05\" id=\"u67a17f05\">基于 tailwind cli 和 windicss cli 上层封装，与 tailwind 和 windicss 源码本身解耦，可以随时间同步新特性</span></li><li fid=\"ubbe6069a\" data-lake-id=\"u06d9c008\" id=\"u06d9c008\"><span data-lake-id=\"u5769dcc5\" id=\"u5769dcc5\">高度自定义(将特性都做成用户可配置，例如样式库选择，分包输出策略 ，去重策略等)</span></li><li fid=\"ubbe6069a\" data-lake-id=\"u3b7c45d7\" id=\"u3b7c45d7\"><span data-lake-id=\"u87df5146\" id=\"u87df5146\">提供重构工具，快速改造旧项目</span></li></ul><p data-lake-id=\"u3c86db2f\" id=\"u3c86db2f\"><span data-lake-id=\"u82c15c81\" id=\"u82c15c81\">​</span><br></p><h3 data-lake-id=\"gCEGD\" id=\"gCEGD\"><span data-lake-id=\"u552ef168\" id=\"u552ef168\">对当前最佳实践的探索</span></h3><p data-lake-id=\"u8a56dc15\" id=\"u8a56dc15\"><br></p><ul list=\"uf26cbbac\"><li fid=\"u0a3e5ad9\" data-lake-id=\"u6d1b14c6\" id=\"u6d1b14c6\"><span data-lake-id=\"ud9a50158\" id=\"ud9a50158\">vscode 插件：Tailwind Css IntelliSense 关联 mpx 以及 wxml</span></li><li fid=\"u0a3e5ad9\" data-lake-id=\"ufbb871e2\" id=\"ufbb871e2\"><span data-lake-id=\"u2264cf2b\" id=\"u2264cf2b\">组件拿到页面样式：</span><code data-lake-id=\"u928e47a5\" id=\"u928e47a5\"><span data-lake-id=\"u91d39122\" id=\"u91d39122\">&quot;stylelsolation&quot;: &quot;apply-shared&quot;</span></code></li><li fid=\"u0a3e5ad9\" data-lake-id=\"u8b6abab6\" id=\"u8b6abab6\"><span data-lake-id=\"u092c5754\" id=\"u092c5754\">demo 目前在 node v14.18.0 下不会报错</span></li></ul><p data-lake-id=\"ude99afc3\" id=\"ude99afc3\"><br></p><h2 data-lake-id=\"ibiyG\" id=\"ibiyG\"><span data-lake-id=\"ubd188913\" id=\"ubd188913\">第三阶段</span></h2><p data-lake-id=\"u1dc98ee4\" id=\"u1dc98ee4\"><br></p><ul list=\"ua3d31b25\"><li fid=\"u7224f920\" data-lake-id=\"u5d344447\" id=\"u5d344447\"><span data-lake-id=\"u7253d8a6\" id=\"u7253d8a6\">问题</span></li></ul><ul list=\"ua3d31b25\" data-lake-indent=\"1\"><li fid=\"u7224f920\" data-lake-id=\"ub9a7b3ae\" id=\"ub9a7b3ae\"><span data-lake-id=\"uc29258d4\" id=\"uc29258d4\">可调试性变差，之前可以直接在开发者工具增删改 css</span></li><li fid=\"u7224f920\" data-lake-id=\"u830b2283\" id=\"u830b2283\"><span data-lake-id=\"u786ccc25\" id=\"u786ccc25\">windicss 给 web 调试提供了 windi:devtools，待验证小程序中是否生效</span></li><li fid=\"u7224f920\" data-lake-id=\"u9a29bf9a\" id=\"u9a29bf9a\"><span data-lake-id=\"u3cd64d8d\" id=\"u3cd64d8d\">watch 提速</span></li><li fid=\"u7224f920\" data-lake-id=\"u5cacc13a\" id=\"u5cacc13a\"><span data-lake-id=\"u479f7a32\" id=\"u479f7a32\">增加 debug 模式，例如开启核心变量 console，debugger</span></li></ul><p data-lake-id=\"uc312bbf5\" id=\"uc312bbf5\"><span data-lake-id=\"u266943b6\" id=\"u266943b6\">​</span><br></p><h1 data-lake-id=\"unLPb\" id=\"unLPb\"><span data-lake-id=\"ufba6877c\" id=\"ufba6877c\">附</span></h1><h2 data-lake-id=\"taezl\" id=\"taezl\"><span data-lake-id=\"u8fa64a9e\" id=\"u8fa64a9e\">参考文档</span></h2><p data-lake-id=\"u16a1a48e\" id=\"u16a1a48e\"><span data-lake-id=\"u2eceebc0\" id=\"u2eceebc0\">​</span><br></p><p data-lake-id=\"ud8f0c44d\" id=\"ud8f0c44d\"><span data-lake-id=\"u96e8d373\" id=\"u96e8d373\">系列文章：</span><a href=\"https://developers.weixin.qq.com/community/personal/oCJUsw1GWHOwOLn7MZ4Rbb8T-FVE\" target=\"_blank\" data-lake-id=\"uf87bd970\" id=\"uf87bd970\"><span data-lake-id=\"u50fc2885\" id=\"u50fc2885\">https://developers.weixin.qq.com/community/personal/oCJUsw1GWHOwOLn7MZ4Rbb8T-FVE</span></a></p><p data-lake-id=\"u1b5141e6\" id=\"u1b5141e6\"><span data-lake-id=\"ue55bf022\" id=\"ue55bf022\">purge 分析：</span><a href=\"https://gitee.com/sl1673495/pictures/issues/I3CJER?_from=gitee_search\" target=\"_blank\" data-lake-id=\"ue8401bcf\" id=\"ue8401bcf\"><span data-lake-id=\"u3a31d4fb\" id=\"u3a31d4fb\">https://gitee.com/sl1673495/pictures/issues/I3CJER?_from=gitee_search</span></a></p><p data-lake-id=\"uebd8d1c7\" id=\"uebd8d1c7\"><span data-lake-id=\"u14734fd8\" id=\"u14734fd8\">小程序文档-样式隔离：</span><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html\" target=\"_blank\" data-lake-id=\"uc9de325f\" id=\"uc9de325f\"><span data-lake-id=\"u52b46546\" id=\"u52b46546\">https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/wxml-wxss.html</span></a></p><h2 data-lake-id=\"TzYwE\" id=\"TzYwE\"><span data-lake-id=\"ub2847934\" id=\"ub2847934\">参考仓库及分支</span></h2><p data-lake-id=\"u4844a32f\" id=\"u4844a32f\"><span data-lake-id=\"u6940f13f\" id=\"u6940f13f\">demo：</span><a href=\"https://github.com/gloomyKevin/mpx-example-king\" target=\"_blank\" data-lake-id=\"uad745b1d\" id=\"uad745b1d\"><span data-lake-id=\"u9c080180\" id=\"u9c080180\">https://github.com/gloomyKevin/mpx-example-king</span></a></p><ul list=\"u9255d8fe\"><li fid=\"ub2633521\" data-lake-id=\"u85c700e0\" id=\"u85c700e0\"><span data-lake-id=\"u75e1c0fe\" id=\"u75e1c0fe\">features 集成分支：dev</span></li><li fid=\"ub2633521\" data-lake-id=\"ubdcb2833\" id=\"ubdcb2833\"><span data-lake-id=\"ue983f6e3\" id=\"ue983f6e3\">预设：</span><a href=\"https://github.com/gloomyKevin/tailwindcss-miniprogram-preset\" target=\"_blank\" data-lake-id=\"u0157dce2\" id=\"u0157dce2\"><span data-lake-id=\"u7dc65a58\" id=\"u7dc65a58\">https://github.com/gloomyKevin/tailwindcss-miniprogram-preset</span></a></li><li fid=\"ub2633521\" data-lake-id=\"u6a9806d7\" id=\"u6a9806d7\"><span data-lake-id=\"u04d7380c\" id=\"u04d7380c\">fork 下来后独立发包：</span><a href=\"https://www.npmjs.com/package/mpx-tailwindcss-preset\" target=\"_blank\" data-lake-id=\"u31952c74\" id=\"u31952c74\"><span data-lake-id=\"u4e3e35b0\" id=\"u4e3e35b0\">https://www.npmjs.com/package/mpx-tailwindcss-preset</span></a></li></ul><p data-lake-id=\"u1f930f03\" id=\"u1f930f03\"><span data-lake-id=\"uecabbdd7\" id=\"uecabbdd7\">当前版本：2.1.4</span></p><ul list=\"u3bcbad1a\"><li fid=\"u056ca175\" data-lake-id=\"u759bea68\" id=\"u759bea68\"><span data-lake-id=\"u2c5b6f02\" id=\"u2c5b6f02\">插件：</span><a href=\"https://github.com/theowenyoung/mini-tailwind\" target=\"_blank\" data-lake-id=\"uf3fdc956\" id=\"uf3fdc956\"><span data-lake-id=\"u79cd2479\" id=\"u79cd2479\">https://github.com/theowenyoung/mini-tailwind</span></a></li><li fid=\"u056ca175\" data-lake-id=\"u37846ee1\" id=\"u37846ee1\"><span data-lake-id=\"ud84fa9bd\" id=\"ud84fa9bd\">新版 taro 插件：</span><a href=\"https://github.com/pcdotfan/taro-plugin-tailwind\" target=\"_blank\" data-lake-id=\"u3701d9ab\" id=\"u3701d9ab\"><span data-lake-id=\"u64b97b84\" id=\"u64b97b84\">https://github.com/pcdotfan/taro-plugin-tailwind</span></a></li><li fid=\"u056ca175\" data-lake-id=\"ue41808bc\" id=\"ue41808bc\"><span data-lake-id=\"u0eb52116\" id=\"u0eb52116\">旧版 taro 插件：</span><a href=\"https://github.com/windedge/taro-tailwind\" target=\"_blank\" data-lake-id=\"u6e43aefa\" id=\"u6e43aefa\"><span data-lake-id=\"u51f1e634\" id=\"u51f1e634\">https://github.com/windedge/taro-tailwind</span></a></li></ul>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 3810,
  "created_at": "2022-02-22T09:59:00.000Z",
  "updated_at": "2022-03-03T15:09:12.000Z",
  "content_updated_at": "2022-02-22T12:18:28.000Z",
  "published_at": "2022-02-22T12:18:28.000Z",
  "first_published_at": "2022-02-22T10:00:03.000Z",
  "book": {
    "id": 24987782,
    "type": "Book",
    "slug": "aggvdq",
    "name": "项目梳理",
    "user_id": 732231,
    "description": "用来梳理一些项目的内容",
    "toc_yml": "- type: META\n  count: 27\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 219001536\n  published: true\n  max_level: 2\n  last_updated_at: 2022-07-05T05:31:54.296Z\n  version_id: 219001620\n- type: DOC\n  title: 自我介绍\n  uuid: czSnLwlZX5r2CJfX\n  url: nowm78\n  prev_uuid: ''\n  sibling_uuid: 0Z_QJNT6lajGoxNa\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 71314643\n  level: 0\n  id: 71314643\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 面经\n  uuid: 0Z_QJNT6lajGoxNa\n  url: uhv9t2\n  prev_uuid: czSnLwlZX5r2CJfX\n  sibling_uuid: BAls4pP-NeY80xRi\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 73218284\n  level: 0\n  id: 73218284\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 项目\n  uuid: BAls4pP-NeY80xRi\n  url: ''\n  prev_uuid: 0Z_QJNT6lajGoxNa\n  sibling_uuid: OBIPwt2GqG4q-vpQ\n  child_uuid: iAehDOuKbi90rUiI\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: mpx\n  uuid: iAehDOuKbi90rUiI\n  url: flzwri\n  prev_uuid: BAls4pP-NeY80xRi\n  sibling_uuid: ZBy9d0lBfyBCBXpu\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 82395946\n  level: 1\n  id: 82395946\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 滴滴出行小程序\n  uuid: ZBy9d0lBfyBCBXpu\n  url: ''\n  prev_uuid: iAehDOuKbi90rUiI\n  sibling_uuid: GLK4TI6bZt4Xxu6b\n  child_uuid: '-dL8H8y1HcmyCKgY'\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 小程序包体积优化\n  uuid: '-dL8H8y1HcmyCKgY'\n  url: qf3q0x\n  prev_uuid: ZBy9d0lBfyBCBXpu\n  sibling_uuid: EJe2oPQpRB-N11Xb\n  child_uuid: ''\n  parent_uuid: ZBy9d0lBfyBCBXpu\n  doc_id: 75039167\n  level: 2\n  id: 75039167\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: mpx 性能优化\n  uuid: EJe2oPQpRB-N11Xb\n  url: hgoyws\n  prev_uuid: '-dL8H8y1HcmyCKgY'\n  sibling_uuid: guwD9YXgthBX_ez4\n  child_uuid: ''\n  parent_uuid: ZBy9d0lBfyBCBXpu\n  doc_id: 74717740\n  level: 2\n  id: 74717740\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 冒泡页\n  uuid: guwD9YXgthBX_ez4\n  url: mo05y7\n  prev_uuid: EJe2oPQpRB-N11Xb\n  sibling_uuid: jVVd9OODBN3wWQ5P\n  child_uuid: ''\n  parent_uuid: ZBy9d0lBfyBCBXpu\n  doc_id: 73628145\n  level: 2\n  id: 73628145\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 行程中\n  uuid: jVVd9OODBN3wWQ5P\n  url: oyxdqe\n  prev_uuid: guwD9YXgthBX_ez4\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: ZBy9d0lBfyBCBXpu\n  doc_id: 73628172\n  level: 2\n  id: 73628172\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 小程序上线管理平台\n  uuid: GLK4TI6bZt4Xxu6b\n  url: ''\n  prev_uuid: ZBy9d0lBfyBCBXpu\n  sibling_uuid: 1Y-EVaBFWkuKnN0_\n  child_uuid: xpKQHRV_K7bfp3gb\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 介绍\n  uuid: xpKQHRV_K7bfp3gb\n  url: klkzoy\n  prev_uuid: GLK4TI6bZt4Xxu6b\n  sibling_uuid: xCty9hwaaVernWqJ\n  child_uuid: ''\n  parent_uuid: GLK4TI6bZt4Xxu6b\n  doc_id: 66948082\n  level: 2\n  id: 66948082\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 发布方式\n  uuid: xCty9hwaaVernWqJ\n  url: ohsgmx\n  prev_uuid: xpKQHRV_K7bfp3gb\n  sibling_uuid: 1robqYdQQG0wFPvT\n  child_uuid: ''\n  parent_uuid: GLK4TI6bZt4Xxu6b\n  doc_id: 75212608\n  level: 2\n  id: 75212608\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数据库表设计\n  uuid: 1robqYdQQG0wFPvT\n  url: csg8d4\n  prev_uuid: xCty9hwaaVernWqJ\n  sibling_uuid: Dvglyu8bpWNiJpBK\n  child_uuid: ''\n  parent_uuid: GLK4TI6bZt4Xxu6b\n  doc_id: 66912281\n  level: 2\n  id: 66912281\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 原型设计\n  uuid: Dvglyu8bpWNiJpBK\n  url: ktgzlc\n  prev_uuid: 1robqYdQQG0wFPvT\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: GLK4TI6bZt4Xxu6b\n  doc_id: 67155542\n  level: 2\n  id: 67155542\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: webx\n  uuid: 1Y-EVaBFWkuKnN0_\n  url: yghis3\n  prev_uuid: GLK4TI6bZt4Xxu6b\n  sibling_uuid: s3s0XuEuOPAMWB6v\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 73626184\n  level: 1\n  id: 73626184\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: TypeScript 在团队内部的实践总结\n  uuid: s3s0XuEuOPAMWB6v\n  url: bp0lie\n  prev_uuid: 1Y-EVaBFWkuKnN0_\n  sibling_uuid: cBBVzib8WHiSWbfw\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 70125424\n  level: 1\n  id: 70125424\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 利用 ts + proxy 增强 api 类型推导功能\n  uuid: cBBVzib8WHiSWbfw\n  url: wagl2t\n  prev_uuid: s3s0XuEuOPAMWB6v\n  sibling_uuid: OSV3qUcGRRunfF_K\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 75215879\n  level: 1\n  id: 75215879\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 人工审核系统\n  uuid: OSV3qUcGRRunfF_K\n  url: nw2hf8\n  prev_uuid: cBBVzib8WHiSWbfw\n  sibling_uuid: Z9NSZiuYLWhda8gH\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 75041091\n  level: 1\n  id: 75041091\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 长列表性能优化\n  uuid: Z9NSZiuYLWhda8gH\n  url: gkfqwb\n  prev_uuid: OSV3qUcGRRunfF_K\n  sibling_uuid: Xkshht2CcjCCitea\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 75286551\n  level: 1\n  id: 75286551\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序体验分优化\n  uuid: Xkshht2CcjCCitea\n  url: kdytb8\n  prev_uuid: Z9NSZiuYLWhda8gH\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 75216281\n  level: 1\n  id: 75216281\n  open_window: 0\n  visible: 0\n- type: TITLE\n  title: 小程序接入原子化 css 样式库并支持分包输出\n  uuid: OBIPwt2GqG4q-vpQ\n  url: ''\n  prev_uuid: BAls4pP-NeY80xRi\n  sibling_uuid: aPheiwf1071mw6tU\n  child_uuid: tpFBhK_D2hlsZj9w\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 备忘录\n  uuid: tpFBhK_D2hlsZj9w\n  url: pbxykl\n  prev_uuid: OBIPwt2GqG4q-vpQ\n  sibling_uuid: iJCb_ylpdQ6AVtDy\n  child_uuid: ''\n  parent_uuid: OBIPwt2GqG4q-vpQ\n  doc_id: 67295600\n  level: 1\n  id: 67295600\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 架构设计\n  uuid: iJCb_ylpdQ6AVtDy\n  url: elafeo\n  prev_uuid: tpFBhK_D2hlsZj9w\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: OBIPwt2GqG4q-vpQ\n  doc_id: 70799795\n  level: 1\n  id: 70799795\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 研发流程\n  uuid: aPheiwf1071mw6tU\n  url: rl51ig\n  prev_uuid: OBIPwt2GqG4q-vpQ\n  sibling_uuid: KiBu4V9imsSGolKk\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 70125489\n  level: 0\n  id: 70125489\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 一些分享\n  uuid: KiBu4V9imsSGolKk\n  url: guat9s\n  prev_uuid: aPheiwf1071mw6tU\n  sibling_uuid: 5AwFIGCO-4sox4yt\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 71173266\n  level: 0\n  id: 71173266\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 字节面经\n  uuid: 5AwFIGCO-4sox4yt\n  url: gq8kd3\n  prev_uuid: KiBu4V9imsSGolKk\n  sibling_uuid: 8ot1aeLekjpB9XKV\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 81937341\n  level: 0\n  id: 81937341\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: polyfill\n  uuid: 8ot1aeLekjpB9XKV\n  url: nzrear\n  prev_uuid: 5AwFIGCO-4sox4yt\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 81938260\n  level: 0\n  id: 81938260\n  open_window: 0\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 23,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2022-12-25T07:59:52.340Z",
    "created_at": "2022-03-03T15:06:25.000Z",
    "updated_at": "2023-11-07T15:52:14.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-22T20:13:30.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/aggvdq",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 832682098,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}