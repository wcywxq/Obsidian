{
  "id": 75215879,
  "slug": "wagl2t",
  "title": "利用 ts + proxy 增强 api 类型推导功能",
  "description": "接口 response 配置文件interface IUserGetArg {   id: string }  interface IUserGetRe {   name: string }  export default interface IUserAPI {   user: {     ...",
  "cover": "",
  "user_id": 732231,
  "book_id": 24987782,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"YWnaB\"><span class=\"ne-text\">接口 response 配置文件</span></h2><pre data-language=\"typescript\" id=\"VG7fb\" class=\"ne-codeblock language-typescript\">interface IUserGetArg {\n  id: string\n}\n\ninterface IUserGetRe {\n  name: string\n}\n\nexport default interface IUserAPI {\n  user: {\n    get: (get: IUserGetArg) =&gt; IUserGetRe\n  };\n  login: {\n    &quot;verify-code&quot;: {\n      get: (arg: IUserGetArg) =&gt; IUserGetRe\n    }\n  }\n}</pre><h2 id=\"RXo14\"><span class=\"ne-text\">请求函数类型映射文件</span></h2><pre data-language=\"typescript\" id=\"t6ihp\" class=\"ne-codeblock language-typescript\">import { HttpConfig } from &quot;.&quot;\nimport IUserAPI from &quot;./user&quot;\n\n// 后端返回格式\nexport interface IResponse&lt;T = any&gt; {\n  code: number\n  message: string\n  success: boolean\n  data: T\n}\n// 只对继承改类型的函数进行映射，也就是当函数有0和1个参数时映射\ntype AnyFn = (arg: any) =&gt; any\n// 函数返回结果的格式\ntype FnReturn&lt;T extends AnyFn&gt; = Promise&lt;IResponse&lt;ReturnType&lt;T&gt;&gt;&gt;\n// 函数没定义参数时的映射格式\ntype Fn1&lt;T extends AnyFn&gt; = (config?: HttpConfig) =&gt; FnReturn&lt;T&gt;\n// 函数定义参数时的映射格式\ntype Fn2&lt;T extends AnyFn&gt; = (arg: Parameters&lt;T&gt;[0], config?: HttpConfig) =&gt; FnReturn&lt;T&gt;\n// 根据有无参数映射上面两个函数格式\ntype HttpMethod&lt;T extends AnyFn&gt; = Parameters&lt;T&gt;[0] extends undefined | null ? Fn1&lt;T&gt; : Fn2&lt;T&gt;\n\n// 对传入的类型深度处理所有为 AnyFn 的子类型为 Fn1 或 Fn2\ntype ToPromise&lt;T&gt; = {\n  [K in keyof T]: T[K] extends AnyFn ? HttpMethod&lt;T[K]&gt; : ToPromise&lt;T[K]&gt;\n}\n\n// 把所有的 API 类型合并为一个\ninterface IMixinAPI extends IUserAPI {}\n\n// 对合并后的类型进行映射处理\nexport default interface IRootAPI extends ToPromise&lt;IMixinAPI&gt; {\n  url: string\n}</pre><h2 id=\"JGVGN\"><span class=\"ne-text\">基于 proxy 的拦截器配置文件</span></h2><pre data-language=\"typescript\" id=\"r9xpA\" class=\"ne-codeblock language-typescript\">import axios, { AxiosRequestConfig, AxiosResponse } from &quot;axios&quot;\nimport IRootAPI, { IResponse } from &quot;./mixins&quot;\n\nconst service = axios.create({\n  baseURL: &quot;&quot;,\n  timeout: 10000,\n})\n\nexport class HttpConfig {\n  public config: AxiosRequestConfig\n  \n  constructor(config: AxiosRequestConfig) {\n    this.config = config\n  }\n}\n\nconst handler: ProxyHandler&lt;IRootAPI&gt; = {\n  get: function get(target, prop): any {\n    let value: any // 用于为 undefined 的属性赋值\n    // 对象取值，效果和 target[prop] 类似\n    const item = Reflect.get(target, prop)\n    // 这里主要是拿 service.get, service.post, service.put, service.delete，为了方便就写在一起\n    const httpMethod = Reflect.get(service, prop)\n    const method = {\n      params: (arg1?: any, arg2?: HttpConfig) =&gt; {\n        return arg1 instanceof HttpConfig\n          ? httpMethod(target.url, arg1?.config)\n          : httpMethod(target.url, {\n              params: { ...arg1 },\n              ...arg2\n            })\n      },\n      data: (arg1?: any, arg2?: HttpConfig) =&gt; {\n        return arg1 instanceof HttpConfig\n          ? httpMethod(target.url, arg1?.config)\n          : httpMethod(target.url, { ...arg1 }, arg2?.config)\n      }\n    }\n    \n    switch (prop) {\n      case &quot;get&quot; || &quot;delete&quot;:\n        value = methods.params\n        break\n      case &quot;post&quot; || &quot;put&quot;:\n        value = methods.data\n        break\n      case &quot;url&quot;:\n        value = item\n        break\n      default:\n        value = {\n          ...item,\n          url: `${target.url ?? &quot;&quot;}/${prop.toString()}`\n        }\n        break\n    }\n    \n    if (!item || typeof item !== &quot;function&quot;) {\n      Reflect.set(target, prop, value)\n    }\n    \n    return new Proxy(Reflect.get(target, prop), { get })\n  }\n}\n\nexport const http = new Proxy({} as IRootAPI, handler)</pre><h2 id=\"tsVLW\"><span class=\"ne-text\">使用方式</span></h2><pre data-language=\"tsx\" id=\"XOlyk\" class=\"ne-codeblock language-tsx\">import React, { useEffect } from &quot;react&quot;\nimport logo from &quot;./logo.svg&quot;\nimport &quot;./App.css&quot;\nimport { http } from &quot;./api&quot;\n\nfunction App() {\n  useEffect(() =&gt; {\n    http.login[&quot;verify-code&quot;].get({ id: &quot;123&quot; }, {\n      config: {\n        url: &quot;http://www.baidu.com&quot;\n      }\n    }).then(val =&gt; {\n      console.log(val)\n    })\n  }, [])\n  \n  return (\n    &lt;div className=&quot;App&quot;&gt;\n      &lt;header className=&quot;App-header&quot;&gt;\n        &lt;img src={logo} className=&quot;App-logo&quot; alt=&quot;logo&quot; /&gt;\n        &lt;p&gt;Edit &lt;code&gt;src/App.tsx&lt;/code&gt; and save to reload.&lt;/p&gt;\n        &lt;a className=&quot;App-link&quot; href=&quot;http://reactjs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;\n          Learn React\n        &lt;/a&gt;\n      &lt;/header&gt;\n    &lt;/div&gt;\n  )\n}</pre></div>",
  "body": "<a name=\"YWnaB\"></a>\n## 接口 response 配置文件\n```typescript\ninterface IUserGetArg {\n  id: string\n}\n\ninterface IUserGetRe {\n  name: string\n}\n\nexport default interface IUserAPI {\n  user: {\n    get: (get: IUserGetArg) => IUserGetRe\n  };\n  login: {\n    \"verify-code\": {\n      get: (arg: IUserGetArg) => IUserGetRe\n    }\n  }\n}\n```\n<a name=\"RXo14\"></a>\n## 请求函数类型映射文件\n```typescript\nimport { HttpConfig } from \".\"\nimport IUserAPI from \"./user\"\n\n// 后端返回格式\nexport interface IResponse<T = any> {\n  code: number\n  message: string\n  success: boolean\n  data: T\n}\n// 只对继承改类型的函数进行映射，也就是当函数有0和1个参数时映射\ntype AnyFn = (arg: any) => any\n// 函数返回结果的格式\ntype FnReturn<T extends AnyFn> = Promise<IResponse<ReturnType<T>>>\n// 函数没定义参数时的映射格式\ntype Fn1<T extends AnyFn> = (config?: HttpConfig) => FnReturn<T>\n// 函数定义参数时的映射格式\ntype Fn2<T extends AnyFn> = (arg: Parameters<T>[0], config?: HttpConfig) => FnReturn<T>\n// 根据有无参数映射上面两个函数格式\ntype HttpMethod<T extends AnyFn> = Parameters<T>[0] extends undefined | null ? Fn1<T> : Fn2<T>\n\n// 对传入的类型深度处理所有为 AnyFn 的子类型为 Fn1 或 Fn2\ntype ToPromise<T> = {\n  [K in keyof T]: T[K] extends AnyFn ? HttpMethod<T[K]> : ToPromise<T[K]>\n}\n\n// 把所有的 API 类型合并为一个\ninterface IMixinAPI extends IUserAPI {}\n\n// 对合并后的类型进行映射处理\nexport default interface IRootAPI extends ToPromise<IMixinAPI> {\n  url: string\n}\n```\n<a name=\"JGVGN\"></a>\n## 基于 proxy 的拦截器配置文件\n```typescript\nimport axios, { AxiosRequestConfig, AxiosResponse } from \"axios\"\nimport IRootAPI, { IResponse } from \"./mixins\"\n\nconst service = axios.create({\n  baseURL: \"\",\n  timeout: 10000,\n})\n\nexport class HttpConfig {\n  public config: AxiosRequestConfig\n  \n  constructor(config: AxiosRequestConfig) {\n    this.config = config\n  }\n}\n\nconst handler: ProxyHandler<IRootAPI> = {\n  get: function get(target, prop): any {\n    let value: any // 用于为 undefined 的属性赋值\n    // 对象取值，效果和 target[prop] 类似\n    const item = Reflect.get(target, prop)\n    // 这里主要是拿 service.get, service.post, service.put, service.delete，为了方便就写在一起\n    const httpMethod = Reflect.get(service, prop)\n    const method = {\n      params: (arg1?: any, arg2?: HttpConfig) => {\n        return arg1 instanceof HttpConfig\n          ? httpMethod(target.url, arg1?.config)\n          : httpMethod(target.url, {\n              params: { ...arg1 },\n              ...arg2\n            })\n      },\n      data: (arg1?: any, arg2?: HttpConfig) => {\n        return arg1 instanceof HttpConfig\n          ? httpMethod(target.url, arg1?.config)\n          : httpMethod(target.url, { ...arg1 }, arg2?.config)\n      }\n    }\n    \n    switch (prop) {\n      case \"get\" || \"delete\":\n        value = methods.params\n        break\n      case \"post\" || \"put\":\n        value = methods.data\n        break\n      case \"url\":\n        value = item\n        break\n      default:\n        value = {\n          ...item,\n          url: `${target.url ?? \"\"}/${prop.toString()}`\n        }\n        break\n    }\n    \n    if (!item || typeof item !== \"function\") {\n      Reflect.set(target, prop, value)\n    }\n    \n    return new Proxy(Reflect.get(target, prop), { get })\n  }\n}\n\nexport const http = new Proxy({} as IRootAPI, handler)\n```\n<a name=\"tsVLW\"></a>\n## 使用方式\n```tsx\nimport React, { useEffect } from \"react\"\nimport logo from \"./logo.svg\"\nimport \"./App.css\"\nimport { http } from \"./api\"\n\nfunction App() {\n  useEffect(() => {\n    http.login[\"verify-code\"].get({ id: \"123\" }, {\n      config: {\n        url: \"http://www.baidu.com\"\n      }\n    }).then(val => {\n      console.log(val)\n    })\n  }, [])\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>Edit <code>src/App.tsx</code> and save to reload.</p>\n        <a className=\"App-link\" href=\"http://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn React\n        </a>\n      </header>\n    </div>\n  )\n}\n```\n",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"YWnaB\"><span class=\"ne-text\">接口 response 配置文件</span></h2><pre data-language=\"typescript\" id=\"VG7fb\" class=\"ne-codeblock language-typescript\">interface IUserGetArg {\n  id: string\n}\n\ninterface IUserGetRe {\n  name: string\n}\n\nexport default interface IUserAPI {\n  user: {\n    get: (get: IUserGetArg) =&gt; IUserGetRe\n  };\n  login: {\n    &quot;verify-code&quot;: {\n      get: (arg: IUserGetArg) =&gt; IUserGetRe\n    }\n  }\n}</pre><h2 id=\"RXo14\"><span class=\"ne-text\">请求函数类型映射文件</span></h2><pre data-language=\"typescript\" id=\"t6ihp\" class=\"ne-codeblock language-typescript\">import { HttpConfig } from &quot;.&quot;\nimport IUserAPI from &quot;./user&quot;\n\n// 后端返回格式\nexport interface IResponse&lt;T = any&gt; {\n  code: number\n  message: string\n  success: boolean\n  data: T\n}\n// 只对继承改类型的函数进行映射，也就是当函数有0和1个参数时映射\ntype AnyFn = (arg: any) =&gt; any\n// 函数返回结果的格式\ntype FnReturn&lt;T extends AnyFn&gt; = Promise&lt;IResponse&lt;ReturnType&lt;T&gt;&gt;&gt;\n// 函数没定义参数时的映射格式\ntype Fn1&lt;T extends AnyFn&gt; = (config?: HttpConfig) =&gt; FnReturn&lt;T&gt;\n// 函数定义参数时的映射格式\ntype Fn2&lt;T extends AnyFn&gt; = (arg: Parameters&lt;T&gt;[0], config?: HttpConfig) =&gt; FnReturn&lt;T&gt;\n// 根据有无参数映射上面两个函数格式\ntype HttpMethod&lt;T extends AnyFn&gt; = Parameters&lt;T&gt;[0] extends undefined | null ? Fn1&lt;T&gt; : Fn2&lt;T&gt;\n\n// 对传入的类型深度处理所有为 AnyFn 的子类型为 Fn1 或 Fn2\ntype ToPromise&lt;T&gt; = {\n  [K in keyof T]: T[K] extends AnyFn ? HttpMethod&lt;T[K]&gt; : ToPromise&lt;T[K]&gt;\n}\n\n// 把所有的 API 类型合并为一个\ninterface IMixinAPI extends IUserAPI {}\n\n// 对合并后的类型进行映射处理\nexport default interface IRootAPI extends ToPromise&lt;IMixinAPI&gt; {\n  url: string\n}</pre><h2 id=\"JGVGN\"><span class=\"ne-text\">基于 proxy 的拦截器配置文件</span></h2><pre data-language=\"typescript\" id=\"r9xpA\" class=\"ne-codeblock language-typescript\">import axios, { AxiosRequestConfig, AxiosResponse } from &quot;axios&quot;\nimport IRootAPI, { IResponse } from &quot;./mixins&quot;\n\nconst service = axios.create({\n  baseURL: &quot;&quot;,\n  timeout: 10000,\n})\n\nexport class HttpConfig {\n  public config: AxiosRequestConfig\n  \n  constructor(config: AxiosRequestConfig) {\n    this.config = config\n  }\n}\n\nconst handler: ProxyHandler&lt;IRootAPI&gt; = {\n  get: function get(target, prop): any {\n    let value: any // 用于为 undefined 的属性赋值\n    // 对象取值，效果和 target[prop] 类似\n    const item = Reflect.get(target, prop)\n    // 这里主要是拿 service.get, service.post, service.put, service.delete，为了方便就写在一起\n    const httpMethod = Reflect.get(service, prop)\n    const method = {\n      params: (arg1?: any, arg2?: HttpConfig) =&gt; {\n        return arg1 instanceof HttpConfig\n          ? httpMethod(target.url, arg1?.config)\n          : httpMethod(target.url, {\n              params: { ...arg1 },\n              ...arg2\n            })\n      },\n      data: (arg1?: any, arg2?: HttpConfig) =&gt; {\n        return arg1 instanceof HttpConfig\n          ? httpMethod(target.url, arg1?.config)\n          : httpMethod(target.url, { ...arg1 }, arg2?.config)\n      }\n    }\n    \n    switch (prop) {\n      case &quot;get&quot; || &quot;delete&quot;:\n        value = methods.params\n        break\n      case &quot;post&quot; || &quot;put&quot;:\n        value = methods.data\n        break\n      case &quot;url&quot;:\n        value = item\n        break\n      default:\n        value = {\n          ...item,\n          url: `${target.url ?? &quot;&quot;}/${prop.toString()}`\n        }\n        break\n    }\n    \n    if (!item || typeof item !== &quot;function&quot;) {\n      Reflect.set(target, prop, value)\n    }\n    \n    return new Proxy(Reflect.get(target, prop), { get })\n  }\n}\n\nexport const http = new Proxy({} as IRootAPI, handler)</pre><h2 id=\"tsVLW\"><span class=\"ne-text\">使用方式</span></h2><pre data-language=\"tsx\" id=\"XOlyk\" class=\"ne-codeblock language-tsx\">import React, { useEffect } from &quot;react&quot;\nimport logo from &quot;./logo.svg&quot;\nimport &quot;./App.css&quot;\nimport { http } from &quot;./api&quot;\n\nfunction App() {\n  useEffect(() =&gt; {\n    http.login[&quot;verify-code&quot;].get({ id: &quot;123&quot; }, {\n      config: {\n        url: &quot;http://www.baidu.com&quot;\n      }\n    }).then(val =&gt; {\n      console.log(val)\n    })\n  }, [])\n  \n  return (\n    &lt;div className=&quot;App&quot;&gt;\n      &lt;header className=&quot;App-header&quot;&gt;\n        &lt;img src={logo} className=&quot;App-logo&quot; alt=&quot;logo&quot; /&gt;\n        &lt;p&gt;Edit &lt;code&gt;src/App.tsx&lt;/code&gt; and save to reload.&lt;/p&gt;\n        &lt;a className=&quot;App-link&quot; href=&quot;http://reactjs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;\n          Learn React\n        &lt;/a&gt;\n      &lt;/header&gt;\n    &lt;/div&gt;\n  )\n}</pre></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"fixed\" /><h2 data-lake-id=\"YWnaB\" id=\"YWnaB\"><span data-lake-id=\"ub552878a\" id=\"ub552878a\">接口 response 配置文件</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22typescript%22%2C%22code%22%3A%22interface%20IUserGetArg%20%7B%5Cn%20%20id%3A%20string%5Cn%7D%5Cn%5Cninterface%20IUserGetRe%20%7B%5Cn%20%20name%3A%20string%5Cn%7D%5Cn%5Cnexport%20default%20interface%20IUserAPI%20%7B%5Cn%20%20user%3A%20%7B%5Cn%20%20%20%20get%3A%20(get%3A%20IUserGetArg)%20%3D%3E%20IUserGetRe%5Cn%20%20%7D%3B%5Cn%20%20login%3A%20%7B%5Cn%20%20%20%20%5C%22verify-code%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20get%3A%20(arg%3A%20IUserGetArg)%20%3D%3E%20IUserGetRe%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22VG7fb%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"RXo14\" id=\"RXo14\"><span data-lake-id=\"u62d30890\" id=\"u62d30890\">请求函数类型映射文件</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22typescript%22%2C%22code%22%3A%22import%20%7B%20HttpConfig%20%7D%20from%20%5C%22.%5C%22%5Cnimport%20IUserAPI%20from%20%5C%22.%2Fuser%5C%22%5Cn%5Cn%2F%2F%20%E5%90%8E%E7%AB%AF%E8%BF%94%E5%9B%9E%E6%A0%BC%E5%BC%8F%5Cnexport%20interface%20IResponse%3CT%20%3D%20any%3E%20%7B%5Cn%20%20code%3A%20number%5Cn%20%20message%3A%20string%5Cn%20%20success%3A%20boolean%5Cn%20%20data%3A%20T%5Cn%7D%5Cn%2F%2F%20%E5%8F%AA%E5%AF%B9%E7%BB%A7%E6%89%BF%E6%94%B9%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%87%BD%E6%95%B0%E8%BF%9B%E8%A1%8C%E6%98%A0%E5%B0%84%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E5%BD%93%E5%87%BD%E6%95%B0%E6%9C%890%E5%92%8C1%E4%B8%AA%E5%8F%82%E6%95%B0%E6%97%B6%E6%98%A0%E5%B0%84%5Cntype%20AnyFn%20%3D%20(arg%3A%20any)%20%3D%3E%20any%5Cn%2F%2F%20%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%E7%9A%84%E6%A0%BC%E5%BC%8F%5Cntype%20FnReturn%3CT%20extends%20AnyFn%3E%20%3D%20Promise%3CIResponse%3CReturnType%3CT%3E%3E%3E%5Cn%2F%2F%20%E5%87%BD%E6%95%B0%E6%B2%A1%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0%E6%97%B6%E7%9A%84%E6%98%A0%E5%B0%84%E6%A0%BC%E5%BC%8F%5Cntype%20Fn1%3CT%20extends%20AnyFn%3E%20%3D%20(config%3F%3A%20HttpConfig)%20%3D%3E%20FnReturn%3CT%3E%5Cn%2F%2F%20%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0%E6%97%B6%E7%9A%84%E6%98%A0%E5%B0%84%E6%A0%BC%E5%BC%8F%5Cntype%20Fn2%3CT%20extends%20AnyFn%3E%20%3D%20(arg%3A%20Parameters%3CT%3E%5B0%5D%2C%20config%3F%3A%20HttpConfig)%20%3D%3E%20FnReturn%3CT%3E%5Cn%2F%2F%20%E6%A0%B9%E6%8D%AE%E6%9C%89%E6%97%A0%E5%8F%82%E6%95%B0%E6%98%A0%E5%B0%84%E4%B8%8A%E9%9D%A2%E4%B8%A4%E4%B8%AA%E5%87%BD%E6%95%B0%E6%A0%BC%E5%BC%8F%5Cntype%20HttpMethod%3CT%20extends%20AnyFn%3E%20%3D%20Parameters%3CT%3E%5B0%5D%20extends%20undefined%20%7C%20null%20%3F%20Fn1%3CT%3E%20%3A%20Fn2%3CT%3E%5Cn%5Cn%2F%2F%20%E5%AF%B9%E4%BC%A0%E5%85%A5%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%B7%B1%E5%BA%A6%E5%A4%84%E7%90%86%E6%89%80%E6%9C%89%E4%B8%BA%20AnyFn%20%E7%9A%84%E5%AD%90%E7%B1%BB%E5%9E%8B%E4%B8%BA%20Fn1%20%E6%88%96%20Fn2%5Cntype%20ToPromise%3CT%3E%20%3D%20%7B%5Cn%20%20%5BK%20in%20keyof%20T%5D%3A%20T%5BK%5D%20extends%20AnyFn%20%3F%20HttpMethod%3CT%5BK%5D%3E%20%3A%20ToPromise%3CT%5BK%5D%3E%5Cn%7D%5Cn%5Cn%2F%2F%20%E6%8A%8A%E6%89%80%E6%9C%89%E7%9A%84%20API%20%E7%B1%BB%E5%9E%8B%E5%90%88%E5%B9%B6%E4%B8%BA%E4%B8%80%E4%B8%AA%5Cninterface%20IMixinAPI%20extends%20IUserAPI%20%7B%7D%5Cn%5Cn%2F%2F%20%E5%AF%B9%E5%90%88%E5%B9%B6%E5%90%8E%E7%9A%84%E7%B1%BB%E5%9E%8B%E8%BF%9B%E8%A1%8C%E6%98%A0%E5%B0%84%E5%A4%84%E7%90%86%5Cnexport%20default%20interface%20IRootAPI%20extends%20ToPromise%3CIMixinAPI%3E%20%7B%5Cn%20%20url%3A%20string%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22t6ihp%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"JGVGN\" id=\"JGVGN\"><span data-lake-id=\"u6e9bc2fa\" id=\"u6e9bc2fa\">基于 proxy 的拦截器配置文件</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22typescript%22%2C%22code%22%3A%22import%20axios%2C%20%7B%20AxiosRequestConfig%2C%20AxiosResponse%20%7D%20from%20%5C%22axios%5C%22%5Cnimport%20IRootAPI%2C%20%7B%20IResponse%20%7D%20from%20%5C%22.%2Fmixins%5C%22%5Cn%5Cnconst%20service%20%3D%20axios.create(%7B%5Cn%20%20baseURL%3A%20%5C%22%5C%22%2C%5Cn%20%20timeout%3A%2010000%2C%5Cn%7D)%5Cn%5Cnexport%20class%20HttpConfig%20%7B%5Cn%20%20public%20config%3A%20AxiosRequestConfig%5Cn%20%20%5Cn%20%20constructor(config%3A%20AxiosRequestConfig)%20%7B%5Cn%20%20%20%20this.config%20%3D%20config%5Cn%20%20%7D%5Cn%7D%5Cn%5Cnconst%20handler%3A%20ProxyHandler%3CIRootAPI%3E%20%3D%20%7B%5Cn%20%20get%3A%20function%20get(target%2C%20prop)%3A%20any%20%7B%5Cn%20%20%20%20let%20value%3A%20any%20%2F%2F%20%E7%94%A8%E4%BA%8E%E4%B8%BA%20undefined%20%E7%9A%84%E5%B1%9E%E6%80%A7%E8%B5%8B%E5%80%BC%5Cn%20%20%20%20%2F%2F%20%E5%AF%B9%E8%B1%A1%E5%8F%96%E5%80%BC%EF%BC%8C%E6%95%88%E6%9E%9C%E5%92%8C%20target%5Bprop%5D%20%E7%B1%BB%E4%BC%BC%5Cn%20%20%20%20const%20item%20%3D%20Reflect.get(target%2C%20prop)%5Cn%20%20%20%20%2F%2F%20%E8%BF%99%E9%87%8C%E4%B8%BB%E8%A6%81%E6%98%AF%E6%8B%BF%20service.get%2C%20service.post%2C%20service.put%2C%20service.delete%EF%BC%8C%E4%B8%BA%E4%BA%86%E6%96%B9%E4%BE%BF%E5%B0%B1%E5%86%99%E5%9C%A8%E4%B8%80%E8%B5%B7%5Cn%20%20%20%20const%20httpMethod%20%3D%20Reflect.get(service%2C%20prop)%5Cn%20%20%20%20const%20method%20%3D%20%7B%5Cn%20%20%20%20%20%20params%3A%20(arg1%3F%3A%20any%2C%20arg2%3F%3A%20HttpConfig)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20return%20arg1%20instanceof%20HttpConfig%5Cn%20%20%20%20%20%20%20%20%20%20%3F%20httpMethod(target.url%2C%20arg1%3F.config)%5Cn%20%20%20%20%20%20%20%20%20%20%3A%20httpMethod(target.url%2C%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20params%3A%20%7B%20...arg1%20%7D%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20...arg2%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20data%3A%20(arg1%3F%3A%20any%2C%20arg2%3F%3A%20HttpConfig)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20return%20arg1%20instanceof%20HttpConfig%5Cn%20%20%20%20%20%20%20%20%20%20%3F%20httpMethod(target.url%2C%20arg1%3F.config)%5Cn%20%20%20%20%20%20%20%20%20%20%3A%20httpMethod(target.url%2C%20%7B%20...arg1%20%7D%2C%20arg2%3F.config)%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%5Cn%20%20%20%20switch%20(prop)%20%7B%5Cn%20%20%20%20%20%20case%20%5C%22get%5C%22%20%7C%7C%20%5C%22delete%5C%22%3A%5Cn%20%20%20%20%20%20%20%20value%20%3D%20methods.params%5Cn%20%20%20%20%20%20%20%20break%5Cn%20%20%20%20%20%20case%20%5C%22post%5C%22%20%7C%7C%20%5C%22put%5C%22%3A%5Cn%20%20%20%20%20%20%20%20value%20%3D%20methods.data%5Cn%20%20%20%20%20%20%20%20break%5Cn%20%20%20%20%20%20case%20%5C%22url%5C%22%3A%5Cn%20%20%20%20%20%20%20%20value%20%3D%20item%5Cn%20%20%20%20%20%20%20%20break%5Cn%20%20%20%20%20%20default%3A%5Cn%20%20%20%20%20%20%20%20value%20%3D%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20...item%2C%5Cn%20%20%20%20%20%20%20%20%20%20url%3A%20%60%24%7Btarget.url%20%3F%3F%20%5C%22%5C%22%7D%2F%24%7Bprop.toString()%7D%60%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20break%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%5Cn%20%20%20%20if%20(!item%20%7C%7C%20typeof%20item%20!%3D%3D%20%5C%22function%5C%22)%20%7B%5Cn%20%20%20%20%20%20Reflect.set(target%2C%20prop%2C%20value)%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%5Cn%20%20%20%20return%20new%20Proxy(Reflect.get(target%2C%20prop)%2C%20%7B%20get%20%7D)%5Cn%20%20%7D%5Cn%7D%5Cn%5Cnexport%20const%20http%20%3D%20new%20Proxy(%7B%7D%20as%20IRootAPI%2C%20handler)%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22r9xpA%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"tsVLW\" id=\"tsVLW\"><span data-lake-id=\"u160e47a4\" id=\"u160e47a4\">使用方式</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22tsx%22%2C%22code%22%3A%22import%20React%2C%20%7B%20useEffect%20%7D%20from%20%5C%22react%5C%22%5Cnimport%20logo%20from%20%5C%22.%2Flogo.svg%5C%22%5Cnimport%20%5C%22.%2FApp.css%5C%22%5Cnimport%20%7B%20http%20%7D%20from%20%5C%22.%2Fapi%5C%22%5Cn%5Cnfunction%20App()%20%7B%5Cn%20%20useEffect(()%20%3D%3E%20%7B%5Cn%20%20%20%20http.login%5B%5C%22verify-code%5C%22%5D.get(%7B%20id%3A%20%5C%22123%5C%22%20%7D%2C%20%7B%5Cn%20%20%20%20%20%20config%3A%20%7B%5Cn%20%20%20%20%20%20%20%20url%3A%20%5C%22http%3A%2F%2Fwww.baidu.com%5C%22%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D).then(val%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20console.log(val)%5Cn%20%20%20%20%7D)%5Cn%20%20%7D%2C%20%5B%5D)%5Cn%20%20%5Cn%20%20return%20(%5Cn%20%20%20%20%3Cdiv%20className%3D%5C%22App%5C%22%3E%5Cn%20%20%20%20%20%20%3Cheader%20className%3D%5C%22App-header%5C%22%3E%5Cn%20%20%20%20%20%20%20%20%3Cimg%20src%3D%7Blogo%7D%20className%3D%5C%22App-logo%5C%22%20alt%3D%5C%22logo%5C%22%20%2F%3E%5Cn%20%20%20%20%20%20%20%20%3Cp%3EEdit%20%3Ccode%3Esrc%2FApp.tsx%3C%2Fcode%3E%20and%20save%20to%20reload.%3C%2Fp%3E%5Cn%20%20%20%20%20%20%20%20%3Ca%20className%3D%5C%22App-link%5C%22%20href%3D%5C%22http%3A%2F%2Freactjs.org%5C%22%20target%3D%5C%22_blank%5C%22%20rel%3D%5C%22noopener%20noreferrer%5C%22%3E%5Cn%20%20%20%20%20%20%20%20%20%20Learn%20React%5Cn%20%20%20%20%20%20%20%20%3C%2Fa%3E%5Cn%20%20%20%20%20%20%3C%2Fheader%3E%5Cn%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20)%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22XOlyk%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 610,
  "created_at": "2022-04-26T17:56:38.000Z",
  "updated_at": "2022-04-26T18:21:30.000Z",
  "content_updated_at": "2022-04-26T18:20:18.000Z",
  "published_at": "2022-04-26T18:21:30.000Z",
  "first_published_at": "2022-04-26T17:56:54.497Z",
  "book": {
    "id": 24987782,
    "type": "Book",
    "slug": "aggvdq",
    "name": "项目梳理",
    "user_id": 732231,
    "description": "用来梳理一些项目的内容",
    "toc_yml": "- type: META\n  count: 27\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 219001536\n  published: true\n  max_level: 2\n  last_updated_at: 2022-07-05T05:31:54.296Z\n  version_id: 219001620\n- type: DOC\n  title: 自我介绍\n  uuid: czSnLwlZX5r2CJfX\n  url: nowm78\n  prev_uuid: ''\n  sibling_uuid: 0Z_QJNT6lajGoxNa\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 71314643\n  level: 0\n  id: 71314643\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 面经\n  uuid: 0Z_QJNT6lajGoxNa\n  url: uhv9t2\n  prev_uuid: czSnLwlZX5r2CJfX\n  sibling_uuid: BAls4pP-NeY80xRi\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 73218284\n  level: 0\n  id: 73218284\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 项目\n  uuid: BAls4pP-NeY80xRi\n  url: ''\n  prev_uuid: 0Z_QJNT6lajGoxNa\n  sibling_uuid: OBIPwt2GqG4q-vpQ\n  child_uuid: iAehDOuKbi90rUiI\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: mpx\n  uuid: iAehDOuKbi90rUiI\n  url: flzwri\n  prev_uuid: BAls4pP-NeY80xRi\n  sibling_uuid: ZBy9d0lBfyBCBXpu\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 82395946\n  level: 1\n  id: 82395946\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 滴滴出行小程序\n  uuid: ZBy9d0lBfyBCBXpu\n  url: ''\n  prev_uuid: iAehDOuKbi90rUiI\n  sibling_uuid: GLK4TI6bZt4Xxu6b\n  child_uuid: '-dL8H8y1HcmyCKgY'\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 小程序包体积优化\n  uuid: '-dL8H8y1HcmyCKgY'\n  url: qf3q0x\n  prev_uuid: ZBy9d0lBfyBCBXpu\n  sibling_uuid: EJe2oPQpRB-N11Xb\n  child_uuid: ''\n  parent_uuid: ZBy9d0lBfyBCBXpu\n  doc_id: 75039167\n  level: 2\n  id: 75039167\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: mpx 性能优化\n  uuid: EJe2oPQpRB-N11Xb\n  url: hgoyws\n  prev_uuid: '-dL8H8y1HcmyCKgY'\n  sibling_uuid: guwD9YXgthBX_ez4\n  child_uuid: ''\n  parent_uuid: ZBy9d0lBfyBCBXpu\n  doc_id: 74717740\n  level: 2\n  id: 74717740\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 冒泡页\n  uuid: guwD9YXgthBX_ez4\n  url: mo05y7\n  prev_uuid: EJe2oPQpRB-N11Xb\n  sibling_uuid: jVVd9OODBN3wWQ5P\n  child_uuid: ''\n  parent_uuid: ZBy9d0lBfyBCBXpu\n  doc_id: 73628145\n  level: 2\n  id: 73628145\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 行程中\n  uuid: jVVd9OODBN3wWQ5P\n  url: oyxdqe\n  prev_uuid: guwD9YXgthBX_ez4\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: ZBy9d0lBfyBCBXpu\n  doc_id: 73628172\n  level: 2\n  id: 73628172\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 小程序上线管理平台\n  uuid: GLK4TI6bZt4Xxu6b\n  url: ''\n  prev_uuid: ZBy9d0lBfyBCBXpu\n  sibling_uuid: 1Y-EVaBFWkuKnN0_\n  child_uuid: xpKQHRV_K7bfp3gb\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 介绍\n  uuid: xpKQHRV_K7bfp3gb\n  url: klkzoy\n  prev_uuid: GLK4TI6bZt4Xxu6b\n  sibling_uuid: xCty9hwaaVernWqJ\n  child_uuid: ''\n  parent_uuid: GLK4TI6bZt4Xxu6b\n  doc_id: 66948082\n  level: 2\n  id: 66948082\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 发布方式\n  uuid: xCty9hwaaVernWqJ\n  url: ohsgmx\n  prev_uuid: xpKQHRV_K7bfp3gb\n  sibling_uuid: 1robqYdQQG0wFPvT\n  child_uuid: ''\n  parent_uuid: GLK4TI6bZt4Xxu6b\n  doc_id: 75212608\n  level: 2\n  id: 75212608\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数据库表设计\n  uuid: 1robqYdQQG0wFPvT\n  url: csg8d4\n  prev_uuid: xCty9hwaaVernWqJ\n  sibling_uuid: Dvglyu8bpWNiJpBK\n  child_uuid: ''\n  parent_uuid: GLK4TI6bZt4Xxu6b\n  doc_id: 66912281\n  level: 2\n  id: 66912281\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 原型设计\n  uuid: Dvglyu8bpWNiJpBK\n  url: ktgzlc\n  prev_uuid: 1robqYdQQG0wFPvT\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: GLK4TI6bZt4Xxu6b\n  doc_id: 67155542\n  level: 2\n  id: 67155542\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: webx\n  uuid: 1Y-EVaBFWkuKnN0_\n  url: yghis3\n  prev_uuid: GLK4TI6bZt4Xxu6b\n  sibling_uuid: s3s0XuEuOPAMWB6v\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 73626184\n  level: 1\n  id: 73626184\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: TypeScript 在团队内部的实践总结\n  uuid: s3s0XuEuOPAMWB6v\n  url: bp0lie\n  prev_uuid: 1Y-EVaBFWkuKnN0_\n  sibling_uuid: cBBVzib8WHiSWbfw\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 70125424\n  level: 1\n  id: 70125424\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 利用 ts + proxy 增强 api 类型推导功能\n  uuid: cBBVzib8WHiSWbfw\n  url: wagl2t\n  prev_uuid: s3s0XuEuOPAMWB6v\n  sibling_uuid: OSV3qUcGRRunfF_K\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 75215879\n  level: 1\n  id: 75215879\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 人工审核系统\n  uuid: OSV3qUcGRRunfF_K\n  url: nw2hf8\n  prev_uuid: cBBVzib8WHiSWbfw\n  sibling_uuid: Z9NSZiuYLWhda8gH\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 75041091\n  level: 1\n  id: 75041091\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 长列表性能优化\n  uuid: Z9NSZiuYLWhda8gH\n  url: gkfqwb\n  prev_uuid: OSV3qUcGRRunfF_K\n  sibling_uuid: Xkshht2CcjCCitea\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 75286551\n  level: 1\n  id: 75286551\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序体验分优化\n  uuid: Xkshht2CcjCCitea\n  url: kdytb8\n  prev_uuid: Z9NSZiuYLWhda8gH\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: BAls4pP-NeY80xRi\n  doc_id: 75216281\n  level: 1\n  id: 75216281\n  open_window: 0\n  visible: 0\n- type: TITLE\n  title: 小程序接入原子化 css 样式库并支持分包输出\n  uuid: OBIPwt2GqG4q-vpQ\n  url: ''\n  prev_uuid: BAls4pP-NeY80xRi\n  sibling_uuid: aPheiwf1071mw6tU\n  child_uuid: tpFBhK_D2hlsZj9w\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 备忘录\n  uuid: tpFBhK_D2hlsZj9w\n  url: pbxykl\n  prev_uuid: OBIPwt2GqG4q-vpQ\n  sibling_uuid: iJCb_ylpdQ6AVtDy\n  child_uuid: ''\n  parent_uuid: OBIPwt2GqG4q-vpQ\n  doc_id: 67295600\n  level: 1\n  id: 67295600\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 架构设计\n  uuid: iJCb_ylpdQ6AVtDy\n  url: elafeo\n  prev_uuid: tpFBhK_D2hlsZj9w\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: OBIPwt2GqG4q-vpQ\n  doc_id: 70799795\n  level: 1\n  id: 70799795\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 研发流程\n  uuid: aPheiwf1071mw6tU\n  url: rl51ig\n  prev_uuid: OBIPwt2GqG4q-vpQ\n  sibling_uuid: KiBu4V9imsSGolKk\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 70125489\n  level: 0\n  id: 70125489\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 一些分享\n  uuid: KiBu4V9imsSGolKk\n  url: guat9s\n  prev_uuid: aPheiwf1071mw6tU\n  sibling_uuid: 5AwFIGCO-4sox4yt\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 71173266\n  level: 0\n  id: 71173266\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 字节面经\n  uuid: 5AwFIGCO-4sox4yt\n  url: gq8kd3\n  prev_uuid: KiBu4V9imsSGolKk\n  sibling_uuid: 8ot1aeLekjpB9XKV\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 81937341\n  level: 0\n  id: 81937341\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: polyfill\n  uuid: 8ot1aeLekjpB9XKV\n  url: nzrear\n  prev_uuid: 5AwFIGCO-4sox4yt\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 81938260\n  level: 0\n  id: 81938260\n  open_window: 0\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 23,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2022-12-25T07:59:52.340Z",
    "created_at": "2022-03-03T15:06:25.000Z",
    "updated_at": "2023-11-07T15:52:14.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-22T20:13:30.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/aggvdq",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 956113479,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}