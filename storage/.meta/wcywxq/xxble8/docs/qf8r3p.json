{
  "id": 68063610,
  "slug": "qf8r3p",
  "title": "React 常见面试题",
  "description": "React 中 keys 的作用是什么在开发过程中，我们需要保证某个元素的 key 在其同级元素中具有唯一性。在 react diff 算法中 react 会借助元素的 key 值来判断该元素是新近创建的还是被移动而来的元素，从而减少不必要的重渲染。此外，react 还要借助 key 值来判断...",
  "cover": "",
  "user_id": 732231,
  "book_id": 25332296,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"xJ3qc\"><span class=\"ne-text\">React 中 keys 的作用是什么</span></h2><p id=\"u87340f26\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uc86f3e15\"><span class=\"ne-text\">在开发过程中，我们需要保证某个元素的 key 在其同级元素中具有唯一性。</span></li></ul><ul class=\"ne-ul\"><li id=\"u0ed0a4d2\"><span class=\"ne-text\">在 react diff 算法中 react 会借助元素的 key 值来判断该元素是新近创建的还是被移动而来的元素，从而减少不必要的重渲染。</span></li></ul><ul class=\"ne-ul\"><li id=\"u04c4a767\"><span class=\"ne-text\">此外，react 还要借助 key 值来判断元素与本地状态的关联关系，因此我们绝不可忽视转换函数中 key 的重要性。</span></li></ul><p id=\"ueb7ba507\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h2 id=\"pC5bd\"><span class=\"ne-text\">当调用 setState 时，发生了什么</span></h2><p id=\"uc864fff8\" class=\"ne-p\"><br></p><p id=\"u5ba28be6\" class=\"ne-p\"><span class=\"ne-text\">将传递给 setState 的对象合并到组件的当前状态，这将启动一个和解的过程，构建一个新的 react 元素树，与上一个元素树进行对比(diff)，从而进行最小化的重渲染</span></p><p id=\"u59a8dd12\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h2 id=\"nLOYx\"><span class=\"ne-text\">为什么 setState 的参数是一个 callback 而不是一个对</span></h2><p id=\"ud6dbfb6f\" class=\"ne-p\"><br></p><p id=\"u6ab1c2a9\" class=\"ne-p\"><span class=\"ne-text\">因为 this.props 和 this.state 的更新可能是异步的，不能依赖他们的值去计算下一个 state</span></p><p id=\"u6b27d895\" class=\"ne-p\"><br></p><p id=\"u50e7034f\" class=\"ne-p\"><br></p><p id=\"u015d08ae\" class=\"ne-p\"><span class=\"ne-text\"></span></p></div>",
  "body": "<a name=\"xJ3qc\"></a>\n## React 中 keys 的作用是什么\n\n- 在开发过程中，我们需要保证某个元素的 key 在其同级元素中具有唯一性。\n- 在 react diff 算法中 react 会借助元素的 key 值来判断该元素是新近创建的还是被移动而来的元素，从而减少不必要的重渲染。\n- 此外，react 还要借助 key 值来判断元素与本地状态的关联关系，因此我们绝不可忽视转换函数中 key 的重要性。\n\n<a name=\"pC5bd\"></a>\n## 当调用 setState 时，发生了什么\n\n将传递给 setState 的对象合并到组件的当前状态，这将启动一个和解的过程，构建一个新的 react 元素树，与上一个元素树进行对比(diff)，从而进行最小化的重渲染\n\n<a name=\"nLOYx\"></a>\n## 为什么 setState 的参数是一个 callback 而不是一个对\n\n因为 this.props 和 this.state 的更新可能是异步的，不能依赖他们的值去计算下一个 state\n\n\n\n",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"xJ3qc\"><span class=\"ne-text\">React 中 keys 的作用是什么</span></h2><p id=\"u87340f26\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uc86f3e15\"><span class=\"ne-text\">在开发过程中，我们需要保证某个元素的 key 在其同级元素中具有唯一性。</span></li></ul><ul class=\"ne-ul\"><li id=\"u0ed0a4d2\"><span class=\"ne-text\">在 react diff 算法中 react 会借助元素的 key 值来判断该元素是新近创建的还是被移动而来的元素，从而减少不必要的重渲染。</span></li></ul><ul class=\"ne-ul\"><li id=\"u04c4a767\"><span class=\"ne-text\">此外，react 还要借助 key 值来判断元素与本地状态的关联关系，因此我们绝不可忽视转换函数中 key 的重要性。</span></li></ul><p id=\"ueb7ba507\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h2 id=\"pC5bd\"><span class=\"ne-text\">当调用 setState 时，发生了什么</span></h2><p id=\"uc864fff8\" class=\"ne-p\"><br></p><p id=\"u5ba28be6\" class=\"ne-p\"><span class=\"ne-text\">将传递给 setState 的对象合并到组件的当前状态，这将启动一个和解的过程，构建一个新的 react 元素树，与上一个元素树进行对比(diff)，从而进行最小化的重渲染</span></p><p id=\"u59a8dd12\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h2 id=\"nLOYx\"><span class=\"ne-text\">为什么 setState 的参数是一个 callback 而不是一个对</span></h2><p id=\"ud6dbfb6f\" class=\"ne-p\"><br></p><p id=\"u6ab1c2a9\" class=\"ne-p\"><span class=\"ne-text\">因为 this.props 和 this.state 的更新可能是异步的，不能依赖他们的值去计算下一个 state</span></p><p id=\"u6b27d895\" class=\"ne-p\"><br></p><p id=\"u50e7034f\" class=\"ne-p\"><br></p><p id=\"u015d08ae\" class=\"ne-p\"><span class=\"ne-text\"></span></p></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"xJ3qc\" id=\"xJ3qc\"><span data-lake-id=\"u7b5b5314\" id=\"u7b5b5314\">React 中 keys 的作用是什么</span></h2><p data-lake-id=\"u87340f26\" id=\"u87340f26\"><br></p><ul list=\"uc13991c8\"><li fid=\"u24b7b694\" data-lake-id=\"uc86f3e15\" id=\"uc86f3e15\"><span data-lake-id=\"u86bb9794\" id=\"u86bb9794\">在开发过程中，我们需要保证某个元素的 key 在其同级元素中具有唯一性。</span></li></ul><ul list=\"u40cf2167\"><li fid=\"udded0c74\" data-lake-id=\"u0ed0a4d2\" id=\"u0ed0a4d2\"><span data-lake-id=\"u9bb80bee\" id=\"u9bb80bee\">在 react diff 算法中 react 会借助元素的 key 值来判断该元素是新近创建的还是被移动而来的元素，从而减少不必要的重渲染。</span></li></ul><ul list=\"u01448137\"><li fid=\"u671f0c6c\" data-lake-id=\"u04c4a767\" id=\"u04c4a767\"><span data-lake-id=\"ufdc5fa91\" id=\"ufdc5fa91\">此外，react 还要借助 key 值来判断元素与本地状态的关联关系，因此我们绝不可忽视转换函数中 key 的重要性。</span></li></ul><p data-lake-id=\"ueb7ba507\" id=\"ueb7ba507\"><span data-lake-id=\"u5910af25\" id=\"u5910af25\">​</span><br></p><h2 data-lake-id=\"pC5bd\" id=\"pC5bd\"><span data-lake-id=\"u3c6582a1\" id=\"u3c6582a1\">当调用 setState 时，发生了什么</span></h2><p data-lake-id=\"uc864fff8\" id=\"uc864fff8\"><br></p><p data-lake-id=\"u5ba28be6\" id=\"u5ba28be6\"><span data-lake-id=\"ua7ade092\" id=\"ua7ade092\">将传递给 setState 的对象合并到组件的当前状态，这将启动一个和解的过程，构建一个新的 react 元素树，与上一个元素树进行对比(diff)，从而进行最小化的重渲染</span></p><p data-lake-id=\"u59a8dd12\" id=\"u59a8dd12\"><span data-lake-id=\"u4c98e7b1\" id=\"u4c98e7b1\">​</span><br></p><h2 data-lake-id=\"nLOYx\" id=\"nLOYx\"><span data-lake-id=\"ud9c020ba\" id=\"ud9c020ba\">为什么 setState 的参数是一个 callback 而不是一个对</span></h2><p data-lake-id=\"ud6dbfb6f\" id=\"ud6dbfb6f\"><br></p><p data-lake-id=\"u6ab1c2a9\" id=\"u6ab1c2a9\"><span data-lake-id=\"u5c236860\" id=\"u5c236860\">因为 this.props 和 this.state 的更新可能是异步的，不能依赖他们的值去计算下一个 state</span></p><p data-lake-id=\"u6b27d895\" id=\"u6b27d895\"><br></p><p data-lake-id=\"u50e7034f\" id=\"u50e7034f\"><br></p><p data-lake-id=\"u015d08ae\" id=\"u015d08ae\"><span data-lake-id=\"u5cf3d1b0\" id=\"u5cf3d1b0\">​</span><br></p>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 261,
  "created_at": "2022-03-02T16:38:01.000Z",
  "updated_at": "2022-03-13T09:58:45.000Z",
  "content_updated_at": "2022-03-02T17:01:36.000Z",
  "published_at": "2022-03-02T17:01:36.000Z",
  "first_published_at": "2022-03-02T16:40:29.000Z",
  "book": {
    "id": 25332296,
    "type": "Book",
    "slug": "xxble8",
    "name": "前端技术文章",
    "user_id": 732231,
    "description": "记录前端相关的技术性文章",
    "toc_yml": "- type: META\n  count: 35\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 212554542\n  published: true\n  max_level: 2\n  last_updated_at: 2022-06-15T01:16:18.992Z\n  version_id: 213246417\n- type: TITLE\n  title: 包管理\n  uuid: _QuaGpvQyXOJqViR\n  url: ''\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n  child_uuid: rCzMi2OLxQeldZoL\n  sibling_uuid: esTqfZ-VIsO4KK9Q\n- type: DOC\n  title: verdaccio\n  uuid: rCzMi2OLxQeldZoL\n  url: tbmwax\n  parent_uuid: _QuaGpvQyXOJqViR\n  doc_id: 76715838\n  level: 1\n  id: 76715838\n  open_window: 0\n  visible: 1\n  prev_uuid: _QuaGpvQyXOJqViR\n  sibling_uuid: cv09hDGqlf4qMuLA\n- type: DOC\n  title: npm 包发布/卸载\n  uuid: cv09hDGqlf4qMuLA\n  url: zirrw6\n  parent_uuid: _QuaGpvQyXOJqViR\n  doc_id: 69834306\n  level: 1\n  id: 69834306\n  open_window: 0\n  visible: 1\n  prev_uuid: rCzMi2OLxQeldZoL\n- type: TITLE\n  title: 算法\n  uuid: esTqfZ-VIsO4KK9Q\n  url: ''\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n  prev_uuid: _QuaGpvQyXOJqViR\n  child_uuid: Ogc2uBwNrDY5GME-\n  sibling_uuid: tk3brROhNFOdvu5c\n- type: DOC\n  title: 常用排序算法\n  uuid: Ogc2uBwNrDY5GME-\n  url: cwwn2a\n  parent_uuid: esTqfZ-VIsO4KK9Q\n  doc_id: 69585869\n  level: 1\n  id: 69585869\n  open_window: 0\n  visible: 1\n  prev_uuid: esTqfZ-VIsO4KK9Q\n- type: TITLE\n  title: 前端三架马车(html、css、javaScript)\n  uuid: tk3brROhNFOdvu5c\n  url: ''\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n  prev_uuid: esTqfZ-VIsO4KK9Q\n  child_uuid: 89gjblQgjF0QZj7N\n  sibling_uuid: AnAUOtoVl35Ctf-m\n- type: DOC\n  title: 正则表达式梳理\n  uuid: 89gjblQgjF0QZj7N\n  url: ygg1li\n  parent_uuid: tk3brROhNFOdvu5c\n  doc_id: 69445939\n  level: 1\n  id: 69445939\n  open_window: 0\n  visible: 1\n  prev_uuid: tk3brROhNFOdvu5c\n  sibling_uuid: s4St0Tz5-SfLvKIX\n- type: DOC\n  title: 前端自动化测试\n  uuid: s4St0Tz5-SfLvKIX\n  url: tuiqkt\n  parent_uuid: tk3brROhNFOdvu5c\n  doc_id: 32924996\n  level: 1\n  id: 32924996\n  open_window: 1\n  visible: 1\n  prev_uuid: 89gjblQgjF0QZj7N\n  sibling_uuid: dxTurh6P_eb0zy_L\n- type: DOC\n  title: 从图片裁剪了解 javaScript 二进制常用 api\n  uuid: dxTurh6P_eb0zy_L\n  url: dflyyg\n  parent_uuid: tk3brROhNFOdvu5c\n  doc_id: 11942849\n  level: 1\n  id: 11942849\n  open_window: 1\n  visible: 1\n  prev_uuid: s4St0Tz5-SfLvKIX\n  sibling_uuid: zMSTSZz39xp5h8EQ\n- type: DOC\n  title: Hybrid 简介\n  uuid: zMSTSZz39xp5h8EQ\n  url: wgdslk\n  parent_uuid: tk3brROhNFOdvu5c\n  doc_id: 11444492\n  level: 1\n  id: 11444492\n  open_window: 1\n  visible: 1\n  prev_uuid: dxTurh6P_eb0zy_L\n  sibling_uuid: vT0QKWss3m0hDXF_\n- type: DOC\n  title: 渐进式 web 应用程序 pwa 简介\n  uuid: vT0QKWss3m0hDXF_\n  url: fm39qi\n  parent_uuid: tk3brROhNFOdvu5c\n  doc_id: 11444574\n  level: 1\n  id: 11444574\n  open_window: 1\n  visible: 1\n  prev_uuid: zMSTSZz39xp5h8EQ\n  sibling_uuid: BN9ltP3u0AoFK0fF\n- type: DOC\n  title: H5 相关问题收集\n  uuid: BN9ltP3u0AoFK0fF\n  url: gxfam0\n  parent_uuid: tk3brROhNFOdvu5c\n  doc_id: 11465630\n  level: 1\n  id: 11465630\n  open_window: 1\n  visible: 1\n  prev_uuid: vT0QKWss3m0hDXF_\n  sibling_uuid: 9AamH2OW8UgEfrja\n- type: DOC\n  title: 元素隐藏问题\n  uuid: 9AamH2OW8UgEfrja\n  url: ecvr1k\n  parent_uuid: tk3brROhNFOdvu5c\n  doc_id: 11432332\n  level: 1\n  id: 11432332\n  open_window: 1\n  visible: 1\n  prev_uuid: BN9ltP3u0AoFK0fF\n  sibling_uuid: nx-R8OiSdFKMbNkp\n- type: DOC\n  title: 外边距合并问题\n  uuid: nx-R8OiSdFKMbNkp\n  url: vsuafl\n  parent_uuid: tk3brROhNFOdvu5c\n  doc_id: 11432306\n  level: 1\n  id: 11432306\n  open_window: 1\n  visible: 1\n  prev_uuid: 9AamH2OW8UgEfrja\n- type: TITLE\n  title: 三大框架\n  uuid: AnAUOtoVl35Ctf-m\n  url: ''\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n  prev_uuid: tk3brROhNFOdvu5c\n  child_uuid: d5-PKpnqrDERp5XH\n  sibling_uuid: T6Dd_ALAOey1mOT2\n- type: TITLE\n  title: Vue\n  uuid: d5-PKpnqrDERp5XH\n  url: ''\n  parent_uuid: AnAUOtoVl35Ctf-m\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n  prev_uuid: AnAUOtoVl35Ctf-m\n  sibling_uuid: 4iLlxHU6lkSzDraZ\n- type: TITLE\n  title: React\n  uuid: 4iLlxHU6lkSzDraZ\n  url: ''\n  parent_uuid: AnAUOtoVl35Ctf-m\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n  prev_uuid: d5-PKpnqrDERp5XH\n  child_uuid: YWc6qlQILrlxUTHD\n  sibling_uuid: ARWJ2u2tTxx00ebt\n- type: DOC\n  title: React Hooks 的一些特性\n  uuid: YWc6qlQILrlxUTHD\n  url: ydrldx\n  parent_uuid: 4iLlxHU6lkSzDraZ\n  doc_id: 32985727\n  level: 2\n  id: 32985727\n  open_window: 1\n  visible: 1\n  prev_uuid: 4iLlxHU6lkSzDraZ\n  sibling_uuid: ddokQtvYayoQdAz4\n- type: DOC\n  title: 编写 React 组件时常见的 5 个错误\n  uuid: ddokQtvYayoQdAz4\n  url: lscqxu\n  parent_uuid: 4iLlxHU6lkSzDraZ\n  doc_id: 32985721\n  level: 2\n  id: 32985721\n  open_window: 1\n  visible: 1\n  prev_uuid: YWc6qlQILrlxUTHD\n  sibling_uuid: 30Wx9_DYfG0kg9QA\n- type: DOC\n  title: React16 文档\n  uuid: 30Wx9_DYfG0kg9QA\n  url: di9gc4\n  parent_uuid: 4iLlxHU6lkSzDraZ\n  doc_id: 11440297\n  level: 2\n  id: 11440297\n  open_window: 1\n  visible: 1\n  prev_uuid: ddokQtvYayoQdAz4\n  sibling_uuid: aMQJEwPDNep085nZ\n- type: DOC\n  title: React 常见面试题\n  uuid: aMQJEwPDNep085nZ\n  url: qf8r3p\n  parent_uuid: 4iLlxHU6lkSzDraZ\n  doc_id: 68063610\n  level: 2\n  id: 68063610\n  open_window: 0\n  visible: 1\n  prev_uuid: 30Wx9_DYfG0kg9QA\n- type: TITLE\n  title: Angular\n  uuid: ARWJ2u2tTxx00ebt\n  url: ''\n  parent_uuid: AnAUOtoVl35Ctf-m\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n  prev_uuid: 4iLlxHU6lkSzDraZ\n- type: DOC\n  title: TS\n  uuid: T6Dd_ALAOey1mOT2\n  url: pggx4l\n  parent_uuid: ''\n  doc_id: 70125357\n  level: 0\n  id: 70125357\n  open_window: 0\n  visible: 1\n  prev_uuid: AnAUOtoVl35Ctf-m\n  sibling_uuid: quDnA_CtXFJewZef\n- type: TITLE\n  title: 构建工具\n  uuid: quDnA_CtXFJewZef\n  url: ''\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n  prev_uuid: T6Dd_ALAOey1mOT2\n  child_uuid: ko6UTJnvyRxJxFks\n  sibling_uuid: Nvq-1t47zI5eZ5K2\n- type: TITLE\n  title: Webpack\n  uuid: ko6UTJnvyRxJxFks\n  url: ''\n  parent_uuid: quDnA_CtXFJewZef\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n  prev_uuid: quDnA_CtXFJewZef\n  sibling_uuid: mF0ZJuTxvQYAlc-6\n- type: TITLE\n  title: Vite\n  uuid: mF0ZJuTxvQYAlc-6\n  url: ''\n  parent_uuid: quDnA_CtXFJewZef\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n  prev_uuid: ko6UTJnvyRxJxFks\n- type: TITLE\n  title: Node\n  uuid: Nvq-1t47zI5eZ5K2\n  url: ''\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n  prev_uuid: quDnA_CtXFJewZef\n  child_uuid: N9McFxnJzAZ1joGk\n  sibling_uuid: 2ip6Vh79GxkcT9qC\n- type: DOC\n  title: 传统部署\n  uuid: N9McFxnJzAZ1joGk\n  url: gzrbf3\n  parent_uuid: Nvq-1t47zI5eZ5K2\n  doc_id: 11465755\n  level: 1\n  id: 11465755\n  open_window: 1\n  visible: 1\n  prev_uuid: Nvq-1t47zI5eZ5K2\n  sibling_uuid: iav0UTEn9wp9P6wQ\n- type: DOC\n  title: graphql\n  uuid: iav0UTEn9wp9P6wQ\n  url: cnpgks\n  parent_uuid: Nvq-1t47zI5eZ5K2\n  doc_id: 11465980\n  level: 1\n  id: 11465980\n  open_window: 1\n  visible: 1\n  prev_uuid: N9McFxnJzAZ1joGk\n- type: TITLE\n  title: 面试精选文章\n  uuid: 2ip6Vh79GxkcT9qC\n  url: ''\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n  prev_uuid: Nvq-1t47zI5eZ5K2\n  child_uuid: e-Y2Xaz9wC8qUoRT\n- type: DOC\n  title: Css 精选\n  uuid: e-Y2Xaz9wC8qUoRT\n  url: wcrp5i\n  parent_uuid: 2ip6Vh79GxkcT9qC\n  doc_id: 69585398\n  level: 1\n  id: 69585398\n  open_window: 0\n  visible: 1\n  prev_uuid: 2ip6Vh79GxkcT9qC\n  sibling_uuid: dKE7-48QzE7EMFuU\n- type: DOC\n  title: Html 精选\n  uuid: dKE7-48QzE7EMFuU\n  url: if2bzn\n  parent_uuid: 2ip6Vh79GxkcT9qC\n  doc_id: 69585313\n  level: 1\n  id: 69585313\n  open_window: 0\n  visible: 1\n  prev_uuid: e-Y2Xaz9wC8qUoRT\n  sibling_uuid: DMqan83XPeKFCVOy\n- type: DOC\n  title: JavaScript 精选\n  uuid: DMqan83XPeKFCVOy\n  url: omn9xg\n  parent_uuid: 2ip6Vh79GxkcT9qC\n  doc_id: 69584814\n  level: 1\n  id: 69584814\n  open_window: 0\n  visible: 1\n  prev_uuid: dKE7-48QzE7EMFuU\n  sibling_uuid: kuWh1bH6rb88i7up\n- type: DOC\n  title: 计算机网络精选\n  uuid: kuWh1bH6rb88i7up\n  url: uyhudu\n  parent_uuid: 2ip6Vh79GxkcT9qC\n  doc_id: 69584083\n  level: 1\n  id: 69584083\n  open_window: 0\n  visible: 1\n  prev_uuid: DMqan83XPeKFCVOy\n  sibling_uuid: MVGimszERfJIqa5_\n- type: DOC\n  title: 操作系统精选\n  uuid: MVGimszERfJIqa5_\n  url: nyvkbg\n  parent_uuid: 2ip6Vh79GxkcT9qC\n  doc_id: 69584018\n  level: 1\n  id: 69584018\n  open_window: 0\n  visible: 1\n  prev_uuid: kuWh1bH6rb88i7up\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 23,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2022-06-15T01:16:19.043Z",
    "created_at": "2022-03-13T09:55:39.000Z",
    "updated_at": "2023-11-11T18:11:38.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-22T20:13:30.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/xxble8",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 846373894,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}