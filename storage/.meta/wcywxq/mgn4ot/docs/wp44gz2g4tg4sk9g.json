{
  "id": 147175066,
  "slug": "wp44gz2g4tg4sk9g",
  "title": "css3",
  "description": "盒模型什么是 css 盒模型完整的 css 盒模型应用于块级盒子，内联盒子只使用盒模型中定义的部分内容。模型定义了盒的每个部分 - margin、border、padding and content。合在一起就可以创建我们在页面上看到的内容。为了增加一些额外的复杂性，有一个标准的和替代 ie ...",
  "cover": "https://cdn.nlark.com/yuque/0/2023/png/732231/1700342936976-77de37c2-e8dd-4dfb-8a42-0befae001275.png",
  "user_id": 732231,
  "book_id": 44240028,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"cUGaB\"><span class=\"ne-text\">盒模型</span></h2><h3 id=\"XhvRr\"><span class=\"ne-text\">什么是 css 盒模型</span></h3><p id=\"u727ae994\" class=\"ne-p\"><span class=\"ne-text\">完整的 css 盒模型应用于块级盒子，内联盒子只使用盒模型中定义的部分内容。模型定义了盒的每个部分 - margin、border、padding and content。合在一起就可以创建我们在页面上看到的内容。为了增加一些额外的复杂性，有一个标准的和替代 ie 的盒模型</span></p><ul class=\"ne-ul\"><li id=\"u73eaefd2\" data-lake-index-type=\"0\"><span class=\"ne-text\">标准盒模型：内容的宽度 = </span><strong><span class=\"ne-text\">content box + padding + border</span></strong></li><li id=\"uf33a49ac\" data-lake-index-type=\"0\"><span class=\"ne-text\">替代盒模型（ie）：内容的宽度 = </span><strong><span class=\"ne-text\">content box</span></strong></li></ul><h3 id=\"HC3to\"><span class=\"ne-text\">改变元素盒模型的方式</span></h3><p id=\"u04200555\" class=\"ne-p\"><span class=\"ne-text\">通过使用 box-sizing 来改变元素的盒模型</span></p><ul class=\"ne-ul\"><li id=\"u22faf05d\" data-lake-index-type=\"0\"><code class=\"ne-code\"><span class=\"ne-text\">box-sizing: content-box;</span></code><span class=\"ne-text\"> 标准盒模型(默认值)</span></li><li id=\"u820c2b20\" data-lake-index-type=\"0\"><code class=\"ne-code\"><span class=\"ne-text\">box-sizing: border-box;</span></code><span class=\"ne-text\"> 替代盒模型 ie</span></li></ul><h3 id=\"dT0Lc\"><span class=\"ne-text\">盒模型的各个部分</span></h3><p id=\"u5027162a\" class=\"ne-p\"><span class=\"ne-text\">在 css 中组成一个块级盒子需要：</span></p><ul class=\"ne-ul\"><li id=\"u69bb6271\" data-lake-index-type=\"0\"><span class=\"ne-text\">Content box：这个区域是用来显示内容；大小可以通过设置 width 和 height</span></li><li id=\"u40e0d796\" data-lake-index-type=\"0\"><span class=\"ne-text\">Padding box：包围在内容区域外部的空白区域；大小通过 padding 相关属性设置</span></li><li id=\"u0e59c63f\" data-lake-index-type=\"0\"><span class=\"ne-text\">Border box：边框盒包裹内容和内边距；大小通过 border 相关属性设置</span></li><li id=\"uf3279fc5\" data-lake-index-type=\"0\"><span class=\"ne-text\">Margin box：这是最外面的区域，是盒子和其他元素之间的空白区域；大小通过 margin相关属性设置</span></li></ul><h3 id=\"RJWWx\"><span class=\"ne-text\">区块格式化上下文 BFC</span></h3><p id=\"u5dfe46ad\" class=\"ne-p\"><span class=\"ne-text\">区块格式化上下文 Block Formatting Context 是 web 页面的可视 css 渲染的一部分，是</span><strong><span class=\"ne-text\">块级盒子</span></strong><span class=\"ne-text\">的布局过程发生的区域，也是</span><strong><span class=\"ne-text\">浮动元素与其他元素交互</span></strong><span class=\"ne-text\">的区域</span></p><h4 id=\"NH0NY\"><span class=\"ne-text\">创建块格式化上下文的方式</span></h4><ol class=\"ne-ol\"><li id=\"u568934fe\" data-lake-index-type=\"0\"><span class=\"ne-text\">文档的根元素：</span><code class=\"ne-code\"><span class=\"ne-text\">&lt;html /&gt;</span></code></li><li id=\"u8dbe031a\" data-lake-index-type=\"0\"><span class=\"ne-text\">浮动元素：float 的值不为 none 的元素</span></li><li id=\"u9e335029\" data-lake-index-type=\"0\"><span class=\"ne-text\">绝对定位元素：position 值为 absolute 或 fixed 的元素</span></li><li id=\"u98a8775d\" data-lake-index-type=\"0\"><span class=\"ne-text\">行内块元素：display 值为 inline-block 的元素</span></li><li id=\"ufd1e0eda\" data-lake-index-type=\"0\"><span class=\"ne-text\">表格单元格：display 值为 table-cell，html 表格单元格默认值</span></li><li id=\"ucd302666\" data-lake-index-type=\"0\"><span class=\"ne-text\">表格标题：display 值为 table-caption，html 表格标题默认值</span></li><li id=\"u8e3fd4cc\" data-lake-index-type=\"0\"><span class=\"ne-text\">匿名表格单元格元素</span></li></ol><ol class=\"ne-list-wrap\"><ol ne-level=\"1\" class=\"ne-ol\"><li id=\"ud6adf17b\" data-lake-index-type=\"0\"><span class=\"ne-text\">display 值为 table，html 表格默认值</span></li><li id=\"u10ac2b3b\" data-lake-index-type=\"0\"><span class=\"ne-text\">table-row 表格行默认值</span></li><li id=\"u02f2641c\" data-lake-index-type=\"0\"><span class=\"ne-text\">table-row-group 表格体默认值</span></li><li id=\"ue82711bd\" data-lake-index-type=\"0\"><span class=\"ne-text\">table-header-group 表格头部默认值</span></li><li id=\"ufa4c155e\" data-lake-index-type=\"0\"><span class=\"ne-text\">table-footer-group 表格尾部默认值</span></li><li id=\"ua8a13406\" data-lake-index-type=\"0\"><span class=\"ne-text\">inline-table</span></li></ol></ol><ol start=\"8\" class=\"ne-ol\"><li id=\"u8a9c7657\" data-lake-index-type=\"0\"><span class=\"ne-text\">overflow 不为 visible 或 clip 的块级元素</span></li><li id=\"u5565fb41\" data-lake-index-type=\"0\"><span class=\"ne-text\">display 值为 flow-root 的元素</span></li><li id=\"uaaf791db\" data-lake-index-type=\"0\"><span class=\"ne-text\">contain 值为 layout、content 或 paint 的元素</span></li><li id=\"ua4c1d63a\" data-lake-index-type=\"0\"><span class=\"ne-text\">弹性元素：display 值为 flex 或 inline-flex 元素的直接子元素，如果它们本身即不是弹性、网格也不是表格容器</span></li><li id=\"u92769c53\" data-lake-index-type=\"0\"><span class=\"ne-text\">网格元素：display 值为 grid 或 inline-grid 元素的直接子元素，如果它们本身即不是弹性、网格也不是表格容器</span></li><li id=\"u16b8a645\" data-lake-index-type=\"0\"><span class=\"ne-text\">多列容器：column-count 或 column-width 值不为 auto，且含有 </span><code class=\"ne-code\"><span class=\"ne-text\">column-count: 1</span></code><span class=\"ne-text\">的元素</span></li><li id=\"uad33f4a5\" data-lake-index-type=\"0\"><span class=\"ne-text\">column-span 值为 all 的元素始终会创建一个新的格式化上下文，即使该元素没有包裹在一个多列容器中</span></li></ol><h4 id=\"OKEGO\"><span class=\"ne-text\">格式化上下文的作用</span></h4><p id=\"uf2ddaebe\" class=\"ne-p\"><span class=\"ne-text\">格式化上下文影响布局，通常，我们会为定位和清楚浮动创建新的 BFC，而不是更改布局，因为它将：</span></p><ul class=\"ne-ul\"><li id=\"uc2a487ae\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">包含内部浮动</span></strong></li><li id=\"u70900055\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">排除外部浮动</span></strong></li><li id=\"ue0a47eef\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">阻止外边距重叠</span></strong></li></ul><h3 id=\"phJ24\"><span class=\"ne-text\">行内格式化上下文 IFC</span></h3><h4 id=\"YG6sr\"><span class=\"ne-text\">核心概念</span></h4><p id=\"u817e1caa\" class=\"ne-p\"><span class=\"ne-text\">行内格式化上下文是一个网页渲染结果的一部分。期中，各行内框 inline-boxes 一个接一个地排列，其排列顺序根据书写模式 writing-mode 的设置来决定</span></p><ul class=\"ne-ul\"><li id=\"u163290ac\" data-lake-index-type=\"0\"><span class=\"ne-text\">对于水平书写模式，各个框从左边开始水平地排列</span></li><li id=\"u8a989340\" data-lake-index-type=\"0\"><span class=\"ne-text\">对于垂直书写模式，各个框从顶部开始水平地排列</span></li></ul><h4 id=\"DryLh\"><span class=\"ne-text\">在块方向上对齐</span></h4><p id=\"u3efab663\" class=\"ne-p\"><span class=\"ne-text\">行内框 inline boxes 可以使用 vertical-align 属性，以不同的方式在块的方向上进行对齐</span></p><h4 id=\"ki8OK\"><span class=\"ne-text\">在行内方向上对齐</span></h4><p id=\"u8b1bd03a\" class=\"ne-p\"><span class=\"ne-text\">如果行内方向上还有额外空间，那么 text-align 可用于将各行内框 inline-boxes 在行框 line box 内对齐</span></p><h4 id=\"U3n1T\"><span class=\"ne-text\">浮动造成的效果</span></h4><p id=\"u30a05a5b\" class=\"ne-p\"><span class=\"ne-text\">在行内方向上，各行框 line boxes 通常具有相同的尺寸，即在水平书写模式下，它们具有相同的宽度；在垂直书写模式下，它们具有同样的高度。但是，如果同一个块格式化上下文中存在一个 float，则这个浮动元素将导致包裹了它的各行框变短</span></p><h3 id=\"IsgSS\"><span class=\"ne-text\">块级盒子和内联盒子</span></h3><p id=\"u8edba70a\" class=\"ne-p\"><span class=\"ne-text\">在 css 中我们广泛地使用两种&quot;盒子&quot; - </span><strong><span class=\"ne-text\">块级盒子 block box</span></strong><span class=\"ne-text\"> 和</span><strong><span class=\"ne-text\">内联盒子 inline-box</span></strong><span class=\"ne-text\">。这两种盒子会在页面流 page flow 和元素之间的关系方面表现出不同的行为</span></p><h4 id=\"crwlz\"><span class=\"ne-text\">块级盒子 - block 的表现行为</span></h4><ul class=\"ne-ul\"><li id=\"uf9cea177\" data-lake-index-type=\"0\"><span class=\"ne-text\">盒子会</span><strong><span class=\"ne-text\">在内联的方向上扩展</span></strong><span class=\"ne-text\">并</span><strong><span class=\"ne-text\">占据父容器在该方向上的所有可用</span></strong><span class=\"ne-text\">空间，在</span><strong><span class=\"ne-text\">绝大多数情况下</span></strong><span class=\"ne-text\">意味着</span><strong><span class=\"ne-text\">盒子会和父容器一样宽</span></strong></li><li id=\"u5ee2225f\" data-lake-index-type=\"0\"><span class=\"ne-text\">每个盒子都会换行</span></li><li id=\"u85906542\" data-lake-index-type=\"0\"><span class=\"ne-text\">width 和 height 属性可以发挥作用</span></li><li id=\"uad576c37\" data-lake-index-type=\"0\"><span class=\"ne-text\">内边距 padding，外边距 margin 和边框 border 会将其他元素从当前盒子周围</span><strong><span class=\"ne-text\">推开</span></strong></li></ul><div class=\"ne-quote\"><p id=\"u650765a9\" class=\"ne-p\"><span class=\"ne-text\">除非特殊制定，诸如标题 h1 等和段落 p 默认情况下都是块级的盒子</span></p></div><h4 id=\"C69fO\"><span class=\"ne-text\">内联盒子 - inline 的表现行为</span></h4><ul class=\"ne-ul\"><li id=\"u83d33cc2\" data-lake-index-type=\"0\"><span class=\"ne-text\">盒子不会产生换行</span></li><li id=\"u978f48e0\" data-lake-index-type=\"0\"><span class=\"ne-text\">width 和 height 属性将不起作用</span></li><li id=\"ud8e241ec\" data-lake-index-type=\"0\"><span class=\"ne-text\">垂直方向的内边距、外边距以及边框会被应用但是不会把其他处于 inline 状态的盒子</span><strong><span class=\"ne-text\">推开</span></strong></li><li id=\"u587076a2\" data-lake-index-type=\"0\"><span class=\"ne-text\">水平方向的内边距、外边距以及边框会被应用且会把其他处于 inline 状态的盒子</span><strong><span class=\"ne-text\">推开</span></strong></li></ul><div class=\"ne-quote\"><p id=\"u6eee85e6\" class=\"ne-p\"><span class=\"ne-text\">用做链接的 a 元素、span、em 以及 strong 都是默认处于 inline 状态的</span></p></div><h3 id=\"EeNqW\"><span class=\"ne-text\">弹性盒子</span></h3><p id=\"uddaa20cb\" class=\"ne-p\"><span class=\"ne-text\">弹性盒子是一种</span><strong><span class=\"ne-text\">用于按行或按列布局元素的一纬布局方法</span></strong><span class=\"ne-text\">。元素可以</span><strong><span class=\"ne-text\">膨胀以填充</span></strong><span class=\"ne-text\">额外的空间，</span><strong><span class=\"ne-text\">收缩以适应</span></strong><span class=\"ne-text\">更小的空间</span></p><h4 id=\"KgunS\"><span class=\"ne-text\">flex 模型说明</span></h4><p id=\"u4924b46b\" class=\"ne-p\"><span class=\"ne-text\">当元素表现为 flex 框时，它们沿两个轴来布局</span></p><p id=\"u82d7c1d2\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2023/png/732231/1700410775213-9d6edef5-5365-4dcf-8858-14c8d13fc68e.png\" width=\"751.1999969482422\" id=\"ua5b786dc\" class=\"ne-image\"></p><ul class=\"ne-ul\"><li id=\"uf22304b2\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">主轴 - main axis</span></strong><span class=\"ne-text\"> 是沿着 flex 元素放置的方向延伸的轴（比如页面上的横向的行、纵向的咧）。该轴的开始和结束被称为 main start 和 main end</span></li><li id=\"uc1b5753b\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">交叉轴 - cross axis</span></strong><span class=\"ne-text\"> 是垂直于 flex 元素放置方向的轴。该轴的开始和结束被称为 cross start 和 cross end</span></li><li id=\"u4581fbb1\" data-lake-index-type=\"0\"><span class=\"ne-text\">设置了 display: flex 的父元素被称之为 </span><strong><span class=\"ne-text\">flex 容器（flex container）</span></strong></li><li id=\"ua3fdedb5\" data-lake-index-type=\"0\"><span class=\"ne-text\">在 flex 容器中表现为弹性的盒子的元素被称之为 flex 项（flex item）</span></li></ul><h4 id=\"p4ytI\"><span class=\"ne-text\">flex 的缩写与全写</span></h4><p id=\"u99919cd8\" class=\"ne-p\"><span class=\"ne-text\">flex 是一个可以指定最多三个不同值的缩写属性：</span></p><ul class=\"ne-ul\"><li id=\"u1040ac1e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">flex-grow</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">设置 flex 项主尺寸的 flex 增常系数</span></strong><span class=\"ne-text\">。用于决定项目在有剩余空间的情况下是否放大，默认为 0 不放大。设置之后，即使设置了固定宽度，也会放大</span></li><li id=\"u4fa2436d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">flex-shrink</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">指定了 flex 元素的收缩规则</span></strong><span class=\"ne-text\">。用于决定项目在空间不足时是否缩小，默认为 1，即空间不足时一起等比例缩小。设置之后，计时设置了固定宽度也会缩小</span></li><li id=\"uf07243c6\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">flex-basis</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">指定了 flex 元素在主轴方向上的初始大小</span></strong><span class=\"ne-text\">。用于设置项目宽度，默认为 auto，即项目会保持默认宽度，或者以 width 为自身宽度。设置之后，会覆盖 width 属性</span></li></ul><div class=\"ne-quote\"><p id=\"uda9da28d\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">flex: &quot;0 1 auto&quot;;</span></code><span class=\"ne-text\"> 等价于 </span><code class=\"ne-code\"><span class=\"ne-text\">flex-grow: 0; flex-shrink: 1; flex-basis: &quot;auto&quot;;</span></code></p></div><h4 id=\"QboUp\"><span class=\"ne-text\">一些其他的属性</span></h4><ul class=\"ne-ul\"><li id=\"u30cbe6a8\" data-lake-index-type=\"0\"><span class=\"ne-text\">flex-flow：flex-direction 和 flex-wrap 的集合。默认值 </span><code class=\"ne-code\"><span class=\"ne-text\">row nowrap</span></code></li><li id=\"u791d7abf\" data-lake-index-type=\"0\"><span class=\"ne-text\">align-content：用于控制多行项目的对齐方式，如果项目只有一行则不起作用</span></li><li id=\"u7e606d63\" data-lake-index-type=\"0\"><span class=\"ne-text\">order：用于决定项目的排列顺序，数值越小，项目排列越靠前，默认为 0</span></li><li id=\"u55ac184e\" data-lake-index-type=\"0\"><span class=\"ne-text\">align-self：表示继承父容器的 align-items 属性，如果没有父元素，则默认为 stretch，用于让个别项目拥有与其他项目不同的对齐方式，各个值的表现与父容器的 align-items 属性完全一致</span></li></ul><h3 id=\"QLntG\"><span class=\"ne-text\">网格</span></h3><p id=\"u6235a8ba\" class=\"ne-p\"><strong><span class=\"ne-text\">css 网格 grid </span></strong><span class=\"ne-text\">是一个用于 web 的</span><strong><span class=\"ne-text\">二纬布局系统</span></strong><span class=\"ne-text\">。利用网格，可以把内容按照行与列的格式进行排版。另外，网格还能非常轻松地实现一些复杂的布局</span></p><h4 id=\"vZqRC\"><span class=\"ne-text\">网格布局说明</span></h4><p id=\"u2768c76d\" class=\"ne-p\"><span class=\"ne-text\">网格是由一系列水平及垂直的线构成的一种布局模式。根据网格，我们能够将设计的元素进行排列，版主我们设计一些具有固定位置以及宽度的元素的页面，使我们的网站页面更加统一</span></p><p id=\"u46ced5aa\" class=\"ne-p\"><span class=\"ne-text\">一个网格通常具有许多的</span><strong><span class=\"ne-text\">列 column</span></strong><span class=\"ne-text\"> 与</span><strong><span class=\"ne-text\">行 row</span></strong><span class=\"ne-text\">，以及行与行、列与列之间的间隙，这个间隙一般被称为</span><strong><span class=\"ne-text\">沟槽 gutter</span></strong></p><p id=\"u883f4f9b\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2023/png/732231/1700412236867-50b6aba0-bd50-4f93-a06d-4c1340d90af0.png\" width=\"715.3999938964844\" id=\"u21c38cc2\" class=\"ne-image\"></p><h2 id=\"e5Azg\"><span class=\"ne-text\">包含块</span></h2><p id=\"ucb3ce068\" class=\"ne-p\"><span class=\"ne-text\" style=\"font-size: 14px\">包含块的英文全称为 containing block，实际上平时在书写 css 时，大多数情况下无法感知到它的存在，但实际上在 css 规范中是明确书写了这个概念：</span><a href=\"https://drafts.csswg.org/css2/#containing-block-details\" data-href=\"https://drafts.csswg.org/css2/#containing-block-details\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\" style=\"font-size: 14px\">https://drafts.csswg.org/css2/#containing-block-details</span></a></p><p id=\"u113bc659\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2023/png/732231/1700342936976-77de37c2-e8dd-4dfb-8a42-0befae001275.png\" width=\"888.3636169433594\" id=\"E2tEE\" class=\"ne-image\"></p><h3 id=\"xTRBi\"><span class=\"ne-text\">包含块的影响</span></h3><p id=\"u288468e1\" class=\"ne-p\"><span class=\"ne-text\">元素的</span><strong><span class=\"ne-text\">尺寸和位置</span></strong><span class=\"ne-text\">，会受它的</span><strong><span class=\"ne-text\">包含块</span></strong><span class=\"ne-text\">所影响。对于一些属性，例如 width、height、padding、margin，绝对定位元素的偏移值（比如 position 被设置为 absolute 或 fixed），</span><strong><span class=\"ne-text\">当我们对其赋予百分比值时，这些值的计算值，就是通过元素的包含块计算得来</span></strong></p><h3 id=\"M7qGm\"><span class=\"ne-text\">确定包含块</span></h3><ul class=\"ne-ul\"><li id=\"u060657a4\" data-lake-index-type=\"0\"><span class=\"ne-text\">根元素 </span><code class=\"ne-code\"><span class=\"ne-text\">&lt;html /&gt;</span></code><span class=\"ne-text\"> 所在的包含块是一个被称为</span><strong><span class=\"ne-text\">初始包含块 initial containing block 的矩形</span></strong><span class=\"ne-text\">。它具有</span><strong><span class=\"ne-text\">视口</span></strong><span class=\"ne-text\">对于连续媒体）或</span><strong><span class=\"ne-text\">页面区域</span></strong><span class=\"ne-text\">（对于分页媒体）的</span><strong><span class=\"ne-text\">尺寸</span></strong><span class=\"ne-text\">。一般来讲，</span><strong><span class=\"ne-text\">初始包含块的大小 = 视口 viewport 大小</span></strong><span class=\"ne-text\">，基点在画布的原点（视口左上角）。它是作为元素绝对定位和固定定位的参照物</span></li><li id=\"u34e262a3\" data-lake-index-type=\"0\"><span class=\"ne-text\">对于非根元素的包含块判定就有几种不同的情况，大致分为以下几种：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ud1035ddc\" data-lake-index-type=\"0\"><span class=\"ne-text\">如果 </span><strong><span class=\"ne-text\">position 属性为 static、relative 或 sticky</span></strong><span class=\"ne-text\">，那么包含块可能由它的最近的</span><strong><span class=\"ne-text\">祖先块元素</span></strong><span class=\"ne-text\">（比如说 inline-block、block 或 list-item 元素）的内容区的边缘组成，也可能会</span><strong><span class=\"ne-text\">建立格式化上下文</span></strong><span class=\"ne-text\">（比如说 a、table container、flex container、grid container 或者是 the block container 自身）</span></li><li id=\"u894e8616\" data-lake-index-type=\"0\"><span class=\"ne-text\">如果 </span><strong><span class=\"ne-text\">position 属性为 absolute</span></strong><span class=\"ne-text\">，包含块就是由它的最近的 position 的值不是 static（也就是值为 fixed、absolute、relative 或 sticky）的</span><strong><span class=\"ne-text\">祖先元素的内边距区的边缘组成</span></strong></li><li id=\"u2de047fc\" data-lake-index-type=\"0\"><span class=\"ne-text\">如果 </span><strong><span class=\"ne-text\">position 属性是 fixed</span></strong><span class=\"ne-text\">，在连续媒体的情况下（continuous media）包含块是</span><strong><span class=\"ne-text\">视口（viewport）</span></strong><span class=\"ne-text\">，在分页媒体（paged media）下的情况下包含块是</span><strong><span class=\"ne-text\">分页区域（page area）</span></strong></li><li id=\"u4ce685f5\" data-lake-index-type=\"0\"><span class=\"ne-text\">如果 </span><strong><span class=\"ne-text\">position 属性是 absolute 或 fixed</span></strong><span class=\"ne-text\">，包含块也可能是由满足以下条件的最近父级元素的内边距区的边缘组成的</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul class=\"ne-list-wrap\"><ul ne-level=\"2\" class=\"ne-ul\"><li id=\"u5061b72c\" data-lake-index-type=\"0\"><span class=\"ne-text\">transform 或 perspective 的值不是 none</span></li><li id=\"ucaeb6ec7\" data-lake-index-type=\"0\"><span class=\"ne-text\">will-change 的值是 transform 或 perspective</span></li><li id=\"u9946474f\" data-lake-index-type=\"0\"><span class=\"ne-text\">filter 的值不是 none 或 will-change 的值是 filter（只在 Firefox 下生效）</span></li><li id=\"ue18c86d3\" data-lake-index-type=\"0\"><span class=\"ne-text\">contain 的值是 layout、paint、strict 或 content（例如：</span><code class=\"ne-code\"><span class=\"ne-text\">contain: paint;</span></code><span class=\"ne-text\">）</span></li><li id=\"u3ff946e4\" data-lake-index-type=\"0\"><span class=\"ne-text\">backdrop-filter 的值不是 none（例如：</span><code class=\"ne-code\"><span class=\"ne-text\">backdrop-filter: blur(10px);</span></code><span class=\"ne-text\">）</span></li></ul></ul></ul><h2 id=\"zFk3D\"><span class=\"ne-text\">css 属性计算过程</span></h2><h3 id=\"BwDmu\"><span class=\"ne-text\">确定声明值</span></h3><p id=\"u39f772d5\" class=\"ne-p\"><span class=\"ne-text\">声明值就是所书写的 css 样式</span></p><h3 id=\"wBMdV\"><span class=\"ne-text\">层叠冲突</span></h3><ul class=\"ne-ul\"><li id=\"ud1c2e7b2\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">比较来源的重要性</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">页面作者样式 &gt; 用户样式 &gt; 用户代理样式</span></strong></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u002021b4\" data-lake-index-type=\"0\"><span class=\"ne-text\">浏览器会有一个基本的样式表来给任何网页设置默认样式，这些样式统称为</span><strong><span class=\"ne-text\">用户代理样式</span></strong></li><li id=\"ued22532b\" data-lake-index-type=\"0\"><span class=\"ne-text\">网页的作者可以定义文档的样式，这是最常见的样式表，称为</span><strong><span class=\"ne-text\">页面作者样式</span></strong></li><li id=\"ub0f275b4\" data-lake-index-type=\"0\"><span class=\"ne-text\">浏览器的用户，可以使用自定义样式表来定制使用体验，称为</span><strong><span class=\"ne-text\">用户样式</span></strong></li></ul></ul><ul class=\"ne-ul\"><li id=\"u8c81550c\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">比较优先级：相同来源则比较选择器优先级</span></strong></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u3483e444\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">id 选择器</span></strong><span class=\"ne-text\">：选择器中包含 id 选择器则百位权重得 1 分</span></li><li id=\"u315f8be2\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">类选择器</span></strong><span class=\"ne-text\">：选择器中包含</span><strong><span class=\"ne-text\">类选择器</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">属性选择器</span></strong><span class=\"ne-text\">或者</span><strong><span class=\"ne-text\">伪类</span></strong><span class=\"ne-text\">则十位权重得 1 分</span></li><li id=\"uffc073e6\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">元素选择器</span></strong><span class=\"ne-text\">：选择器中包含</span><strong><span class=\"ne-text\">元素</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">伪元素</span></strong><span class=\"ne-text\">选择器则个位得 1 分</span></li><li id=\"u8de176b1\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">通用选择器 *</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">关系选择器 （+、&gt;、~、''）</span></strong><span class=\"ne-text\">和调</span><strong><span class=\"ne-text\">整优先级的选择器 :where </span></strong><span class=\"ne-text\">不会影响优先级</span></li><li id=\"ud5c42209\" data-lake-index-type=\"0\"><span class=\"ne-text\">否定 </span><code class=\"ne-code\"><span class=\"ne-text\">:not()</span></code><span class=\"ne-text\"> 和任意匹配 </span><code class=\"ne-code\"><span class=\"ne-text\">:is()</span></code><span class=\"ne-text\"> 伪类本身对优先级没有影响，但它们的参数则会带来影响。参数中，</span><strong><span class=\"ne-text\">对优先级算法有贡献的参数的优先级的最大值</span></strong><span class=\"ne-text\">将作为该伪类选择器的优先级</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"u150c8ed9\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">比较次序：后面的覆盖前面的</span></strong></li></ul><h3 id=\"zjaFP\"><span class=\"ne-text\">使用继承</span></h3><p id=\"u0aa66e2d\" class=\"ne-p\"><span class=\"ne-text\">具体需查看相关属性介绍得知是否可继承</span></p><h3 id=\"SxpVm\"><span class=\"ne-text\">使用默认值</span></h3><p id=\"ubafff462\" class=\"ne-p\"><span class=\"ne-text\">如果上面几步都无法确定最终样式，则将直接</span><strong><span class=\"ne-text\">使用默认值</span></strong></p><p id=\"u1661ea3e\" class=\"ne-p\"><span class=\"ne-text\"></span></p></div>",
  "body": "<a name=\"cUGaB\"></a>\n## 盒模型\n<a name=\"XhvRr\"></a>\n### 什么是 css 盒模型\n完整的 css 盒模型应用于块级盒子，内联盒子只使用盒模型中定义的部分内容。模型定义了盒的每个部分 - margin、border、padding and content。合在一起就可以创建我们在页面上看到的内容。为了增加一些额外的复杂性，有一个标准的和替代 ie 的盒模型\n\n- 标准盒模型：内容的宽度 = **content box + padding + border**\n- 替代盒模型（ie）：内容的宽度 = **content box**\n<a name=\"HC3to\"></a>\n### 改变元素盒模型的方式\n通过使用 box-sizing 来改变元素的盒模型\n\n- `box-sizing: content-box;` 标准盒模型(默认值)\n- `box-sizing: border-box;` 替代盒模型 ie\n<a name=\"dT0Lc\"></a>\n### 盒模型的各个部分\n在 css 中组成一个块级盒子需要：\n\n- Content box：这个区域是用来显示内容；大小可以通过设置 width 和 height\n- Padding box：包围在内容区域外部的空白区域；大小通过 padding 相关属性设置\n- Border box：边框盒包裹内容和内边距；大小通过 border 相关属性设置\n- Margin box：这是最外面的区域，是盒子和其他元素之间的空白区域；大小通过 margin相关属性设置\n<a name=\"RJWWx\"></a>\n### 区块格式化上下文 BFC\n区块格式化上下文 Block Formatting Context 是 web 页面的可视 css 渲染的一部分，是**块级盒子**的布局过程发生的区域，也是**浮动元素与其他元素交互**的区域\n<a name=\"NH0NY\"></a>\n#### 创建块格式化上下文的方式\n\n1. 文档的根元素：`<html />`\n2. 浮动元素：float 的值不为 none 的元素\n3. 绝对定位元素：position 值为 absolute 或 fixed 的元素\n4. 行内块元素：display 值为 inline-block 的元素\n5. 表格单元格：display 值为 table-cell，html 表格单元格默认值\n6. 表格标题：display 值为 table-caption，html 表格标题默认值\n7. 匿名表格单元格元素\n   1. display 值为 table，html 表格默认值\n   2. table-row 表格行默认值\n   3. table-row-group 表格体默认值\n   4. table-header-group 表格头部默认值\n   5. table-footer-group 表格尾部默认值\n   6. inline-table\n8. overflow 不为 visible 或 clip 的块级元素\n9. display 值为 flow-root 的元素\n10. contain 值为 layout、content 或 paint 的元素\n11. 弹性元素：display 值为 flex 或 inline-flex 元素的直接子元素，如果它们本身即不是弹性、网格也不是表格容器\n12. 网格元素：display 值为 grid 或 inline-grid 元素的直接子元素，如果它们本身即不是弹性、网格也不是表格容器\n13. 多列容器：column-count 或 column-width 值不为 auto，且含有 `column-count: 1`的元素\n14. column-span 值为 all 的元素始终会创建一个新的格式化上下文，即使该元素没有包裹在一个多列容器中\n<a name=\"OKEGO\"></a>\n#### 格式化上下文的作用\n格式化上下文影响布局，通常，我们会为定位和清楚浮动创建新的 BFC，而不是更改布局，因为它将：\n\n- **包含内部浮动**\n- **排除外部浮动**\n- **阻止外边距重叠**\n<a name=\"phJ24\"></a>\n### 行内格式化上下文 IFC\n<a name=\"YG6sr\"></a>\n#### 核心概念\n行内格式化上下文是一个网页渲染结果的一部分。期中，各行内框 inline-boxes 一个接一个地排列，其排列顺序根据书写模式 writing-mode 的设置来决定\n\n- 对于水平书写模式，各个框从左边开始水平地排列\n- 对于垂直书写模式，各个框从顶部开始水平地排列\n<a name=\"DryLh\"></a>\n#### 在块方向上对齐\n行内框 inline boxes 可以使用 vertical-align 属性，以不同的方式在块的方向上进行对齐\n<a name=\"ki8OK\"></a>\n#### 在行内方向上对齐\n如果行内方向上还有额外空间，那么 text-align 可用于将各行内框 inline-boxes 在行框 line box 内对齐\n<a name=\"U3n1T\"></a>\n#### 浮动造成的效果\n在行内方向上，各行框 line boxes 通常具有相同的尺寸，即在水平书写模式下，它们具有相同的宽度；在垂直书写模式下，它们具有同样的高度。但是，如果同一个块格式化上下文中存在一个 float，则这个浮动元素将导致包裹了它的各行框变短\n<a name=\"IsgSS\"></a>\n### 块级盒子和内联盒子\n在 css 中我们广泛地使用两种\"盒子\" - **块级盒子 block box** 和**内联盒子 inline-box**。这两种盒子会在页面流 page flow 和元素之间的关系方面表现出不同的行为\n<a name=\"crwlz\"></a>\n#### 块级盒子 - block 的表现行为\n\n- 盒子会**在内联的方向上扩展**并**占据父容器在该方向上的所有可用**空间，在**绝大多数情况下**意味着**盒子会和父容器一样宽**\n- 每个盒子都会换行\n- width 和 height 属性可以发挥作用\n- 内边距 padding，外边距 margin 和边框 border 会将其他元素从当前盒子周围**推开**\n> 除非特殊制定，诸如标题 h1 等和段落 p 默认情况下都是块级的盒子\n\n<a name=\"C69fO\"></a>\n#### 内联盒子 - inline 的表现行为\n\n- 盒子不会产生换行\n- width 和 height 属性将不起作用\n- 垂直方向的内边距、外边距以及边框会被应用但是不会把其他处于 inline 状态的盒子**推开**\n- 水平方向的内边距、外边距以及边框会被应用且会把其他处于 inline 状态的盒子**推开**\n> 用做链接的 a 元素、span、em 以及 strong 都是默认处于 inline 状态的\n\n<a name=\"EeNqW\"></a>\n### 弹性盒子\n弹性盒子是一种**用于按行或按列布局元素的一纬布局方法**。元素可以**膨胀以填充**额外的空间，**收缩以适应**更小的空间\n<a name=\"KgunS\"></a>\n#### flex 模型说明\n当元素表现为 flex 框时，它们沿两个轴来布局<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/732231/1700410775213-9d6edef5-5365-4dcf-8858-14c8d13fc68e.png#averageHue=%23f3e6c3&clientId=ub81ac113-09bf-4&from=paste&height=444&id=ua5b786dc&originHeight=333&originWidth=563&originalType=binary&ratio=2.200000047683716&rotation=0&showTitle=false&size=27648&status=done&style=none&taskId=ud01b1886-aab2-494c-a0de-eb3294f956f&title=&width=751.1999969482422)\n\n- **主轴 - main axis** 是沿着 flex 元素放置的方向延伸的轴（比如页面上的横向的行、纵向的咧）。该轴的开始和结束被称为 main start 和 main end\n- **交叉轴 - cross axis** 是垂直于 flex 元素放置方向的轴。该轴的开始和结束被称为 cross start 和 cross end\n- 设置了 display: flex 的父元素被称之为 **flex 容器（flex container）**\n- 在 flex 容器中表现为弹性的盒子的元素被称之为 flex 项（flex item）\n<a name=\"p4ytI\"></a>\n#### flex 的缩写与全写\nflex 是一个可以指定最多三个不同值的缩写属性：\n\n- **flex-grow**：**设置 flex 项主尺寸的 flex 增常系数**。用于决定项目在有剩余空间的情况下是否放大，默认为 0 不放大。设置之后，即使设置了固定宽度，也会放大\n- **flex-shrink**：**指定了 flex 元素的收缩规则**。用于决定项目在空间不足时是否缩小，默认为 1，即空间不足时一起等比例缩小。设置之后，计时设置了固定宽度也会缩小\n- **flex-basis**：**指定了 flex 元素在主轴方向上的初始大小**。用于设置项目宽度，默认为 auto，即项目会保持默认宽度，或者以 width 为自身宽度。设置之后，会覆盖 width 属性\n> `flex: \"0 1 auto\";` 等价于 `flex-grow: 0; flex-shrink: 1; flex-basis: \"auto\";`\n\n<a name=\"QboUp\"></a>\n#### 一些其他的属性\n\n- flex-flow：flex-direction 和 flex-wrap 的集合。默认值 `row nowrap`\n- align-content：用于控制多行项目的对齐方式，如果项目只有一行则不起作用\n- order：用于决定项目的排列顺序，数值越小，项目排列越靠前，默认为 0\n- align-self：表示继承父容器的 align-items 属性，如果没有父元素，则默认为 stretch，用于让个别项目拥有与其他项目不同的对齐方式，各个值的表现与父容器的 align-items 属性完全一致\n<a name=\"QLntG\"></a>\n### 网格\n**css 网格 grid **是一个用于 web 的**二纬布局系统**。利用网格，可以把内容按照行与列的格式进行排版。另外，网格还能非常轻松地实现一些复杂的布局\n<a name=\"vZqRC\"></a>\n#### 网格布局说明\n网格是由一系列水平及垂直的线构成的一种布局模式。根据网格，我们能够将设计的元素进行排列，版主我们设计一些具有固定位置以及宽度的元素的页面，使我们的网站页面更加统一<br />一个网格通常具有许多的**列 column** 与**行 row**，以及行与行、列与列之间的间隙，这个间隙一般被称为**沟槽 gutter**<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/732231/1700412236867-50b6aba0-bd50-4f93-a06d-4c1340d90af0.png#averageHue=%23fbf1e5&clientId=u2e1a591d-2931-4&from=paste&height=331&id=u21c38cc2&originHeight=553&originWidth=1196&originalType=binary&ratio=2.5&rotation=0&showTitle=false&size=34455&status=done&style=none&taskId=u950f75e4-7077-4372-ac85-63447565bae&title=&width=715.3999938964844)\n<a name=\"e5Azg\"></a>\n## 包含块\n包含块的英文全称为 containing block，实际上平时在书写 css 时，大多数情况下无法感知到它的存在，但实际上在 css 规范中是明确书写了这个概念：[https://drafts.csswg.org/css2/#containing-block-details](https://drafts.csswg.org/css2/#containing-block-details)<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/732231/1700342936976-77de37c2-e8dd-4dfb-8a42-0befae001275.png#averageHue=%23ebebeb&clientId=ucb9ee095-bbd4-4&from=paste&height=507&id=E2tEE&originHeight=586&originWidth=1026&originalType=binary&ratio=2&rotation=0&showTitle=false&size=221966&status=done&style=none&taskId=u79cb9420-eff2-4a99-ae90-c52654edb7c&title=&width=888.3636169433594)\n<a name=\"xTRBi\"></a>\n### 包含块的影响\n元素的**尺寸和位置**，会受它的**包含块**所影响。对于一些属性，例如 width、height、padding、margin，绝对定位元素的偏移值（比如 position 被设置为 absolute 或 fixed），**当我们对其赋予百分比值时，这些值的计算值，就是通过元素的包含块计算得来**\n<a name=\"M7qGm\"></a>\n### 确定包含块\n\n- 根元素 `<html />` 所在的包含块是一个被称为**初始包含块 initial containing block 的矩形**。它具有**视口**对于连续媒体）或**页面区域**（对于分页媒体）的**尺寸**。一般来讲，**初始包含块的大小 = 视口 viewport 大小**，基点在画布的原点（视口左上角）。它是作为元素绝对定位和固定定位的参照物\n- 对于非根元素的包含块判定就有几种不同的情况，大致分为以下几种：\n   - 如果 **position 属性为 static、relative 或 sticky**，那么包含块可能由它的最近的**祖先块元素**（比如说 inline-block、block 或 list-item 元素）的内容区的边缘组成，也可能会**建立格式化上下文**（比如说 a、table container、flex container、grid container 或者是 the block container 自身）\n   - 如果 **position 属性为 absolute**，包含块就是由它的最近的 position 的值不是 static（也就是值为 fixed、absolute、relative 或 sticky）的**祖先元素的内边距区的边缘组成**\n   - 如果 **position 属性是 fixed**，在连续媒体的情况下（continuous media）包含块是**视口（viewport）**，在分页媒体（paged media）下的情况下包含块是**分页区域（page area）**\n   - 如果 **position 属性是 absolute 或 fixed**，包含块也可能是由满足以下条件的最近父级元素的内边距区的边缘组成的\n      - transform 或 perspective 的值不是 none\n      - will-change 的值是 transform 或 perspective\n      - filter 的值不是 none 或 will-change 的值是 filter（只在 Firefox 下生效）\n      - contain 的值是 layout、paint、strict 或 content（例如：`contain: paint;`）\n      - backdrop-filter 的值不是 none（例如：`backdrop-filter: blur(10px);`）\n<a name=\"zFk3D\"></a>\n## css 属性计算过程\n<a name=\"BwDmu\"></a>\n### 确定声明值\n声明值就是所书写的 css 样式\n<a name=\"wBMdV\"></a>\n### 层叠冲突\n\n- **比较来源的重要性**：**页面作者样式 > 用户样式 > 用户代理样式**\n   - 浏览器会有一个基本的样式表来给任何网页设置默认样式，这些样式统称为**用户代理样式**\n   - 网页的作者可以定义文档的样式，这是最常见的样式表，称为**页面作者样式**\n   - 浏览器的用户，可以使用自定义样式表来定制使用体验，称为**用户样式**\n- **比较优先级：相同来源则比较选择器优先级**\n   - **id 选择器**：选择器中包含 id 选择器则百位权重得 1 分\n   - **类选择器**：选择器中包含**类选择器**、**属性选择器**或者**伪类**则十位权重得 1 分\n   - **元素选择器**：选择器中包含**元素**、**伪元素**选择器则个位得 1 分\n   - **通用选择器 ***、**关系选择器 （+、>、~、''）**和调**整优先级的选择器 :where **不会影响优先级\n   - 否定 `:not()` 和任意匹配 `:is()` 伪类本身对优先级没有影响，但它们的参数则会带来影响。参数中，**对优先级算法有贡献的参数的优先级的最大值**将作为该伪类选择器的优先级\n- **比较次序：后面的覆盖前面的**\n<a name=\"zjaFP\"></a>\n### 使用继承\n具体需查看相关属性介绍得知是否可继承\n<a name=\"SxpVm\"></a>\n### 使用默认值\n如果上面几步都无法确定最终样式，则将直接**使用默认值**\n\n",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"cUGaB\"><span class=\"ne-text\">盒模型</span></h2><h3 id=\"XhvRr\"><span class=\"ne-text\">什么是 css 盒模型</span></h3><p id=\"u727ae994\" class=\"ne-p\"><span class=\"ne-text\">完整的 css 盒模型应用于块级盒子，内联盒子只使用盒模型中定义的部分内容。模型定义了盒的每个部分 - margin、border、padding and content。合在一起就可以创建我们在页面上看到的内容。为了增加一些额外的复杂性，有一个标准的和替代 ie 的盒模型</span></p><ul class=\"ne-ul\"><li id=\"u73eaefd2\" data-lake-index-type=\"0\"><span class=\"ne-text\">标准盒模型：内容的宽度 = </span><strong><span class=\"ne-text\">content box + padding + border</span></strong></li><li id=\"uf33a49ac\" data-lake-index-type=\"0\"><span class=\"ne-text\">替代盒模型（ie）：内容的宽度 = </span><strong><span class=\"ne-text\">content box</span></strong></li></ul><h3 id=\"HC3to\"><span class=\"ne-text\">改变元素盒模型的方式</span></h3><p id=\"u04200555\" class=\"ne-p\"><span class=\"ne-text\">通过使用 box-sizing 来改变元素的盒模型</span></p><ul class=\"ne-ul\"><li id=\"u22faf05d\" data-lake-index-type=\"0\"><code class=\"ne-code\"><span class=\"ne-text\">box-sizing: content-box;</span></code><span class=\"ne-text\"> 标准盒模型(默认值)</span></li><li id=\"u820c2b20\" data-lake-index-type=\"0\"><code class=\"ne-code\"><span class=\"ne-text\">box-sizing: border-box;</span></code><span class=\"ne-text\"> 替代盒模型 ie</span></li></ul><h3 id=\"dT0Lc\"><span class=\"ne-text\">盒模型的各个部分</span></h3><p id=\"u5027162a\" class=\"ne-p\"><span class=\"ne-text\">在 css 中组成一个块级盒子需要：</span></p><ul class=\"ne-ul\"><li id=\"u69bb6271\" data-lake-index-type=\"0\"><span class=\"ne-text\">Content box：这个区域是用来显示内容；大小可以通过设置 width 和 height</span></li><li id=\"u40e0d796\" data-lake-index-type=\"0\"><span class=\"ne-text\">Padding box：包围在内容区域外部的空白区域；大小通过 padding 相关属性设置</span></li><li id=\"u0e59c63f\" data-lake-index-type=\"0\"><span class=\"ne-text\">Border box：边框盒包裹内容和内边距；大小通过 border 相关属性设置</span></li><li id=\"uf3279fc5\" data-lake-index-type=\"0\"><span class=\"ne-text\">Margin box：这是最外面的区域，是盒子和其他元素之间的空白区域；大小通过 margin相关属性设置</span></li></ul><h3 id=\"RJWWx\"><span class=\"ne-text\">区块格式化上下文 BFC</span></h3><p id=\"u5dfe46ad\" class=\"ne-p\"><span class=\"ne-text\">区块格式化上下文 Block Formatting Context 是 web 页面的可视 css 渲染的一部分，是</span><strong><span class=\"ne-text\">块级盒子</span></strong><span class=\"ne-text\">的布局过程发生的区域，也是</span><strong><span class=\"ne-text\">浮动元素与其他元素交互</span></strong><span class=\"ne-text\">的区域</span></p><h4 id=\"NH0NY\"><span class=\"ne-text\">创建块格式化上下文的方式</span></h4><ol class=\"ne-ol\"><li id=\"u568934fe\" data-lake-index-type=\"0\"><span class=\"ne-text\">文档的根元素：</span><code class=\"ne-code\"><span class=\"ne-text\">&lt;html /&gt;</span></code></li><li id=\"u8dbe031a\" data-lake-index-type=\"0\"><span class=\"ne-text\">浮动元素：float 的值不为 none 的元素</span></li><li id=\"u9e335029\" data-lake-index-type=\"0\"><span class=\"ne-text\">绝对定位元素：position 值为 absolute 或 fixed 的元素</span></li><li id=\"u98a8775d\" data-lake-index-type=\"0\"><span class=\"ne-text\">行内块元素：display 值为 inline-block 的元素</span></li><li id=\"ufd1e0eda\" data-lake-index-type=\"0\"><span class=\"ne-text\">表格单元格：display 值为 table-cell，html 表格单元格默认值</span></li><li id=\"ucd302666\" data-lake-index-type=\"0\"><span class=\"ne-text\">表格标题：display 值为 table-caption，html 表格标题默认值</span></li><li id=\"u8e3fd4cc\" data-lake-index-type=\"0\"><span class=\"ne-text\">匿名表格单元格元素</span></li></ol><ol class=\"ne-list-wrap\"><ol ne-level=\"1\" class=\"ne-ol\"><li id=\"ud6adf17b\" data-lake-index-type=\"0\"><span class=\"ne-text\">display 值为 table，html 表格默认值</span></li><li id=\"u10ac2b3b\" data-lake-index-type=\"0\"><span class=\"ne-text\">table-row 表格行默认值</span></li><li id=\"u02f2641c\" data-lake-index-type=\"0\"><span class=\"ne-text\">table-row-group 表格体默认值</span></li><li id=\"ue82711bd\" data-lake-index-type=\"0\"><span class=\"ne-text\">table-header-group 表格头部默认值</span></li><li id=\"ufa4c155e\" data-lake-index-type=\"0\"><span class=\"ne-text\">table-footer-group 表格尾部默认值</span></li><li id=\"ua8a13406\" data-lake-index-type=\"0\"><span class=\"ne-text\">inline-table</span></li></ol></ol><ol start=\"8\" class=\"ne-ol\"><li id=\"u8a9c7657\" data-lake-index-type=\"0\"><span class=\"ne-text\">overflow 不为 visible 或 clip 的块级元素</span></li><li id=\"u5565fb41\" data-lake-index-type=\"0\"><span class=\"ne-text\">display 值为 flow-root 的元素</span></li><li id=\"uaaf791db\" data-lake-index-type=\"0\"><span class=\"ne-text\">contain 值为 layout、content 或 paint 的元素</span></li><li id=\"ua4c1d63a\" data-lake-index-type=\"0\"><span class=\"ne-text\">弹性元素：display 值为 flex 或 inline-flex 元素的直接子元素，如果它们本身即不是弹性、网格也不是表格容器</span></li><li id=\"u92769c53\" data-lake-index-type=\"0\"><span class=\"ne-text\">网格元素：display 值为 grid 或 inline-grid 元素的直接子元素，如果它们本身即不是弹性、网格也不是表格容器</span></li><li id=\"u16b8a645\" data-lake-index-type=\"0\"><span class=\"ne-text\">多列容器：column-count 或 column-width 值不为 auto，且含有 </span><code class=\"ne-code\"><span class=\"ne-text\">column-count: 1</span></code><span class=\"ne-text\">的元素</span></li><li id=\"uad33f4a5\" data-lake-index-type=\"0\"><span class=\"ne-text\">column-span 值为 all 的元素始终会创建一个新的格式化上下文，即使该元素没有包裹在一个多列容器中</span></li></ol><h4 id=\"OKEGO\"><span class=\"ne-text\">格式化上下文的作用</span></h4><p id=\"uf2ddaebe\" class=\"ne-p\"><span class=\"ne-text\">格式化上下文影响布局，通常，我们会为定位和清楚浮动创建新的 BFC，而不是更改布局，因为它将：</span></p><ul class=\"ne-ul\"><li id=\"uc2a487ae\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">包含内部浮动</span></strong></li><li id=\"u70900055\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">排除外部浮动</span></strong></li><li id=\"ue0a47eef\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">阻止外边距重叠</span></strong></li></ul><h3 id=\"phJ24\"><span class=\"ne-text\">行内格式化上下文 IFC</span></h3><h4 id=\"YG6sr\"><span class=\"ne-text\">核心概念</span></h4><p id=\"u817e1caa\" class=\"ne-p\"><span class=\"ne-text\">行内格式化上下文是一个网页渲染结果的一部分。期中，各行内框 inline-boxes 一个接一个地排列，其排列顺序根据书写模式 writing-mode 的设置来决定</span></p><ul class=\"ne-ul\"><li id=\"u163290ac\" data-lake-index-type=\"0\"><span class=\"ne-text\">对于水平书写模式，各个框从左边开始水平地排列</span></li><li id=\"u8a989340\" data-lake-index-type=\"0\"><span class=\"ne-text\">对于垂直书写模式，各个框从顶部开始水平地排列</span></li></ul><h4 id=\"DryLh\"><span class=\"ne-text\">在块方向上对齐</span></h4><p id=\"u3efab663\" class=\"ne-p\"><span class=\"ne-text\">行内框 inline boxes 可以使用 vertical-align 属性，以不同的方式在块的方向上进行对齐</span></p><h4 id=\"ki8OK\"><span class=\"ne-text\">在行内方向上对齐</span></h4><p id=\"u8b1bd03a\" class=\"ne-p\"><span class=\"ne-text\">如果行内方向上还有额外空间，那么 text-align 可用于将各行内框 inline-boxes 在行框 line box 内对齐</span></p><h4 id=\"U3n1T\"><span class=\"ne-text\">浮动造成的效果</span></h4><p id=\"u30a05a5b\" class=\"ne-p\"><span class=\"ne-text\">在行内方向上，各行框 line boxes 通常具有相同的尺寸，即在水平书写模式下，它们具有相同的宽度；在垂直书写模式下，它们具有同样的高度。但是，如果同一个块格式化上下文中存在一个 float，则这个浮动元素将导致包裹了它的各行框变短</span></p><h3 id=\"IsgSS\"><span class=\"ne-text\">块级盒子和内联盒子</span></h3><p id=\"u8edba70a\" class=\"ne-p\"><span class=\"ne-text\">在 css 中我们广泛地使用两种&quot;盒子&quot; - </span><strong><span class=\"ne-text\">块级盒子 block box</span></strong><span class=\"ne-text\"> 和</span><strong><span class=\"ne-text\">内联盒子 inline-box</span></strong><span class=\"ne-text\">。这两种盒子会在页面流 page flow 和元素之间的关系方面表现出不同的行为</span></p><h4 id=\"crwlz\"><span class=\"ne-text\">块级盒子 - block 的表现行为</span></h4><ul class=\"ne-ul\"><li id=\"uf9cea177\" data-lake-index-type=\"0\"><span class=\"ne-text\">盒子会</span><strong><span class=\"ne-text\">在内联的方向上扩展</span></strong><span class=\"ne-text\">并</span><strong><span class=\"ne-text\">占据父容器在该方向上的所有可用</span></strong><span class=\"ne-text\">空间，在</span><strong><span class=\"ne-text\">绝大多数情况下</span></strong><span class=\"ne-text\">意味着</span><strong><span class=\"ne-text\">盒子会和父容器一样宽</span></strong></li><li id=\"u5ee2225f\" data-lake-index-type=\"0\"><span class=\"ne-text\">每个盒子都会换行</span></li><li id=\"u85906542\" data-lake-index-type=\"0\"><span class=\"ne-text\">width 和 height 属性可以发挥作用</span></li><li id=\"uad576c37\" data-lake-index-type=\"0\"><span class=\"ne-text\">内边距 padding，外边距 margin 和边框 border 会将其他元素从当前盒子周围</span><strong><span class=\"ne-text\">推开</span></strong></li></ul><div class=\"ne-quote\"><p id=\"u650765a9\" class=\"ne-p\"><span class=\"ne-text\">除非特殊制定，诸如标题 h1 等和段落 p 默认情况下都是块级的盒子</span></p></div><h4 id=\"C69fO\"><span class=\"ne-text\">内联盒子 - inline 的表现行为</span></h4><ul class=\"ne-ul\"><li id=\"u83d33cc2\" data-lake-index-type=\"0\"><span class=\"ne-text\">盒子不会产生换行</span></li><li id=\"u978f48e0\" data-lake-index-type=\"0\"><span class=\"ne-text\">width 和 height 属性将不起作用</span></li><li id=\"ud8e241ec\" data-lake-index-type=\"0\"><span class=\"ne-text\">垂直方向的内边距、外边距以及边框会被应用但是不会把其他处于 inline 状态的盒子</span><strong><span class=\"ne-text\">推开</span></strong></li><li id=\"u587076a2\" data-lake-index-type=\"0\"><span class=\"ne-text\">水平方向的内边距、外边距以及边框会被应用且会把其他处于 inline 状态的盒子</span><strong><span class=\"ne-text\">推开</span></strong></li></ul><div class=\"ne-quote\"><p id=\"u6eee85e6\" class=\"ne-p\"><span class=\"ne-text\">用做链接的 a 元素、span、em 以及 strong 都是默认处于 inline 状态的</span></p></div><h3 id=\"EeNqW\"><span class=\"ne-text\">弹性盒子</span></h3><p id=\"uddaa20cb\" class=\"ne-p\"><span class=\"ne-text\">弹性盒子是一种</span><strong><span class=\"ne-text\">用于按行或按列布局元素的一纬布局方法</span></strong><span class=\"ne-text\">。元素可以</span><strong><span class=\"ne-text\">膨胀以填充</span></strong><span class=\"ne-text\">额外的空间，</span><strong><span class=\"ne-text\">收缩以适应</span></strong><span class=\"ne-text\">更小的空间</span></p><h4 id=\"KgunS\"><span class=\"ne-text\">flex 模型说明</span></h4><p id=\"u4924b46b\" class=\"ne-p\"><span class=\"ne-text\">当元素表现为 flex 框时，它们沿两个轴来布局</span></p><p id=\"u82d7c1d2\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2023/png/732231/1700410775213-9d6edef5-5365-4dcf-8858-14c8d13fc68e.png\" width=\"751.1999969482422\" id=\"ua5b786dc\" class=\"ne-image\"></p><ul class=\"ne-ul\"><li id=\"uf22304b2\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">主轴 - main axis</span></strong><span class=\"ne-text\"> 是沿着 flex 元素放置的方向延伸的轴（比如页面上的横向的行、纵向的咧）。该轴的开始和结束被称为 main start 和 main end</span></li><li id=\"uc1b5753b\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">交叉轴 - cross axis</span></strong><span class=\"ne-text\"> 是垂直于 flex 元素放置方向的轴。该轴的开始和结束被称为 cross start 和 cross end</span></li><li id=\"u4581fbb1\" data-lake-index-type=\"0\"><span class=\"ne-text\">设置了 display: flex 的父元素被称之为 </span><strong><span class=\"ne-text\">flex 容器（flex container）</span></strong></li><li id=\"ua3fdedb5\" data-lake-index-type=\"0\"><span class=\"ne-text\">在 flex 容器中表现为弹性的盒子的元素被称之为 flex 项（flex item）</span></li></ul><h4 id=\"p4ytI\"><span class=\"ne-text\">flex 的缩写与全写</span></h4><p id=\"u99919cd8\" class=\"ne-p\"><span class=\"ne-text\">flex 是一个可以指定最多三个不同值的缩写属性：</span></p><ul class=\"ne-ul\"><li id=\"u1040ac1e\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">flex-grow</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">设置 flex 项主尺寸的 flex 增常系数</span></strong><span class=\"ne-text\">。用于决定项目在有剩余空间的情况下是否放大，默认为 0 不放大。设置之后，即使设置了固定宽度，也会放大</span></li><li id=\"u4fa2436d\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">flex-shrink</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">指定了 flex 元素的收缩规则</span></strong><span class=\"ne-text\">。用于决定项目在空间不足时是否缩小，默认为 1，即空间不足时一起等比例缩小。设置之后，计时设置了固定宽度也会缩小</span></li><li id=\"uf07243c6\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">flex-basis</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">指定了 flex 元素在主轴方向上的初始大小</span></strong><span class=\"ne-text\">。用于设置项目宽度，默认为 auto，即项目会保持默认宽度，或者以 width 为自身宽度。设置之后，会覆盖 width 属性</span></li></ul><div class=\"ne-quote\"><p id=\"uda9da28d\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">flex: &quot;0 1 auto&quot;;</span></code><span class=\"ne-text\"> 等价于 </span><code class=\"ne-code\"><span class=\"ne-text\">flex-grow: 0; flex-shrink: 1; flex-basis: &quot;auto&quot;;</span></code></p></div><h4 id=\"QboUp\"><span class=\"ne-text\">一些其他的属性</span></h4><ul class=\"ne-ul\"><li id=\"u30cbe6a8\" data-lake-index-type=\"0\"><span class=\"ne-text\">flex-flow：flex-direction 和 flex-wrap 的集合。默认值 </span><code class=\"ne-code\"><span class=\"ne-text\">row nowrap</span></code></li><li id=\"u791d7abf\" data-lake-index-type=\"0\"><span class=\"ne-text\">align-content：用于控制多行项目的对齐方式，如果项目只有一行则不起作用</span></li><li id=\"u7e606d63\" data-lake-index-type=\"0\"><span class=\"ne-text\">order：用于决定项目的排列顺序，数值越小，项目排列越靠前，默认为 0</span></li><li id=\"u55ac184e\" data-lake-index-type=\"0\"><span class=\"ne-text\">align-self：表示继承父容器的 align-items 属性，如果没有父元素，则默认为 stretch，用于让个别项目拥有与其他项目不同的对齐方式，各个值的表现与父容器的 align-items 属性完全一致</span></li></ul><h3 id=\"QLntG\"><span class=\"ne-text\">网格</span></h3><p id=\"u6235a8ba\" class=\"ne-p\"><strong><span class=\"ne-text\">css 网格 grid </span></strong><span class=\"ne-text\">是一个用于 web 的</span><strong><span class=\"ne-text\">二纬布局系统</span></strong><span class=\"ne-text\">。利用网格，可以把内容按照行与列的格式进行排版。另外，网格还能非常轻松地实现一些复杂的布局</span></p><h4 id=\"vZqRC\"><span class=\"ne-text\">网格布局说明</span></h4><p id=\"u2768c76d\" class=\"ne-p\"><span class=\"ne-text\">网格是由一系列水平及垂直的线构成的一种布局模式。根据网格，我们能够将设计的元素进行排列，版主我们设计一些具有固定位置以及宽度的元素的页面，使我们的网站页面更加统一</span></p><p id=\"u46ced5aa\" class=\"ne-p\"><span class=\"ne-text\">一个网格通常具有许多的</span><strong><span class=\"ne-text\">列 column</span></strong><span class=\"ne-text\"> 与</span><strong><span class=\"ne-text\">行 row</span></strong><span class=\"ne-text\">，以及行与行、列与列之间的间隙，这个间隙一般被称为</span><strong><span class=\"ne-text\">沟槽 gutter</span></strong></p><p id=\"u883f4f9b\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2023/png/732231/1700412236867-50b6aba0-bd50-4f93-a06d-4c1340d90af0.png\" width=\"715.3999938964844\" id=\"u21c38cc2\" class=\"ne-image\"></p><h2 id=\"e5Azg\"><span class=\"ne-text\">包含块</span></h2><p id=\"ucb3ce068\" class=\"ne-p\"><span class=\"ne-text\" style=\"font-size: 14px\">包含块的英文全称为 containing block，实际上平时在书写 css 时，大多数情况下无法感知到它的存在，但实际上在 css 规范中是明确书写了这个概念：</span><a href=\"https://drafts.csswg.org/css2/#containing-block-details\" data-href=\"https://drafts.csswg.org/css2/#containing-block-details\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\" style=\"font-size: 14px\">https://drafts.csswg.org/css2/#containing-block-details</span></a></p><p id=\"u113bc659\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2023/png/732231/1700342936976-77de37c2-e8dd-4dfb-8a42-0befae001275.png\" width=\"888.3636169433594\" id=\"E2tEE\" class=\"ne-image\"></p><h3 id=\"xTRBi\"><span class=\"ne-text\">包含块的影响</span></h3><p id=\"u288468e1\" class=\"ne-p\"><span class=\"ne-text\">元素的</span><strong><span class=\"ne-text\">尺寸和位置</span></strong><span class=\"ne-text\">，会受它的</span><strong><span class=\"ne-text\">包含块</span></strong><span class=\"ne-text\">所影响。对于一些属性，例如 width、height、padding、margin，绝对定位元素的偏移值（比如 position 被设置为 absolute 或 fixed），</span><strong><span class=\"ne-text\">当我们对其赋予百分比值时，这些值的计算值，就是通过元素的包含块计算得来</span></strong></p><h3 id=\"M7qGm\"><span class=\"ne-text\">确定包含块</span></h3><ul class=\"ne-ul\"><li id=\"u060657a4\" data-lake-index-type=\"0\"><span class=\"ne-text\">根元素 </span><code class=\"ne-code\"><span class=\"ne-text\">&lt;html /&gt;</span></code><span class=\"ne-text\"> 所在的包含块是一个被称为</span><strong><span class=\"ne-text\">初始包含块 initial containing block 的矩形</span></strong><span class=\"ne-text\">。它具有</span><strong><span class=\"ne-text\">视口</span></strong><span class=\"ne-text\">对于连续媒体）或</span><strong><span class=\"ne-text\">页面区域</span></strong><span class=\"ne-text\">（对于分页媒体）的</span><strong><span class=\"ne-text\">尺寸</span></strong><span class=\"ne-text\">。一般来讲，</span><strong><span class=\"ne-text\">初始包含块的大小 = 视口 viewport 大小</span></strong><span class=\"ne-text\">，基点在画布的原点（视口左上角）。它是作为元素绝对定位和固定定位的参照物</span></li><li id=\"u34e262a3\" data-lake-index-type=\"0\"><span class=\"ne-text\">对于非根元素的包含块判定就有几种不同的情况，大致分为以下几种：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ud1035ddc\" data-lake-index-type=\"0\"><span class=\"ne-text\">如果 </span><strong><span class=\"ne-text\">position 属性为 static、relative 或 sticky</span></strong><span class=\"ne-text\">，那么包含块可能由它的最近的</span><strong><span class=\"ne-text\">祖先块元素</span></strong><span class=\"ne-text\">（比如说 inline-block、block 或 list-item 元素）的内容区的边缘组成，也可能会</span><strong><span class=\"ne-text\">建立格式化上下文</span></strong><span class=\"ne-text\">（比如说 a、table container、flex container、grid container 或者是 the block container 自身）</span></li><li id=\"u894e8616\" data-lake-index-type=\"0\"><span class=\"ne-text\">如果 </span><strong><span class=\"ne-text\">position 属性为 absolute</span></strong><span class=\"ne-text\">，包含块就是由它的最近的 position 的值不是 static（也就是值为 fixed、absolute、relative 或 sticky）的</span><strong><span class=\"ne-text\">祖先元素的内边距区的边缘组成</span></strong></li><li id=\"u2de047fc\" data-lake-index-type=\"0\"><span class=\"ne-text\">如果 </span><strong><span class=\"ne-text\">position 属性是 fixed</span></strong><span class=\"ne-text\">，在连续媒体的情况下（continuous media）包含块是</span><strong><span class=\"ne-text\">视口（viewport）</span></strong><span class=\"ne-text\">，在分页媒体（paged media）下的情况下包含块是</span><strong><span class=\"ne-text\">分页区域（page area）</span></strong></li><li id=\"u4ce685f5\" data-lake-index-type=\"0\"><span class=\"ne-text\">如果 </span><strong><span class=\"ne-text\">position 属性是 absolute 或 fixed</span></strong><span class=\"ne-text\">，包含块也可能是由满足以下条件的最近父级元素的内边距区的边缘组成的</span></li></ul></ul><ul class=\"ne-list-wrap\"><ul class=\"ne-list-wrap\"><ul ne-level=\"2\" class=\"ne-ul\"><li id=\"u5061b72c\" data-lake-index-type=\"0\"><span class=\"ne-text\">transform 或 perspective 的值不是 none</span></li><li id=\"ucaeb6ec7\" data-lake-index-type=\"0\"><span class=\"ne-text\">will-change 的值是 transform 或 perspective</span></li><li id=\"u9946474f\" data-lake-index-type=\"0\"><span class=\"ne-text\">filter 的值不是 none 或 will-change 的值是 filter（只在 Firefox 下生效）</span></li><li id=\"ue18c86d3\" data-lake-index-type=\"0\"><span class=\"ne-text\">contain 的值是 layout、paint、strict 或 content（例如：</span><code class=\"ne-code\"><span class=\"ne-text\">contain: paint;</span></code><span class=\"ne-text\">）</span></li><li id=\"u3ff946e4\" data-lake-index-type=\"0\"><span class=\"ne-text\">backdrop-filter 的值不是 none（例如：</span><code class=\"ne-code\"><span class=\"ne-text\">backdrop-filter: blur(10px);</span></code><span class=\"ne-text\">）</span></li></ul></ul></ul><h2 id=\"zFk3D\"><span class=\"ne-text\">css 属性计算过程</span></h2><h3 id=\"BwDmu\"><span class=\"ne-text\">确定声明值</span></h3><p id=\"u39f772d5\" class=\"ne-p\"><span class=\"ne-text\">声明值就是所书写的 css 样式</span></p><h3 id=\"wBMdV\"><span class=\"ne-text\">层叠冲突</span></h3><ul class=\"ne-ul\"><li id=\"ud1c2e7b2\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">比较来源的重要性</span></strong><span class=\"ne-text\">：</span><strong><span class=\"ne-text\">页面作者样式 &gt; 用户样式 &gt; 用户代理样式</span></strong></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u002021b4\" data-lake-index-type=\"0\"><span class=\"ne-text\">浏览器会有一个基本的样式表来给任何网页设置默认样式，这些样式统称为</span><strong><span class=\"ne-text\">用户代理样式</span></strong></li><li id=\"ued22532b\" data-lake-index-type=\"0\"><span class=\"ne-text\">网页的作者可以定义文档的样式，这是最常见的样式表，称为</span><strong><span class=\"ne-text\">页面作者样式</span></strong></li><li id=\"ub0f275b4\" data-lake-index-type=\"0\"><span class=\"ne-text\">浏览器的用户，可以使用自定义样式表来定制使用体验，称为</span><strong><span class=\"ne-text\">用户样式</span></strong></li></ul></ul><ul class=\"ne-ul\"><li id=\"u8c81550c\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">比较优先级：相同来源则比较选择器优先级</span></strong></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u3483e444\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">id 选择器</span></strong><span class=\"ne-text\">：选择器中包含 id 选择器则百位权重得 1 分</span></li><li id=\"u315f8be2\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">类选择器</span></strong><span class=\"ne-text\">：选择器中包含</span><strong><span class=\"ne-text\">类选择器</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">属性选择器</span></strong><span class=\"ne-text\">或者</span><strong><span class=\"ne-text\">伪类</span></strong><span class=\"ne-text\">则十位权重得 1 分</span></li><li id=\"uffc073e6\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">元素选择器</span></strong><span class=\"ne-text\">：选择器中包含</span><strong><span class=\"ne-text\">元素</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">伪元素</span></strong><span class=\"ne-text\">选择器则个位得 1 分</span></li><li id=\"u8de176b1\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">通用选择器 *</span></strong><span class=\"ne-text\">、</span><strong><span class=\"ne-text\">关系选择器 （+、&gt;、~、''）</span></strong><span class=\"ne-text\">和调</span><strong><span class=\"ne-text\">整优先级的选择器 :where </span></strong><span class=\"ne-text\">不会影响优先级</span></li><li id=\"ud5c42209\" data-lake-index-type=\"0\"><span class=\"ne-text\">否定 </span><code class=\"ne-code\"><span class=\"ne-text\">:not()</span></code><span class=\"ne-text\"> 和任意匹配 </span><code class=\"ne-code\"><span class=\"ne-text\">:is()</span></code><span class=\"ne-text\"> 伪类本身对优先级没有影响，但它们的参数则会带来影响。参数中，</span><strong><span class=\"ne-text\">对优先级算法有贡献的参数的优先级的最大值</span></strong><span class=\"ne-text\">将作为该伪类选择器的优先级</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"u150c8ed9\" data-lake-index-type=\"0\"><strong><span class=\"ne-text\">比较次序：后面的覆盖前面的</span></strong></li></ul><h3 id=\"zjaFP\"><span class=\"ne-text\">使用继承</span></h3><p id=\"u0aa66e2d\" class=\"ne-p\"><span class=\"ne-text\">具体需查看相关属性介绍得知是否可继承</span></p><h3 id=\"SxpVm\"><span class=\"ne-text\">使用默认值</span></h3><p id=\"ubafff462\" class=\"ne-p\"><span class=\"ne-text\">如果上面几步都无法确定最终样式，则将直接</span><strong><span class=\"ne-text\">使用默认值</span></strong></p><p id=\"u1661ea3e\" class=\"ne-p\"><span class=\"ne-text\"></span></p></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"paragraphSpacing\" content=\"relax\" /><h2 data-lake-id=\"cUGaB\" id=\"cUGaB\"><span data-lake-id=\"u2e209295\" id=\"u2e209295\">盒模型</span></h2><h3 data-lake-id=\"XhvRr\" id=\"XhvRr\"><span data-lake-id=\"u7217a565\" id=\"u7217a565\">什么是 css 盒模型</span></h3><p data-lake-id=\"u727ae994\" id=\"u727ae994\"><span data-lake-id=\"u1c8201c5\" id=\"u1c8201c5\">完整的 css 盒模型应用于块级盒子，内联盒子只使用盒模型中定义的部分内容。模型定义了盒的每个部分 - margin、border、padding and content。合在一起就可以创建我们在页面上看到的内容。为了增加一些额外的复杂性，有一个标准的和替代 ie 的盒模型</span></p><ul list=\"u8f45271b\"><li fid=\"u8a4d652f\" data-lake-id=\"u73eaefd2\" id=\"u73eaefd2\"><span data-lake-id=\"u6aebb689\" id=\"u6aebb689\">标准盒模型：内容的宽度 = </span><strong><span data-lake-id=\"u83388ef2\" id=\"u83388ef2\">content box + padding + border</span></strong></li><li fid=\"u8a4d652f\" data-lake-id=\"uf33a49ac\" id=\"uf33a49ac\"><span data-lake-id=\"u560cc004\" id=\"u560cc004\">替代盒模型（ie）：内容的宽度 = </span><strong><span data-lake-id=\"ub664c610\" id=\"ub664c610\">content box</span></strong></li></ul><h3 data-lake-id=\"HC3to\" id=\"HC3to\"><span data-lake-id=\"uc436408d\" id=\"uc436408d\">改变元素盒模型的方式</span></h3><p data-lake-id=\"u04200555\" id=\"u04200555\"><span data-lake-id=\"u8b72a00a\" id=\"u8b72a00a\">通过使用 box-sizing 来改变元素的盒模型</span></p><ul list=\"u8f45271b\" start=\"3\"><li fid=\"u8a4d652f\" data-lake-id=\"u22faf05d\" id=\"u22faf05d\"><code data-lake-id=\"u261ca236\" id=\"u261ca236\"><span data-lake-id=\"u1ba83b39\" id=\"u1ba83b39\">box-sizing: content-box;</span></code><span data-lake-id=\"ud1b8fc43\" id=\"ud1b8fc43\"> 标准盒模型(默认值)</span></li><li fid=\"u8a4d652f\" data-lake-id=\"u820c2b20\" id=\"u820c2b20\"><code data-lake-id=\"u2f9ba4f3\" id=\"u2f9ba4f3\"><span data-lake-id=\"uc165ca07\" id=\"uc165ca07\">box-sizing: border-box;</span></code><span data-lake-id=\"u049fbe24\" id=\"u049fbe24\"> 替代盒模型 ie</span></li></ul><h3 data-lake-id=\"dT0Lc\" id=\"dT0Lc\"><span data-lake-id=\"ubc527e70\" id=\"ubc527e70\">盒模型的各个部分</span></h3><p data-lake-id=\"u5027162a\" id=\"u5027162a\"><span data-lake-id=\"uf1301d1e\" id=\"uf1301d1e\">在 css 中组成一个块级盒子需要：</span></p><ul list=\"udf3e486c\"><li fid=\"ue121e541\" data-lake-id=\"u69bb6271\" id=\"u69bb6271\"><span data-lake-id=\"u645acf7f\" id=\"u645acf7f\">Content box：这个区域是用来显示内容；大小可以通过设置 width 和 height</span></li><li fid=\"ue121e541\" data-lake-id=\"u40e0d796\" id=\"u40e0d796\"><span data-lake-id=\"u413f218e\" id=\"u413f218e\">Padding box：包围在内容区域外部的空白区域；大小通过 padding 相关属性设置</span></li><li fid=\"ue121e541\" data-lake-id=\"u0e59c63f\" id=\"u0e59c63f\"><span data-lake-id=\"ub7495474\" id=\"ub7495474\">Border box：边框盒包裹内容和内边距；大小通过 border 相关属性设置</span></li><li fid=\"ue121e541\" data-lake-id=\"uf3279fc5\" id=\"uf3279fc5\"><span data-lake-id=\"u744264e6\" id=\"u744264e6\">Margin box：这是最外面的区域，是盒子和其他元素之间的空白区域；大小通过 margin相关属性设置</span></li></ul><h3 data-lake-id=\"RJWWx\" id=\"RJWWx\"><span data-lake-id=\"u658de81f\" id=\"u658de81f\">区块格式化上下文 BFC</span></h3><p data-lake-id=\"u5dfe46ad\" id=\"u5dfe46ad\"><span data-lake-id=\"ucae7ce2d\" id=\"ucae7ce2d\">区块格式化上下文 Block Formatting Context 是 web 页面的可视 css 渲染的一部分，是</span><strong><span data-lake-id=\"u32daf8c4\" id=\"u32daf8c4\">块级盒子</span></strong><span data-lake-id=\"u8ca2470f\" id=\"u8ca2470f\">的布局过程发生的区域，也是</span><strong><span data-lake-id=\"ub848747b\" id=\"ub848747b\">浮动元素与其他元素交互</span></strong><span data-lake-id=\"u7281b8b6\" id=\"u7281b8b6\">的区域</span></p><h4 data-lake-id=\"NH0NY\" id=\"NH0NY\"><span data-lake-id=\"u9398c8ec\" id=\"u9398c8ec\">创建块格式化上下文的方式</span></h4><ol list=\"u32c6557b\"><li fid=\"udc55c84c\" data-lake-id=\"u568934fe\" id=\"u568934fe\"><span data-lake-id=\"u926aeb63\" id=\"u926aeb63\">文档的根元素：</span><code data-lake-id=\"u531a0a64\" id=\"u531a0a64\"><span data-lake-id=\"u6841d384\" id=\"u6841d384\">&lt;html /&gt;</span></code></li><li fid=\"udc55c84c\" data-lake-id=\"u8dbe031a\" id=\"u8dbe031a\"><span data-lake-id=\"ubd0fe394\" id=\"ubd0fe394\">浮动元素：float 的值不为 none 的元素</span></li><li fid=\"udc55c84c\" data-lake-id=\"u9e335029\" id=\"u9e335029\"><span data-lake-id=\"u1ea41815\" id=\"u1ea41815\">绝对定位元素：position 值为 absolute 或 fixed 的元素</span></li><li fid=\"udc55c84c\" data-lake-id=\"u98a8775d\" id=\"u98a8775d\"><span data-lake-id=\"udf433bec\" id=\"udf433bec\">行内块元素：display 值为 inline-block 的元素</span></li><li fid=\"udc55c84c\" data-lake-id=\"ufd1e0eda\" id=\"ufd1e0eda\"><span data-lake-id=\"u7afb374d\" id=\"u7afb374d\">表格单元格：display 值为 table-cell，html 表格单元格默认值</span></li><li fid=\"udc55c84c\" data-lake-id=\"ucd302666\" id=\"ucd302666\"><span data-lake-id=\"u68cd0c3e\" id=\"u68cd0c3e\">表格标题：display 值为 table-caption，html 表格标题默认值</span></li><li fid=\"udc55c84c\" data-lake-id=\"u8e3fd4cc\" id=\"u8e3fd4cc\"><span data-lake-id=\"ud2a1e640\" id=\"ud2a1e640\">匿名表格单元格元素</span></li></ol><ol list=\"u32c6557b\" data-lake-indent=\"1\"><li fid=\"udc55c84c\" data-lake-id=\"ud6adf17b\" id=\"ud6adf17b\"><span data-lake-id=\"u3799e5a6\" id=\"u3799e5a6\">display 值为 table，html 表格默认值</span></li><li fid=\"udc55c84c\" data-lake-id=\"u10ac2b3b\" id=\"u10ac2b3b\"><span data-lake-id=\"uae51f3b4\" id=\"uae51f3b4\">table-row 表格行默认值</span></li><li fid=\"udc55c84c\" data-lake-id=\"u02f2641c\" id=\"u02f2641c\"><span data-lake-id=\"u071281c2\" id=\"u071281c2\">table-row-group 表格体默认值</span></li><li fid=\"udc55c84c\" data-lake-id=\"ue82711bd\" id=\"ue82711bd\"><span data-lake-id=\"uf22f9285\" id=\"uf22f9285\">table-header-group 表格头部默认值</span></li><li fid=\"udc55c84c\" data-lake-id=\"ufa4c155e\" id=\"ufa4c155e\"><span data-lake-id=\"ub9903294\" id=\"ub9903294\">table-footer-group 表格尾部默认值</span></li><li fid=\"udc55c84c\" data-lake-id=\"ua8a13406\" id=\"ua8a13406\"><span data-lake-id=\"u68bf3267\" id=\"u68bf3267\">inline-table</span></li></ol><ol list=\"u32c6557b\" start=\"8\"><li fid=\"udc55c84c\" data-lake-id=\"u8a9c7657\" id=\"u8a9c7657\"><span data-lake-id=\"ub7c0f5a0\" id=\"ub7c0f5a0\">overflow 不为 visible 或 clip 的块级元素</span></li><li fid=\"udc55c84c\" data-lake-id=\"u5565fb41\" id=\"u5565fb41\"><span data-lake-id=\"u305bf998\" id=\"u305bf998\">display 值为 flow-root 的元素</span></li><li fid=\"udc55c84c\" data-lake-id=\"uaaf791db\" id=\"uaaf791db\"><span data-lake-id=\"ub6212076\" id=\"ub6212076\">contain 值为 layout、content 或 paint 的元素</span></li><li fid=\"udc55c84c\" data-lake-id=\"ua4c1d63a\" id=\"ua4c1d63a\"><span data-lake-id=\"ub5114a83\" id=\"ub5114a83\">弹性元素：display 值为 flex 或 inline-flex 元素的直接子元素，如果它们本身即不是弹性、网格也不是表格容器</span></li><li fid=\"udc55c84c\" data-lake-id=\"u92769c53\" id=\"u92769c53\"><span data-lake-id=\"u46bfbd4a\" id=\"u46bfbd4a\">网格元素：display 值为 grid 或 inline-grid 元素的直接子元素，如果它们本身即不是弹性、网格也不是表格容器</span></li><li fid=\"udc55c84c\" data-lake-id=\"u16b8a645\" id=\"u16b8a645\"><span data-lake-id=\"ubc07b59e\" id=\"ubc07b59e\">多列容器：column-count 或 column-width 值不为 auto，且含有 </span><code data-lake-id=\"ue824ab7c\" id=\"ue824ab7c\"><span data-lake-id=\"u9458fae6\" id=\"u9458fae6\">column-count: 1</span></code><span data-lake-id=\"u766a6620\" id=\"u766a6620\">的元素</span></li><li fid=\"udc55c84c\" data-lake-id=\"uad33f4a5\" id=\"uad33f4a5\"><span data-lake-id=\"u641e175d\" id=\"u641e175d\">column-span 值为 all 的元素始终会创建一个新的格式化上下文，即使该元素没有包裹在一个多列容器中</span></li></ol><h4 data-lake-id=\"OKEGO\" id=\"OKEGO\"><span data-lake-id=\"u4e90be11\" id=\"u4e90be11\">格式化上下文的作用</span></h4><p data-lake-id=\"uf2ddaebe\" id=\"uf2ddaebe\"><span data-lake-id=\"u6d706ecc\" id=\"u6d706ecc\">格式化上下文影响布局，通常，我们会为定位和清楚浮动创建新的 BFC，而不是更改布局，因为它将：</span></p><ul list=\"u657a580b\"><li fid=\"u8a731ab5\" data-lake-id=\"uc2a487ae\" id=\"uc2a487ae\"><strong><span data-lake-id=\"ua6b92113\" id=\"ua6b92113\">包含内部浮动</span></strong></li><li fid=\"u8a731ab5\" data-lake-id=\"u70900055\" id=\"u70900055\"><strong><span data-lake-id=\"u0c348cec\" id=\"u0c348cec\">排除外部浮动</span></strong></li><li fid=\"u8a731ab5\" data-lake-id=\"ue0a47eef\" id=\"ue0a47eef\"><strong><span data-lake-id=\"u745fce2f\" id=\"u745fce2f\">阻止外边距重叠</span></strong></li></ul><h3 data-lake-id=\"phJ24\" id=\"phJ24\"><span data-lake-id=\"u40cda2e4\" id=\"u40cda2e4\">行内格式化上下文 IFC</span></h3><h4 data-lake-id=\"YG6sr\" id=\"YG6sr\"><span data-lake-id=\"u4cce3082\" id=\"u4cce3082\">核心概念</span></h4><p data-lake-id=\"u817e1caa\" id=\"u817e1caa\"><span data-lake-id=\"u3632e79d\" id=\"u3632e79d\">行内格式化上下文是一个网页渲染结果的一部分。期中，各行内框 inline-boxes 一个接一个地排列，其排列顺序根据书写模式 writing-mode 的设置来决定</span></p><ul list=\"u60a0e47c\"><li fid=\"u12fe82a2\" data-lake-id=\"u163290ac\" id=\"u163290ac\"><span data-lake-id=\"u63e78343\" id=\"u63e78343\">对于水平书写模式，各个框从左边开始水平地排列</span></li><li fid=\"u12fe82a2\" data-lake-id=\"u8a989340\" id=\"u8a989340\"><span data-lake-id=\"u5d573b9a\" id=\"u5d573b9a\">对于垂直书写模式，各个框从顶部开始水平地排列</span></li></ul><h4 data-lake-id=\"DryLh\" id=\"DryLh\"><span data-lake-id=\"uff2e9650\" id=\"uff2e9650\">在块方向上对齐</span></h4><p data-lake-id=\"u3efab663\" id=\"u3efab663\"><span data-lake-id=\"u11809ee1\" id=\"u11809ee1\">行内框 inline boxes 可以使用 vertical-align 属性，以不同的方式在块的方向上进行对齐</span></p><h4 data-lake-id=\"ki8OK\" id=\"ki8OK\"><span data-lake-id=\"u240d5149\" id=\"u240d5149\">在行内方向上对齐</span></h4><p data-lake-id=\"u8b1bd03a\" id=\"u8b1bd03a\"><span data-lake-id=\"u162804a7\" id=\"u162804a7\">如果行内方向上还有额外空间，那么 text-align 可用于将各行内框 inline-boxes 在行框 line box 内对齐</span></p><h4 data-lake-id=\"U3n1T\" id=\"U3n1T\"><span data-lake-id=\"u09ed510d\" id=\"u09ed510d\">浮动造成的效果</span></h4><p data-lake-id=\"u30a05a5b\" id=\"u30a05a5b\"><span data-lake-id=\"u93f19d92\" id=\"u93f19d92\">在行内方向上，各行框 line boxes 通常具有相同的尺寸，即在水平书写模式下，它们具有相同的宽度；在垂直书写模式下，它们具有同样的高度。但是，如果同一个块格式化上下文中存在一个 float，则这个浮动元素将导致包裹了它的各行框变短</span></p><h3 data-lake-id=\"IsgSS\" id=\"IsgSS\"><span data-lake-id=\"u6371f2c7\" id=\"u6371f2c7\">块级盒子和内联盒子</span></h3><p data-lake-id=\"u8edba70a\" id=\"u8edba70a\"><span data-lake-id=\"ue566ed17\" id=\"ue566ed17\">在 css 中我们广泛地使用两种&quot;盒子&quot; - </span><strong><span data-lake-id=\"u4a83a16e\" id=\"u4a83a16e\">块级盒子 block box</span></strong><span data-lake-id=\"u2ffa3710\" id=\"u2ffa3710\"> 和</span><strong><span data-lake-id=\"u66b102c4\" id=\"u66b102c4\">内联盒子 inline-box</span></strong><span data-lake-id=\"u68fd54ff\" id=\"u68fd54ff\">。这两种盒子会在页面流 page flow 和元素之间的关系方面表现出不同的行为</span></p><h4 data-lake-id=\"crwlz\" id=\"crwlz\"><span data-lake-id=\"u75ebdc7d\" id=\"u75ebdc7d\">块级盒子 - block 的表现行为</span></h4><ul list=\"u7e934edd\"><li fid=\"u037b7508\" data-lake-id=\"uf9cea177\" id=\"uf9cea177\"><span data-lake-id=\"u1af3917a\" id=\"u1af3917a\">盒子会</span><strong><span data-lake-id=\"u691186a8\" id=\"u691186a8\">在内联的方向上扩展</span></strong><span data-lake-id=\"u2c293a07\" id=\"u2c293a07\">并</span><strong><span data-lake-id=\"ue8ae528d\" id=\"ue8ae528d\">占据父容器在该方向上的所有可用</span></strong><span data-lake-id=\"u16bf4b26\" id=\"u16bf4b26\">空间，在</span><strong><span data-lake-id=\"ue77c131e\" id=\"ue77c131e\">绝大多数情况下</span></strong><span data-lake-id=\"u5bf3f768\" id=\"u5bf3f768\">意味着</span><strong><span data-lake-id=\"u692f5227\" id=\"u692f5227\">盒子会和父容器一样宽</span></strong></li><li fid=\"u037b7508\" data-lake-id=\"u5ee2225f\" id=\"u5ee2225f\"><span data-lake-id=\"ue2dbcac4\" id=\"ue2dbcac4\">每个盒子都会换行</span></li><li fid=\"u037b7508\" data-lake-id=\"u85906542\" id=\"u85906542\"><span data-lake-id=\"u7cc51e8e\" id=\"u7cc51e8e\">width 和 height 属性可以发挥作用</span></li><li fid=\"u037b7508\" data-lake-id=\"uad576c37\" id=\"uad576c37\"><span data-lake-id=\"ubd9ef3cd\" id=\"ubd9ef3cd\">内边距 padding，外边距 margin 和边框 border 会将其他元素从当前盒子周围</span><strong><span data-lake-id=\"uc555e10f\" id=\"uc555e10f\">推开</span></strong></li></ul><blockquote data-lake-id=\"u58a5fd91\" id=\"u58a5fd91\"><p data-lake-id=\"u650765a9\" id=\"u650765a9\"><span data-lake-id=\"u03c0dfc7\" id=\"u03c0dfc7\">除非特殊制定，诸如标题 h1 等和段落 p 默认情况下都是块级的盒子</span></p></blockquote><h4 data-lake-id=\"C69fO\" id=\"C69fO\"><span data-lake-id=\"uce8d7a78\" id=\"uce8d7a78\">内联盒子 - inline 的表现行为</span></h4><ul list=\"uc01195c7\"><li fid=\"udfc794c0\" data-lake-id=\"u83d33cc2\" id=\"u83d33cc2\"><span data-lake-id=\"ud7cb53f4\" id=\"ud7cb53f4\">盒子不会产生换行</span></li><li fid=\"udfc794c0\" data-lake-id=\"u978f48e0\" id=\"u978f48e0\"><span data-lake-id=\"u1658cb6b\" id=\"u1658cb6b\">width 和 height 属性将不起作用</span></li><li fid=\"udfc794c0\" data-lake-id=\"ud8e241ec\" id=\"ud8e241ec\"><span data-lake-id=\"uf91a866b\" id=\"uf91a866b\">垂直方向的内边距、外边距以及边框会被应用但是不会把其他处于 inline 状态的盒子</span><strong><span data-lake-id=\"u11919f22\" id=\"u11919f22\">推开</span></strong></li><li fid=\"udfc794c0\" data-lake-id=\"u587076a2\" id=\"u587076a2\"><span data-lake-id=\"u6d3954a3\" id=\"u6d3954a3\">水平方向的内边距、外边距以及边框会被应用且会把其他处于 inline 状态的盒子</span><strong><span data-lake-id=\"u71c34cae\" id=\"u71c34cae\">推开</span></strong></li></ul><blockquote data-lake-id=\"ufa7374e5\" id=\"ufa7374e5\"><p data-lake-id=\"u6eee85e6\" id=\"u6eee85e6\"><span data-lake-id=\"u2d714659\" id=\"u2d714659\">用做链接的 a 元素、span、em 以及 strong 都是默认处于 inline 状态的</span></p></blockquote><h3 data-lake-id=\"EeNqW\" id=\"EeNqW\"><span data-lake-id=\"u8d9140ea\" id=\"u8d9140ea\">弹性盒子</span></h3><p data-lake-id=\"uddaa20cb\" id=\"uddaa20cb\"><span data-lake-id=\"u1e5cc180\" id=\"u1e5cc180\">弹性盒子是一种</span><strong><span data-lake-id=\"u4f948210\" id=\"u4f948210\">用于按行或按列布局元素的一纬布局方法</span></strong><span data-lake-id=\"uf1dab47b\" id=\"uf1dab47b\">。元素可以</span><strong><span data-lake-id=\"u6579a5b5\" id=\"u6579a5b5\">膨胀以填充</span></strong><span data-lake-id=\"ueef6f708\" id=\"ueef6f708\">额外的空间，</span><strong><span data-lake-id=\"ufb899008\" id=\"ufb899008\">收缩以适应</span></strong><span data-lake-id=\"u071000bb\" id=\"u071000bb\">更小的空间</span></p><h4 data-lake-id=\"KgunS\" id=\"KgunS\"><span data-lake-id=\"u9cd8608d\" id=\"u9cd8608d\">flex 模型说明</span></h4><p data-lake-id=\"u4924b46b\" id=\"u4924b46b\"><span data-lake-id=\"ua951ad97\" id=\"ua951ad97\">当元素表现为 flex 框时，它们沿两个轴来布局</span></p><p data-lake-id=\"u82d7c1d2\" id=\"u82d7c1d2\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F732231%2F1700410775213-9d6edef5-5365-4dcf-8858-14c8d13fc68e.png%22%2C%22taskId%22%3A%22ud01b1886-aab2-494c-a0de-eb3294f956f%22%2C%22clientId%22%3A%22ub81ac113-09bf-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A751.1999969482422%2C%22height%22%3A444%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A27648%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A563%2C%22originHeight%22%3A333%2C%22ratio%22%3A2.200000047683716%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22FLEX%20CONTAINER%20CROSS%20AXIS%20CROSS%20START%20MAIN%20AXIS%20FLEX%20ITEM%20FLEX%20ITEM%20FLEX%20ITEM%20MAIN%20SIZE%20CROSS%20SIZE%20MAIN%20END%20MAIN%20START%20CROSS%20END%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A37%2C%22y%22%3A28%2C%22width%22%3A92%2C%22height%22%3A14%2C%22text%22%3A%22FLEX%20CONTAINER%22%7D%2C%7B%22x%22%3A330%2C%22y%22%3A42%2C%22width%22%3A70%2C%22height%22%3A13%2C%22text%22%3A%22CROSS%20AXIS%22%7D%2C%7B%22x%22%3A201%2C%22y%22%3A43%2C%22width%22%3A72%2C%22height%22%3A11%2C%22text%22%3A%22CROSS%20START%22%7D%2C%7B%22x%22%3A105%2C%22y%22%3A76%2C%22width%22%3A64%2C%22height%22%3A13%2C%22text%22%3A%22MAIN%20AXIS%22%7D%2C%7B%22x%22%3A234%2C%22y%22%3A126%2C%22width%22%3A59%2C%22height%22%3A15%2C%22text%22%3A%22FLEX%20ITEM%22%7D%2C%7B%22x%22%3A407%2C%22y%22%3A127%2C%22width%22%3A59%2C%22height%22%3A14%2C%22text%22%3A%22FLEX%20ITEM%22%7D%2C%7B%22x%22%3A61%2C%22y%22%3A127%2C%22width%22%3A58%2C%22height%22%3A14%2C%22text%22%3A%22FLEX%20ITEM%22%7D%2C%7B%22x%22%3A246%2C%22y%22%3A173%2C%22width%22%3A67%2C%22height%22%3A12%2C%22text%22%3A%22MAIN%20SIZE%22%7D%2C%7B%22x%22%3A437%2C%22y%22%3A174%2C%22width%22%3A68%2C%22height%22%3A11%2C%22text%22%3A%22CROSS%20SIZE%22%7D%2C%7B%22x%22%3A454%2C%22y%22%3A275%2C%22width%22%3A64%2C%22height%22%3A14%2C%22text%22%3A%22MAIN%20END%22%7D%2C%7B%22x%22%3A40%2C%22y%22%3A276%2C%22width%22%3A69%2C%22height%22%3A12%2C%22text%22%3A%22MAIN%20START%22%7D%2C%7B%22x%22%3A202%2C%22y%22%3A276%2C%22width%22%3A68%2C%22height%22%3A12%2C%22text%22%3A%22CROSS%20END%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23f3e6c3%22%2C%22id%22%3A%22ua5b786dc%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><ul list=\"u8bd35f7e\"><li fid=\"uee88bffd\" data-lake-id=\"uf22304b2\" id=\"uf22304b2\"><strong><span data-lake-id=\"u6662ff80\" id=\"u6662ff80\">主轴 - main axis</span></strong><span data-lake-id=\"u414d81bc\" id=\"u414d81bc\"> 是沿着 flex 元素放置的方向延伸的轴（比如页面上的横向的行、纵向的咧）。该轴的开始和结束被称为 main start 和 main end</span></li><li fid=\"uee88bffd\" data-lake-id=\"uc1b5753b\" id=\"uc1b5753b\"><strong><span data-lake-id=\"u33b1c737\" id=\"u33b1c737\">交叉轴 - cross axis</span></strong><span data-lake-id=\"uf705082b\" id=\"uf705082b\"> 是垂直于 flex 元素放置方向的轴。该轴的开始和结束被称为 cross start 和 cross end</span></li><li fid=\"uee88bffd\" data-lake-id=\"u4581fbb1\" id=\"u4581fbb1\"><span data-lake-id=\"uf792b193\" id=\"uf792b193\">设置了 display: flex 的父元素被称之为 </span><strong><span data-lake-id=\"ub13654b6\" id=\"ub13654b6\">flex 容器（flex container）</span></strong></li><li fid=\"uee88bffd\" data-lake-id=\"ua3fdedb5\" id=\"ua3fdedb5\"><span data-lake-id=\"ud4c73af0\" id=\"ud4c73af0\">在 flex 容器中表现为弹性的盒子的元素被称之为 flex 项（flex item）</span></li></ul><h4 data-lake-id=\"p4ytI\" id=\"p4ytI\"><span data-lake-id=\"uf1741498\" id=\"uf1741498\">flex 的缩写与全写</span></h4><p data-lake-id=\"u99919cd8\" id=\"u99919cd8\"><span data-lake-id=\"uf0574f54\" id=\"uf0574f54\">flex 是一个可以指定最多三个不同值的缩写属性：</span></p><ul list=\"u708c3bfb\"><li fid=\"ued90db76\" data-lake-id=\"u1040ac1e\" id=\"u1040ac1e\"><strong><span data-lake-id=\"u1f9aad69\" id=\"u1f9aad69\">flex-grow</span></strong><span data-lake-id=\"u27fed279\" id=\"u27fed279\">：</span><strong><span data-lake-id=\"u40c5c5e9\" id=\"u40c5c5e9\">设置 flex 项主尺寸的 flex 增常系数</span></strong><span data-lake-id=\"u51be965a\" id=\"u51be965a\">。用于决定项目在有剩余空间的情况下是否放大，默认为 0 不放大。设置之后，即使设置了固定宽度，也会放大</span></li><li fid=\"ued90db76\" data-lake-id=\"u4fa2436d\" id=\"u4fa2436d\"><strong><span data-lake-id=\"u63aacec8\" id=\"u63aacec8\">flex-shrink</span></strong><span data-lake-id=\"u6682651c\" id=\"u6682651c\">：</span><strong><span data-lake-id=\"ua3d12647\" id=\"ua3d12647\">指定了 flex 元素的收缩规则</span></strong><span data-lake-id=\"u050d1edf\" id=\"u050d1edf\">。用于决定项目在空间不足时是否缩小，默认为 1，即空间不足时一起等比例缩小。设置之后，计时设置了固定宽度也会缩小</span></li><li fid=\"ued90db76\" data-lake-id=\"uf07243c6\" id=\"uf07243c6\"><strong><span data-lake-id=\"uebbffba9\" id=\"uebbffba9\">flex-basis</span></strong><span data-lake-id=\"u9cf09b77\" id=\"u9cf09b77\">：</span><strong><span data-lake-id=\"ue5acc329\" id=\"ue5acc329\">指定了 flex 元素在主轴方向上的初始大小</span></strong><span data-lake-id=\"u2ad890a1\" id=\"u2ad890a1\">。用于设置项目宽度，默认为 auto，即项目会保持默认宽度，或者以 width 为自身宽度。设置之后，会覆盖 width 属性</span></li></ul><blockquote data-lake-id=\"uf55669d9\" id=\"uf55669d9\"><p data-lake-id=\"uda9da28d\" id=\"uda9da28d\"><code data-lake-id=\"ub1d48823\" id=\"ub1d48823\"><span data-lake-id=\"u558d7cfc\" id=\"u558d7cfc\">flex: &quot;0 1 auto&quot;;</span></code><span data-lake-id=\"ub2ee9e03\" id=\"ub2ee9e03\"> 等价于 </span><code data-lake-id=\"u0c3953ec\" id=\"u0c3953ec\"><span data-lake-id=\"u2ed2e46f\" id=\"u2ed2e46f\">flex-grow: 0; flex-shrink: 1; flex-basis: &quot;auto&quot;;</span></code></p></blockquote><h4 data-lake-id=\"QboUp\" id=\"QboUp\"><span data-lake-id=\"u44881efb\" id=\"u44881efb\">一些其他的属性</span></h4><ul list=\"u8712a2f6\"><li fid=\"ue3779638\" data-lake-id=\"u30cbe6a8\" id=\"u30cbe6a8\"><span data-lake-id=\"u1b4ccc5d\" id=\"u1b4ccc5d\">flex-flow：flex-direction 和 flex-wrap 的集合。默认值 </span><code data-lake-id=\"u0a6777e5\" id=\"u0a6777e5\"><span data-lake-id=\"u0f028237\" id=\"u0f028237\">row nowrap</span></code></li><li fid=\"ue3779638\" data-lake-id=\"u791d7abf\" id=\"u791d7abf\"><span data-lake-id=\"ubede5929\" id=\"ubede5929\">align-content：用于控制多行项目的对齐方式，如果项目只有一行则不起作用</span></li><li fid=\"ue3779638\" data-lake-id=\"u7e606d63\" id=\"u7e606d63\"><span data-lake-id=\"uf3b12c17\" id=\"uf3b12c17\">order：用于决定项目的排列顺序，数值越小，项目排列越靠前，默认为 0</span></li><li fid=\"ue3779638\" data-lake-id=\"u55ac184e\" id=\"u55ac184e\"><span data-lake-id=\"u28fdd505\" id=\"u28fdd505\">align-self：表示继承父容器的 align-items 属性，如果没有父元素，则默认为 stretch，用于让个别项目拥有与其他项目不同的对齐方式，各个值的表现与父容器的 align-items 属性完全一致</span></li></ul><h3 data-lake-id=\"QLntG\" id=\"QLntG\"><span data-lake-id=\"u9f954ed6\" id=\"u9f954ed6\">网格</span></h3><p data-lake-id=\"u6235a8ba\" id=\"u6235a8ba\"><strong><span data-lake-id=\"u72febda5\" id=\"u72febda5\">css 网格 grid </span></strong><span data-lake-id=\"u2cd70f7b\" id=\"u2cd70f7b\">是一个用于 web 的</span><strong><span data-lake-id=\"ua07dc814\" id=\"ua07dc814\">二纬布局系统</span></strong><span data-lake-id=\"u1a8acf9a\" id=\"u1a8acf9a\">。利用网格，可以把内容按照行与列的格式进行排版。另外，网格还能非常轻松地实现一些复杂的布局</span></p><h4 data-lake-id=\"vZqRC\" id=\"vZqRC\"><span data-lake-id=\"u1c2e4e91\" id=\"u1c2e4e91\">网格布局说明</span></h4><p data-lake-id=\"u2768c76d\" id=\"u2768c76d\"><span data-lake-id=\"u129f12d5\" id=\"u129f12d5\">网格是由一系列水平及垂直的线构成的一种布局模式。根据网格，我们能够将设计的元素进行排列，版主我们设计一些具有固定位置以及宽度的元素的页面，使我们的网站页面更加统一</span></p><p data-lake-id=\"u46ced5aa\" id=\"u46ced5aa\"><span data-lake-id=\"u44140eff\" id=\"u44140eff\">一个网格通常具有许多的</span><strong><span data-lake-id=\"uf7f94b89\" id=\"uf7f94b89\">列 column</span></strong><span data-lake-id=\"u49ccbe62\" id=\"u49ccbe62\"> 与</span><strong><span data-lake-id=\"u6ae3b579\" id=\"u6ae3b579\">行 row</span></strong><span data-lake-id=\"u884b786a\" id=\"u884b786a\">，以及行与行、列与列之间的间隙，这个间隙一般被称为</span><strong><span data-lake-id=\"u8c8c3820\" id=\"u8c8c3820\">沟槽 gutter</span></strong></p><p data-lake-id=\"u883f4f9b\" id=\"u883f4f9b\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F732231%2F1700412236867-50b6aba0-bd50-4f93-a06d-4c1340d90af0.png%22%2C%22taskId%22%3A%22u950f75e4-7077-4372-ac85-63447565bae%22%2C%22clientId%22%3A%22u2e1a591d-2931-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A715.3999938964844%2C%22height%22%3A331%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A34455%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1196%2C%22originHeight%22%3A553%2C%22ratio%22%3A2.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22GUTTER%20BETWEEN%20ROWS%20ROWS%20OF%20CONTENT%20LARRANGED%20ON%20THE%20GRID%20COLUMNS%20GUTTERS%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A752%2C%22y%22%3A101%2C%22width%22%3A169%2C%22height%22%3A20%2C%22text%22%3A%22GUTTER%20BETWEEN%20ROWS%22%7D%2C%7B%22x%22%3A1062%2C%22y%22%3A341%2C%22width%22%3A132%2C%22height%22%3A17%2C%22text%22%3A%22ROWS%20OF%20CONTENT%22%7D%2C%7B%22x%22%3A1062%2C%22y%22%3A363%2C%22width%22%3A130%2C%22height%22%3A17%2C%22text%22%3A%22LARRANGED%20ON%20THE%22%7D%2C%7B%22x%22%3A1110%2C%22y%22%3A384%2C%22width%22%3A34%2C%22height%22%3A18%2C%22text%22%3A%22GRID%22%7D%2C%7B%22x%22%3A5%2C%22y%22%3A501%2C%22width%22%3A73%2C%22height%22%3A17%2C%22text%22%3A%22COLUMNS%22%7D%2C%7B%22x%22%3A7%2C%22y%22%3A532%2C%22width%22%3A61%2C%22height%22%3A15%2C%22text%22%3A%22GUTTERS%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23fbf1e5%22%2C%22id%22%3A%22u21c38cc2%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><h2 data-lake-id=\"e5Azg\" id=\"e5Azg\"><span data-lake-id=\"u0f140552\" id=\"u0f140552\">包含块</span></h2><p data-lake-id=\"ucb3ce068\" id=\"ucb3ce068\"><span data-lake-id=\"uf5cb8e7a\" id=\"uf5cb8e7a\" class=\"lake-fontsize-11\">包含块的英文全称为 containing block，实际上平时在书写 css 时，大多数情况下无法感知到它的存在，但实际上在 css 规范中是明确书写了这个概念：</span><a href=\"https://drafts.csswg.org/css2/#containing-block-details\" target=\"_blank\" data-lake-id=\"uc5896865\" id=\"uc5896865\"><span data-lake-id=\"ubc1a3a64\" id=\"ubc1a3a64\" class=\"lake-fontsize-11\">https://drafts.csswg.org/css2/#containing-block-details</span></a></p><p data-lake-id=\"u113bc659\" id=\"u113bc659\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F732231%2F1700342936976-77de37c2-e8dd-4dfb-8a42-0befae001275.png%22%2C%22taskId%22%3A%22u79cb9420-eff2-4a99-ae90-c52654edb7c%22%2C%22clientId%22%3A%22ucb9ee095-bbd4-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A888.3636169433594%2C%22height%22%3A507%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A221966%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1026%2C%22originHeight%22%3A586%2C%22ratio%22%3A2%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%2210.1.%20DEFINITION%20OF%20%5C%22CONTAINING%20BLOCK%5C%22%20THE%20POSITION%20AND%20SIZE%20OF%20AN%20ELEMENT'S%20BOXLES)%20ARE%20SOMETINES%20CALCULATED%20RELATIVE%20TO%20A%20CERTAIN%20RECTANGL%20CALLED%20THE%20CONTALNING%20BLOCK%20OF%20THE%20ELEMENT%3A%20THE%20CONTAININING%20BLOCK%20OF%20AN%20ELEMENT%20IS%20DEFINED%20AS%20FOLLOW%201.THE%20CONTAINING%20BLOCK%20IN%20WHICH%20THE%20ROOT%20ELEMENT%20LIVES%20IS%20A%20RECTANGLE%20CALLED%20THE%20INIFIAL%20CONTAING%20BLO%20FOR%20CONTINUOUS%20MEDIA.%20IT%20HAS%20THE%20DIMENSIONS%20OF%20THE%20VIEWPORT%20AND%20IS%20ANCHORED%20AT%20THE%20CANVAS%20ORIGIN%3AIT%20I%20THE%20PAGE%20AREA%20FOR%20PAGED%20MEDIA.%20THE'DIRECTION'%20PROPERTY%20OF%20THE%20INITIAL%20CONTAINING%20BLOCK%20IS%20THE%20SAME%20AS%20FOR%20%20THE%20ROOT%20ELEMENT.%202.%20FOR%20OTHER%20ELEMENTS%2CIF%20THE%20ELEMENT'S%20POSITION%20IS%20'RELATIVE''%20OR%20'STATIC'%2C%20THE%20CONTAING%20BLOCK%20IS%20FOR%20THE%20CON%20CONTENT%20EDGE%20OF%20THE%20NEAREST%20BLOCK%20CONTAINER%20ANCESTOR%20BOX.%203.IF%20THE%20ELEMENT%20HAS%20'POSITION%3A%20FIXED%3B%3B%20THE%20CASE%20OF%20CONTINUOUS%20MEDIA%20OR%20THE%20PAGE%20AREA%20IN%20THE%20CASE%20OF%20PAGED%20MEDIA.%204.IF%20THE%20ELEMENT%20HAS%20'POSITION%3A%20ABSOLUTE'%2CTHE%20CONTAININING%20BLOCK%20IS%20ESTABLISHE%20NEAREST%20ANCESTOR%20WITH%20OF%20'ABSOLUTE'%2C%20'RELATIVE'%20OR%20'FIXED%3F%2CIN%20THE%20FOLLOWING%20WAY%3A%20A%20POSITION'%20OF%201.IN%20THE%20CASE%20THAT%20THE%20ANCESTOR%20IS%20AN%20INLINE%20ELEMENT%2C%20THE%20CONTAINING%20BLOCK%20IS%20THE%20BOUNDING%20BOX%20AROUND%20INLINE%20BOXES%20GENERATED%20FOR%20THAT%20ELEMENT.IN%20CSS%202%2CIF%20THE%20PADDING%20BOXES%20OF%20THE%20FIRST%20AND%20THE%20LAST%20INLING%20THE%20INLINE%20ELEMENT%20IS%20SPLIT%20ACROSS%20MULTIPLE%20LINES%2C%20THE%20CONTAINING%20BLOCK%20IS%20UNDEFNED.%202.%20OTHERWISE%2C%20THE%20CONTAINING%20BLOCK%20IS%20FORMED%20BY%20THE%20PADDING%20EDGE%20OF%20THE%20ANCESTOR.%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A55%2C%22y%22%3A13%2C%22width%22%3A391%2C%22height%22%3A24%2C%22text%22%3A%2210.1.%20DEFINITION%20OF%20%5C%22CONTAINING%20BLOCK%5C%22%22%7D%2C%7B%22x%22%3A55%2C%22y%22%3A66%2C%22width%22%3A920%2C%22height%22%3A21%2C%22text%22%3A%22THE%20POSITION%20AND%20SIZE%20OF%20AN%20ELEMENT'S%20BOXLES)%20ARE%20SOMETINES%20CALCULATED%20RELATIVE%20TO%20A%20CERTAIN%20RECTANGL%22%7D%2C%7B%22x%22%3A55%2C%22y%22%3A97%2C%22width%22%3A904%2C%22height%22%3A18%2C%22text%22%3A%22CALLED%20THE%20CONTALNING%20BLOCK%20OF%20THE%20ELEMENT%3A%20THE%20CONTAININING%20BLOCK%20OF%20AN%20ELEMENT%20IS%20DEFINED%20AS%20FOLLOW%22%7D%2C%7B%22x%22%3A74%2C%22y%22%3A143%2C%22width%22%3A926%2C%22height%22%3A19%2C%22text%22%3A%221.THE%20CONTAINING%20BLOCK%20IN%20WHICH%20THE%20ROOT%20ELEMENT%20LIVES%20IS%20A%20RECTANGLE%20CALLED%20THE%20INIFIAL%20CONTAING%20BLO%22%7D%2C%7B%22x%22%3A92%2C%22y%22%3A172%2C%22width%22%3A918%2C%22height%22%3A18%2C%22text%22%3A%22FOR%20CONTINUOUS%20MEDIA.%20IT%20HAS%20THE%20DIMENSIONS%20OF%20THE%20VIEWPORT%20AND%20IS%20ANCHORED%20AT%20THE%20CANVAS%20ORIGIN%3AIT%20I%22%7D%2C%7B%22x%22%3A93%2C%22y%22%3A202%2C%22width%22%3A907%2C%22height%22%3A17%2C%22text%22%3A%22THE%20PAGE%20AREA%20FOR%20PAGED%20MEDIA.%20THE'DIRECTION'%20PROPERTY%20OF%20THE%20INITIAL%20CONTAINING%20BLOCK%20IS%20THE%20SAME%20AS%22%7D%2C%7B%22x%22%3A92%2C%22y%22%3A231%2C%22width%22%3A190%2C%22height%22%3A17%2C%22text%22%3A%22FOR%20%20THE%20ROOT%20ELEMENT.%22%7D%2C%7B%22x%22%3A70%2C%22y%22%3A267%2C%22width%22%3A934%2C%22height%22%3A21%2C%22text%22%3A%222.%20FOR%20OTHER%20ELEMENTS%2CIF%20THE%20ELEMENT'S%20POSITION%20IS%20'RELATIVE''%20OR%20'STATIC'%2C%20THE%20CONTAING%20BLOCK%20IS%20FOR%22%7D%2C%7B%22x%22%3A94%2C%22y%22%3A299%2C%22width%22%3A65%2C%22height%22%3A16%2C%22text%22%3A%22THE%20CON%22%7D%2C%7B%22x%22%3A116%2C%22y%22%3A299%2C%22width%22%3A536%2C%22height%22%3A17%2C%22text%22%3A%22CONTENT%20EDGE%20OF%20THE%20NEAREST%20BLOCK%20CONTAINER%20ANCESTOR%20BOX.%22%7D%2C%7B%22x%22%3A71%2C%22y%22%3A333%2C%22width%22%3A919%2C%22height%22%3A23%2C%22text%22%3A%223.IF%20THE%20ELEMENT%20HAS%20'POSITION%3A%20FIXED%3B%3B%20THE%20CASE%20OF%22%7D%2C%7B%22x%22%3A94%2C%22y%22%3A364%2C%22width%22%3A571%2C%22height%22%3A22%2C%22text%22%3A%22CONTINUOUS%20MEDIA%20OR%20THE%20PAGE%20AREA%20IN%20THE%20CASE%20OF%20PAGED%20MEDIA.%22%7D%2C%7B%22x%22%3A71%2C%22y%22%3A400%2C%22width%22%3A940%2C%22height%22%3A22%2C%22text%22%3A%224.IF%20THE%20ELEMENT%20HAS%20'POSITION%3A%20ABSOLUTE'%2CTHE%20CONTAININING%20BLOCK%20IS%20ESTABLISHE%20NEAREST%20ANCESTOR%20WITH%22%7D%2C%7B%22x%22%3A196%2C%22y%22%3A430%2C%22width%22%3A494%2C%22height%22%3A23%2C%22text%22%3A%22OF%20'ABSOLUTE'%2C%20'RELATIVE'%20OR%20'FIXED%3F%2CIN%20THE%20FOLLOWING%20WAY%3A%22%7D%2C%7B%22x%22%3A102%2C%22y%22%3A431%2C%22width%22%3A115%2C%22height%22%3A22%2C%22text%22%3A%22A%20POSITION'%20OF%22%7D%2C%7B%22x%22%3A113%2C%22y%22%3A462%2C%22width%22%3A902%2C%22height%22%3A23%2C%22text%22%3A%221.IN%20THE%20CASE%20THAT%20THE%20ANCESTOR%20IS%20AN%20INLINE%20ELEMENT%2C%20THE%20CONTAINING%20BLOCK%20IS%20THE%20BOUNDING%20BOX%20AROUND%22%7D%2C%7B%22x%22%3A523%2C%22y%22%3A492%2C%22width%22%3A462%2C%22height%22%3A20%2C%22text%22%3A%22INLINE%20BOXES%20GENERATED%20FOR%20THAT%20ELEMENT.IN%20CSS%202%2CIF%22%7D%2C%7B%22x%22%3A130%2C%22y%22%3A494%2C%22width%22%3A415%2C%22height%22%3A20%2C%22text%22%3A%22THE%20PADDING%20BOXES%20OF%20THE%20FIRST%20AND%20THE%20LAST%20INLING%22%7D%2C%7B%22x%22%3A131%2C%22y%22%3A521%2C%22width%22%3A725%2C%22height%22%3A20%2C%22text%22%3A%22THE%20INLINE%20ELEMENT%20IS%20SPLIT%20ACROSS%20MULTIPLE%20LINES%2C%20THE%20CONTAINING%20BLOCK%20IS%20UNDEFNED.%22%7D%2C%7B%22x%22%3A110%2C%22y%22%3A560%2C%22width%22%3A735%2C%22height%22%3A20%2C%22text%22%3A%222.%20OTHERWISE%2C%20THE%20CONTAINING%20BLOCK%20IS%20FORMED%20BY%20THE%20PADDING%20EDGE%20OF%20THE%20ANCESTOR.%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23ebebeb%22%2C%22id%22%3A%22E2tEE%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><h3 data-lake-id=\"xTRBi\" id=\"xTRBi\"><span data-lake-id=\"u7c83f696\" id=\"u7c83f696\">包含块的影响</span></h3><p data-lake-id=\"u288468e1\" id=\"u288468e1\"><span data-lake-id=\"u4b340e88\" id=\"u4b340e88\">元素的</span><strong><span data-lake-id=\"u7141b17f\" id=\"u7141b17f\">尺寸和位置</span></strong><span data-lake-id=\"u9aa316a5\" id=\"u9aa316a5\">，会受它的</span><strong><span data-lake-id=\"u70caf438\" id=\"u70caf438\">包含块</span></strong><span data-lake-id=\"uf7649edd\" id=\"uf7649edd\">所影响。对于一些属性，例如 width、height、padding、margin，绝对定位元素的偏移值（比如 position 被设置为 absolute 或 fixed），</span><strong><span data-lake-id=\"u7ce9c047\" id=\"u7ce9c047\">当我们对其赋予百分比值时，这些值的计算值，就是通过元素的包含块计算得来</span></strong></p><h3 data-lake-id=\"M7qGm\" id=\"M7qGm\"><span data-lake-id=\"u901ecc06\" id=\"u901ecc06\">确定包含块</span></h3><ul list=\"u29b0ccd2\"><li fid=\"u4fd58d63\" data-lake-id=\"u060657a4\" id=\"u060657a4\"><span data-lake-id=\"u0d9f32dd\" id=\"u0d9f32dd\">根元素 </span><code data-lake-id=\"ue54159f5\" id=\"ue54159f5\"><span data-lake-id=\"u51877381\" id=\"u51877381\">&lt;html /&gt;</span></code><span data-lake-id=\"u710c44c2\" id=\"u710c44c2\"> 所在的包含块是一个被称为</span><strong><span data-lake-id=\"u71c0b6e0\" id=\"u71c0b6e0\">初始包含块 initial containing block 的矩形</span></strong><span data-lake-id=\"u36976384\" id=\"u36976384\">。它具有</span><strong><span data-lake-id=\"u8a2d8e48\" id=\"u8a2d8e48\">视口</span></strong><span data-lake-id=\"uecf1df04\" id=\"uecf1df04\">对于连续媒体）或</span><strong><span data-lake-id=\"u30c3ee3b\" id=\"u30c3ee3b\">页面区域</span></strong><span data-lake-id=\"u0a8cd0bf\" id=\"u0a8cd0bf\">（对于分页媒体）的</span><strong><span data-lake-id=\"ub75b824a\" id=\"ub75b824a\">尺寸</span></strong><span data-lake-id=\"ua4a9b800\" id=\"ua4a9b800\">。一般来讲，</span><strong><span data-lake-id=\"ub90aab9e\" id=\"ub90aab9e\">初始包含块的大小 = 视口 viewport 大小</span></strong><span data-lake-id=\"ue79555d4\" id=\"ue79555d4\">，基点在画布的原点（视口左上角）。它是作为元素绝对定位和固定定位的参照物</span></li><li fid=\"u4fd58d63\" data-lake-id=\"u34e262a3\" id=\"u34e262a3\"><span data-lake-id=\"u2724f29e\" id=\"u2724f29e\">对于非根元素的包含块判定就有几种不同的情况，大致分为以下几种：</span></li></ul><ul list=\"u29b0ccd2\" data-lake-indent=\"1\"><li fid=\"u4fd58d63\" data-lake-id=\"ud1035ddc\" id=\"ud1035ddc\"><span data-lake-id=\"u32a596cc\" id=\"u32a596cc\">如果 </span><strong><span data-lake-id=\"udff73c77\" id=\"udff73c77\">position 属性为 static、relative 或 sticky</span></strong><span data-lake-id=\"udf236dc8\" id=\"udf236dc8\">，那么包含块可能由它的最近的</span><strong><span data-lake-id=\"u2451bbfa\" id=\"u2451bbfa\">祖先块元素</span></strong><span data-lake-id=\"ufaafe4ab\" id=\"ufaafe4ab\">（比如说 inline-block、block 或 list-item 元素）的内容区的边缘组成，也可能会</span><strong><span data-lake-id=\"u6e66b54f\" id=\"u6e66b54f\">建立格式化上下文</span></strong><span data-lake-id=\"uad5fcdcf\" id=\"uad5fcdcf\">（比如说 a、table container、flex container、grid container 或者是 the block container 自身）</span></li><li fid=\"u4fd58d63\" data-lake-id=\"u894e8616\" id=\"u894e8616\"><span data-lake-id=\"u02f1e0fe\" id=\"u02f1e0fe\">如果 </span><strong><span data-lake-id=\"u82bec31c\" id=\"u82bec31c\">position 属性为 absolute</span></strong><span data-lake-id=\"u808cb797\" id=\"u808cb797\">，包含块就是由它的最近的 position 的值不是 static（也就是值为 fixed、absolute、relative 或 sticky）的</span><strong><span data-lake-id=\"u4e3982bc\" id=\"u4e3982bc\">祖先元素的内边距区的边缘组成</span></strong></li><li fid=\"u4fd58d63\" data-lake-id=\"u2de047fc\" id=\"u2de047fc\"><span data-lake-id=\"ud346f728\" id=\"ud346f728\">如果 </span><strong><span data-lake-id=\"uebdae28a\" id=\"uebdae28a\">position 属性是 fixed</span></strong><span data-lake-id=\"u732590fd\" id=\"u732590fd\">，在连续媒体的情况下（continuous media）包含块是</span><strong><span data-lake-id=\"u37df88a5\" id=\"u37df88a5\">视口（viewport）</span></strong><span data-lake-id=\"u39be914e\" id=\"u39be914e\">，在分页媒体（paged media）下的情况下包含块是</span><strong><span data-lake-id=\"u241a1edb\" id=\"u241a1edb\">分页区域（page area）</span></strong></li><li fid=\"u4fd58d63\" data-lake-id=\"u4ce685f5\" id=\"u4ce685f5\"><span data-lake-id=\"ua24fdb1a\" id=\"ua24fdb1a\">如果 </span><strong><span data-lake-id=\"ub93b5fd7\" id=\"ub93b5fd7\">position 属性是 absolute 或 fixed</span></strong><span data-lake-id=\"u1b3dc8bf\" id=\"u1b3dc8bf\">，包含块也可能是由满足以下条件的最近父级元素的内边距区的边缘组成的</span></li></ul><ul list=\"u29b0ccd2\" data-lake-indent=\"2\"><li fid=\"u4fd58d63\" data-lake-id=\"u5061b72c\" id=\"u5061b72c\"><span data-lake-id=\"u492a5cfe\" id=\"u492a5cfe\">transform 或 perspective 的值不是 none</span></li><li fid=\"u4fd58d63\" data-lake-id=\"ucaeb6ec7\" id=\"ucaeb6ec7\"><span data-lake-id=\"u33bed3b9\" id=\"u33bed3b9\">will-change 的值是 transform 或 perspective</span></li><li fid=\"u4fd58d63\" data-lake-id=\"u9946474f\" id=\"u9946474f\"><span data-lake-id=\"u85938efd\" id=\"u85938efd\">filter 的值不是 none 或 will-change 的值是 filter（只在 Firefox 下生效）</span></li><li fid=\"u4fd58d63\" data-lake-id=\"ue18c86d3\" id=\"ue18c86d3\"><span data-lake-id=\"u378930fb\" id=\"u378930fb\">contain 的值是 layout、paint、strict 或 content（例如：</span><code data-lake-id=\"u693a5ee6\" id=\"u693a5ee6\"><span data-lake-id=\"u59c5c54d\" id=\"u59c5c54d\">contain: paint;</span></code><span data-lake-id=\"u1b1a8e07\" id=\"u1b1a8e07\">）</span></li><li fid=\"u4fd58d63\" data-lake-id=\"u3ff946e4\" id=\"u3ff946e4\"><span data-lake-id=\"u44c46175\" id=\"u44c46175\">backdrop-filter 的值不是 none（例如：</span><code data-lake-id=\"u083561b2\" id=\"u083561b2\"><span data-lake-id=\"uce62fa8a\" id=\"uce62fa8a\">backdrop-filter: blur(10px);</span></code><span data-lake-id=\"u199d7315\" id=\"u199d7315\">）</span></li></ul><h2 data-lake-id=\"zFk3D\" id=\"zFk3D\"><span data-lake-id=\"u8157c3da\" id=\"u8157c3da\">css 属性计算过程</span></h2><h3 data-lake-id=\"BwDmu\" id=\"BwDmu\"><span data-lake-id=\"u8b2b7b34\" id=\"u8b2b7b34\">确定声明值</span></h3><p data-lake-id=\"u39f772d5\" id=\"u39f772d5\"><span data-lake-id=\"ueacf74ae\" id=\"ueacf74ae\">声明值就是所书写的 css 样式</span></p><h3 data-lake-id=\"wBMdV\" id=\"wBMdV\"><span data-lake-id=\"u079995cd\" id=\"u079995cd\">层叠冲突</span></h3><ul list=\"ua24f40c1\"><li fid=\"u768d4d36\" data-lake-id=\"ud1c2e7b2\" id=\"ud1c2e7b2\"><strong><span data-lake-id=\"u55582541\" id=\"u55582541\">比较来源的重要性</span></strong><span data-lake-id=\"u42021f72\" id=\"u42021f72\">：</span><strong><span data-lake-id=\"uec30e679\" id=\"uec30e679\">页面作者样式 &gt; 用户样式 &gt; 用户代理样式</span></strong></li></ul><ul list=\"ua24f40c1\" data-lake-indent=\"1\"><li fid=\"u768d4d36\" data-lake-id=\"u002021b4\" id=\"u002021b4\"><span data-lake-id=\"u98f1a18d\" id=\"u98f1a18d\">浏览器会有一个基本的样式表来给任何网页设置默认样式，这些样式统称为</span><strong><span data-lake-id=\"u6bc58dfb\" id=\"u6bc58dfb\">用户代理样式</span></strong></li><li fid=\"u768d4d36\" data-lake-id=\"ued22532b\" id=\"ued22532b\"><span data-lake-id=\"u823e8438\" id=\"u823e8438\">网页的作者可以定义文档的样式，这是最常见的样式表，称为</span><strong><span data-lake-id=\"u0f2e8c9f\" id=\"u0f2e8c9f\">页面作者样式</span></strong></li><li fid=\"u768d4d36\" data-lake-id=\"ub0f275b4\" id=\"ub0f275b4\"><span data-lake-id=\"ua47cf0fb\" id=\"ua47cf0fb\">浏览器的用户，可以使用自定义样式表来定制使用体验，称为</span><strong><span data-lake-id=\"u452b0d96\" id=\"u452b0d96\">用户样式</span></strong></li></ul><ul list=\"ua24f40c1\" start=\"2\"><li fid=\"u768d4d36\" data-lake-id=\"u8c81550c\" id=\"u8c81550c\"><strong><span data-lake-id=\"u0fb048b8\" id=\"u0fb048b8\">比较优先级：相同来源则比较选择器优先级</span></strong></li></ul><ul list=\"ua24f40c1\" data-lake-indent=\"1\"><li fid=\"u768d4d36\" data-lake-id=\"u3483e444\" id=\"u3483e444\"><strong><span data-lake-id=\"u3ff59c42\" id=\"u3ff59c42\">id 选择器</span></strong><span data-lake-id=\"ufd6205a4\" id=\"ufd6205a4\">：选择器中包含 id 选择器则百位权重得 1 分</span></li><li fid=\"u768d4d36\" data-lake-id=\"u315f8be2\" id=\"u315f8be2\"><strong><span data-lake-id=\"u7ca95bc8\" id=\"u7ca95bc8\">类选择器</span></strong><span data-lake-id=\"u10089665\" id=\"u10089665\">：选择器中包含</span><strong><span data-lake-id=\"ua91ef312\" id=\"ua91ef312\">类选择器</span></strong><span data-lake-id=\"uca051057\" id=\"uca051057\">、</span><strong><span data-lake-id=\"ud2002cae\" id=\"ud2002cae\">属性选择器</span></strong><span data-lake-id=\"u088cb483\" id=\"u088cb483\">或者</span><strong><span data-lake-id=\"uc1676938\" id=\"uc1676938\">伪类</span></strong><span data-lake-id=\"u304ceb7a\" id=\"u304ceb7a\">则十位权重得 1 分</span></li><li fid=\"u768d4d36\" data-lake-id=\"uffc073e6\" id=\"uffc073e6\"><strong><span data-lake-id=\"u80e533bf\" id=\"u80e533bf\">元素选择器</span></strong><span data-lake-id=\"uc2564ddc\" id=\"uc2564ddc\">：选择器中包含</span><strong><span data-lake-id=\"u9dd78f5e\" id=\"u9dd78f5e\">元素</span></strong><span data-lake-id=\"uaa54be59\" id=\"uaa54be59\">、</span><strong><span data-lake-id=\"u9ff2da26\" id=\"u9ff2da26\">伪元素</span></strong><span data-lake-id=\"u3d7ae77f\" id=\"u3d7ae77f\">选择器则个位得 1 分</span></li><li fid=\"u768d4d36\" data-lake-id=\"u8de176b1\" id=\"u8de176b1\"><strong><span data-lake-id=\"u5d84ee67\" id=\"u5d84ee67\">通用选择器 *</span></strong><span data-lake-id=\"u6a7064e0\" id=\"u6a7064e0\">、</span><strong><span data-lake-id=\"u7c44795a\" id=\"u7c44795a\">关系选择器 （+、&gt;、~、''）</span></strong><span data-lake-id=\"u203d0e9a\" id=\"u203d0e9a\">和调</span><strong><span data-lake-id=\"uaa7b7d7c\" id=\"uaa7b7d7c\">整优先级的选择器 :where </span></strong><span data-lake-id=\"ud12b8ea7\" id=\"ud12b8ea7\">不会影响优先级</span></li><li fid=\"u768d4d36\" data-lake-id=\"ud5c42209\" id=\"ud5c42209\"><span data-lake-id=\"ua9550082\" id=\"ua9550082\">否定 </span><code data-lake-id=\"ud18cf4e4\" id=\"ud18cf4e4\"><span data-lake-id=\"u6bf2ad97\" id=\"u6bf2ad97\">:not()</span></code><span data-lake-id=\"u669ceebe\" id=\"u669ceebe\"> 和任意匹配 </span><code data-lake-id=\"u97a10f8f\" id=\"u97a10f8f\"><span data-lake-id=\"u96ef2639\" id=\"u96ef2639\">:is()</span></code><span data-lake-id=\"u800646b2\" id=\"u800646b2\"> 伪类本身对优先级没有影响，但它们的参数则会带来影响。参数中，</span><strong><span data-lake-id=\"u9c8011a6\" id=\"u9c8011a6\">对优先级算法有贡献的参数的优先级的最大值</span></strong><span data-lake-id=\"u64b3357e\" id=\"u64b3357e\">将作为该伪类选择器的优先级</span></li></ul><ul list=\"ua24f40c1\" start=\"3\"><li fid=\"u768d4d36\" data-lake-id=\"u150c8ed9\" id=\"u150c8ed9\"><strong><span data-lake-id=\"u7a2ca762\" id=\"u7a2ca762\">比较次序：后面的覆盖前面的</span></strong></li></ul><h3 data-lake-id=\"zjaFP\" id=\"zjaFP\"><span data-lake-id=\"u1f244474\" id=\"u1f244474\">使用继承</span></h3><p data-lake-id=\"u0aa66e2d\" id=\"u0aa66e2d\"><span data-lake-id=\"u9e2c9706\" id=\"u9e2c9706\">具体需查看相关属性介绍得知是否可继承</span></p><h3 data-lake-id=\"SxpVm\" id=\"SxpVm\"><span data-lake-id=\"u21d9916a\" id=\"u21d9916a\">使用默认值</span></h3><p data-lake-id=\"ubafff462\" id=\"ubafff462\"><span data-lake-id=\"u36a70d74\" id=\"u36a70d74\">如果上面几步都无法确定最终样式，则将直接</span><strong><span data-lake-id=\"u9dbdd16a\" id=\"u9dbdd16a\">使用默认值</span></strong></p><p data-lake-id=\"u1661ea3e\" id=\"u1661ea3e\"><span data-lake-id=\"u78cf2723\" id=\"u78cf2723\">​</span><br></p>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 3286,
  "created_at": "2023-11-16T10:14:26.000Z",
  "updated_at": "2023-11-19T17:56:07.000Z",
  "content_updated_at": "2023-11-19T17:56:06.000Z",
  "published_at": "2023-11-19T17:56:06.000Z",
  "first_published_at": "2023-11-19T14:24:50.372Z",
  "book": {
    "id": 44240028,
    "type": "Book",
    "slug": "mgn4ot",
    "name": "八股文 new",
    "user_id": 732231,
    "description": null,
    "toc_yml": "- type: META\n  count: 8\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 374208521\n  published: true\n  max_level: 0\n  last_updated_at: 2023-11-23T18:48:48.915Z\n  version_id: 374208543\n- type: DOC\n  title: javascript\n  uuid: sleELbMYL4LTKL4R\n  url: gzo4vg97gz8ff9ot\n  prev_uuid: ''\n  sibling_uuid: 6a5B8crWkAOej4tV\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147068436\n  level: 0\n  id: 147068436\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: css3\n  uuid: 6a5B8crWkAOej4tV\n  url: wp44gz2g4tg4sk9g\n  prev_uuid: sleELbMYL4LTKL4R\n  sibling_uuid: FCVDShhUlU_WqK1H\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147175066\n  level: 0\n  id: 147175066\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: html5\n  uuid: FCVDShhUlU_WqK1H\n  url: yz1azuhe9ix48gwg\n  prev_uuid: 6a5B8crWkAOej4tV\n  sibling_uuid: Tb6IbVp21drHFTAj\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147175048\n  level: 0\n  id: 147175048\n  open_window: 1\n  visible: 0\n- type: DOC\n  title: 计算机网络\n  uuid: Tb6IbVp21drHFTAj\n  url: lwd683w54d01mim4\n  prev_uuid: FCVDShhUlU_WqK1H\n  sibling_uuid: r18kP_ktN9mrOLct\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147174671\n  level: 0\n  id: 147174671\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 框架\n  uuid: r18kP_ktN9mrOLct\n  url: yc22k58ygncdgg57\n  prev_uuid: Tb6IbVp21drHFTAj\n  sibling_uuid: WavF2oVmJr8aZldK\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147174982\n  level: 0\n  id: 147174982\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 构建工具\n  uuid: WavF2oVmJr8aZldK\n  url: cowx8k8iee1d5qbi\n  prev_uuid: r18kP_ktN9mrOLct\n  sibling_uuid: vYGSh-0Zc4YY2hxY\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147174940\n  level: 0\n  id: 147174940\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 小程序\n  uuid: vYGSh-0Zc4YY2hxY\n  url: wrg4cl7gm7oe6kt4\n  prev_uuid: WavF2oVmJr8aZldK\n  sibling_uuid: 0Kr44lJnepSt160L\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147175096\n  level: 0\n  id: 147175096\n  open_window: 1\n  visible: 0\n- type: DOC\n  title: node.js\n  uuid: 0Kr44lJnepSt160L\n  url: vbtgnccfrn23ecl6\n  prev_uuid: vYGSh-0Zc4YY2hxY\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147175110\n  level: 0\n  id: 147175110\n  open_window: 1\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 8,
    "likes_count": 0,
    "watches_count": 0,
    "content_updated_at": "2023-11-23T18:48:48.941Z",
    "created_at": "2023-11-15T10:47:20.000Z",
    "updated_at": "2023-11-23T18:48:49.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-23T19:11:28.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/mgn4ot",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-23T19:11:28.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 2126502400,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-23T19:11:28.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}