{
  "id": 72212469,
  "slug": "an017i",
  "title": "简易版 vue3",
  "description": "核心逻辑const isObject = obj => typeof obj === 'object' && obj !== null const hasOwn = (target, key) => target.hasOwnProperty(key)  // 已有代理的存储 let toPr...",
  "cover": "https://cdn.nlark.com/yuque/0/2022/jpeg/732231/1648797525903-a645d308-e784-49df-9ab7-5b89c93cd2c5.jpeg",
  "user_id": 732231,
  "book_id": 26225252,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "",
  "body": "![](https://cdn.nlark.com/yuque/0/2022/jpeg/732231/1648797525903-a645d308-e784-49df-9ab7-5b89c93cd2c5.jpeg)\n<a name=\"vKrFR\"></a>\n## 核心逻辑\n```javascript\nconst isObject = obj => typeof obj === 'object' && obj !== null\nconst hasOwn = (target, key) => target.hasOwnProperty(key)\n\n// 已有代理的存储\nlet toProxy = new WeakMap()\nlet toRaw = new WeakMap()\n\n// 当前激活的 effect 栈\nlet activeEffectStack = []\n// 依赖映射表\nlet targetMap = new Map()\n\n// 核心逻辑\nconst baseHandler = {\n  // proxy + reflect\n  // target: 实例化 Proxy 时使用的对象\n  // key: 属性名\n  // receiver: 实例化 Proxy 自身，即 proxy\n  get(target, key, receiver) {\n    // 可能无法访问 key、target[key] 是否成功不会报错，所以使用 reflect\n    const res = Reflect.get(target, key, receiver) // => target[key]\n    // 触发 get 时进行依赖收集\n    track(target, key)\n    console.log('getter', target, key)\n    return res\n  },\n  set(target, key, value, receiver) {\n    const res = Reflect.set(target, key, value, receiver) // 返回 true/false\n    // 在触发 set 的时候进行触发依赖\n    trigger(target, key)\n    console.log('setter', target, key) // => target[key] = value\n    return res\n  }\n}\n\nfunction reactive(target) {\n  // 创建一个响应式对象 set、map、array、object\n  return createReactiveObject(target, baseHandler)\n}\n\nfunction createReactiveObject(target, baseHandler) {\n  // 如果不是对象，不需要代理\n  if (!isObject(target)) return target\n  \n  // 检查是否已代理过该对象\n  let proxy = toProxy.get(target)\n  if (proxy) return proxy\n  \n  if (toRaw.has(target)) return target\n  \n  let observed = new Proxy(target, baseHandler)\n  \n  // 维护 proxy 表\n  toProxy.set(target, observed)\n  toRaw.set(observed, target)\n  \n  return observed\n}\n\n// dep & track & trigger\nfunction createDep(effects) {\n  const dep = new Set(effects)\n  return dep\n}\n\nfunction track(target, key) {\n  // 当前激活栈的栈顶就是当前激活的 effect\n  const effect = activeEffectStack[activeEffectStack.length - 1]\n  if (effect) {\n    // 维护依赖表\n    let depsMap = targetMap.get(target)\n    if (!depsMap) {\n      depsMap = new Map()\n      targetMap.set(target, depsMap)\n    }\n    let dep = depsMap.get(key)\n    if (!dep) {\n      // 新建依赖项\n      dep = createDep()\n      depsMap.set(key, dep)\n    }\n    if (!dep.has(effect)) {\n      dep.add(effect)\n    }\n  }\n}\n\nfunction trigger(target, key) {\n  // 从依赖表中获取 effect 并逐个执行\n  let depsMap = targetMap.get(target)\n  if (depsMap) {\n    let dep = depsMap.get(key)\n    if (dep) {\n      dep.forEach(effect => {\n        effect()\n      })\n    }\n  }\n}\n\n// 依赖函数\nfunction effect(fn) {\n  const effectFunc = function() {\n    try {\n      // 加入 effect 栈\n      activeEffectStack.push(effectFunc)\n      return fn()\n    } finally {\n      activeEffectStack.pop()\n    }\n  }\n  // 创建 effect 就会触发一次\n  effectFunc()\n  return effectFunc\n}\n\nconst state = reactive({\n  msg: 'this is a message',\n  name: 'zs'\n})\nconsole.log('before', state.msg)\nstate.msg = 'this is a new message'\nconsole.log('after', state.msg)\n\neffect(() => {\n  console.log(state.name)\n})\nstate.name = 'lisi'\n```\n",
  "body_html": "<!doctype html><p><img src=\"https://cdn.nlark.com/yuque/0/2022/jpeg/732231/1648797525903-a645d308-e784-49df-9ab7-5b89c93cd2c5.jpeg\" /></p><h2 id=\"vKrFR\"><span>核心逻辑</span></h2><pre data-lang=\"javascript\"><code>const isObject = obj =&gt; typeof obj === 'object' &amp;&amp; obj !== null\nconst hasOwn = (target, key) =&gt; target.hasOwnProperty(key)\n\n// 已有代理的存储\nlet toProxy = new WeakMap()\nlet toRaw = new WeakMap()\n\n// 当前激活的 effect 栈\nlet activeEffectStack = []\n// 依赖映射表\nlet targetMap = new Map()\n\n// 核心逻辑\nconst baseHandler = {\n  // proxy + reflect\n  // target: 实例化 Proxy 时使用的对象\n  // key: 属性名\n  // receiver: 实例化 Proxy 自身，即 proxy\n  get(target, key, receiver) {\n    // 可能无法访问 key、target[key] 是否成功不会报错，所以使用 reflect\n    const res = Reflect.get(target, key, receiver) // =&gt; target[key]\n    // 触发 get 时进行依赖收集\n    track(target, key)\n    console.log('getter', target, key)\n    return res\n  },\n  set(target, key, value, receiver) {\n    const res = Reflect.set(target, key, value, receiver) // 返回 true/false\n    // 在触发 set 的时候进行触发依赖\n    trigger(target, key)\n    console.log('setter', target, key) // =&gt; target[key] = value\n    return res\n  }\n}\n\nfunction reactive(target) {\n  // 创建一个响应式对象 set、map、array、object\n  return createReactiveObject(target, baseHandler)\n}\n\nfunction createReactiveObject(target, baseHandler) {\n  // 如果不是对象，不需要代理\n  if (!isObject(target)) return target\n  \n  // 检查是否已代理过该对象\n  let proxy = toProxy.get(target)\n  if (proxy) return proxy\n  \n  if (toRaw.has(target)) return target\n  \n  let observed = new Proxy(target, baseHandler)\n  \n  // 维护 proxy 表\n  toProxy.set(target, observed)\n  toRaw.set(observed, target)\n  \n  return observed\n}\n\n// dep &amp; track &amp; trigger\nfunction createDep(effects) {\n  const dep = new Set(effects)\n  return dep\n}\n\nfunction track(target, key) {\n  // 当前激活栈的栈顶就是当前激活的 effect\n  const effect = activeEffectStack[activeEffectStack.length - 1]\n  if (effect) {\n    // 维护依赖表\n    let depsMap = targetMap.get(target)\n    if (!depsMap) {\n      depsMap = new Map()\n      targetMap.set(target, depsMap)\n    }\n    let dep = depsMap.get(key)\n    if (!dep) {\n      // 新建依赖项\n      dep = createDep()\n      depsMap.set(key, dep)\n    }\n    if (!dep.has(effect)) {\n      dep.add(effect)\n    }\n  }\n}\n\nfunction trigger(target, key) {\n  // 从依赖表中获取 effect 并逐个执行\n  let depsMap = targetMap.get(target)\n  if (depsMap) {\n    let dep = depsMap.get(key)\n    if (dep) {\n      dep.forEach(effect =&gt; {\n        effect()\n      })\n    }\n  }\n}\n\n// 依赖函数\nfunction effect(fn) {\n  const effectFunc = function() {\n    try {\n      // 加入 effect 栈\n      activeEffectStack.push(effectFunc)\n      return fn()\n    } finally {\n      activeEffectStack.pop()\n    }\n  }\n  // 创建 effect 就会触发一次\n  effectFunc()\n  return effectFunc\n}\n\nconst state = reactive({\n  msg: 'this is a message',\n  name: 'zs'\n})\nconsole.log('before', state.msg)\nstate.msg = 'this is a new message'\nconsole.log('after', state.msg)\n\neffect(() =&gt; {\n  console.log(state.name)\n})\nstate.name = 'lisi'</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><card type=\"block\" name=\"board\" value=\"data:%7B%22diagramData%22%3A%7B%22head%22%3A%7B%22version%22%3A%222.0.0%22%7D%2C%22body%22%3A%5B%7B%22type%22%3A%22geometry%22%2C%22html%22%3A%22%3Cdiv%20style%3D%5C%22text-align%3Acenter%3B%5C%22%3E%26nbsp%3BcreateReactiveApp%3C%2Fdiv%3E%22%2C%22shape%22%3A%22start-end%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%22d73d9727-691f-46bf-b138-19128899860c%22%2C%22x%22%3A438.1772504183439%2C%22y%22%3A-419.8457051144326%2C%22width%22%3A275.7578013650932%2C%22height%22%3A61.69134317541807%2C%22zIndex%22%3A0%2C%22rotate%22%3A0%7D%2C%7B%22type%22%3A%22geometry%22%2C%22html%22%3A%22%3Cdiv%20style%3D%5C%22text-align%3Acenter%3B%5C%22%3Ereactive()%3C%2Fdiv%3E%22%2C%22shape%22%3A%22process%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%224e2ed2d0-8ea5-44a3-8599-f68bae909508%22%2C%22x%22%3A316.1772504183439%2C%22y%22%3A-315.04904547008834%2C%22width%22%3A120%2C%22height%22%3A60%2C%22zIndex%22%3A1%7D%2C%7B%22type%22%3A%22geometry%22%2C%22html%22%3A%22%3Cdiv%20style%3D%5C%22text-align%3Acenter%3B%5C%22%3Eeffect()%3C%2Fdiv%3E%22%2C%22shape%22%3A%22process%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%2227a3b0f2-daf9-4e0f-92ae-e7638451b59b%22%2C%22x%22%3A715.9350517834371%2C%22y%22%3A-315.04904547008834%2C%22width%22%3A120%2C%22height%22%3A60%2C%22zIndex%22%3A2%7D%2C%7B%22type%22%3A%22geometry%22%2C%22html%22%3A%22%3Cdiv%20style%3D%5C%22text-align%3Acenter%3B%5C%22%3E%E5%93%8D%E5%BA%94%E5%BC%8F%E5%AF%B9%E8%B1%A1%3C%2Fdiv%3E%22%2C%22shape%22%3A%22process%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%224b208340-1d61-4bf7-b2ff-e405f501deb6%22%2C%22x%22%3A316.1772504183439%2C%22y%22%3A-187.78750849094502%2C%22width%22%3A120%2C%22height%22%3A60%2C%22zIndex%22%3A3%7D%2C%7B%22type%22%3A%22geometry%22%2C%22html%22%3A%22%3Cdiv%20style%3D%5C%22text-align%3Acenter%3B%5C%22%3Etrigger%3C%2Fdiv%3E%22%2C%22shape%22%3A%22process%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%221f5fcd39-aac0-4134-b4a6-6ffd0f36da0c%22%2C%22x%22%3A715.9350517834371%2C%22y%22%3A-187.78750849094502%2C%22width%22%3A120%2C%22height%22%3A60%2C%22zIndex%22%3A4%7D%2C%7B%22type%22%3A%22geometry%22%2C%22html%22%3A%22%3Cdiv%20style%3D%5C%22text-align%3Acenter%3B%5C%22%3Etrack%3C%2Fdiv%3E%22%2C%22shape%22%3A%22process%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%22ebca55e8-9b71-48a7-8566-bf18aa110d3f%22%2C%22x%22%3A316.1772504183439%2C%22y%22%3A-67.92091300428046%2C%22width%22%3A120%2C%22height%22%3A60%2C%22zIndex%22%3A5%7D%2C%7B%22type%22%3A%22geometry%22%2C%22html%22%3A%22%3Cdiv%20style%3D%5C%22text-align%3Acenter%3B%5C%22%3EtargetMap%3C%2Fdiv%3E%22%2C%22shape%22%3A%22data%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%225873dc06-ed75-4b5c-9062-58b746854ac3%22%2C%22x%22%3A715.9350517834371%2C%22y%22%3A-67.92091300428046%2C%22width%22%3A124%2C%22height%22%3A60%2C%22zIndex%22%3A6%7D%2C%7B%22shape%22%3A%22elbow%22%2C%22target%22%3A%7B%22marker%22%3A%22arrow%22%2C%22id%22%3A%224e2ed2d0-8ea5-44a3-8599-f68bae909508%22%2C%22connection%22%3A%22E%22%7D%2C%22type%22%3A%22line%22%2C%22source%22%3A%7B%22id%22%3A%22d73d9727-691f-46bf-b138-19128899860c%22%2C%22connection%22%3A%22S%22%7D%2C%22id%22%3A%22f2f4d02e-9bd3-4e9a-9034-284dd8fa471e%22%2C%22zIndex%22%3A7%7D%2C%7B%22shape%22%3A%22elbow%22%2C%22target%22%3A%7B%22marker%22%3A%22arrow%22%2C%22id%22%3A%2227a3b0f2-daf9-4e0f-92ae-e7638451b59b%22%2C%22connection%22%3A%22W%22%7D%2C%22type%22%3A%22line%22%2C%22source%22%3A%7B%22connection%22%3A%5B576.9929339004482%2C-285.5386295794359%5D%7D%2C%22id%22%3A%223e985f81-acd0-40bc-bd50-a614e747fd4f%22%2C%22zIndex%22%3A8%7D%2C%7B%22shape%22%3A%22elbow%22%2C%22target%22%3A%7B%22marker%22%3A%22arrow%22%2C%22id%22%3A%224b208340-1d61-4bf7-b2ff-e405f501deb6%22%7D%2C%22type%22%3A%22line%22%2C%22source%22%3A%7B%22id%22%3A%224e2ed2d0-8ea5-44a3-8599-f68bae909508%22%2C%22connection%22%3A%22S%22%7D%2C%22id%22%3A%22413f8c82-01ae-490b-ac93-8bb3b02799df%22%2C%22zIndex%22%3A9%7D%2C%7B%22shape%22%3A%22straight%22%2C%22target%22%3A%7B%22marker%22%3A%22arrow%22%2C%22id%22%3A%224b208340-1d61-4bf7-b2ff-e405f501deb6%22%2C%22connection%22%3A%22E%22%7D%2C%22type%22%3A%22line%22%2C%22source%22%3A%7B%22id%22%3A%2227a3b0f2-daf9-4e0f-92ae-e7638451b59b%22%2C%22connection%22%3A%5B0.0001868505962193012%2C0.9868584314982096%5D%7D%2C%22id%22%3A%227d877068-af04-4ec0-881f-081b6787fc9f%22%2C%22zIndex%22%3A10%7D%2C%7B%22shape%22%3A%22straight%22%2C%22target%22%3A%7B%22marker%22%3A%22arrow%22%2C%22id%22%3A%221f5fcd39-aac0-4134-b4a6-6ffd0f36da0c%22%7D%2C%22type%22%3A%22line%22%2C%22source%22%3A%7B%22id%22%3A%224b208340-1d61-4bf7-b2ff-e405f501deb6%22%2C%22connection%22%3A%22E%22%7D%2C%22id%22%3A%22e7f21f54-01dc-495b-96b4-fea2314a3e88%22%2C%22zIndex%22%3A11%7D%2C%7B%22shape%22%3A%22straight%22%2C%22target%22%3A%7B%22marker%22%3A%22arrow%22%2C%22id%22%3A%225873dc06-ed75-4b5c-9062-58b746854ac3%22%7D%2C%22type%22%3A%22line%22%2C%22source%22%3A%7B%22id%22%3A%22ebca55e8-9b71-48a7-8566-bf18aa110d3f%22%2C%22connection%22%3A%22E%22%7D%2C%22id%22%3A%2227eec292-ced9-4daa-b58c-163a7f5d3ee6%22%2C%22zIndex%22%3A12%7D%2C%7B%22shape%22%3A%22straight%22%2C%22stroke%22%3A%7B%22color%22%3A%22%23595959%22%2C%22width%22%3A2%7D%2C%22target%22%3A%7B%22marker%22%3A%22arrow%22%2C%22id%22%3A%22ebca55e8-9b71-48a7-8566-bf18aa110d3f%22%2C%22connection%22%3A%22N%22%7D%2C%22source%22%3A%7B%22id%22%3A%224b208340-1d61-4bf7-b2ff-e405f501deb6%22%2C%22connection%22%3A%22S%22%7D%2C%22type%22%3A%22line%22%2C%22id%22%3A%223b943158-1f94-46fb-83c7-9836555ace86%22%2C%22zIndex%22%3A13%7D%2C%7B%22shape%22%3A%22straight%22%2C%22stroke%22%3A%7B%22color%22%3A%22%23595959%22%2C%22width%22%3A2%7D%2C%22target%22%3A%7B%22marker%22%3A%22arrow%22%2C%22id%22%3A%225873dc06-ed75-4b5c-9062-58b746854ac3%22%7D%2C%22source%22%3A%7B%22id%22%3A%221f5fcd39-aac0-4134-b4a6-6ffd0f36da0c%22%2C%22connection%22%3A%22S%22%7D%2C%22type%22%3A%22line%22%2C%22id%22%3A%229287fa99-2eba-4dba-ac8f-4a732819d31f%22%2C%22zIndex%22%3A14%7D%2C%7B%22type%22%3A%22text%22%2C%22html%22%3A%22%E5%93%8D%E5%BA%94%E5%BC%8F%E5%AF%B9%E8%B1%A1%22%2C%22shape%22%3A%22text%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%22975f07eb-48cc-4a90-b6d9-f3ec8b94e068%22%2C%22x%22%3A469.05642596394017%2C%22y%22%3A-315.54904547008834%2C%22zIndex%22%3A15%7D%2C%7B%22type%22%3A%22text%22%2C%22html%22%3A%22%E4%BE%9D%E8%B5%96%E5%87%BD%E6%95%B0%22%2C%22shape%22%3A%22text%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%22c8ff1375-5492-42a8-9d71-a6136b101a0a%22%2C%22x%22%3A599.6686708618995%2C%22y%22%3A-315.54904547008834%2C%22zIndex%22%3A16%7D%2C%7B%22type%22%3A%22text%22%2C%22html%22%3A%22%E5%88%9B%E5%BB%BA%22%2C%22shape%22%3A%22text%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%222ee9c8e6-def6-4772-bb8b-2d0be84898f0%22%2C%22x%22%3A297.6772504183439%2C%22y%22%3A-242.0012146134495%2C%22zIndex%22%3A17%7D%2C%7B%22type%22%3A%22text%22%2C%22html%22%3A%22%E4%BD%9C%E7%94%A8%E4%BA%8E%22%2C%22shape%22%3A%22text%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%228749fcc4-101c-4726-a9a1-c9d32c7ee6d6%22%2C%22x%22%3A520.6686708618995%2C%22y%22%3A-242.0012146134495%2C%22zIndex%22%3A18%7D%2C%7B%22type%22%3A%22text%22%2C%22html%22%3A%22%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE%22%2C%22shape%22%3A%22text%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%227a162a1e-c6eb-493c-81d7-4cd76379cba7%22%2C%22x%22%3A548.0564259639402%2C%22y%22%3A-157.28750849094502%2C%22zIndex%22%3A19%7D%2C%7B%22type%22%3A%22text%22%2C%22html%22%3A%22%E4%BE%9D%E8%B5%96%E6%94%B6%E9%9B%86%22%2C%22shape%22%3A%22text%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%223f195ee3-1faf-4ddc-a7c5-5d2658629772%22%2C%22x%22%3A297.6772504183438%2C%22y%22%3A-115.92411710778049%2C%22zIndex%22%3A20%7D%2C%7B%22type%22%3A%22text%22%2C%22html%22%3A%22%E5%AF%BB%E6%89%BE%E4%BE%9D%E8%B5%96%E6%89%A7%E8%A1%8C%22%2C%22shape%22%3A%22text%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%22842cf1b2-3c7c-4169-9fab-97f9b2cb1aef%22%2C%22x%22%3A669.0564259639402%2C%22y%22%3A-115.92411710778049%2C%22zIndex%22%3A21%7D%2C%7B%22type%22%3A%22text%22%2C%22html%22%3A%22%E5%AD%98%E5%82%A8%E5%B1%9E%E6%80%A7%E5%AF%B9%E5%BA%94%E4%BE%9D%E8%B5%96%22%2C%22shape%22%3A%22text%22%2C%22category%22%3A%22flowchart%22%2C%22id%22%3A%229ba2ba0a-15b7-49ae-a88c-322a9ba160bc%22%2C%22x%22%3A548.0564259639402%2C%22y%22%3A-70.42091300428046%2C%22zIndex%22%3A22%7D%5D%7D%2C%22viewportOption%22%3A%22adapt%22%2C%22viewportSetting%22%3A%7B%22zoom%22%3A1%2C%22tlCanvasPoint%22%3A%5B152.46246337890625%2C-466.28326416015625%2C1%5D%2C%22width%22%3A512%2C%22height%22%3A478%7D%2C%22search%22%3A%22%C2%A0createReactiveAppreactive()effect()%E5%93%8D%E5%BA%94%E5%BC%8F%E5%AF%B9%E8%B1%A1triggertracktargetMap%E5%93%8D%E5%BA%94%E5%BC%8F%E5%AF%B9%E8%B1%A1%E4%BE%9D%E8%B5%96%E5%87%BD%E6%95%B0%E5%88%9B%E5%BB%BA%E4%BD%9C%E7%94%A8%E4%BA%8E%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE%E4%BE%9D%E8%B5%96%E6%94%B6%E9%9B%86%E5%AF%BB%E6%89%BE%E4%BE%9D%E8%B5%96%E6%89%A7%E8%A1%8C%E5%AD%98%E5%82%A8%E5%B1%9E%E6%80%A7%E5%AF%B9%E5%BA%94%E4%BE%9D%E8%B5%96%22%2C%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fjpeg%2F732231%2F1648797525903-a645d308-e784-49df-9ab7-5b89c93cd2c5.jpeg%22%2C%22graphicsBBox%22%3A%7B%22x%22%3A297.67724609375%2C%22y%22%3A-419.845703125%2C%22width%22%3A541.9454345703125%2C%22height%22%3A411.9248046875%7D%2C%22id%22%3A%22tdfLA%22%7D\"></card><h2 data-lake-id=\"vKrFR\" id=\"vKrFR\"><span data-lake-id=\"u069104aa\" id=\"u069104aa\">核心逻辑</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20isObject%20%3D%20obj%20%3D%3E%20typeof%20obj%20%3D%3D%3D%20'object'%20%26%26%20obj%20!%3D%3D%20null%5Cnconst%20hasOwn%20%3D%20(target%2C%20key)%20%3D%3E%20target.hasOwnProperty(key)%5Cn%5Cn%2F%2F%20%E5%B7%B2%E6%9C%89%E4%BB%A3%E7%90%86%E7%9A%84%E5%AD%98%E5%82%A8%5Cnlet%20toProxy%20%3D%20new%20WeakMap()%5Cnlet%20toRaw%20%3D%20new%20WeakMap()%5Cn%5Cn%2F%2F%20%E5%BD%93%E5%89%8D%E6%BF%80%E6%B4%BB%E7%9A%84%20effect%20%E6%A0%88%5Cnlet%20activeEffectStack%20%3D%20%5B%5D%5Cn%2F%2F%20%E4%BE%9D%E8%B5%96%E6%98%A0%E5%B0%84%E8%A1%A8%5Cnlet%20targetMap%20%3D%20new%20Map()%5Cn%5Cn%2F%2F%20%E6%A0%B8%E5%BF%83%E9%80%BB%E8%BE%91%5Cnconst%20baseHandler%20%3D%20%7B%5Cn%20%20%2F%2F%20proxy%20%2B%20reflect%5Cn%20%20%2F%2F%20target%3A%20%E5%AE%9E%E4%BE%8B%E5%8C%96%20Proxy%20%E6%97%B6%E4%BD%BF%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%5Cn%20%20%2F%2F%20key%3A%20%E5%B1%9E%E6%80%A7%E5%90%8D%5Cn%20%20%2F%2F%20receiver%3A%20%E5%AE%9E%E4%BE%8B%E5%8C%96%20Proxy%20%E8%87%AA%E8%BA%AB%EF%BC%8C%E5%8D%B3%20proxy%5Cn%20%20get(target%2C%20key%2C%20receiver)%20%7B%5Cn%20%20%20%20%2F%2F%20%E5%8F%AF%E8%83%BD%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%20key%E3%80%81target%5Bkey%5D%20%E6%98%AF%E5%90%A6%E6%88%90%E5%8A%9F%E4%B8%8D%E4%BC%9A%E6%8A%A5%E9%94%99%EF%BC%8C%E6%89%80%E4%BB%A5%E4%BD%BF%E7%94%A8%20reflect%5Cn%20%20%20%20const%20res%20%3D%20Reflect.get(target%2C%20key%2C%20receiver)%20%2F%2F%20%3D%3E%20target%5Bkey%5D%5Cn%20%20%20%20%2F%2F%20%E8%A7%A6%E5%8F%91%20get%20%E6%97%B6%E8%BF%9B%E8%A1%8C%E4%BE%9D%E8%B5%96%E6%94%B6%E9%9B%86%5Cn%20%20%20%20track(target%2C%20key)%5Cn%20%20%20%20console.log('getter'%2C%20target%2C%20key)%5Cn%20%20%20%20return%20res%5Cn%20%20%7D%2C%5Cn%20%20set(target%2C%20key%2C%20value%2C%20receiver)%20%7B%5Cn%20%20%20%20const%20res%20%3D%20Reflect.set(target%2C%20key%2C%20value%2C%20receiver)%20%2F%2F%20%E8%BF%94%E5%9B%9E%20true%2Ffalse%5Cn%20%20%20%20%2F%2F%20%E5%9C%A8%E8%A7%A6%E5%8F%91%20set%20%E7%9A%84%E6%97%B6%E5%80%99%E8%BF%9B%E8%A1%8C%E8%A7%A6%E5%8F%91%E4%BE%9D%E8%B5%96%5Cn%20%20%20%20trigger(target%2C%20key)%5Cn%20%20%20%20console.log('setter'%2C%20target%2C%20key)%20%2F%2F%20%3D%3E%20target%5Bkey%5D%20%3D%20value%5Cn%20%20%20%20return%20res%5Cn%20%20%7D%5Cn%7D%5Cn%5Cnfunction%20reactive(target)%20%7B%5Cn%20%20%2F%2F%20%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%93%8D%E5%BA%94%E5%BC%8F%E5%AF%B9%E8%B1%A1%20set%E3%80%81map%E3%80%81array%E3%80%81object%5Cn%20%20return%20createReactiveObject(target%2C%20baseHandler)%5Cn%7D%5Cn%5Cnfunction%20createReactiveObject(target%2C%20baseHandler)%20%7B%5Cn%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E4%B8%8D%E6%98%AF%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%B8%8D%E9%9C%80%E8%A6%81%E4%BB%A3%E7%90%86%5Cn%20%20if%20(!isObject(target))%20return%20target%5Cn%20%20%5Cn%20%20%2F%2F%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E5%B7%B2%E4%BB%A3%E7%90%86%E8%BF%87%E8%AF%A5%E5%AF%B9%E8%B1%A1%5Cn%20%20let%20proxy%20%3D%20toProxy.get(target)%5Cn%20%20if%20(proxy)%20return%20proxy%5Cn%20%20%5Cn%20%20if%20(toRaw.has(target))%20return%20target%5Cn%20%20%5Cn%20%20let%20observed%20%3D%20new%20Proxy(target%2C%20baseHandler)%5Cn%20%20%5Cn%20%20%2F%2F%20%E7%BB%B4%E6%8A%A4%20proxy%20%E8%A1%A8%5Cn%20%20toProxy.set(target%2C%20observed)%5Cn%20%20toRaw.set(observed%2C%20target)%5Cn%20%20%5Cn%20%20return%20observed%5Cn%7D%5Cn%5Cn%2F%2F%20dep%20%26%20track%20%26%20trigger%5Cnfunction%20createDep(effects)%20%7B%5Cn%20%20const%20dep%20%3D%20new%20Set(effects)%5Cn%20%20return%20dep%5Cn%7D%5Cn%5Cnfunction%20track(target%2C%20key)%20%7B%5Cn%20%20%2F%2F%20%E5%BD%93%E5%89%8D%E6%BF%80%E6%B4%BB%E6%A0%88%E7%9A%84%E6%A0%88%E9%A1%B6%E5%B0%B1%E6%98%AF%E5%BD%93%E5%89%8D%E6%BF%80%E6%B4%BB%E7%9A%84%20effect%5Cn%20%20const%20effect%20%3D%20activeEffectStack%5BactiveEffectStack.length%20-%201%5D%5Cn%20%20if%20(effect)%20%7B%5Cn%20%20%20%20%2F%2F%20%E7%BB%B4%E6%8A%A4%E4%BE%9D%E8%B5%96%E8%A1%A8%5Cn%20%20%20%20let%20depsMap%20%3D%20targetMap.get(target)%5Cn%20%20%20%20if%20(!depsMap)%20%7B%5Cn%20%20%20%20%20%20depsMap%20%3D%20new%20Map()%5Cn%20%20%20%20%20%20targetMap.set(target%2C%20depsMap)%5Cn%20%20%20%20%7D%5Cn%20%20%20%20let%20dep%20%3D%20depsMap.get(key)%5Cn%20%20%20%20if%20(!dep)%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20%E6%96%B0%E5%BB%BA%E4%BE%9D%E8%B5%96%E9%A1%B9%5Cn%20%20%20%20%20%20dep%20%3D%20createDep()%5Cn%20%20%20%20%20%20depsMap.set(key%2C%20dep)%5Cn%20%20%20%20%7D%5Cn%20%20%20%20if%20(!dep.has(effect))%20%7B%5Cn%20%20%20%20%20%20dep.add(effect)%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%5Cn%5Cnfunction%20trigger(target%2C%20key)%20%7B%5Cn%20%20%2F%2F%20%E4%BB%8E%E4%BE%9D%E8%B5%96%E8%A1%A8%E4%B8%AD%E8%8E%B7%E5%8F%96%20effect%20%E5%B9%B6%E9%80%90%E4%B8%AA%E6%89%A7%E8%A1%8C%5Cn%20%20let%20depsMap%20%3D%20targetMap.get(target)%5Cn%20%20if%20(depsMap)%20%7B%5Cn%20%20%20%20let%20dep%20%3D%20depsMap.get(key)%5Cn%20%20%20%20if%20(dep)%20%7B%5Cn%20%20%20%20%20%20dep.forEach(effect%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20effect()%5Cn%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn%2F%2F%20%E4%BE%9D%E8%B5%96%E5%87%BD%E6%95%B0%5Cnfunction%20effect(fn)%20%7B%5Cn%20%20const%20effectFunc%20%3D%20function()%20%7B%5Cn%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20%E5%8A%A0%E5%85%A5%20effect%20%E6%A0%88%5Cn%20%20%20%20%20%20activeEffectStack.push(effectFunc)%5Cn%20%20%20%20%20%20return%20fn()%5Cn%20%20%20%20%7D%20finally%20%7B%5Cn%20%20%20%20%20%20activeEffectStack.pop()%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20%2F%2F%20%E5%88%9B%E5%BB%BA%20effect%20%E5%B0%B1%E4%BC%9A%E8%A7%A6%E5%8F%91%E4%B8%80%E6%AC%A1%5Cn%20%20effectFunc()%5Cn%20%20return%20effectFunc%5Cn%7D%5Cn%5Cnconst%20state%20%3D%20reactive(%7B%5Cn%20%20msg%3A%20'this%20is%20a%20message'%2C%5Cn%20%20name%3A%20'zs'%5Cn%7D)%5Cnconsole.log('before'%2C%20state.msg)%5Cnstate.msg%20%3D%20'this%20is%20a%20new%20message'%5Cnconsole.log('after'%2C%20state.msg)%5Cn%5Cneffect(()%20%3D%3E%20%7B%5Cn%20%20console.log(state.name)%5Cn%7D)%5Cnstate.name%20%3D%20'lisi'%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22EDD6u%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 500,
  "created_at": "2022-04-04T11:35:25.000Z",
  "updated_at": "2022-05-10T15:16:47.000Z",
  "content_updated_at": "2022-04-04T11:35:25.000Z",
  "published_at": "2022-04-04T11:35:25.000Z",
  "first_published_at": "2022-04-04T11:35:25.309Z",
  "book": {
    "id": 26225252,
    "type": "Book",
    "slug": "sd8kbc",
    "name": "笔试 written test",
    "user_id": 732231,
    "description": "笔试相关题目\n1. 原生 API 实现\n2. 业务场景相关问题\n3. LeetCode 算法相关问题",
    "toc_yml": "- type: META\n  count: 84\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 370014828\n  published: true\n  max_level: 1\n  last_updated_at: 2023-11-11T18:03:16.908Z\n  version_id: 370014838\n- type: TITLE\n  title: 原生 API\n  uuid: _1yNZniU22OymJlp\n  url: ''\n  prev_uuid: ''\n  sibling_uuid: zxe2MJsSU5MOefDb\n  child_uuid: EMyfauRyhp-lOYYB\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: extends 关键字\n  uuid: EMyfauRyhp-lOYYB\n  url: vtqbgk\n  prev_uuid: _1yNZniU22OymJlp\n  sibling_uuid: XEsl8fffffuSCTSI\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 76186529\n  level: 1\n  id: 76186529\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ajax\n  uuid: XEsl8fffffuSCTSI\n  url: cq5ws4\n  prev_uuid: EMyfauRyhp-lOYYB\n  sibling_uuid: EaDc9LInXSSLEeXZ\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212428\n  level: 1\n  id: 72212428\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: call & apply & bind\n  uuid: EaDc9LInXSSLEeXZ\n  url: ybrsyw\n  prev_uuid: XEsl8fffffuSCTSI\n  sibling_uuid: wqGQXgEjeQAf0Bxq\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212433\n  level: 1\n  id: 72212433\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: new 关键字\n  uuid: wqGQXgEjeQAf0Bxq\n  url: pldu2b\n  prev_uuid: EaDc9LInXSSLEeXZ\n  sibling_uuid: EbpTwwxFd9JXJyoY\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212430\n  level: 1\n  id: 72212430\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 函数柯理化\n  uuid: EbpTwwxFd9JXJyoY\n  url: yo9cx5\n  prev_uuid: wqGQXgEjeQAf0Bxq\n  sibling_uuid: g-W6FKTBoxb36HhI\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212393\n  level: 1\n  id: 72212393\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 浅拷贝和深拷贝\n  uuid: g-W6FKTBoxb36HhI\n  url: ufks1z\n  prev_uuid: EbpTwwxFd9JXJyoY\n  sibling_uuid: 7u5E_Hw98pbzQ4Yj\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212395\n  level: 1\n  id: 72212395\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 instanceof\n  uuid: 7u5E_Hw98pbzQ4Yj\n  url: ba4wuo\n  prev_uuid: g-W6FKTBoxb36HhI\n  sibling_uuid: lFcmsu4tBdKMPIkR\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212424\n  level: 1\n  id: 72212424\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 手动实现定时器\n  uuid: lFcmsu4tBdKMPIkR\n  url: wf9bwg\n  prev_uuid: 7u5E_Hw98pbzQ4Yj\n  sibling_uuid: mjNFEVKWs-_1yZyS\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212397\n  level: 1\n  id: 72212397\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: sleep 函数实现\n  uuid: mjNFEVKWs-_1yZyS\n  url: ngwrak\n  prev_uuid: lFcmsu4tBdKMPIkR\n  sibling_uuid: Zo-bldWs1dUYUcA5\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212460\n  level: 1\n  id: 72212460\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 JSON.stringify\n  uuid: Zo-bldWs1dUYUcA5\n  url: mtoe2n\n  prev_uuid: mjNFEVKWs-_1yZyS\n  sibling_uuid: LR_aI8-ZIoVBksK7\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212459\n  level: 1\n  id: 72212459\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: js 通用类型获取\n  uuid: LR_aI8-ZIoVBksK7\n  url: tll6lm\n  prev_uuid: Zo-bldWs1dUYUcA5\n  sibling_uuid: fjrB0qhIJpH89FjS\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212464\n  level: 1\n  id: 72212464\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 iterator\n  uuid: fjrB0qhIJpH89FjS\n  url: ir252g\n  prev_uuid: LR_aI8-ZIoVBksK7\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 81930561\n  level: 1\n  id: 81930561\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: TypeScript\n  uuid: zxe2MJsSU5MOefDb\n  url: ''\n  prev_uuid: _1yNZniU22OymJlp\n  sibling_uuid: KRfqr5yKeh6GNv5y\n  child_uuid: CdOrh3hFdbuZevZ-\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: '#10 元组转联合类型'\n  uuid: CdOrh3hFdbuZevZ-\n  url: wwribz\n  prev_uuid: zxe2MJsSU5MOefDb\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: zxe2MJsSU5MOefDb\n  doc_id: 81961244\n  level: 1\n  id: 81961244\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 防抖和节流\n  uuid: KRfqr5yKeh6GNv5y\n  url: ''\n  prev_uuid: zxe2MJsSU5MOefDb\n  sibling_uuid: 84qjgn-j0_zJVLF7\n  child_uuid: eLdwpvS_6r5inI_p\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 防抖\n  uuid: eLdwpvS_6r5inI_p\n  url: enlngv\n  prev_uuid: KRfqr5yKeh6GNv5y\n  sibling_uuid: z32U-o38tB2Yzwns\n  child_uuid: ''\n  parent_uuid: KRfqr5yKeh6GNv5y\n  doc_id: 72212387\n  level: 1\n  id: 72212387\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 节流\n  uuid: z32U-o38tB2Yzwns\n  url: griz0t\n  prev_uuid: eLdwpvS_6r5inI_p\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: KRfqr5yKeh6GNv5y\n  doc_id: 72212392\n  level: 1\n  id: 72212392\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 数组相关\n  uuid: 84qjgn-j0_zJVLF7\n  url: ''\n  prev_uuid: KRfqr5yKeh6GNv5y\n  sibling_uuid: 0efRPOUXCUn3VmH-\n  child_uuid: E8-yClCfd2GHBfld\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 数组交集、差集、并集\n  uuid: E8-yClCfd2GHBfld\n  url: yl18rs\n  prev_uuid: 84qjgn-j0_zJVLF7\n  sibling_uuid: Ot36XWP1DAdhhxL8\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 77996894\n  level: 1\n  id: 77996894\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组转树\n  uuid: Ot36XWP1DAdhhxL8\n  url: bzgequ\n  prev_uuid: E8-yClCfd2GHBfld\n  sibling_uuid: LUZSQT4XixZ6lRVn\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 77015210\n  level: 1\n  id: 77015210\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 树转数组\n  uuid: LUZSQT4XixZ6lRVn\n  url: xycpzl\n  prev_uuid: Ot36XWP1DAdhhxL8\n  sibling_uuid: KSjaO3MJIdM_aUoi\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 77015236\n  level: 1\n  id: 77015236\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组常用方法\n  uuid: KSjaO3MJIdM_aUoi\n  url: owtewn\n  prev_uuid: LUZSQT4XixZ6lRVn\n  sibling_uuid: 1PhmaFWLSwH7eqUK\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212436\n  level: 1\n  id: 72212436\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组去重实现\n  uuid: 1PhmaFWLSwH7eqUK\n  url: gq2z9n\n  prev_uuid: KSjaO3MJIdM_aUoi\n  sibling_uuid: bnM3r0-enDa6563Q\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212390\n  level: 1\n  id: 72212390\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组扁平化实现\n  uuid: bnM3r0-enDa6563Q\n  url: doeryg\n  prev_uuid: 1PhmaFWLSwH7eqUK\n  sibling_uuid: 4NBfYxOcirIHYRrY\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212385\n  level: 1\n  id: 72212385\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 类数组转换为数组\n  uuid: 4NBfYxOcirIHYRrY\n  url: csgagn\n  prev_uuid: bnM3r0-enDa6563Q\n  sibling_uuid: SRwtHRX7f61VIFq6\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212445\n  level: 1\n  id: 72212445\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现数组乱序输出\n  uuid: SRwtHRX7f61VIFq6\n  url: xlrgnu\n  prev_uuid: 4NBfYxOcirIHYRrY\n  sibling_uuid: eARzwOBdjHS0A35l\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212437\n  level: 1\n  id: 72212437\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 查找二维数组的目标值\n  uuid: eARzwOBdjHS0A35l\n  url: tmw2ny\n  prev_uuid: SRwtHRX7f61VIFq6\n  sibling_uuid: C2gvlSUA6P7bZEpi\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212461\n  level: 1\n  id: 72212461\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 二维数组斜向打印\n  uuid: C2gvlSUA6P7bZEpi\n  url: aqw6my\n  prev_uuid: eARzwOBdjHS0A35l\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212457\n  level: 1\n  id: 72212457\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 字符串相关\n  uuid: 0efRPOUXCUn3VmH-\n  url: ''\n  prev_uuid: 84qjgn-j0_zJVLF7\n  sibling_uuid: A5NJiZ0GxiVUBJHd\n  child_uuid: oZ_CUVcv3_hOp7zN\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现字符串的 repeat 方法\n  uuid: oZ_CUVcv3_hOp7zN\n  url: hxelqc\n  prev_uuid: 0efRPOUXCUn3VmH-\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 0efRPOUXCUn3VmH-\n  doc_id: 72212440\n  level: 1\n  id: 72212440\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: promise相关\n  uuid: A5NJiZ0GxiVUBJHd\n  url: ''\n  prev_uuid: 0efRPOUXCUn3VmH-\n  sibling_uuid: sT-U-4fs90PlHvSI\n  child_uuid: 78Mu2RhGBL340hYq\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现 Promise A+\n  uuid: 78Mu2RhGBL340hYq\n  url: fl6cgx\n  prev_uuid: A5NJiZ0GxiVUBJHd\n  sibling_uuid: 9ahjbOcDVnGRzHTW\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 72212388\n  level: 1\n  id: 72212388\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise  常用方法实现\n  uuid: 9ahjbOcDVnGRzHTW\n  url: vd2h4l\n  prev_uuid: 78Mu2RhGBL340hYq\n  sibling_uuid: QLrR0jESJ8AEjFPl\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 72212389\n  level: 1\n  id: 72212389\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 并发控制\n  uuid: QLrR0jESJ8AEjFPl\n  url: gd3193\n  prev_uuid: 9ahjbOcDVnGRzHTW\n  sibling_uuid: UKGjwSlV9BFG8i8n\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 72212405\n  level: 1\n  id: 72212405\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 顺序串行输出\n  uuid: UKGjwSlV9BFG8i8n\n  url: wtr4cf\n  prev_uuid: QLrR0jESJ8AEjFPl\n  sibling_uuid: upU7a9yZR3aRjCSo\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 83089974\n  level: 1\n  id: 83089974\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 缓存\n  uuid: upU7a9yZR3aRjCSo\n  url: sgcusf\n  prev_uuid: UKGjwSlV9BFG8i8n\n  sibling_uuid: ZLRJdeGl0jA3kFgL\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 72212417\n  level: 1\n  id: 72212417\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 异步串行输出\n  uuid: ZLRJdeGl0jA3kFgL\n  url: um4g6z\n  prev_uuid: upU7a9yZR3aRjCSo\n  sibling_uuid: D2SERgWeggDq9efi\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 72212401\n  level: 1\n  id: 72212401\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 带并发的异步调度器 Scheduler\n  uuid: D2SERgWeggDq9efi\n  url: kbkc8e\n  prev_uuid: ZLRJdeGl0jA3kFgL\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 72212425\n  level: 1\n  id: 72212425\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 数据处理\n  uuid: sT-U-4fs90PlHvSI\n  url: ''\n  prev_uuid: A5NJiZ0GxiVUBJHd\n  sibling_uuid: 0STVwRWnDq8ksDkB\n  child_uuid: ywzD1rPOOunEfIdw\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 解析 url 参数对象\n  uuid: ywzD1rPOOunEfIdw\n  url: rxw8qp\n  prev_uuid: sT-U-4fs90PlHvSI\n  sibling_uuid: VCJiqjW4GSrpavsh\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212449\n  level: 1\n  id: 72212449\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现日期格式化函数\n  uuid: VCJiqjW4GSrpavsh\n  url: shzfyg\n  prev_uuid: ywzD1rPOOunEfIdw\n  sibling_uuid: 5AdCGi5sbOD2oqbH\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212432\n  level: 1\n  id: 72212432\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 交换 a、b 的值，不使用临时变量\n  uuid: 5AdCGi5sbOD2oqbH\n  url: xw17tv\n  prev_uuid: VCJiqjW4GSrpavsh\n  sibling_uuid: BQMERO8CCr9JPHQn\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212439\n  level: 1\n  id: 72212439\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 获取两个数之间的任意随机数\n  uuid: BQMERO8CCr9JPHQn\n  url: vhngph\n  prev_uuid: 5AdCGi5sbOD2oqbH\n  sibling_uuid: dWB6aCZMOqRTPIrm\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212419\n  level: 1\n  id: 72212419\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 将数字千分位用逗号隔开\n  uuid: dWB6aCZMOqRTPIrm\n  url: vphpea\n  prev_uuid: BQMERO8CCr9JPHQn\n  sibling_uuid: ZSnQ_Z4XjCp_uMbl\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212441\n  level: 1\n  id: 72212441\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现非负大整数相加\n  uuid: ZSnQ_Z4XjCp_uMbl\n  url: xlvd0g\n  prev_uuid: dWB6aCZMOqRTPIrm\n  sibling_uuid: 5AKa5DXyQbLxzDGt\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212442\n  level: 1\n  id: 72212442\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 判断对象是否存在循环引用\n  uuid: 5AKa5DXyQbLxzDGt\n  url: phqdmd\n  prev_uuid: ZSnQ_Z4XjCp_uMbl\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212452\n  level: 1\n  id: 72212452\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 框架\n  uuid: 0STVwRWnDq8ksDkB\n  url: ''\n  prev_uuid: sT-U-4fs90PlHvSI\n  sibling_uuid: 1mqH8VqzmT3IEIjz\n  child_uuid: G3kHPA-b8ubrHNI6\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 发布订阅模式\n  uuid: G3kHPA-b8ubrHNI6\n  url: ezcdgo\n  prev_uuid: 0STVwRWnDq8ksDkB\n  sibling_uuid: hJ7Pi5oOpo-U_yTy\n  child_uuid: ''\n  parent_uuid: 0STVwRWnDq8ksDkB\n  doc_id: 72212386\n  level: 1\n  id: 72212386\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 观察者模式\n  uuid: hJ7Pi5oOpo-U_yTy\n  url: dwziom\n  prev_uuid: G3kHPA-b8ubrHNI6\n  sibling_uuid: alPkG8HdrSx35fzk\n  child_uuid: ''\n  parent_uuid: 0STVwRWnDq8ksDkB\n  doc_id: 72212465\n  level: 1\n  id: 72212465\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易版 vue2\n  uuid: alPkG8HdrSx35fzk\n  url: indxog\n  prev_uuid: hJ7Pi5oOpo-U_yTy\n  sibling_uuid: Kd-bfMBdhRM3cQXO\n  child_uuid: ''\n  parent_uuid: 0STVwRWnDq8ksDkB\n  doc_id: 72212394\n  level: 1\n  id: 72212394\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易版 vue3\n  uuid: Kd-bfMBdhRM3cQXO\n  url: an017i\n  prev_uuid: alPkG8HdrSx35fzk\n  sibling_uuid: UvkBS5W479slO2Um\n  child_uuid: ''\n  parent_uuid: 0STVwRWnDq8ksDkB\n  doc_id: 72212469\n  level: 1\n  id: 72212469\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易版 vuex\n  uuid: UvkBS5W479slO2Um\n  url: myzomg\n  prev_uuid: Kd-bfMBdhRM3cQXO\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 0STVwRWnDq8ksDkB\n  doc_id: 72212426\n  level: 1\n  id: 72212426\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 应用场景问题\n  uuid: 1mqH8VqzmT3IEIjz\n  url: ''\n  prev_uuid: 0STVwRWnDq8ksDkB\n  sibling_uuid: ahwD4hLemj7wd4n_\n  child_uuid: AALpnq0Se9gaVsKQ\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 可缓存的请求函数\n  uuid: AALpnq0Se9gaVsKQ\n  url: gftlci\n  prev_uuid: 1mqH8VqzmT3IEIjz\n  sibling_uuid: 6jYfdo5kqYOTtify\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 81939471\n  level: 1\n  id: 81939471\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 上传100个文件，同时并发上传数量为5名如何最快完成上传\n  uuid: 6jYfdo5kqYOTtify\n  url: dsbtur\n  prev_uuid: AALpnq0Se9gaVsKQ\n  sibling_uuid: M9i07wHKfkwMbNRG\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 81939230\n  level: 1\n  id: 81939230\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 图片加载数量限制\n  uuid: M9i07wHKfkwMbNRG\n  url: xz2gy5\n  prev_uuid: 6jYfdo5kqYOTtify\n  sibling_uuid: pjmLSWnYJNZT6pBi\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212402\n  level: 1\n  id: 72212402\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: AC数量\n  uuid: pjmLSWnYJNZT6pBi\n  url: kyaq59\n  prev_uuid: M9i07wHKfkwMbNRG\n  sibling_uuid: UA7U6Ie8Lym3w5HB\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 81933729\n  level: 1\n  id: 81933729\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 通过调用 addRemote 实现 add\n  uuid: UA7U6Ie8Lym3w5HB\n  url: edff3s\n  prev_uuid: pjmLSWnYJNZT6pBi\n  sibling_uuid: A1qKsOUEtCFXe_UJ\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 73623506\n  level: 1\n  id: 73623506\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 倒计时\n  uuid: A1qKsOUEtCFXe_UJ\n  url: uwleof\n  prev_uuid: UA7U6Ie8Lym3w5HB\n  sibling_uuid: V5rnG_Fh1uLT3tYz\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212468\n  level: 1\n  id: 72212468\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 版本号比较\n  uuid: V5rnG_Fh1uLT3tYz\n  url: cynvvd\n  prev_uuid: A1qKsOUEtCFXe_UJ\n  sibling_uuid: 7kP1jNx3Jv2qtz4M\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212462\n  level: 1\n  id: 72212462\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现简单路由\n  uuid: 7kP1jNx3Jv2qtz4M\n  url: zzc9k3\n  prev_uuid: V5rnG_Fh1uLT3tYz\n  sibling_uuid: We8EXWT44v6iRohB\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212455\n  level: 1\n  id: 72212455\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 长列表虚拟滚动\n  uuid: We8EXWT44v6iRohB\n  url: wsmws7\n  prev_uuid: 7kP1jNx3Jv2qtz4M\n  sibling_uuid: Svy4yFR_RT_CSfLd\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212399\n  level: 1\n  id: 72212399\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 围圈报数问题\n  uuid: Svy4yFR_RT_CSfLd\n  url: gkoa19\n  prev_uuid: We8EXWT44v6iRohB\n  sibling_uuid: L20YHOh3AcKOC_BK\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212447\n  level: 1\n  id: 72212447\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 查找文章中出现频率最高的词\n  uuid: L20YHOh3AcKOC_BK\n  url: rln2y3\n  prev_uuid: Svy4yFR_RT_CSfLd\n  sibling_uuid: l-w9qpcLnXk3Fop6\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212453\n  level: 1\n  id: 72212453\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 每隔 1s 输出 1、2、3\n  uuid: l-w9qpcLnXk3Fop6\n  url: yg55el\n  prev_uuid: L20YHOh3AcKOC_BK\n  sibling_uuid: bpvqYyN2Dt1OP5ba\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 74885844\n  level: 1\n  id: 74885844\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 循环打印红黄绿\n  uuid: bpvqYyN2Dt1OP5ba\n  url: wyhgfz\n  prev_uuid: l-w9qpcLnXk3Fop6\n  sibling_uuid: sYbQboe4NKOreGYz\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212451\n  level: 1\n  id: 72212451\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 封装一个异步加载图片的方法\n  uuid: sYbQboe4NKOreGYz\n  url: orxq0m\n  prev_uuid: bpvqYyN2Dt1OP5ba\n  sibling_uuid: jSGMOwTmTh-AVElI\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 74886744\n  level: 1\n  id: 74886744\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 mergePromise 函数\n  uuid: jSGMOwTmTh-AVElI\n  url: apqplp\n  prev_uuid: sYbQboe4NKOreGYz\n  sibling_uuid: D5aX74WcvfcBK-xH\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 74885813\n  level: 1\n  id: 74885813\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 文本中识别敏感词、表情包、链接、数字、字母并高亮\n  uuid: D5aX74WcvfcBK-xH\n  url: athu4p\n  prev_uuid: jSGMOwTmTh-AVElI\n  sibling_uuid: Bt1pMK0unwRBHK0k\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212408\n  level: 1\n  id: 72212408\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 图片格式转换为 webp\n  uuid: Bt1pMK0unwRBHK0k\n  url: cwlftq\n  prev_uuid: D5aX74WcvfcBK-xH\n  sibling_uuid: I9iFwpfXRhZn1Ket\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212400\n  level: 1\n  id: 72212400\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 计算对象占用的字节数\n  uuid: I9iFwpfXRhZn1Ket\n  url: gx1y1y\n  prev_uuid: Bt1pMK0unwRBHK0k\n  sibling_uuid: UcV05ziY4TJKPu5m\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212406\n  level: 1\n  id: 72212406\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 给 xhr 添加 hook，实现在各个阶段打印日志\n  uuid: UcV05ziY4TJKPu5m\n  url: dm9n4g\n  prev_uuid: I9iFwpfXRhZn1Ket\n  sibling_uuid: 77boIDk-fFPJ9Icd\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212404\n  level: 1\n  id: 72212404\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 明信片问题\n  uuid: 77boIDk-fFPJ9Icd\n  url: mnsw3z\n  prev_uuid: UcV05ziY4TJKPu5m\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212466\n  level: 1\n  id: 72212466\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 常用算法实现\n  uuid: ahwD4hLemj7wd4n_\n  url: ''\n  prev_uuid: 1mqH8VqzmT3IEIjz\n  sibling_uuid: ''\n  child_uuid: 9pHSK6xJvBHyYfvP\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: SKU算法实现\n  uuid: 9pHSK6xJvBHyYfvP\n  url: rs9nxb\n  prev_uuid: ahwD4hLemj7wd4n_\n  sibling_uuid: '-h-CMZM_g4aYqwln'\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 81636590\n  level: 1\n  id: 81636590\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 无重复最长子串\n  uuid: '-h-CMZM_g4aYqwln'\n  url: zn78xr\n  prev_uuid: 9pHSK6xJvBHyYfvP\n  sibling_uuid: tDrBxICyXBoMgRJD\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 81636434\n  level: 1\n  id: 81636434\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 二分查找\n  uuid: tDrBxICyXBoMgRJD\n  url: pywta0\n  prev_uuid: '-h-CMZM_g4aYqwln'\n  sibling_uuid: eH5hJfGPxku_rn96\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212463\n  level: 1\n  id: 72212463\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 排序\n  uuid: eH5hJfGPxku_rn96\n  url: ivvld9\n  prev_uuid: tDrBxICyXBoMgRJD\n  sibling_uuid: 4cV9_qbBLcYidtg8\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212411\n  level: 1\n  id: 72212411\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 动态规划和贪心算法\n  uuid: 4cV9_qbBLcYidtg8\n  url: pyig7m\n  prev_uuid: eH5hJfGPxku_rn96\n  sibling_uuid: 5VMnf0-t-FXvC3K6\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212414\n  level: 1\n  id: 72212414\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 洗牌算法\n  uuid: 5VMnf0-t-FXvC3K6\n  url: tohw0k\n  prev_uuid: 4cV9_qbBLcYidtg8\n  sibling_uuid: AjOzxJ-vxxRXW6dS\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212418\n  level: 1\n  id: 72212418\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: LRU(最少置换算法)\n  uuid: AjOzxJ-vxxRXW6dS\n  url: tmwgql\n  prev_uuid: 5VMnf0-t-FXvC3K6\n  sibling_uuid: ID7sjKR9-5E_moyo\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212423\n  level: 1\n  id: 72212423\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 斐波那契数列\n  uuid: ID7sjKR9-5E_moyo\n  url: bq7f7e\n  prev_uuid: AjOzxJ-vxxRXW6dS\n  sibling_uuid: wZscOLfm_xjPFYv2\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212420\n  level: 1\n  id: 72212420\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 大数相加\n  uuid: wZscOLfm_xjPFYv2\n  url: ln6fpo\n  prev_uuid: ID7sjKR9-5E_moyo\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212421\n  level: 1\n  id: 72212421\n  open_window: 0\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 74,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:38.713Z",
    "created_at": "2022-04-04T11:34:53.000Z",
    "updated_at": "2023-11-11T18:15:39.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-23T19:11:28.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/sd8kbc",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-23T19:11:28.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 908500000,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-23T19:11:28.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}