{
  "id": 72212399,
  "slug": "wsmws7",
  "title": "长列表虚拟滚动",
  "description": "Vue 版本<template>     <div class=\"virtual-list\">         <section class=\"container\" ref=\"containerRef\" @scroll=\"scrollView\">             <div class=...",
  "cover": "",
  "user_id": 732231,
  "book_id": 26225252,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"WsRgT\"><span class=\"ne-text\">Vue 版本</span></h2><pre data-language=\"vue\" id=\"rr9az\" class=\"ne-codeblock language-vue\">&lt;template&gt;\n    &lt;div class=&quot;virtual-list&quot;&gt;\n        &lt;section class=&quot;container&quot; ref=&quot;containerRef&quot; @scroll=&quot;scrollView&quot;&gt;\n            &lt;div class=&quot;scroll-bar&quot; ref=&quot;scrollBarRef&quot;&gt;&lt;/div&gt;\n            &lt;ul ref=&quot;listRef&quot; class=&quot;list&quot;&gt;\n                &lt;li v-for=&quot;item in showList&quot; :key=&quot;item&quot;&gt;{{ item }}&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/section&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup lang=&quot;ts&quot;&gt;\nimport { ref, computed, onMounted } from &quot;vue&quot;\n\nconst childrenHeight = 30\nconst maxCount = 10\n\nconst containerRef = ref&lt;HTMLElement | null&gt;(null)\nconst scrollBarRef = ref&lt;HTMLElement | null&gt;(null)\nconst listRef = ref&lt;HTMLElement | null&gt;(null)\nconst list = ref&lt;number[]&gt;([])\nconst start = ref&lt;number&gt;(0)\nconst end = ref&lt;number&gt;(10)\n\nconst showList = computed(() =&gt; {\n    return list.value.slice(start.value, end.value)\n})\n\nonMounted(() =&gt; {\n    list.value = Array.from({ length: 100000 }, (_, v) =&gt; v)\n    // 计算滚动容器高度\n    containerRef.value!.style.height = `${childrenHeight * maxCount}px`\n    // 计算总的数据需要的高度，构造滚动条高度\n    scrollBarRef.value!.style.height = `${childrenHeight * list.value.length}px`\n})\n\nconst scrollView = () =&gt; {\n    let scrollTop = containerRef.value!.scrollTop\n    start.value = Math.floor(scrollTop / childrenHeight)\n    end.value = start.value + maxCount\n    listRef.value!.style.top = `${start.value * childrenHeight}px`\n}\n&lt;/script&gt;\n\n&lt;style lang=&quot;css&quot;&gt;\n.virtual-list {\n    text-align: center;\n}\n\nul,\nli {\n    list-style: none;\n}\n\n.container {\n    position: relative;\n    overflow: scroll;\n    border-bottom: 1px solid #ddd;\n}\n\n.list {\n    position: absolute;\n    width: 100%;\n    top: 0;\n    left: 0;\n    text-align: left;\n}\n\n.list li {\n    margin-bottom: 10px;\n    line-height: 1.5;\n    width: 100%;\n    border-bottom: 1px dashed #1890ff;\n    color: #52c41a;\n    font-weight: bold;\n}\n&lt;/style&gt;</pre><h2 id=\"V9wub\"><span class=\"ne-text\">React 版本</span></h2><pre data-language=\"jsx\" id=\"otiuY\" class=\"ne-codeblock language-jsx\">import { useState, useRef, useMemo, useEffect } from &quot;react&quot;\nimport &quot;./App.css&quot;\n\nexport default function App() {\n    const containerRef = useRef&lt;HTMLElement&gt;(null)\n    const scrollBarRef = useRef&lt;HTMLDivElement&gt;(null)\n    const listRef = useRef&lt;HTMLUListElement&gt;(null)\n\n    const childrenHeight = 30\n    const maxCount = 10\n\n    const [list, setList] = useState&lt;number[]&gt;([])\n    const [start, setStart] = useState&lt;number&gt;(0)\n    const [end, setEnd] = useState&lt;number&gt;(10)\n\n    const sliceList = useMemo(() =&gt; {\n        return list.slice(start, end)\n    }, [list, start, end])\n\n    useEffect(() =&gt; {\n        setList(prev =&gt; {\n            prev = Array.from({ length: 100000 }, (k, v) =&gt; v)\n            containerRef.current!.style.height = `${childrenHeight * maxCount}px`\n            scrollBarRef.current!.style.height = `${childrenHeight * prev.length}px`\n            return prev\n        })\n    }, [])\n\n    const scrollView = () =&gt; {\n        let scrollTop = containerRef.current!.scrollTop\n        const startIndex = Math.floor(scrollTop / childrenHeight)\n        console.log(startIndex, &quot;start===&quot;)\n        setStart(startIndex)\n        console.log(startIndex, &quot;end===&quot;)\n        const endIndex = startIndex + maxCount\n        setEnd(endIndex)\n        listRef.current!.style.top = `${start * childrenHeight}px`\n    }\n\n    return (\n        &lt;div className=&quot;App&quot;&gt;\n            &lt;section className=&quot;container&quot; ref={containerRef} onScroll={scrollView}&gt;\n                &lt;div className=&quot;scroll-bar&quot; ref={scrollBarRef}&gt;&lt;/div&gt;\n                &lt;ul className=&quot;list&quot; ref={listRef}&gt;\n                    {sliceList.map(item =&gt; (\n                        &lt;li key={item}&gt;{item}&lt;/li&gt;\n                    ))}\n                &lt;/ul&gt;\n            &lt;/section&gt;\n        &lt;/div&gt;\n    )\n}</pre></div>",
  "body": "<a name=\"WsRgT\"></a>\n## Vue 版本\n```vue\n<template>\n    <div class=\"virtual-list\">\n        <section class=\"container\" ref=\"containerRef\" @scroll=\"scrollView\">\n            <div class=\"scroll-bar\" ref=\"scrollBarRef\"></div>\n            <ul ref=\"listRef\" class=\"list\">\n                <li v-for=\"item in showList\" :key=\"item\">{{ item }}</li>\n            </ul>\n        </section>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from \"vue\"\n\nconst childrenHeight = 30\nconst maxCount = 10\n\nconst containerRef = ref<HTMLElement | null>(null)\nconst scrollBarRef = ref<HTMLElement | null>(null)\nconst listRef = ref<HTMLElement | null>(null)\nconst list = ref<number[]>([])\nconst start = ref<number>(0)\nconst end = ref<number>(10)\n\nconst showList = computed(() => {\n    return list.value.slice(start.value, end.value)\n})\n\nonMounted(() => {\n    list.value = Array.from({ length: 100000 }, (_, v) => v)\n    // 计算滚动容器高度\n    containerRef.value!.style.height = `${childrenHeight * maxCount}px`\n    // 计算总的数据需要的高度，构造滚动条高度\n    scrollBarRef.value!.style.height = `${childrenHeight * list.value.length}px`\n})\n\nconst scrollView = () => {\n    let scrollTop = containerRef.value!.scrollTop\n    start.value = Math.floor(scrollTop / childrenHeight)\n    end.value = start.value + maxCount\n    listRef.value!.style.top = `${start.value * childrenHeight}px`\n}\n</script>\n\n<style lang=\"css\">\n.virtual-list {\n    text-align: center;\n}\n\nul,\nli {\n    list-style: none;\n}\n\n.container {\n    position: relative;\n    overflow: scroll;\n    border-bottom: 1px solid #ddd;\n}\n\n.list {\n    position: absolute;\n    width: 100%;\n    top: 0;\n    left: 0;\n    text-align: left;\n}\n\n.list li {\n    margin-bottom: 10px;\n    line-height: 1.5;\n    width: 100%;\n    border-bottom: 1px dashed #1890ff;\n    color: #52c41a;\n    font-weight: bold;\n}\n</style>\n```\n<a name=\"V9wub\"></a>\n## React 版本\n```jsx\nimport { useState, useRef, useMemo, useEffect } from \"react\"\nimport \"./App.css\"\n\nexport default function App() {\n    const containerRef = useRef<HTMLElement>(null)\n    const scrollBarRef = useRef<HTMLDivElement>(null)\n    const listRef = useRef<HTMLUListElement>(null)\n\n    const childrenHeight = 30\n    const maxCount = 10\n\n    const [list, setList] = useState<number[]>([])\n    const [start, setStart] = useState<number>(0)\n    const [end, setEnd] = useState<number>(10)\n\n    const sliceList = useMemo(() => {\n        return list.slice(start, end)\n    }, [list, start, end])\n\n    useEffect(() => {\n        setList(prev => {\n            prev = Array.from({ length: 100000 }, (k, v) => v)\n            containerRef.current!.style.height = `${childrenHeight * maxCount}px`\n            scrollBarRef.current!.style.height = `${childrenHeight * prev.length}px`\n            return prev\n        })\n    }, [])\n\n    const scrollView = () => {\n        let scrollTop = containerRef.current!.scrollTop\n        const startIndex = Math.floor(scrollTop / childrenHeight)\n        console.log(startIndex, \"start===\")\n        setStart(startIndex)\n        console.log(startIndex, \"end===\")\n        const endIndex = startIndex + maxCount\n        setEnd(endIndex)\n        listRef.current!.style.top = `${start * childrenHeight}px`\n    }\n\n    return (\n        <div className=\"App\">\n            <section className=\"container\" ref={containerRef} onScroll={scrollView}>\n                <div className=\"scroll-bar\" ref={scrollBarRef}></div>\n                <ul className=\"list\" ref={listRef}>\n                    {sliceList.map(item => (\n                        <li key={item}>{item}</li>\n                    ))}\n                </ul>\n            </section>\n        </div>\n    )\n}\n```\n",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"WsRgT\"><span class=\"ne-text\">Vue 版本</span></h2><pre data-language=\"vue\" id=\"rr9az\" class=\"ne-codeblock language-vue\">&lt;template&gt;\n    &lt;div class=&quot;virtual-list&quot;&gt;\n        &lt;section class=&quot;container&quot; ref=&quot;containerRef&quot; @scroll=&quot;scrollView&quot;&gt;\n            &lt;div class=&quot;scroll-bar&quot; ref=&quot;scrollBarRef&quot;&gt;&lt;/div&gt;\n            &lt;ul ref=&quot;listRef&quot; class=&quot;list&quot;&gt;\n                &lt;li v-for=&quot;item in showList&quot; :key=&quot;item&quot;&gt;{{ item }}&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/section&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup lang=&quot;ts&quot;&gt;\nimport { ref, computed, onMounted } from &quot;vue&quot;\n\nconst childrenHeight = 30\nconst maxCount = 10\n\nconst containerRef = ref&lt;HTMLElement | null&gt;(null)\nconst scrollBarRef = ref&lt;HTMLElement | null&gt;(null)\nconst listRef = ref&lt;HTMLElement | null&gt;(null)\nconst list = ref&lt;number[]&gt;([])\nconst start = ref&lt;number&gt;(0)\nconst end = ref&lt;number&gt;(10)\n\nconst showList = computed(() =&gt; {\n    return list.value.slice(start.value, end.value)\n})\n\nonMounted(() =&gt; {\n    list.value = Array.from({ length: 100000 }, (_, v) =&gt; v)\n    // 计算滚动容器高度\n    containerRef.value!.style.height = `${childrenHeight * maxCount}px`\n    // 计算总的数据需要的高度，构造滚动条高度\n    scrollBarRef.value!.style.height = `${childrenHeight * list.value.length}px`\n})\n\nconst scrollView = () =&gt; {\n    let scrollTop = containerRef.value!.scrollTop\n    start.value = Math.floor(scrollTop / childrenHeight)\n    end.value = start.value + maxCount\n    listRef.value!.style.top = `${start.value * childrenHeight}px`\n}\n&lt;/script&gt;\n\n&lt;style lang=&quot;css&quot;&gt;\n.virtual-list {\n    text-align: center;\n}\n\nul,\nli {\n    list-style: none;\n}\n\n.container {\n    position: relative;\n    overflow: scroll;\n    border-bottom: 1px solid #ddd;\n}\n\n.list {\n    position: absolute;\n    width: 100%;\n    top: 0;\n    left: 0;\n    text-align: left;\n}\n\n.list li {\n    margin-bottom: 10px;\n    line-height: 1.5;\n    width: 100%;\n    border-bottom: 1px dashed #1890ff;\n    color: #52c41a;\n    font-weight: bold;\n}\n&lt;/style&gt;</pre><h2 id=\"V9wub\"><span class=\"ne-text\">React 版本</span></h2><pre data-language=\"jsx\" id=\"otiuY\" class=\"ne-codeblock language-jsx\">import { useState, useRef, useMemo, useEffect } from &quot;react&quot;\nimport &quot;./App.css&quot;\n\nexport default function App() {\n    const containerRef = useRef&lt;HTMLElement&gt;(null)\n    const scrollBarRef = useRef&lt;HTMLDivElement&gt;(null)\n    const listRef = useRef&lt;HTMLUListElement&gt;(null)\n\n    const childrenHeight = 30\n    const maxCount = 10\n\n    const [list, setList] = useState&lt;number[]&gt;([])\n    const [start, setStart] = useState&lt;number&gt;(0)\n    const [end, setEnd] = useState&lt;number&gt;(10)\n\n    const sliceList = useMemo(() =&gt; {\n        return list.slice(start, end)\n    }, [list, start, end])\n\n    useEffect(() =&gt; {\n        setList(prev =&gt; {\n            prev = Array.from({ length: 100000 }, (k, v) =&gt; v)\n            containerRef.current!.style.height = `${childrenHeight * maxCount}px`\n            scrollBarRef.current!.style.height = `${childrenHeight * prev.length}px`\n            return prev\n        })\n    }, [])\n\n    const scrollView = () =&gt; {\n        let scrollTop = containerRef.current!.scrollTop\n        const startIndex = Math.floor(scrollTop / childrenHeight)\n        console.log(startIndex, &quot;start===&quot;)\n        setStart(startIndex)\n        console.log(startIndex, &quot;end===&quot;)\n        const endIndex = startIndex + maxCount\n        setEnd(endIndex)\n        listRef.current!.style.top = `${start * childrenHeight}px`\n    }\n\n    return (\n        &lt;div className=&quot;App&quot;&gt;\n            &lt;section className=&quot;container&quot; ref={containerRef} onScroll={scrollView}&gt;\n                &lt;div className=&quot;scroll-bar&quot; ref={scrollBarRef}&gt;&lt;/div&gt;\n                &lt;ul className=&quot;list&quot; ref={listRef}&gt;\n                    {sliceList.map(item =&gt; (\n                        &lt;li key={item}&gt;{item}&lt;/li&gt;\n                    ))}\n                &lt;/ul&gt;\n            &lt;/section&gt;\n        &lt;/div&gt;\n    )\n}</pre></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"WsRgT\" id=\"WsRgT\"><span data-lake-id=\"u42fb61ea\" id=\"u42fb61ea\">Vue 版本</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22vue%22%2C%22code%22%3A%22%3Ctemplate%3E%5Cn%20%20%20%20%3Cdiv%20class%3D%5C%22virtual-list%5C%22%3E%5Cn%20%20%20%20%20%20%20%20%3Csection%20class%3D%5C%22container%5C%22%20ref%3D%5C%22containerRef%5C%22%20%40scroll%3D%5C%22scrollView%5C%22%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20class%3D%5C%22scroll-bar%5C%22%20ref%3D%5C%22scrollBarRef%5C%22%3E%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3Cul%20ref%3D%5C%22listRef%5C%22%20class%3D%5C%22list%5C%22%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cli%20v-for%3D%5C%22item%20in%20showList%5C%22%20%3Akey%3D%5C%22item%5C%22%3E%7B%7B%20item%20%7D%7D%3C%2Fli%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Ful%3E%5Cn%20%20%20%20%20%20%20%20%3C%2Fsection%3E%5Cn%20%20%20%20%3C%2Fdiv%3E%5Cn%3C%2Ftemplate%3E%5Cn%5Cn%3Cscript%20setup%20lang%3D%5C%22ts%5C%22%3E%5Cnimport%20%7B%20ref%2C%20computed%2C%20onMounted%20%7D%20from%20%5C%22vue%5C%22%5Cn%5Cnconst%20childrenHeight%20%3D%2030%5Cnconst%20maxCount%20%3D%2010%5Cn%5Cnconst%20containerRef%20%3D%20ref%3CHTMLElement%20%7C%20null%3E(null)%5Cnconst%20scrollBarRef%20%3D%20ref%3CHTMLElement%20%7C%20null%3E(null)%5Cnconst%20listRef%20%3D%20ref%3CHTMLElement%20%7C%20null%3E(null)%5Cnconst%20list%20%3D%20ref%3Cnumber%5B%5D%3E(%5B%5D)%5Cnconst%20start%20%3D%20ref%3Cnumber%3E(0)%5Cnconst%20end%20%3D%20ref%3Cnumber%3E(10)%5Cn%5Cnconst%20showList%20%3D%20computed(()%20%3D%3E%20%7B%5Cn%20%20%20%20return%20list.value.slice(start.value%2C%20end.value)%5Cn%7D)%5Cn%5CnonMounted(()%20%3D%3E%20%7B%5Cn%20%20%20%20list.value%20%3D%20Array.from(%7B%20length%3A%20100000%20%7D%2C%20(_%2C%20v)%20%3D%3E%20v)%5Cn%20%20%20%20%2F%2F%20%E8%AE%A1%E7%AE%97%E6%BB%9A%E5%8A%A8%E5%AE%B9%E5%99%A8%E9%AB%98%E5%BA%A6%5Cn%20%20%20%20containerRef.value!.style.height%20%3D%20%60%24%7BchildrenHeight%20*%20maxCount%7Dpx%60%5Cn%20%20%20%20%2F%2F%20%E8%AE%A1%E7%AE%97%E6%80%BB%E7%9A%84%E6%95%B0%E6%8D%AE%E9%9C%80%E8%A6%81%E7%9A%84%E9%AB%98%E5%BA%A6%EF%BC%8C%E6%9E%84%E9%80%A0%E6%BB%9A%E5%8A%A8%E6%9D%A1%E9%AB%98%E5%BA%A6%5Cn%20%20%20%20scrollBarRef.value!.style.height%20%3D%20%60%24%7BchildrenHeight%20*%20list.value.length%7Dpx%60%5Cn%7D)%5Cn%5Cnconst%20scrollView%20%3D%20()%20%3D%3E%20%7B%5Cn%20%20%20%20let%20scrollTop%20%3D%20containerRef.value!.scrollTop%5Cn%20%20%20%20start.value%20%3D%20Math.floor(scrollTop%20%2F%20childrenHeight)%5Cn%20%20%20%20end.value%20%3D%20start.value%20%2B%20maxCount%5Cn%20%20%20%20listRef.value!.style.top%20%3D%20%60%24%7Bstart.value%20*%20childrenHeight%7Dpx%60%5Cn%7D%5Cn%3C%2Fscript%3E%5Cn%5Cn%3Cstyle%20lang%3D%5C%22css%5C%22%3E%5Cn.virtual-list%20%7B%5Cn%20%20%20%20text-align%3A%20center%3B%5Cn%7D%5Cn%5Cnul%2C%5Cnli%20%7B%5Cn%20%20%20%20list-style%3A%20none%3B%5Cn%7D%5Cn%5Cn.container%20%7B%5Cn%20%20%20%20position%3A%20relative%3B%5Cn%20%20%20%20overflow%3A%20scroll%3B%5Cn%20%20%20%20border-bottom%3A%201px%20solid%20%23ddd%3B%5Cn%7D%5Cn%5Cn.list%20%7B%5Cn%20%20%20%20position%3A%20absolute%3B%5Cn%20%20%20%20width%3A%20100%25%3B%5Cn%20%20%20%20top%3A%200%3B%5Cn%20%20%20%20left%3A%200%3B%5Cn%20%20%20%20text-align%3A%20left%3B%5Cn%7D%5Cn%5Cn.list%20li%20%7B%5Cn%20%20%20%20margin-bottom%3A%2010px%3B%5Cn%20%20%20%20line-height%3A%201.5%3B%5Cn%20%20%20%20width%3A%20100%25%3B%5Cn%20%20%20%20border-bottom%3A%201px%20dashed%20%231890ff%3B%5Cn%20%20%20%20color%3A%20%2352c41a%3B%5Cn%20%20%20%20font-weight%3A%20bold%3B%5Cn%7D%5Cn%3C%2Fstyle%3E%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22rr9az%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"V9wub\" id=\"V9wub\"><span data-lake-id=\"ucda5d550\" id=\"ucda5d550\">React 版本</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22jsx%22%2C%22code%22%3A%22import%20%7B%20useState%2C%20useRef%2C%20useMemo%2C%20useEffect%20%7D%20from%20%5C%22react%5C%22%5Cnimport%20%5C%22.%2FApp.css%5C%22%5Cn%5Cnexport%20default%20function%20App()%20%7B%5Cn%20%20%20%20const%20containerRef%20%3D%20useRef%3CHTMLElement%3E(null)%5Cn%20%20%20%20const%20scrollBarRef%20%3D%20useRef%3CHTMLDivElement%3E(null)%5Cn%20%20%20%20const%20listRef%20%3D%20useRef%3CHTMLUListElement%3E(null)%5Cn%5Cn%20%20%20%20const%20childrenHeight%20%3D%2030%5Cn%20%20%20%20const%20maxCount%20%3D%2010%5Cn%5Cn%20%20%20%20const%20%5Blist%2C%20setList%5D%20%3D%20useState%3Cnumber%5B%5D%3E(%5B%5D)%5Cn%20%20%20%20const%20%5Bstart%2C%20setStart%5D%20%3D%20useState%3Cnumber%3E(0)%5Cn%20%20%20%20const%20%5Bend%2C%20setEnd%5D%20%3D%20useState%3Cnumber%3E(10)%5Cn%5Cn%20%20%20%20const%20sliceList%20%3D%20useMemo(()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20return%20list.slice(start%2C%20end)%5Cn%20%20%20%20%7D%2C%20%5Blist%2C%20start%2C%20end%5D)%5Cn%5Cn%20%20%20%20useEffect(()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20setList(prev%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20prev%20%3D%20Array.from(%7B%20length%3A%20100000%20%7D%2C%20(k%2C%20v)%20%3D%3E%20v)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20containerRef.current!.style.height%20%3D%20%60%24%7BchildrenHeight%20*%20maxCount%7Dpx%60%5Cn%20%20%20%20%20%20%20%20%20%20%20%20scrollBarRef.current!.style.height%20%3D%20%60%24%7BchildrenHeight%20*%20prev.length%7Dpx%60%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20prev%5Cn%20%20%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%7D%2C%20%5B%5D)%5Cn%5Cn%20%20%20%20const%20scrollView%20%3D%20()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20let%20scrollTop%20%3D%20containerRef.current!.scrollTop%5Cn%20%20%20%20%20%20%20%20const%20startIndex%20%3D%20Math.floor(scrollTop%20%2F%20childrenHeight)%5Cn%20%20%20%20%20%20%20%20console.log(startIndex%2C%20%5C%22start%3D%3D%3D%5C%22)%5Cn%20%20%20%20%20%20%20%20setStart(startIndex)%5Cn%20%20%20%20%20%20%20%20console.log(startIndex%2C%20%5C%22end%3D%3D%3D%5C%22)%5Cn%20%20%20%20%20%20%20%20const%20endIndex%20%3D%20startIndex%20%2B%20maxCount%5Cn%20%20%20%20%20%20%20%20setEnd(endIndex)%5Cn%20%20%20%20%20%20%20%20listRef.current!.style.top%20%3D%20%60%24%7Bstart%20*%20childrenHeight%7Dpx%60%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20return%20(%5Cn%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%5C%22App%5C%22%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3Csection%20className%3D%5C%22container%5C%22%20ref%3D%7BcontainerRef%7D%20onScroll%3D%7BscrollView%7D%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20className%3D%5C%22scroll-bar%5C%22%20ref%3D%7BscrollBarRef%7D%3E%3C%2Fdiv%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cul%20className%3D%5C%22list%5C%22%20ref%3D%7BlistRef%7D%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7BsliceList.map(item%20%3D%3E%20(%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cli%20key%3D%7Bitem%7D%3E%7Bitem%7D%3C%2Fli%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20))%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Ful%3E%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%3C%2Fsection%3E%5Cn%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20)%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22otiuY%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 379,
  "created_at": "2022-04-04T11:35:10.000Z",
  "updated_at": "2022-10-25T08:24:07.000Z",
  "content_updated_at": "2022-10-25T08:24:07.000Z",
  "published_at": "2022-10-25T08:24:07.000Z",
  "first_published_at": "2022-04-04T11:35:09.652Z",
  "book": {
    "id": 26225252,
    "type": "Book",
    "slug": "sd8kbc",
    "name": "笔试 written test",
    "user_id": 732231,
    "description": "笔试相关题目\n1. 原生 API 实现\n2. 业务场景相关问题\n3. LeetCode 算法相关问题",
    "toc_yml": "- type: META\n  count: 84\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 370014828\n  published: true\n  max_level: 1\n  last_updated_at: 2023-11-11T18:03:16.908Z\n  version_id: 370014838\n- type: TITLE\n  title: 原生 API\n  uuid: _1yNZniU22OymJlp\n  url: ''\n  prev_uuid: ''\n  sibling_uuid: zxe2MJsSU5MOefDb\n  child_uuid: EMyfauRyhp-lOYYB\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: extends 关键字\n  uuid: EMyfauRyhp-lOYYB\n  url: vtqbgk\n  prev_uuid: _1yNZniU22OymJlp\n  sibling_uuid: XEsl8fffffuSCTSI\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 76186529\n  level: 1\n  id: 76186529\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ajax\n  uuid: XEsl8fffffuSCTSI\n  url: cq5ws4\n  prev_uuid: EMyfauRyhp-lOYYB\n  sibling_uuid: EaDc9LInXSSLEeXZ\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212428\n  level: 1\n  id: 72212428\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: call & apply & bind\n  uuid: EaDc9LInXSSLEeXZ\n  url: ybrsyw\n  prev_uuid: XEsl8fffffuSCTSI\n  sibling_uuid: wqGQXgEjeQAf0Bxq\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212433\n  level: 1\n  id: 72212433\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: new 关键字\n  uuid: wqGQXgEjeQAf0Bxq\n  url: pldu2b\n  prev_uuid: EaDc9LInXSSLEeXZ\n  sibling_uuid: EbpTwwxFd9JXJyoY\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212430\n  level: 1\n  id: 72212430\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 函数柯理化\n  uuid: EbpTwwxFd9JXJyoY\n  url: yo9cx5\n  prev_uuid: wqGQXgEjeQAf0Bxq\n  sibling_uuid: g-W6FKTBoxb36HhI\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212393\n  level: 1\n  id: 72212393\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 浅拷贝和深拷贝\n  uuid: g-W6FKTBoxb36HhI\n  url: ufks1z\n  prev_uuid: EbpTwwxFd9JXJyoY\n  sibling_uuid: 7u5E_Hw98pbzQ4Yj\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212395\n  level: 1\n  id: 72212395\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 instanceof\n  uuid: 7u5E_Hw98pbzQ4Yj\n  url: ba4wuo\n  prev_uuid: g-W6FKTBoxb36HhI\n  sibling_uuid: lFcmsu4tBdKMPIkR\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212424\n  level: 1\n  id: 72212424\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 手动实现定时器\n  uuid: lFcmsu4tBdKMPIkR\n  url: wf9bwg\n  prev_uuid: 7u5E_Hw98pbzQ4Yj\n  sibling_uuid: mjNFEVKWs-_1yZyS\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212397\n  level: 1\n  id: 72212397\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: sleep 函数实现\n  uuid: mjNFEVKWs-_1yZyS\n  url: ngwrak\n  prev_uuid: lFcmsu4tBdKMPIkR\n  sibling_uuid: Zo-bldWs1dUYUcA5\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212460\n  level: 1\n  id: 72212460\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 JSON.stringify\n  uuid: Zo-bldWs1dUYUcA5\n  url: mtoe2n\n  prev_uuid: mjNFEVKWs-_1yZyS\n  sibling_uuid: LR_aI8-ZIoVBksK7\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212459\n  level: 1\n  id: 72212459\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: js 通用类型获取\n  uuid: LR_aI8-ZIoVBksK7\n  url: tll6lm\n  prev_uuid: Zo-bldWs1dUYUcA5\n  sibling_uuid: fjrB0qhIJpH89FjS\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 72212464\n  level: 1\n  id: 72212464\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 iterator\n  uuid: fjrB0qhIJpH89FjS\n  url: ir252g\n  prev_uuid: LR_aI8-ZIoVBksK7\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: _1yNZniU22OymJlp\n  doc_id: 81930561\n  level: 1\n  id: 81930561\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: TypeScript\n  uuid: zxe2MJsSU5MOefDb\n  url: ''\n  prev_uuid: _1yNZniU22OymJlp\n  sibling_uuid: KRfqr5yKeh6GNv5y\n  child_uuid: CdOrh3hFdbuZevZ-\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: '#10 元组转联合类型'\n  uuid: CdOrh3hFdbuZevZ-\n  url: wwribz\n  prev_uuid: zxe2MJsSU5MOefDb\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: zxe2MJsSU5MOefDb\n  doc_id: 81961244\n  level: 1\n  id: 81961244\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 防抖和节流\n  uuid: KRfqr5yKeh6GNv5y\n  url: ''\n  prev_uuid: zxe2MJsSU5MOefDb\n  sibling_uuid: 84qjgn-j0_zJVLF7\n  child_uuid: eLdwpvS_6r5inI_p\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 防抖\n  uuid: eLdwpvS_6r5inI_p\n  url: enlngv\n  prev_uuid: KRfqr5yKeh6GNv5y\n  sibling_uuid: z32U-o38tB2Yzwns\n  child_uuid: ''\n  parent_uuid: KRfqr5yKeh6GNv5y\n  doc_id: 72212387\n  level: 1\n  id: 72212387\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 节流\n  uuid: z32U-o38tB2Yzwns\n  url: griz0t\n  prev_uuid: eLdwpvS_6r5inI_p\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: KRfqr5yKeh6GNv5y\n  doc_id: 72212392\n  level: 1\n  id: 72212392\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 数组相关\n  uuid: 84qjgn-j0_zJVLF7\n  url: ''\n  prev_uuid: KRfqr5yKeh6GNv5y\n  sibling_uuid: 0efRPOUXCUn3VmH-\n  child_uuid: E8-yClCfd2GHBfld\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 数组交集、差集、并集\n  uuid: E8-yClCfd2GHBfld\n  url: yl18rs\n  prev_uuid: 84qjgn-j0_zJVLF7\n  sibling_uuid: Ot36XWP1DAdhhxL8\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 77996894\n  level: 1\n  id: 77996894\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组转树\n  uuid: Ot36XWP1DAdhhxL8\n  url: bzgequ\n  prev_uuid: E8-yClCfd2GHBfld\n  sibling_uuid: LUZSQT4XixZ6lRVn\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 77015210\n  level: 1\n  id: 77015210\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 树转数组\n  uuid: LUZSQT4XixZ6lRVn\n  url: xycpzl\n  prev_uuid: Ot36XWP1DAdhhxL8\n  sibling_uuid: KSjaO3MJIdM_aUoi\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 77015236\n  level: 1\n  id: 77015236\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组常用方法\n  uuid: KSjaO3MJIdM_aUoi\n  url: owtewn\n  prev_uuid: LUZSQT4XixZ6lRVn\n  sibling_uuid: 1PhmaFWLSwH7eqUK\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212436\n  level: 1\n  id: 72212436\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组去重实现\n  uuid: 1PhmaFWLSwH7eqUK\n  url: gq2z9n\n  prev_uuid: KSjaO3MJIdM_aUoi\n  sibling_uuid: bnM3r0-enDa6563Q\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212390\n  level: 1\n  id: 72212390\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组扁平化实现\n  uuid: bnM3r0-enDa6563Q\n  url: doeryg\n  prev_uuid: 1PhmaFWLSwH7eqUK\n  sibling_uuid: 4NBfYxOcirIHYRrY\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212385\n  level: 1\n  id: 72212385\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 类数组转换为数组\n  uuid: 4NBfYxOcirIHYRrY\n  url: csgagn\n  prev_uuid: bnM3r0-enDa6563Q\n  sibling_uuid: SRwtHRX7f61VIFq6\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212445\n  level: 1\n  id: 72212445\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现数组乱序输出\n  uuid: SRwtHRX7f61VIFq6\n  url: xlrgnu\n  prev_uuid: 4NBfYxOcirIHYRrY\n  sibling_uuid: eARzwOBdjHS0A35l\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212437\n  level: 1\n  id: 72212437\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 查找二维数组的目标值\n  uuid: eARzwOBdjHS0A35l\n  url: tmw2ny\n  prev_uuid: SRwtHRX7f61VIFq6\n  sibling_uuid: C2gvlSUA6P7bZEpi\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212461\n  level: 1\n  id: 72212461\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 二维数组斜向打印\n  uuid: C2gvlSUA6P7bZEpi\n  url: aqw6my\n  prev_uuid: eARzwOBdjHS0A35l\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 84qjgn-j0_zJVLF7\n  doc_id: 72212457\n  level: 1\n  id: 72212457\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 字符串相关\n  uuid: 0efRPOUXCUn3VmH-\n  url: ''\n  prev_uuid: 84qjgn-j0_zJVLF7\n  sibling_uuid: A5NJiZ0GxiVUBJHd\n  child_uuid: oZ_CUVcv3_hOp7zN\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现字符串的 repeat 方法\n  uuid: oZ_CUVcv3_hOp7zN\n  url: hxelqc\n  prev_uuid: 0efRPOUXCUn3VmH-\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 0efRPOUXCUn3VmH-\n  doc_id: 72212440\n  level: 1\n  id: 72212440\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: promise相关\n  uuid: A5NJiZ0GxiVUBJHd\n  url: ''\n  prev_uuid: 0efRPOUXCUn3VmH-\n  sibling_uuid: sT-U-4fs90PlHvSI\n  child_uuid: 78Mu2RhGBL340hYq\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现 Promise A+\n  uuid: 78Mu2RhGBL340hYq\n  url: fl6cgx\n  prev_uuid: A5NJiZ0GxiVUBJHd\n  sibling_uuid: 9ahjbOcDVnGRzHTW\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 72212388\n  level: 1\n  id: 72212388\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise  常用方法实现\n  uuid: 9ahjbOcDVnGRzHTW\n  url: vd2h4l\n  prev_uuid: 78Mu2RhGBL340hYq\n  sibling_uuid: QLrR0jESJ8AEjFPl\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 72212389\n  level: 1\n  id: 72212389\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 并发控制\n  uuid: QLrR0jESJ8AEjFPl\n  url: gd3193\n  prev_uuid: 9ahjbOcDVnGRzHTW\n  sibling_uuid: UKGjwSlV9BFG8i8n\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 72212405\n  level: 1\n  id: 72212405\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 顺序串行输出\n  uuid: UKGjwSlV9BFG8i8n\n  url: wtr4cf\n  prev_uuid: QLrR0jESJ8AEjFPl\n  sibling_uuid: upU7a9yZR3aRjCSo\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 83089974\n  level: 1\n  id: 83089974\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 缓存\n  uuid: upU7a9yZR3aRjCSo\n  url: sgcusf\n  prev_uuid: UKGjwSlV9BFG8i8n\n  sibling_uuid: ZLRJdeGl0jA3kFgL\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 72212417\n  level: 1\n  id: 72212417\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 异步串行输出\n  uuid: ZLRJdeGl0jA3kFgL\n  url: um4g6z\n  prev_uuid: upU7a9yZR3aRjCSo\n  sibling_uuid: D2SERgWeggDq9efi\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 72212401\n  level: 1\n  id: 72212401\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 带并发的异步调度器 Scheduler\n  uuid: D2SERgWeggDq9efi\n  url: kbkc8e\n  prev_uuid: ZLRJdeGl0jA3kFgL\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: A5NJiZ0GxiVUBJHd\n  doc_id: 72212425\n  level: 1\n  id: 72212425\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 数据处理\n  uuid: sT-U-4fs90PlHvSI\n  url: ''\n  prev_uuid: A5NJiZ0GxiVUBJHd\n  sibling_uuid: 0STVwRWnDq8ksDkB\n  child_uuid: ywzD1rPOOunEfIdw\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 解析 url 参数对象\n  uuid: ywzD1rPOOunEfIdw\n  url: rxw8qp\n  prev_uuid: sT-U-4fs90PlHvSI\n  sibling_uuid: VCJiqjW4GSrpavsh\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212449\n  level: 1\n  id: 72212449\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现日期格式化函数\n  uuid: VCJiqjW4GSrpavsh\n  url: shzfyg\n  prev_uuid: ywzD1rPOOunEfIdw\n  sibling_uuid: 5AdCGi5sbOD2oqbH\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212432\n  level: 1\n  id: 72212432\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 交换 a、b 的值，不使用临时变量\n  uuid: 5AdCGi5sbOD2oqbH\n  url: xw17tv\n  prev_uuid: VCJiqjW4GSrpavsh\n  sibling_uuid: BQMERO8CCr9JPHQn\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212439\n  level: 1\n  id: 72212439\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 获取两个数之间的任意随机数\n  uuid: BQMERO8CCr9JPHQn\n  url: vhngph\n  prev_uuid: 5AdCGi5sbOD2oqbH\n  sibling_uuid: dWB6aCZMOqRTPIrm\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212419\n  level: 1\n  id: 72212419\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 将数字千分位用逗号隔开\n  uuid: dWB6aCZMOqRTPIrm\n  url: vphpea\n  prev_uuid: BQMERO8CCr9JPHQn\n  sibling_uuid: ZSnQ_Z4XjCp_uMbl\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212441\n  level: 1\n  id: 72212441\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现非负大整数相加\n  uuid: ZSnQ_Z4XjCp_uMbl\n  url: xlvd0g\n  prev_uuid: dWB6aCZMOqRTPIrm\n  sibling_uuid: 5AKa5DXyQbLxzDGt\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212442\n  level: 1\n  id: 72212442\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 判断对象是否存在循环引用\n  uuid: 5AKa5DXyQbLxzDGt\n  url: phqdmd\n  prev_uuid: ZSnQ_Z4XjCp_uMbl\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: sT-U-4fs90PlHvSI\n  doc_id: 72212452\n  level: 1\n  id: 72212452\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 框架\n  uuid: 0STVwRWnDq8ksDkB\n  url: ''\n  prev_uuid: sT-U-4fs90PlHvSI\n  sibling_uuid: 1mqH8VqzmT3IEIjz\n  child_uuid: G3kHPA-b8ubrHNI6\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 发布订阅模式\n  uuid: G3kHPA-b8ubrHNI6\n  url: ezcdgo\n  prev_uuid: 0STVwRWnDq8ksDkB\n  sibling_uuid: hJ7Pi5oOpo-U_yTy\n  child_uuid: ''\n  parent_uuid: 0STVwRWnDq8ksDkB\n  doc_id: 72212386\n  level: 1\n  id: 72212386\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 观察者模式\n  uuid: hJ7Pi5oOpo-U_yTy\n  url: dwziom\n  prev_uuid: G3kHPA-b8ubrHNI6\n  sibling_uuid: alPkG8HdrSx35fzk\n  child_uuid: ''\n  parent_uuid: 0STVwRWnDq8ksDkB\n  doc_id: 72212465\n  level: 1\n  id: 72212465\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易版 vue2\n  uuid: alPkG8HdrSx35fzk\n  url: indxog\n  prev_uuid: hJ7Pi5oOpo-U_yTy\n  sibling_uuid: Kd-bfMBdhRM3cQXO\n  child_uuid: ''\n  parent_uuid: 0STVwRWnDq8ksDkB\n  doc_id: 72212394\n  level: 1\n  id: 72212394\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易版 vue3\n  uuid: Kd-bfMBdhRM3cQXO\n  url: an017i\n  prev_uuid: alPkG8HdrSx35fzk\n  sibling_uuid: UvkBS5W479slO2Um\n  child_uuid: ''\n  parent_uuid: 0STVwRWnDq8ksDkB\n  doc_id: 72212469\n  level: 1\n  id: 72212469\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易版 vuex\n  uuid: UvkBS5W479slO2Um\n  url: myzomg\n  prev_uuid: Kd-bfMBdhRM3cQXO\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 0STVwRWnDq8ksDkB\n  doc_id: 72212426\n  level: 1\n  id: 72212426\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 应用场景问题\n  uuid: 1mqH8VqzmT3IEIjz\n  url: ''\n  prev_uuid: 0STVwRWnDq8ksDkB\n  sibling_uuid: ahwD4hLemj7wd4n_\n  child_uuid: AALpnq0Se9gaVsKQ\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 可缓存的请求函数\n  uuid: AALpnq0Se9gaVsKQ\n  url: gftlci\n  prev_uuid: 1mqH8VqzmT3IEIjz\n  sibling_uuid: 6jYfdo5kqYOTtify\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 81939471\n  level: 1\n  id: 81939471\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 上传100个文件，同时并发上传数量为5名如何最快完成上传\n  uuid: 6jYfdo5kqYOTtify\n  url: dsbtur\n  prev_uuid: AALpnq0Se9gaVsKQ\n  sibling_uuid: M9i07wHKfkwMbNRG\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 81939230\n  level: 1\n  id: 81939230\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 图片加载数量限制\n  uuid: M9i07wHKfkwMbNRG\n  url: xz2gy5\n  prev_uuid: 6jYfdo5kqYOTtify\n  sibling_uuid: pjmLSWnYJNZT6pBi\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212402\n  level: 1\n  id: 72212402\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: AC数量\n  uuid: pjmLSWnYJNZT6pBi\n  url: kyaq59\n  prev_uuid: M9i07wHKfkwMbNRG\n  sibling_uuid: UA7U6Ie8Lym3w5HB\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 81933729\n  level: 1\n  id: 81933729\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 通过调用 addRemote 实现 add\n  uuid: UA7U6Ie8Lym3w5HB\n  url: edff3s\n  prev_uuid: pjmLSWnYJNZT6pBi\n  sibling_uuid: A1qKsOUEtCFXe_UJ\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 73623506\n  level: 1\n  id: 73623506\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 倒计时\n  uuid: A1qKsOUEtCFXe_UJ\n  url: uwleof\n  prev_uuid: UA7U6Ie8Lym3w5HB\n  sibling_uuid: V5rnG_Fh1uLT3tYz\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212468\n  level: 1\n  id: 72212468\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 版本号比较\n  uuid: V5rnG_Fh1uLT3tYz\n  url: cynvvd\n  prev_uuid: A1qKsOUEtCFXe_UJ\n  sibling_uuid: 7kP1jNx3Jv2qtz4M\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212462\n  level: 1\n  id: 72212462\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现简单路由\n  uuid: 7kP1jNx3Jv2qtz4M\n  url: zzc9k3\n  prev_uuid: V5rnG_Fh1uLT3tYz\n  sibling_uuid: We8EXWT44v6iRohB\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212455\n  level: 1\n  id: 72212455\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 长列表虚拟滚动\n  uuid: We8EXWT44v6iRohB\n  url: wsmws7\n  prev_uuid: 7kP1jNx3Jv2qtz4M\n  sibling_uuid: Svy4yFR_RT_CSfLd\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212399\n  level: 1\n  id: 72212399\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 围圈报数问题\n  uuid: Svy4yFR_RT_CSfLd\n  url: gkoa19\n  prev_uuid: We8EXWT44v6iRohB\n  sibling_uuid: L20YHOh3AcKOC_BK\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212447\n  level: 1\n  id: 72212447\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 查找文章中出现频率最高的词\n  uuid: L20YHOh3AcKOC_BK\n  url: rln2y3\n  prev_uuid: Svy4yFR_RT_CSfLd\n  sibling_uuid: l-w9qpcLnXk3Fop6\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212453\n  level: 1\n  id: 72212453\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 每隔 1s 输出 1、2、3\n  uuid: l-w9qpcLnXk3Fop6\n  url: yg55el\n  prev_uuid: L20YHOh3AcKOC_BK\n  sibling_uuid: bpvqYyN2Dt1OP5ba\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 74885844\n  level: 1\n  id: 74885844\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 循环打印红黄绿\n  uuid: bpvqYyN2Dt1OP5ba\n  url: wyhgfz\n  prev_uuid: l-w9qpcLnXk3Fop6\n  sibling_uuid: sYbQboe4NKOreGYz\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212451\n  level: 1\n  id: 72212451\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 封装一个异步加载图片的方法\n  uuid: sYbQboe4NKOreGYz\n  url: orxq0m\n  prev_uuid: bpvqYyN2Dt1OP5ba\n  sibling_uuid: jSGMOwTmTh-AVElI\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 74886744\n  level: 1\n  id: 74886744\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 mergePromise 函数\n  uuid: jSGMOwTmTh-AVElI\n  url: apqplp\n  prev_uuid: sYbQboe4NKOreGYz\n  sibling_uuid: D5aX74WcvfcBK-xH\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 74885813\n  level: 1\n  id: 74885813\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 文本中识别敏感词、表情包、链接、数字、字母并高亮\n  uuid: D5aX74WcvfcBK-xH\n  url: athu4p\n  prev_uuid: jSGMOwTmTh-AVElI\n  sibling_uuid: Bt1pMK0unwRBHK0k\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212408\n  level: 1\n  id: 72212408\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 图片格式转换为 webp\n  uuid: Bt1pMK0unwRBHK0k\n  url: cwlftq\n  prev_uuid: D5aX74WcvfcBK-xH\n  sibling_uuid: I9iFwpfXRhZn1Ket\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212400\n  level: 1\n  id: 72212400\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 计算对象占用的字节数\n  uuid: I9iFwpfXRhZn1Ket\n  url: gx1y1y\n  prev_uuid: Bt1pMK0unwRBHK0k\n  sibling_uuid: UcV05ziY4TJKPu5m\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212406\n  level: 1\n  id: 72212406\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 给 xhr 添加 hook，实现在各个阶段打印日志\n  uuid: UcV05ziY4TJKPu5m\n  url: dm9n4g\n  prev_uuid: I9iFwpfXRhZn1Ket\n  sibling_uuid: 77boIDk-fFPJ9Icd\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212404\n  level: 1\n  id: 72212404\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 明信片问题\n  uuid: 77boIDk-fFPJ9Icd\n  url: mnsw3z\n  prev_uuid: UcV05ziY4TJKPu5m\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 1mqH8VqzmT3IEIjz\n  doc_id: 72212466\n  level: 1\n  id: 72212466\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 常用算法实现\n  uuid: ahwD4hLemj7wd4n_\n  url: ''\n  prev_uuid: 1mqH8VqzmT3IEIjz\n  sibling_uuid: ''\n  child_uuid: 9pHSK6xJvBHyYfvP\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: SKU算法实现\n  uuid: 9pHSK6xJvBHyYfvP\n  url: rs9nxb\n  prev_uuid: ahwD4hLemj7wd4n_\n  sibling_uuid: '-h-CMZM_g4aYqwln'\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 81636590\n  level: 1\n  id: 81636590\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 无重复最长子串\n  uuid: '-h-CMZM_g4aYqwln'\n  url: zn78xr\n  prev_uuid: 9pHSK6xJvBHyYfvP\n  sibling_uuid: tDrBxICyXBoMgRJD\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 81636434\n  level: 1\n  id: 81636434\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 二分查找\n  uuid: tDrBxICyXBoMgRJD\n  url: pywta0\n  prev_uuid: '-h-CMZM_g4aYqwln'\n  sibling_uuid: eH5hJfGPxku_rn96\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212463\n  level: 1\n  id: 72212463\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 排序\n  uuid: eH5hJfGPxku_rn96\n  url: ivvld9\n  prev_uuid: tDrBxICyXBoMgRJD\n  sibling_uuid: 4cV9_qbBLcYidtg8\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212411\n  level: 1\n  id: 72212411\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 动态规划和贪心算法\n  uuid: 4cV9_qbBLcYidtg8\n  url: pyig7m\n  prev_uuid: eH5hJfGPxku_rn96\n  sibling_uuid: 5VMnf0-t-FXvC3K6\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212414\n  level: 1\n  id: 72212414\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 洗牌算法\n  uuid: 5VMnf0-t-FXvC3K6\n  url: tohw0k\n  prev_uuid: 4cV9_qbBLcYidtg8\n  sibling_uuid: AjOzxJ-vxxRXW6dS\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212418\n  level: 1\n  id: 72212418\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: LRU(最少置换算法)\n  uuid: AjOzxJ-vxxRXW6dS\n  url: tmwgql\n  prev_uuid: 5VMnf0-t-FXvC3K6\n  sibling_uuid: ID7sjKR9-5E_moyo\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212423\n  level: 1\n  id: 72212423\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 斐波那契数列\n  uuid: ID7sjKR9-5E_moyo\n  url: bq7f7e\n  prev_uuid: AjOzxJ-vxxRXW6dS\n  sibling_uuid: wZscOLfm_xjPFYv2\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212420\n  level: 1\n  id: 72212420\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 大数相加\n  uuid: wZscOLfm_xjPFYv2\n  url: ln6fpo\n  prev_uuid: ID7sjKR9-5E_moyo\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: ahwD4hLemj7wd4n_\n  doc_id: 72212421\n  level: 1\n  id: 72212421\n  open_window: 0\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 74,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:38.713Z",
    "created_at": "2022-04-04T11:34:53.000Z",
    "updated_at": "2023-11-11T18:15:39.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-23T19:11:28.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/sd8kbc",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-23T19:11:28.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 1307001897,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-23T19:11:28.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}