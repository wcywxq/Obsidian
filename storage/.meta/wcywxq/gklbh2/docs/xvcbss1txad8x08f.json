{
  "id": 147992262,
  "slug": "xvcbss1txad8x08f",
  "title": "104 二叉树的最大深度",
  "description": "104. 二叉树的最大深度/**  * Definition for a binary tree node.  */ function TreeNode(val, left, right) {   this.val = (val===undefined ? 0 : val)   this.le...",
  "cover": "",
  "user_id": 732231,
  "book_id": 44292824,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><p id=\"ub39208d5\" class=\"ne-p\"><a href=\"https://leetcode.cn/problems/maximum-depth-of-binary-tree\" data-href=\"https://leetcode.cn/problems/maximum-depth-of-binary-tree\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">104. 二叉树的最大深度</span></a></p><pre data-language=\"javascript\" id=\"nD6EZ\" class=\"ne-codeblock language-javascript\"><code>/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = (val===undefined ? 0 : val)\n  this.left = (left===undefined ? null : left)\n  this.right = (right===undefined ? null : right)\n}\n\n/**\n * dfs\n * @param {TreeNode} root\n * @return {number}\n */\nvar maxDepth = function(root) {\n  if (!root) return 0\n  let left = maxDepth(root.left)\n  let right = maxDepth(root.right)\n  return Math.max(left, right) + 1\n}\n\n/**\n * bfs\n * @param {TreeNode} root\n * @return {number}\n */\nvar maxDepth = function(root) {\n  if (!root) return 0\n  let queue = []\n  let deep = 0\n  queue.push(root)\n  while (queue.length) {\n    deep++\n    let size = queue.length\n    while (size &gt; 0) {\n      let node = queue.shift()\n      if (node.left) queue.push(node.left)\n      if (node.right) queue.push(node.right)\n      size--\n    }\n  }\n  return deep\n}</code></pre><p id=\"u3a6733d5\" class=\"ne-p\"><br></p></div>",
  "body": "[104. 二叉树的最大深度](https://leetcode.cn/problems/maximum-depth-of-binary-tree)\n```javascript\n/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = (val===undefined ? 0 : val)\n  this.left = (left===undefined ? null : left)\n  this.right = (right===undefined ? null : right)\n}\n\n/**\n * dfs\n * @param {TreeNode} root\n * @return {number}\n */\nvar maxDepth = function(root) {\n  if (!root) return 0\n  let left = maxDepth(root.left)\n  let right = maxDepth(root.right)\n  return Math.max(left, right) + 1\n}\n\n/**\n * bfs\n * @param {TreeNode} root\n * @return {number}\n */\nvar maxDepth = function(root) {\n  if (!root) return 0\n  let queue = []\n  let deep = 0\n  queue.push(root)\n  while (queue.length) {\n    deep++\n    let size = queue.length\n    while (size > 0) {\n      let node = queue.shift()\n      if (node.left) queue.push(node.left)\n      if (node.right) queue.push(node.right)\n      size--\n    }\n  }\n  return deep\n}\n```\n\n",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><p id=\"ub39208d5\" class=\"ne-p\"><a href=\"https://leetcode.cn/problems/maximum-depth-of-binary-tree\" data-href=\"https://leetcode.cn/problems/maximum-depth-of-binary-tree\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">104. 二叉树的最大深度</span></a></p><pre data-language=\"javascript\" id=\"nD6EZ\" class=\"ne-codeblock language-javascript\"><code>/**\n * Definition for a binary tree node.\n */\nfunction TreeNode(val, left, right) {\n  this.val = (val===undefined ? 0 : val)\n  this.left = (left===undefined ? null : left)\n  this.right = (right===undefined ? null : right)\n}\n\n/**\n * dfs\n * @param {TreeNode} root\n * @return {number}\n */\nvar maxDepth = function(root) {\n  if (!root) return 0\n  let left = maxDepth(root.left)\n  let right = maxDepth(root.right)\n  return Math.max(left, right) + 1\n}\n\n/**\n * bfs\n * @param {TreeNode} root\n * @return {number}\n */\nvar maxDepth = function(root) {\n  if (!root) return 0\n  let queue = []\n  let deep = 0\n  queue.push(root)\n  while (queue.length) {\n    deep++\n    let size = queue.length\n    while (size &gt; 0) {\n      let node = queue.shift()\n      if (node.left) queue.push(node.left)\n      if (node.right) queue.push(node.right)\n      size--\n    }\n  }\n  return deep\n}</code></pre><p id=\"u3a6733d5\" class=\"ne-p\"><br></p></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"paragraphSpacing\" content=\"relax\" /><p data-lake-id=\"ub39208d5\" id=\"ub39208d5\"><a href=\"https://leetcode.cn/problems/maximum-depth-of-binary-tree\" target=\"_blank\" data-lake-id=\"ua5877259\" id=\"ua5877259\"><span data-lake-id=\"ufaddd33a\" id=\"ufaddd33a\">104. 二叉树的最大深度</span></a></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F**%5Cn%20*%20Definition%20for%20a%20binary%20tree%20node.%5Cn%20*%2F%5Cnfunction%20TreeNode(val%2C%20left%2C%20right)%20%7B%5Cn%20%20this.val%20%3D%20(val%3D%3D%3Dundefined%20%3F%200%20%3A%20val)%5Cn%20%20this.left%20%3D%20(left%3D%3D%3Dundefined%20%3F%20null%20%3A%20left)%5Cn%20%20this.right%20%3D%20(right%3D%3D%3Dundefined%20%3F%20null%20%3A%20right)%5Cn%7D%5Cn%5Cn%2F**%5Cn%20*%20dfs%5Cn%20*%20%40param%20%7BTreeNode%7D%20root%5Cn%20*%20%40return%20%7Bnumber%7D%5Cn%20*%2F%5Cnvar%20maxDepth%20%3D%20function(root)%20%7B%5Cn%20%20if%20(!root)%20return%200%5Cn%20%20let%20left%20%3D%20maxDepth(root.left)%5Cn%20%20let%20right%20%3D%20maxDepth(root.right)%5Cn%20%20return%20Math.max(left%2C%20right)%20%2B%201%5Cn%7D%5Cn%5Cn%2F**%5Cn%20*%20bfs%5Cn%20*%20%40param%20%7BTreeNode%7D%20root%5Cn%20*%20%40return%20%7Bnumber%7D%5Cn%20*%2F%5Cnvar%20maxDepth%20%3D%20function(root)%20%7B%5Cn%20%20if%20(!root)%20return%200%5Cn%20%20let%20queue%20%3D%20%5B%5D%5Cn%20%20let%20deep%20%3D%200%5Cn%20%20queue.push(root)%5Cn%20%20while%20(queue.length)%20%7B%5Cn%20%20%20%20deep%2B%2B%5Cn%20%20%20%20let%20size%20%3D%20queue.length%5Cn%20%20%20%20while%20(size%20%3E%200)%20%7B%5Cn%20%20%20%20%20%20let%20node%20%3D%20queue.shift()%5Cn%20%20%20%20%20%20if%20(node.left)%20queue.push(node.left)%5Cn%20%20%20%20%20%20if%20(node.right)%20queue.push(node.right)%5Cn%20%20%20%20%20%20size--%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20return%20deep%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Bracket%20Lights%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22nD6EZ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u3a6733d5\" id=\"u3a6733d5\"><br></p>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 137,
  "created_at": "2023-11-23T17:09:28.000Z",
  "updated_at": "2023-11-23T18:59:09.000Z",
  "content_updated_at": "2023-11-23T17:10:06.000Z",
  "published_at": "2023-11-23T17:10:06.000Z",
  "first_published_at": "2023-11-23T17:09:42.765Z",
  "book": {
    "id": 44292824,
    "type": "Book",
    "slug": "gklbh2",
    "name": "Leetcode",
    "user_id": 732231,
    "description": "",
    "toc_yml": "- type: META\n  count: 51\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 374208920\n  published: true\n  max_level: 0\n  last_updated_at: 2023-11-23T19:01:45.930Z\n  version_id: 374208922\n- type: DOC\n  title: LCR 140 训练计划 II (链表中倒数第 k 个节点)\n  uuid: 4gkpTMCOXa9Lm_3y\n  url: gu578y56irbrv7ba\n  prev_uuid: ''\n  sibling_uuid: D9fjaj4GAhOJB3EG\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992663\n  level: 0\n  id: 147992663\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 1 两数之和\n  uuid: D9fjaj4GAhOJB3EG\n  url: vi0b1e\n  prev_uuid: 4gkpTMCOXa9Lm_3y\n  sibling_uuid: 0yhcscQD-WvS4GPZ\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 11416831\n  level: 0\n  id: 11416831\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 2 两数相加\n  uuid: 0yhcscQD-WvS4GPZ\n  url: ffmgi1\n  prev_uuid: D9fjaj4GAhOJB3EG\n  sibling_uuid: vFsn4Bf4Jh4U32mI\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 11416844\n  level: 0\n  id: 11416844\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 3 无重复字符的最长子串\n  uuid: vFsn4Bf4Jh4U32mI\n  url: mtz77i\n  prev_uuid: 0yhcscQD-WvS4GPZ\n  sibling_uuid: 1t7bsJe3J4tNFVZL\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 11416847\n  level: 0\n  id: 11416847\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 4 寻找两个正序数组的中位数\n  uuid: 1t7bsJe3J4tNFVZL\n  url: gva8o4geqcng2pvt\n  prev_uuid: vFsn4Bf4Jh4U32mI\n  sibling_uuid: 6TorxGBvvbeYOpXd\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147991624\n  level: 0\n  id: 147991624\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 5 最长回文子串\n  uuid: 6TorxGBvvbeYOpXd\n  url: oyeiiunxxy1q8p7r\n  prev_uuid: 1t7bsJe3J4tNFVZL\n  sibling_uuid: Q64oWkEJyWN9W6HA\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147876484\n  level: 0\n  id: 147876484\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 15 三数之和\n  uuid: Q64oWkEJyWN9W6HA\n  url: nkcuzy8lgqbobw49\n  prev_uuid: 6TorxGBvvbeYOpXd\n  sibling_uuid: ZYKfuY36K6GG3JCQ\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147451556\n  level: 0\n  id: 147451556\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 20 有效的括号\n  uuid: ZYKfuY36K6GG3JCQ\n  url: cszxgc1xg44499b7\n  prev_uuid: Q64oWkEJyWN9W6HA\n  sibling_uuid: DUB0D9AKK0likFPP\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147991949\n  level: 0\n  id: 147991949\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 21 合并两个有序链表\n  uuid: DUB0D9AKK0likFPP\n  url: dcidazawmep66kvf\n  prev_uuid: ZYKfuY36K6GG3JCQ\n  sibling_uuid: JGz8qO7-UCqfmKRQ\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147991981\n  level: 0\n  id: 147991981\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 31 下一个排列\n  uuid: JGz8qO7-UCqfmKRQ\n  url: bzdwvakyt0q7h55f\n  prev_uuid: DUB0D9AKK0likFPP\n  sibling_uuid: hJybbEKV2Okjvfrc\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992039\n  level: 0\n  id: 147992039\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 32 最长有效括号\n  uuid: hJybbEKV2Okjvfrc\n  url: gkx2i4kcuqsp62q3\n  prev_uuid: JGz8qO7-UCqfmKRQ\n  sibling_uuid: P-POKc-Eq_5qhdtz\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992075\n  level: 0\n  id: 147992075\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 39 组合总和\n  uuid: P-POKc-Eq_5qhdtz\n  url: gii9er6dcbq51d04\n  prev_uuid: hJybbEKV2Okjvfrc\n  sibling_uuid: HMcs-WNiT1LU5pVk\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992119\n  level: 0\n  id: 147992119\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 42 接雨水\n  uuid: HMcs-WNiT1LU5pVk\n  url: kxktgivrkdl6wz5z\n  prev_uuid: P-POKc-Eq_5qhdtz\n  sibling_uuid: 7gA8hFWs4G74fr6W\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992139\n  level: 0\n  id: 147992139\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 46 全排列\n  uuid: 7gA8hFWs4G74fr6W\n  url: xxua341nz98mow62\n  prev_uuid: HMcs-WNiT1LU5pVk\n  sibling_uuid: 6SInaQv7zqTeQYUG\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992165\n  level: 0\n  id: 147992165\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 53 最大子序和\n  uuid: 6SInaQv7zqTeQYUG\n  url: wrfwwaild6gqpi22\n  prev_uuid: 7gA8hFWs4G74fr6W\n  sibling_uuid: zbwrvrvQZhDpHcKC\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992175\n  level: 0\n  id: 147992175\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 56 合并区间\n  uuid: zbwrvrvQZhDpHcKC\n  url: xr8llnbke55x4fkg\n  prev_uuid: 6SInaQv7zqTeQYUG\n  sibling_uuid: eBOqa-7ikOmOtO9r\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992185\n  level: 0\n  id: 147992185\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 67 二进制求和\n  uuid: eBOqa-7ikOmOtO9r\n  url: zd7gktt83m37uc1q\n  prev_uuid: zbwrvrvQZhDpHcKC\n  sibling_uuid: lDvlUWzwCFyaopLw\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992190\n  level: 0\n  id: 147992190\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 70 爬楼梯\n  uuid: lDvlUWzwCFyaopLw\n  url: ru99qh59e3y5cia2\n  prev_uuid: eBOqa-7ikOmOtO9r\n  sibling_uuid: rrwD5FgxzKY4Gpwr\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992201\n  level: 0\n  id: 147992201\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 88 合并两个有序数组\n  uuid: rrwD5FgxzKY4Gpwr\n  url: szusblg76edira1c\n  prev_uuid: lDvlUWzwCFyaopLw\n  sibling_uuid: 6QxpLgzCGRMJc-J6\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992021\n  level: 0\n  id: 147992021\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 94 二叉树的中序遍历\n  uuid: 6QxpLgzCGRMJc-J6\n  url: knlpiyei2hl9rzt3\n  prev_uuid: rrwD5FgxzKY4Gpwr\n  sibling_uuid: aFtiTAdnF7CKhtgt\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992224\n  level: 0\n  id: 147992224\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 101 对称二叉树\n  uuid: aFtiTAdnF7CKhtgt\n  url: aoxk7rmkecx7z4ge\n  prev_uuid: 6QxpLgzCGRMJc-J6\n  sibling_uuid: T603eLVmpywbRmGU\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992241\n  level: 0\n  id: 147992241\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 102 二叉树的层序遍历\n  uuid: T603eLVmpywbRmGU\n  url: zffm0kp0s6wve8bh\n  prev_uuid: aFtiTAdnF7CKhtgt\n  sibling_uuid: jmy47wNGCp0OMDBw\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992251\n  level: 0\n  id: 147992251\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 104 二叉树的最大深度\n  uuid: jmy47wNGCp0OMDBw\n  url: xvcbss1txad8x08f\n  prev_uuid: T603eLVmpywbRmGU\n  sibling_uuid: TbQVp_I6xpqwIknG\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992262\n  level: 0\n  id: 147992262\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 111 二叉树的最小深度\n  uuid: TbQVp_I6xpqwIknG\n  url: gfu8qrvtcc3a60vi\n  prev_uuid: jmy47wNGCp0OMDBw\n  sibling_uuid: 84vPb9Z8OKiDHJgZ\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992282\n  level: 0\n  id: 147992282\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 112 路径总和\n  uuid: 84vPb9Z8OKiDHJgZ\n  url: lizcps0saeod0pey\n  prev_uuid: TbQVp_I6xpqwIknG\n  sibling_uuid: gsgwoclNI27-MYBk\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992298\n  level: 0\n  id: 147992298\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 121 买卖股票的最佳时机\n  uuid: gsgwoclNI27-MYBk\n  url: eqag967oiizb6p3i\n  prev_uuid: 84vPb9Z8OKiDHJgZ\n  sibling_uuid: KlLSis2eG5DamkCt\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992309\n  level: 0\n  id: 147992309\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 129 求根到叶子节点数字之和\n  uuid: KlLSis2eG5DamkCt\n  url: hpwmmdrcgd8zvtmh\n  prev_uuid: gsgwoclNI27-MYBk\n  sibling_uuid: 80Okgq3-oE8vSpC4\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992322\n  level: 0\n  id: 147992322\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 141 环型链表\n  uuid: 80Okgq3-oE8vSpC4\n  url: drdzvh5hf9g1kmak\n  prev_uuid: KlLSis2eG5DamkCt\n  sibling_uuid: 4xSu26xVAWy5Bhq5\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992330\n  level: 0\n  id: 147992330\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 146 LRU缓存机制\n  uuid: 4xSu26xVAWy5Bhq5\n  url: pzx6s6b15eoogm9h\n  prev_uuid: 80Okgq3-oE8vSpC4\n  sibling_uuid: cgBOZtnI9VLErmqr\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992342\n  level: 0\n  id: 147992342\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 151 反转字符串中的单词\n  uuid: cgBOZtnI9VLErmqr\n  url: fqoogl0zhx7wttrd\n  prev_uuid: 4xSu26xVAWy5Bhq5\n  sibling_uuid: 3L1GJnf7HpSxz9a5\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147751033\n  level: 0\n  id: 147751033\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 155 最小栈\n  uuid: 3L1GJnf7HpSxz9a5\n  url: ywtlc7gvif4kuckp\n  prev_uuid: cgBOZtnI9VLErmqr\n  sibling_uuid: g40aZbGc0NtScNSt\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992376\n  level: 0\n  id: 147992376\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 160 相交链表\n  uuid: g40aZbGc0NtScNSt\n  url: dtfon507inu95297\n  prev_uuid: 3L1GJnf7HpSxz9a5\n  sibling_uuid: VY4pQ951swxUHN4N\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992387\n  level: 0\n  id: 147992387\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 162 寻找峰值\n  uuid: VY4pQ951swxUHN4N\n  url: csbwdm6dx7o922us\n  prev_uuid: g40aZbGc0NtScNSt\n  sibling_uuid: jRFXsVO2auHn3mBK\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147718381\n  level: 0\n  id: 147718381\n  open_window: 1\n  visible: 0\n- type: DOC\n  title: 169 多数元素\n  uuid: jRFXsVO2auHn3mBK\n  url: gbwgs8281hrgu2p5\n  prev_uuid: VY4pQ951swxUHN4N\n  sibling_uuid: M-IW-4k9BYGmwE5A\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992418\n  level: 0\n  id: 147992418\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 200 岛屿数量\n  uuid: M-IW-4k9BYGmwE5A\n  url: hhrm6w6r9fm90ugh\n  prev_uuid: jRFXsVO2auHn3mBK\n  sibling_uuid: UumAIFlOK6KlxrXu\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992427\n  level: 0\n  id: 147992427\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 206 反转链表\n  uuid: UumAIFlOK6KlxrXu\n  url: gprthzske3qs9xdi\n  prev_uuid: M-IW-4k9BYGmwE5A\n  sibling_uuid: _ggJN2LjLAazwCEb\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992433\n  level: 0\n  id: 147992433\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 209 长度最小的子数组\n  uuid: _ggJN2LjLAazwCEb\n  url: dsz8vf1e2w1ui24m\n  prev_uuid: UumAIFlOK6KlxrXu\n  sibling_uuid: '-D0BIBDk_G03exTI'\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147451598\n  level: 0\n  id: 147451598\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 215 数组中的第K个最大元素\n  uuid: '-D0BIBDk_G03exTI'\n  url: idavgg7e0ry9gawk\n  prev_uuid: _ggJN2LjLAazwCEb\n  sibling_uuid: LyX62bT4EPTpESlc\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147876068\n  level: 0\n  id: 147876068\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 226 翻转二叉树\n  uuid: LyX62bT4EPTpESlc\n  url: ss2ir5pkqhohctlb\n  prev_uuid: '-D0BIBDk_G03exTI'\n  sibling_uuid: ASAC50CVabAnrfR5\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992479\n  level: 0\n  id: 147992479\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 238 除自身以外数组的乘积\n  uuid: ASAC50CVabAnrfR5\n  url: pnbw26bnt40vohxk\n  prev_uuid: LyX62bT4EPTpESlc\n  sibling_uuid: 4ajZIEKjwOjpC_Ri\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147751162\n  level: 0\n  id: 147751162\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 322 零钱兑换\n  uuid: 4ajZIEKjwOjpC_Ri\n  url: evzdsp8i9z9iz1m9\n  prev_uuid: ASAC50CVabAnrfR5\n  sibling_uuid: ybNfKJP90CNQ95up\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992508\n  level: 0\n  id: 147992508\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 334 递增的三元子序列\n  uuid: ybNfKJP90CNQ95up\n  url: dkktq1ez0d5no8b5\n  prev_uuid: 4ajZIEKjwOjpC_Ri\n  sibling_uuid: izCSq4UA7udwUgGS\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147853149\n  level: 0\n  id: 147853149\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 345 反转字符串中的元音字母\n  uuid: izCSq4UA7udwUgGS\n  url: gqccwkdpgo04oeaf\n  prev_uuid: ybNfKJP90CNQ95up\n  sibling_uuid: 4nNqqOCjAxtgfryN\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147750802\n  level: 0\n  id: 147750802\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 415 字符串相加\n  uuid: 4nNqqOCjAxtgfryN\n  url: sw165ohocfoif7g3\n  prev_uuid: izCSq4UA7udwUgGS\n  sibling_uuid: eUwbAk5ZESHOdwCJ\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992529\n  level: 0\n  id: 147992529\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 443 压缩字符串\n  uuid: eUwbAk5ZESHOdwCJ\n  url: xzyrc9xgzo0aiu10\n  prev_uuid: 4nNqqOCjAxtgfryN\n  sibling_uuid: 5isNHBjoZWJY0rqG\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147875594\n  level: 0\n  id: 147875594\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 509 斐波那契数\n  uuid: 5isNHBjoZWJY0rqG\n  url: vpk2fcb8bc2r1ad5\n  prev_uuid: eUwbAk5ZESHOdwCJ\n  sibling_uuid: hEHSMukKLz8LgdJ4\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992568\n  level: 0\n  id: 147992568\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 605 种花问题\n  uuid: hEHSMukKLz8LgdJ4\n  url: gtlqi9gf62em4cr1\n  prev_uuid: 5isNHBjoZWJY0rqG\n  sibling_uuid: O8NsEdUMxID6uArM\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147745513\n  level: 0\n  id: 147745513\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 1071 字符串的最大公因子\n  uuid: O8NsEdUMxID6uArM\n  url: rd4ob184gdlope5a\n  prev_uuid: hEHSMukKLz8LgdJ4\n  sibling_uuid: cmYeCXTaXQ4HAG6S\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147740806\n  level: 0\n  id: 147740806\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 1143 最长公共子序列\n  uuid: cmYeCXTaXQ4HAG6S\n  url: kbtwmpzch9x5aqku\n  prev_uuid: O8NsEdUMxID6uArM\n  sibling_uuid: '-YscIPwThxhY7WAF'\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147718465\n  level: 0\n  id: 147718465\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 1431 拥有最多糖果的孩子\n  uuid: '-YscIPwThxhY7WAF'\n  url: dxn5xdxqh1ggc326\n  prev_uuid: cmYeCXTaXQ4HAG6S\n  sibling_uuid: 0oXS9Rh1T3xKhIW5\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147742194\n  level: 0\n  id: 147742194\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 1768 交替合并字符串\n  uuid: 0oXS9Rh1T3xKhIW5\n  url: mzu6pzt99ofgmdyg\n  prev_uuid: '-YscIPwThxhY7WAF'\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147717947\n  level: 0\n  id: 147717947\n  open_window: 1\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 51,
    "likes_count": 0,
    "watches_count": 0,
    "content_updated_at": "2023-11-23T19:05:02.254Z",
    "created_at": "2023-11-19T17:46:55.000Z",
    "updated_at": "2023-11-23T19:05:02.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-23T19:11:28.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/gklbh2",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-23T19:11:28.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 2137282866,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-23T19:11:28.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}