{
  "id": 11416831,
  "slug": "vi0b1e",
  "title": "1 两数之和",
  "description": "1. 两数之和题目描述：给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。示例:给定 nums = [2, 7, 11, 15], target =...",
  "cover": "",
  "user_id": 732231,
  "book_id": 44292824,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><p id=\"u8d0d4d71\" class=\"ne-p\"><a href=\"https://leetcode.cn/problems/two-sum\" data-href=\"https://leetcode.cn/problems/two-sum\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">1. 两数之和</span></a></p><p id=\"uc1a285f0\" class=\"ne-p\"><span class=\"ne-text\" style=\"background-color: #FADB14\"></span></p><p id=\"996b8a727937448257055ebb8703d87e_p_3\" class=\"ne-p\"><span class=\"ne-text\">题目描述：</span></p><p id=\"0c4d068e4aede2bc9d552ce387999b01_p_4\" class=\"ne-p\"><br></p><p id=\"6fd8a033b5d3ab7bff35dfdcf86a8539_p_5\" class=\"ne-p\"><span class=\"ne-text\">给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</span></p><p id=\"f23fb9c519ff30bfe03d0b2cc2cac85d_p_6\" class=\"ne-p\"><br></p><p id=\"33612ca62ea49e6c33ae2cad98a9611d_p_7\" class=\"ne-p\"><span class=\"ne-text\">你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。</span></p><p id=\"92c8228235b93f7cc9ced6ac90fca3a6_p_8\" class=\"ne-p\"><br></p><p id=\"3138393835da39f3c512165d88a5be8a_p_9\" class=\"ne-p\"><span class=\"ne-text\">示例:</span></p><p id=\"042da541aac17f869693ba89ebd10d8e_p_10\" class=\"ne-p\"><br></p><pre data-language=\"javascript\" id=\"f95f94c7\" class=\"ne-codeblock language-javascript\"><code>给定 nums = [2, 7, 11, 15], target = 9\n\n因为 nums[0] + nums[1] = 2 + 7 = 9\n所以返回 [0, 1]</code></pre><h2 id=\"0c223e18\"><span class=\"ne-text\">解题思路</span></h2><p id=\"828bea0262f636b25c97fbef525aed20_p_11\" class=\"ne-p\"><br></p><h3 id=\"wrfca\"><span class=\"ne-text\">暴力破解</span></h3><p id=\"09a2b5671cf447a1a3529d71c89cf9e1_p_12\" class=\"ne-p\"><br></p><div class=\"ne-quote\"><p id=\"68ddb64108d73598cf022ac30ec86eab_p_13\" class=\"ne-p\"><span class=\"ne-text\">双层 </span><code class=\"ne-code\"><span class=\"ne-text\">for</span></code><span class=\"ne-text\"> 循环，直接找到满足条件的值，时间复杂度 </span><code class=\"ne-code\"><span class=\"ne-text\">O(n^2)</span></code></p></div><p id=\"7cf79ceeaaf91ef14264b4c55c1c8c1d_p_14\" class=\"ne-p\"><br></p><pre data-language=\"javascript\" id=\"4d03d462\" class=\"ne-codeblock language-javascript\"><code>/**\n * 暴力破解\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    for (let i = 0; i &lt; nums.length; i++) {\n      for (let j = i + 1; j &lt; nums.length; j++) {\n        if (nums[i] + nums[j] === target) {\n          return [i, j]\n        }\n      }\n    }\n}</code></pre><h3 id=\"jzHkc\"><span class=\"ne-text\">哈希法</span></h3><pre data-language=\"javascript\" id=\"GLjzm\" class=\"ne-codeblock language-javascript\"><code>/**\n * hash\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    let map = new Map()\n    for (let i = 0; i &lt; nums.length; i++) {\n      if (map.has(target - nums[i])) {\n        return [map.get(target - nums[i]), i]\n      }\n      map.set(nums[i], i)\n    }\n}</code></pre></div>",
  "body": "[1. 两数之和](https://leetcode.cn/problems/two-sum)\n\n题目描述：\n\n给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。\n\n你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。\n\n示例:\n\n```javascript\n给定 nums = [2, 7, 11, 15], target = 9\n\n因为 nums[0] + nums[1] = 2 + 7 = 9\n所以返回 [0, 1]\n```\n<a name=\"0c223e18\"></a>\n## 解题思路\n\n<a name=\"wrfca\"></a>\n### 暴力破解\n\n> 双层 `for` 循环，直接找到满足条件的值，时间复杂度 `O(n^2)`\n\n\n```javascript\n/**\n * 暴力破解\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    for (let i = 0; i < nums.length; i++) {\n      for (let j = i + 1; j < nums.length; j++) {\n        if (nums[i] + nums[j] === target) {\n          return [i, j]\n        }\n      }\n    }\n}\n```\n<a name=\"jzHkc\"></a>\n### 哈希法\n```javascript\n/**\n * hash\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    let map = new Map()\n    for (let i = 0; i < nums.length; i++) {\n      if (map.has(target - nums[i])) {\n        return [map.get(target - nums[i]), i]\n      }\n      map.set(nums[i], i)\n    }\n}\n```\n",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><p id=\"u8d0d4d71\" class=\"ne-p\"><a href=\"https://leetcode.cn/problems/two-sum\" data-href=\"https://leetcode.cn/problems/two-sum\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">1. 两数之和</span></a></p><p id=\"uc1a285f0\" class=\"ne-p\"><span class=\"ne-text\" style=\"background-color: #FADB14\"></span></p><p id=\"996b8a727937448257055ebb8703d87e_p_3\" class=\"ne-p\"><span class=\"ne-text\">题目描述：</span></p><p id=\"0c4d068e4aede2bc9d552ce387999b01_p_4\" class=\"ne-p\"><br></p><p id=\"6fd8a033b5d3ab7bff35dfdcf86a8539_p_5\" class=\"ne-p\"><span class=\"ne-text\">给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</span></p><p id=\"f23fb9c519ff30bfe03d0b2cc2cac85d_p_6\" class=\"ne-p\"><br></p><p id=\"33612ca62ea49e6c33ae2cad98a9611d_p_7\" class=\"ne-p\"><span class=\"ne-text\">你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。</span></p><p id=\"92c8228235b93f7cc9ced6ac90fca3a6_p_8\" class=\"ne-p\"><br></p><p id=\"3138393835da39f3c512165d88a5be8a_p_9\" class=\"ne-p\"><span class=\"ne-text\">示例:</span></p><p id=\"042da541aac17f869693ba89ebd10d8e_p_10\" class=\"ne-p\"><br></p><pre data-language=\"javascript\" id=\"f95f94c7\" class=\"ne-codeblock language-javascript\"><code>给定 nums = [2, 7, 11, 15], target = 9\n\n因为 nums[0] + nums[1] = 2 + 7 = 9\n所以返回 [0, 1]</code></pre><h2 id=\"0c223e18\"><span class=\"ne-text\">解题思路</span></h2><p id=\"828bea0262f636b25c97fbef525aed20_p_11\" class=\"ne-p\"><br></p><h3 id=\"wrfca\"><span class=\"ne-text\">暴力破解</span></h3><p id=\"09a2b5671cf447a1a3529d71c89cf9e1_p_12\" class=\"ne-p\"><br></p><div class=\"ne-quote\"><p id=\"68ddb64108d73598cf022ac30ec86eab_p_13\" class=\"ne-p\"><span class=\"ne-text\">双层 </span><code class=\"ne-code\"><span class=\"ne-text\">for</span></code><span class=\"ne-text\"> 循环，直接找到满足条件的值，时间复杂度 </span><code class=\"ne-code\"><span class=\"ne-text\">O(n^2)</span></code></p></div><p id=\"7cf79ceeaaf91ef14264b4c55c1c8c1d_p_14\" class=\"ne-p\"><br></p><pre data-language=\"javascript\" id=\"4d03d462\" class=\"ne-codeblock language-javascript\"><code>/**\n * 暴力破解\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    for (let i = 0; i &lt; nums.length; i++) {\n      for (let j = i + 1; j &lt; nums.length; j++) {\n        if (nums[i] + nums[j] === target) {\n          return [i, j]\n        }\n      }\n    }\n}</code></pre><h3 id=\"jzHkc\"><span class=\"ne-text\">哈希法</span></h3><pre data-language=\"javascript\" id=\"GLjzm\" class=\"ne-codeblock language-javascript\"><code>/**\n * hash\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    let map = new Map()\n    for (let i = 0; i &lt; nums.length; i++) {\n      if (map.has(target - nums[i])) {\n        return [map.get(target - nums[i]), i]\n      }\n      map.set(nums[i], i)\n    }\n}</code></pre></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><p data-lake-id=\"u8d0d4d71\" id=\"u8d0d4d71\"><a href=\"https://leetcode.cn/problems/two-sum\" target=\"_blank\" data-lake-id=\"u704d24f8\" id=\"u704d24f8\"><span data-lake-id=\"u8807f349\" id=\"u8807f349\">1. 两数之和</span></a></p><p data-lake-id=\"uc1a285f0\" id=\"uc1a285f0\"><span data-lake-id=\"u3af322b5\" id=\"u3af322b5\" style=\"background-color: #FADB14\">​</span><br></p><p data-lake-id=\"996b8a727937448257055ebb8703d87e_p_3\" id=\"996b8a727937448257055ebb8703d87e_p_3\"><span data-lake-id=\"u5c36f3f5\" id=\"u5c36f3f5\">题目描述：</span></p><p data-lake-id=\"0c4d068e4aede2bc9d552ce387999b01_p_4\" id=\"0c4d068e4aede2bc9d552ce387999b01_p_4\"><br></p><p data-lake-id=\"6fd8a033b5d3ab7bff35dfdcf86a8539_p_5\" id=\"6fd8a033b5d3ab7bff35dfdcf86a8539_p_5\"><span data-lake-id=\"u6e941e22\" id=\"u6e941e22\">给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</span></p><p data-lake-id=\"f23fb9c519ff30bfe03d0b2cc2cac85d_p_6\" id=\"f23fb9c519ff30bfe03d0b2cc2cac85d_p_6\"><br></p><p data-lake-id=\"33612ca62ea49e6c33ae2cad98a9611d_p_7\" id=\"33612ca62ea49e6c33ae2cad98a9611d_p_7\"><span data-lake-id=\"u1398c4dd\" id=\"u1398c4dd\">你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。</span></p><p data-lake-id=\"92c8228235b93f7cc9ced6ac90fca3a6_p_8\" id=\"92c8228235b93f7cc9ced6ac90fca3a6_p_8\"><br></p><p data-lake-id=\"3138393835da39f3c512165d88a5be8a_p_9\" id=\"3138393835da39f3c512165d88a5be8a_p_9\"><span data-lake-id=\"uf36c53d5\" id=\"uf36c53d5\">示例:</span></p><p data-lake-id=\"042da541aac17f869693ba89ebd10d8e_p_10\" id=\"042da541aac17f869693ba89ebd10d8e_p_10\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%E7%BB%99%E5%AE%9A%20nums%20%3D%20%5B2%2C%207%2C%2011%2C%2015%5D%2C%20target%20%3D%209%5Cn%5Cn%E5%9B%A0%E4%B8%BA%20nums%5B0%5D%20%2B%20nums%5B1%5D%20%3D%202%20%2B%207%20%3D%209%5Cn%E6%89%80%E4%BB%A5%E8%BF%94%E5%9B%9E%20%5B0%2C%201%5D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22id%22%3A%22f95f94c7%22%7D\"></card><h2 data-lake-id=\"0c223e18\" id=\"0c223e18\"><span data-lake-id=\"u3e737df8\" id=\"u3e737df8\">解题思路</span></h2><p data-lake-id=\"828bea0262f636b25c97fbef525aed20_p_11\" id=\"828bea0262f636b25c97fbef525aed20_p_11\"><br></p><h3 data-lake-id=\"wrfca\" id=\"wrfca\"><span data-lake-id=\"u4b4b5063\" id=\"u4b4b5063\">暴力破解</span></h3><p data-lake-id=\"09a2b5671cf447a1a3529d71c89cf9e1_p_12\" id=\"09a2b5671cf447a1a3529d71c89cf9e1_p_12\"><br></p><blockquote data-lake-id=\"uf9c4a44c\" id=\"uf9c4a44c\"><p data-lake-id=\"68ddb64108d73598cf022ac30ec86eab_p_13\" id=\"68ddb64108d73598cf022ac30ec86eab_p_13\"><span data-lake-id=\"ub0f04197\" id=\"ub0f04197\">双层 </span><code data-lake-id=\"u56dd481b\" id=\"u56dd481b\"><span data-lake-id=\"u437dc727\" id=\"u437dc727\">for</span></code><span data-lake-id=\"u2a34ffec\" id=\"u2a34ffec\"> 循环，直接找到满足条件的值，时间复杂度 </span><code data-lake-id=\"ub1d018c9\" id=\"ub1d018c9\"><span data-lake-id=\"u72823c8c\" id=\"u72823c8c\">O(n^2)</span></code></p></blockquote><p data-lake-id=\"7cf79ceeaaf91ef14264b4c55c1c8c1d_p_14\" id=\"7cf79ceeaaf91ef14264b4c55c1c8c1d_p_14\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F**%5Cn%20*%20%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%5Cn%20*%20%40param%20%7Bnumber%5B%5D%7D%20nums%5Cn%20*%20%40param%20%7Bnumber%7D%20target%5Cn%20*%20%40return%20%7Bnumber%5B%5D%7D%5Cn%20*%2F%5Cnvar%20twoSum%20%3D%20function(nums%2C%20target)%20%7B%5Cn%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%20nums.length%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20for%20(let%20j%20%3D%20i%20%2B%201%3B%20j%20%3C%20nums.length%3B%20j%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(nums%5Bi%5D%20%2B%20nums%5Bj%5D%20%3D%3D%3D%20target)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20return%20%5Bi%2C%20j%5D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Bracket%20Lights%20Pro%22%2C%22id%22%3A%224d03d462%22%7D\"></card><h3 data-lake-id=\"jzHkc\" id=\"jzHkc\"><span data-lake-id=\"u83c60799\" id=\"u83c60799\">哈希法</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F**%5Cn%20*%20hash%5Cn%20*%20%40param%20%7Bnumber%5B%5D%7D%20nums%5Cn%20*%20%40param%20%7Bnumber%7D%20target%5Cn%20*%20%40return%20%7Bnumber%5B%5D%7D%5Cn%20*%2F%5Cnvar%20twoSum%20%3D%20function(nums%2C%20target)%20%7B%5Cn%20%20%20%20let%20map%20%3D%20new%20Map()%5Cn%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%20nums.length%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20if%20(map.has(target%20-%20nums%5Bi%5D))%20%7B%5Cn%20%20%20%20%20%20%20%20return%20%5Bmap.get(target%20-%20nums%5Bi%5D)%2C%20i%5D%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20map.set(nums%5Bi%5D%2C%20i)%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Bracket%20Lights%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22GLjzm%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 271,
  "created_at": "2020-08-08T11:40:00.000Z",
  "updated_at": "2023-11-23T18:57:24.000Z",
  "content_updated_at": "2023-11-23T16:45:45.000Z",
  "published_at": "2023-11-23T16:45:45.000Z",
  "first_published_at": "2020-08-08T11:40:00.000Z",
  "book": {
    "id": 44292824,
    "type": "Book",
    "slug": "gklbh2",
    "name": "Leetcode",
    "user_id": 732231,
    "description": "",
    "toc_yml": "- type: META\n  count: 51\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 374208920\n  published: true\n  max_level: 0\n  last_updated_at: 2023-11-23T19:01:45.930Z\n  version_id: 374208922\n- type: DOC\n  title: LCR 140 训练计划 II (链表中倒数第 k 个节点)\n  uuid: 4gkpTMCOXa9Lm_3y\n  url: gu578y56irbrv7ba\n  prev_uuid: ''\n  sibling_uuid: D9fjaj4GAhOJB3EG\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992663\n  level: 0\n  id: 147992663\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 1 两数之和\n  uuid: D9fjaj4GAhOJB3EG\n  url: vi0b1e\n  prev_uuid: 4gkpTMCOXa9Lm_3y\n  sibling_uuid: 0yhcscQD-WvS4GPZ\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 11416831\n  level: 0\n  id: 11416831\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 2 两数相加\n  uuid: 0yhcscQD-WvS4GPZ\n  url: ffmgi1\n  prev_uuid: D9fjaj4GAhOJB3EG\n  sibling_uuid: vFsn4Bf4Jh4U32mI\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 11416844\n  level: 0\n  id: 11416844\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 3 无重复字符的最长子串\n  uuid: vFsn4Bf4Jh4U32mI\n  url: mtz77i\n  prev_uuid: 0yhcscQD-WvS4GPZ\n  sibling_uuid: 1t7bsJe3J4tNFVZL\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 11416847\n  level: 0\n  id: 11416847\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 4 寻找两个正序数组的中位数\n  uuid: 1t7bsJe3J4tNFVZL\n  url: gva8o4geqcng2pvt\n  prev_uuid: vFsn4Bf4Jh4U32mI\n  sibling_uuid: 6TorxGBvvbeYOpXd\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147991624\n  level: 0\n  id: 147991624\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 5 最长回文子串\n  uuid: 6TorxGBvvbeYOpXd\n  url: oyeiiunxxy1q8p7r\n  prev_uuid: 1t7bsJe3J4tNFVZL\n  sibling_uuid: Q64oWkEJyWN9W6HA\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147876484\n  level: 0\n  id: 147876484\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 15 三数之和\n  uuid: Q64oWkEJyWN9W6HA\n  url: nkcuzy8lgqbobw49\n  prev_uuid: 6TorxGBvvbeYOpXd\n  sibling_uuid: ZYKfuY36K6GG3JCQ\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147451556\n  level: 0\n  id: 147451556\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 20 有效的括号\n  uuid: ZYKfuY36K6GG3JCQ\n  url: cszxgc1xg44499b7\n  prev_uuid: Q64oWkEJyWN9W6HA\n  sibling_uuid: DUB0D9AKK0likFPP\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147991949\n  level: 0\n  id: 147991949\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 21 合并两个有序链表\n  uuid: DUB0D9AKK0likFPP\n  url: dcidazawmep66kvf\n  prev_uuid: ZYKfuY36K6GG3JCQ\n  sibling_uuid: JGz8qO7-UCqfmKRQ\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147991981\n  level: 0\n  id: 147991981\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 31 下一个排列\n  uuid: JGz8qO7-UCqfmKRQ\n  url: bzdwvakyt0q7h55f\n  prev_uuid: DUB0D9AKK0likFPP\n  sibling_uuid: hJybbEKV2Okjvfrc\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992039\n  level: 0\n  id: 147992039\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 32 最长有效括号\n  uuid: hJybbEKV2Okjvfrc\n  url: gkx2i4kcuqsp62q3\n  prev_uuid: JGz8qO7-UCqfmKRQ\n  sibling_uuid: P-POKc-Eq_5qhdtz\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992075\n  level: 0\n  id: 147992075\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 39 组合总和\n  uuid: P-POKc-Eq_5qhdtz\n  url: gii9er6dcbq51d04\n  prev_uuid: hJybbEKV2Okjvfrc\n  sibling_uuid: HMcs-WNiT1LU5pVk\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992119\n  level: 0\n  id: 147992119\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 42 接雨水\n  uuid: HMcs-WNiT1LU5pVk\n  url: kxktgivrkdl6wz5z\n  prev_uuid: P-POKc-Eq_5qhdtz\n  sibling_uuid: 7gA8hFWs4G74fr6W\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992139\n  level: 0\n  id: 147992139\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 46 全排列\n  uuid: 7gA8hFWs4G74fr6W\n  url: xxua341nz98mow62\n  prev_uuid: HMcs-WNiT1LU5pVk\n  sibling_uuid: 6SInaQv7zqTeQYUG\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992165\n  level: 0\n  id: 147992165\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 53 最大子序和\n  uuid: 6SInaQv7zqTeQYUG\n  url: wrfwwaild6gqpi22\n  prev_uuid: 7gA8hFWs4G74fr6W\n  sibling_uuid: zbwrvrvQZhDpHcKC\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992175\n  level: 0\n  id: 147992175\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 56 合并区间\n  uuid: zbwrvrvQZhDpHcKC\n  url: xr8llnbke55x4fkg\n  prev_uuid: 6SInaQv7zqTeQYUG\n  sibling_uuid: eBOqa-7ikOmOtO9r\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992185\n  level: 0\n  id: 147992185\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 67 二进制求和\n  uuid: eBOqa-7ikOmOtO9r\n  url: zd7gktt83m37uc1q\n  prev_uuid: zbwrvrvQZhDpHcKC\n  sibling_uuid: lDvlUWzwCFyaopLw\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992190\n  level: 0\n  id: 147992190\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 70 爬楼梯\n  uuid: lDvlUWzwCFyaopLw\n  url: ru99qh59e3y5cia2\n  prev_uuid: eBOqa-7ikOmOtO9r\n  sibling_uuid: rrwD5FgxzKY4Gpwr\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992201\n  level: 0\n  id: 147992201\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 88 合并两个有序数组\n  uuid: rrwD5FgxzKY4Gpwr\n  url: szusblg76edira1c\n  prev_uuid: lDvlUWzwCFyaopLw\n  sibling_uuid: 6QxpLgzCGRMJc-J6\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992021\n  level: 0\n  id: 147992021\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 94 二叉树的中序遍历\n  uuid: 6QxpLgzCGRMJc-J6\n  url: knlpiyei2hl9rzt3\n  prev_uuid: rrwD5FgxzKY4Gpwr\n  sibling_uuid: aFtiTAdnF7CKhtgt\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992224\n  level: 0\n  id: 147992224\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 101 对称二叉树\n  uuid: aFtiTAdnF7CKhtgt\n  url: aoxk7rmkecx7z4ge\n  prev_uuid: 6QxpLgzCGRMJc-J6\n  sibling_uuid: T603eLVmpywbRmGU\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992241\n  level: 0\n  id: 147992241\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 102 二叉树的层序遍历\n  uuid: T603eLVmpywbRmGU\n  url: zffm0kp0s6wve8bh\n  prev_uuid: aFtiTAdnF7CKhtgt\n  sibling_uuid: jmy47wNGCp0OMDBw\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992251\n  level: 0\n  id: 147992251\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 104 二叉树的最大深度\n  uuid: jmy47wNGCp0OMDBw\n  url: xvcbss1txad8x08f\n  prev_uuid: T603eLVmpywbRmGU\n  sibling_uuid: TbQVp_I6xpqwIknG\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992262\n  level: 0\n  id: 147992262\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 111 二叉树的最小深度\n  uuid: TbQVp_I6xpqwIknG\n  url: gfu8qrvtcc3a60vi\n  prev_uuid: jmy47wNGCp0OMDBw\n  sibling_uuid: 84vPb9Z8OKiDHJgZ\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992282\n  level: 0\n  id: 147992282\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 112 路径总和\n  uuid: 84vPb9Z8OKiDHJgZ\n  url: lizcps0saeod0pey\n  prev_uuid: TbQVp_I6xpqwIknG\n  sibling_uuid: gsgwoclNI27-MYBk\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992298\n  level: 0\n  id: 147992298\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 121 买卖股票的最佳时机\n  uuid: gsgwoclNI27-MYBk\n  url: eqag967oiizb6p3i\n  prev_uuid: 84vPb9Z8OKiDHJgZ\n  sibling_uuid: KlLSis2eG5DamkCt\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992309\n  level: 0\n  id: 147992309\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 129 求根到叶子节点数字之和\n  uuid: KlLSis2eG5DamkCt\n  url: hpwmmdrcgd8zvtmh\n  prev_uuid: gsgwoclNI27-MYBk\n  sibling_uuid: 80Okgq3-oE8vSpC4\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992322\n  level: 0\n  id: 147992322\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 141 环型链表\n  uuid: 80Okgq3-oE8vSpC4\n  url: drdzvh5hf9g1kmak\n  prev_uuid: KlLSis2eG5DamkCt\n  sibling_uuid: 4xSu26xVAWy5Bhq5\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992330\n  level: 0\n  id: 147992330\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 146 LRU缓存机制\n  uuid: 4xSu26xVAWy5Bhq5\n  url: pzx6s6b15eoogm9h\n  prev_uuid: 80Okgq3-oE8vSpC4\n  sibling_uuid: cgBOZtnI9VLErmqr\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992342\n  level: 0\n  id: 147992342\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 151 反转字符串中的单词\n  uuid: cgBOZtnI9VLErmqr\n  url: fqoogl0zhx7wttrd\n  prev_uuid: 4xSu26xVAWy5Bhq5\n  sibling_uuid: 3L1GJnf7HpSxz9a5\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147751033\n  level: 0\n  id: 147751033\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 155 最小栈\n  uuid: 3L1GJnf7HpSxz9a5\n  url: ywtlc7gvif4kuckp\n  prev_uuid: cgBOZtnI9VLErmqr\n  sibling_uuid: g40aZbGc0NtScNSt\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992376\n  level: 0\n  id: 147992376\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 160 相交链表\n  uuid: g40aZbGc0NtScNSt\n  url: dtfon507inu95297\n  prev_uuid: 3L1GJnf7HpSxz9a5\n  sibling_uuid: VY4pQ951swxUHN4N\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992387\n  level: 0\n  id: 147992387\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 162 寻找峰值\n  uuid: VY4pQ951swxUHN4N\n  url: csbwdm6dx7o922us\n  prev_uuid: g40aZbGc0NtScNSt\n  sibling_uuid: jRFXsVO2auHn3mBK\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147718381\n  level: 0\n  id: 147718381\n  open_window: 1\n  visible: 0\n- type: DOC\n  title: 169 多数元素\n  uuid: jRFXsVO2auHn3mBK\n  url: gbwgs8281hrgu2p5\n  prev_uuid: VY4pQ951swxUHN4N\n  sibling_uuid: M-IW-4k9BYGmwE5A\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992418\n  level: 0\n  id: 147992418\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 200 岛屿数量\n  uuid: M-IW-4k9BYGmwE5A\n  url: hhrm6w6r9fm90ugh\n  prev_uuid: jRFXsVO2auHn3mBK\n  sibling_uuid: UumAIFlOK6KlxrXu\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992427\n  level: 0\n  id: 147992427\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 206 反转链表\n  uuid: UumAIFlOK6KlxrXu\n  url: gprthzske3qs9xdi\n  prev_uuid: M-IW-4k9BYGmwE5A\n  sibling_uuid: _ggJN2LjLAazwCEb\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992433\n  level: 0\n  id: 147992433\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 209 长度最小的子数组\n  uuid: _ggJN2LjLAazwCEb\n  url: dsz8vf1e2w1ui24m\n  prev_uuid: UumAIFlOK6KlxrXu\n  sibling_uuid: '-D0BIBDk_G03exTI'\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147451598\n  level: 0\n  id: 147451598\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 215 数组中的第K个最大元素\n  uuid: '-D0BIBDk_G03exTI'\n  url: idavgg7e0ry9gawk\n  prev_uuid: _ggJN2LjLAazwCEb\n  sibling_uuid: LyX62bT4EPTpESlc\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147876068\n  level: 0\n  id: 147876068\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 226 翻转二叉树\n  uuid: LyX62bT4EPTpESlc\n  url: ss2ir5pkqhohctlb\n  prev_uuid: '-D0BIBDk_G03exTI'\n  sibling_uuid: ASAC50CVabAnrfR5\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992479\n  level: 0\n  id: 147992479\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 238 除自身以外数组的乘积\n  uuid: ASAC50CVabAnrfR5\n  url: pnbw26bnt40vohxk\n  prev_uuid: LyX62bT4EPTpESlc\n  sibling_uuid: 4ajZIEKjwOjpC_Ri\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147751162\n  level: 0\n  id: 147751162\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 322 零钱兑换\n  uuid: 4ajZIEKjwOjpC_Ri\n  url: evzdsp8i9z9iz1m9\n  prev_uuid: ASAC50CVabAnrfR5\n  sibling_uuid: ybNfKJP90CNQ95up\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992508\n  level: 0\n  id: 147992508\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 334 递增的三元子序列\n  uuid: ybNfKJP90CNQ95up\n  url: dkktq1ez0d5no8b5\n  prev_uuid: 4ajZIEKjwOjpC_Ri\n  sibling_uuid: izCSq4UA7udwUgGS\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147853149\n  level: 0\n  id: 147853149\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 345 反转字符串中的元音字母\n  uuid: izCSq4UA7udwUgGS\n  url: gqccwkdpgo04oeaf\n  prev_uuid: ybNfKJP90CNQ95up\n  sibling_uuid: 4nNqqOCjAxtgfryN\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147750802\n  level: 0\n  id: 147750802\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 415 字符串相加\n  uuid: 4nNqqOCjAxtgfryN\n  url: sw165ohocfoif7g3\n  prev_uuid: izCSq4UA7udwUgGS\n  sibling_uuid: eUwbAk5ZESHOdwCJ\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992529\n  level: 0\n  id: 147992529\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 443 压缩字符串\n  uuid: eUwbAk5ZESHOdwCJ\n  url: xzyrc9xgzo0aiu10\n  prev_uuid: 4nNqqOCjAxtgfryN\n  sibling_uuid: 5isNHBjoZWJY0rqG\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147875594\n  level: 0\n  id: 147875594\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 509 斐波那契数\n  uuid: 5isNHBjoZWJY0rqG\n  url: vpk2fcb8bc2r1ad5\n  prev_uuid: eUwbAk5ZESHOdwCJ\n  sibling_uuid: hEHSMukKLz8LgdJ4\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147992568\n  level: 0\n  id: 147992568\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 605 种花问题\n  uuid: hEHSMukKLz8LgdJ4\n  url: gtlqi9gf62em4cr1\n  prev_uuid: 5isNHBjoZWJY0rqG\n  sibling_uuid: O8NsEdUMxID6uArM\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147745513\n  level: 0\n  id: 147745513\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 1071 字符串的最大公因子\n  uuid: O8NsEdUMxID6uArM\n  url: rd4ob184gdlope5a\n  prev_uuid: hEHSMukKLz8LgdJ4\n  sibling_uuid: cmYeCXTaXQ4HAG6S\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147740806\n  level: 0\n  id: 147740806\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 1143 最长公共子序列\n  uuid: cmYeCXTaXQ4HAG6S\n  url: kbtwmpzch9x5aqku\n  prev_uuid: O8NsEdUMxID6uArM\n  sibling_uuid: '-YscIPwThxhY7WAF'\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147718465\n  level: 0\n  id: 147718465\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 1431 拥有最多糖果的孩子\n  uuid: '-YscIPwThxhY7WAF'\n  url: dxn5xdxqh1ggc326\n  prev_uuid: cmYeCXTaXQ4HAG6S\n  sibling_uuid: 0oXS9Rh1T3xKhIW5\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147742194\n  level: 0\n  id: 147742194\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 1768 交替合并字符串\n  uuid: 0oXS9Rh1T3xKhIW5\n  url: mzu6pzt99ofgmdyg\n  prev_uuid: '-YscIPwThxhY7WAF'\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 147717947\n  level: 0\n  id: 147717947\n  open_window: 1\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 51,
    "likes_count": 0,
    "watches_count": 0,
    "content_updated_at": "2023-11-23T19:01:46.000Z",
    "created_at": "2023-11-19T17:46:55.000Z",
    "updated_at": "2023-11-23T19:01:46.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-22T20:13:30.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/gklbh2",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [
    {
      "id": 17002553,
      "title": "简单",
      "doc_id": 11416831,
      "book_id": 44292824,
      "user_id": 732231,
      "created_at": "2023-11-23T16:19:18.000Z",
      "updated_at": "2023-11-23T16:19:18.000Z",
      "_serializer": "v2.tag"
    }
  ],
  "latest_version_id": 2137271843,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}