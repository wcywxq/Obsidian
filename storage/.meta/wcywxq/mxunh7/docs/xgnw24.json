{
  "id": 72212268,
  "slug": "xgnw24",
  "title": "Monorepo",
  "description": "大型项目管理  Monorepo背景一个体系庞大的代码库拆分成多个单独的具有独立版本的 package，对于开发实际的代码共享非常有用。数量较少的时候，多个仓库维护不会有太大问题，但是当独立 package 数量越来越多的时候，就会暴露出很多开发困扰的问题：跨越很多代码存储库，修改代码很麻烦i...",
  "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1648745861879-4f0cfeac-98d9-4bb6-976c-ce3d58870495.png",
  "user_id": 732231,
  "book_id": 26225124,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"JA07R\"><span class=\"ne-text\">大型项目管理  Monorepo</span></h2><h3 id=\"x1ZjE\"><span class=\"ne-text\">背景</span></h3><p id=\"u2e632aaa\" class=\"ne-p\"><span class=\"ne-text\">一个体系庞大的代码库拆分成多个单独的具有独立版本的 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\">，对于开发实际的代码共享非常有用。数量较少的时候，多个仓库维护不会有太大问题，但是当独立 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\"> 数量越来越多的时候，就会暴露出很多开发困扰的问题：</span></p><ol class=\"ne-ol\"><li id=\"u9902f6b3\"><span class=\"ne-text\">跨越很多代码存储库，修改代码很麻烦</span></li><li id=\"ufa96120e\"><code class=\"ne-code\"><span class=\"ne-text\">issue</span></code><span class=\"ne-text\"> 难以统一追踪、管理，因为其分散在独立的 </span><code class=\"ne-code\"><span class=\"ne-text\">repo</span></code><span class=\"ne-text\"> 里</span></li><li id=\"u893ee488\"><span class=\"ne-text\">跨存储库的代码测试非常复杂</span></li><li id=\"u8fd3db18\"><span class=\"ne-text\">多个 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\"> 之间相互依赖，对于互相引用的版本号依赖维护成本非常高，开发人员不得不使用 </span><code class=\"ne-code\"><span class=\"ne-text\">npm link</span></code><span class=\"ne-text\"> 的方式去引用依赖</span></li></ol><p id=\"u4bdd18fc\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u5ed6653c\" class=\"ne-p\"><span class=\"ne-text\">为了解决上面这些问题，一些项目会将其代码库统一组织到多包存储库中，我们称之为 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepos</span></code><span class=\"ne-text\">。如：</span><code class=\"ne-code\"><span class=\"ne-text\">babel</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">react</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">angular</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">ember</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">meteor</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">jest</span></code><span class=\"ne-text\">之类的项目以及许多其他项目都在单个存储库中开发所有软件包</span></p><p id=\"u2382a6fb\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648745861879-4f0cfeac-98d9-4bb6-976c-ce3d58870495.png\" width=\"600\" id=\"ufb051cd7\" class=\"ne-image\"></p><h3 id=\"WDvDL\"><span class=\"ne-text\">概念</span></h3><p id=\"u95179c94\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">Menorepo</span></code><span class=\"ne-text\"> 是管理项目代码的一个方式，指在一个项目仓库 </span><code class=\"ne-code\"><span class=\"ne-text\">repo</span></code><span class=\"ne-text\"> 中管理多个模块/包(</span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\">)，不同于常见的每个模块建立一个 </span><code class=\"ne-code\"><span class=\"ne-text\">repo</span></code><span class=\"ne-text\">。</span></p><p id=\"uad5b860b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><div data-type=\"success\" class=\"ne-alert\"><p id=\"ua18f5de6\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">Meonorepo</span></code><span class=\"ne-text\">的好处：</span></p><p id=\"ua2f329e1\" class=\"ne-p\" style=\"text-indent: 2em\"><span class=\"ne-text\">统一的工作流、</span><code class=\"ne-code\"><span class=\"ne-text\">Code Shaking</span></code><span class=\"ne-text\">。搭建一套脚手架，就能管理(构建、测试、发布)多个 package，统一测试、统一发版。</span></p></div><p id=\"u9ee7ed42\" class=\"ne-p\"><br></p><div data-type=\"danger\" class=\"ne-alert\"><p id=\"u8a7c6853\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">Meonorepo</span></code><span class=\"ne-text\">的坏处：</span></p><p id=\"u63ade5a2\" class=\"ne-p\" style=\"text-indent: 2em\"><span class=\"ne-text\">就是 </span><code class=\"ne-code\"><span class=\"ne-text\">repo</span></code><span class=\"ne-text\">的体积会比较大，由于每个 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\">都有自己的 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\">，会安装自己的 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\">，但是大概率会很多包是重复的，这就使本来就很大的 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\">变得更大。</span></p></div><p id=\"ud4fc82ae\" class=\"ne-p\"><span class=\"ne-text\"></span></p><div data-type=\"info\" class=\"ne-alert\"><p id=\"uee3af175\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">Meonorepo</span></code><span class=\"ne-text\">的解决方案：</span></p><p id=\"u03183c70\" class=\"ne-p\" style=\"text-indent: 2em\"><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\">和</span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\">特性。</span></p><p id=\"uc46ba0dc\" class=\"ne-p\"><br></p><p id=\"u54cd54c2\" class=\"ne-p\"><span class=\"ne-text\">对于 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\">包重复安装的问题：</span></p><p id=\"u5100dad8\" class=\"ne-p\" style=\"text-indent: 2em\"><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\">提供了 </span><code class=\"ne-code\"><span class=\"ne-text\">--hoist</span></code><span class=\"ne-text\">选项，相同的依赖，会</span><strong><span class=\"ne-text\">提升</span></strong><span class=\"ne-text\">到 </span><code class=\"ne-code\"><span class=\"ne-text\">repo</span></code><span class=\"ne-text\">根目录下安装(比较鸡肋)，</span><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\"> 直接以字符串对比 </span><code class=\"ne-code\"><span class=\"ne-text\">dependency</span></code><span class=\"ne-text\"> 的版本号，完全相同才会进行提升，</span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 的 </span><code class=\"ne-code\"><span class=\"ne-text\">semver</span></code><span class=\"ne-text\"> 约定(语义化版本规范)在这里并不起作用。</span></p><p id=\"u81347626\" class=\"ne-p\" style=\"text-indent: 2em\"><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\"> 作为包管理器很好的解决了这个问题，只需要在根 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\">中以 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\">字段声明 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\"> 目录和 </span><code class=\"ne-code\"><span class=\"ne-text\">&quot;private&quot;: true</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\">就会以 </span><code class=\"ne-code\"><span class=\"ne-text\">menorepo</span></code><span class=\"ne-text\">的方式管理 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\">。</span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\">会以 </span><code class=\"ne-code\"><span class=\"ne-text\">semver</span></code><span class=\"ne-text\">约定来分析 </span><code class=\"ne-code\"><span class=\"ne-text\">dependencies</span></code><span class=\"ne-text\">的版本，安装依赖时更快、占用体积更小。(</span><code class=\"ne-code\"><span class=\"ne-text\">pnpm</span></code><span class=\"ne-text\">也支持 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\">)</span></p><p id=\"u77df6c63\" class=\"ne-p\" style=\"text-indent: 2em\"><span class=\"ne-text\">在 </span><code class=\"ne-code\"><span class=\"ne-text\">npm7.x+</span></code><span class=\"ne-text\"> 后，也开始支持了 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 特性，这个功能让我们在本地开发包，尤其是多个互相依赖的包时更加得心应手。它可以避免我们再手动的去执行 </span><code class=\"ne-code\"><span class=\"ne-text\">npm link</span></code><span class=\"ne-text\"> 命令，而是在</span><code class=\"ne-code\"><span class=\"ne-text\">npm install</span></code><span class=\"ne-text\"> 的时候，会自动把 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\">下面的合法包，自动创建符号链接到根目录的 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\">里。能够被单独作为一个包创建符号链接的文件夹，我们就称为一个</span><code class=\"ne-code\"><span class=\"ne-text\">workspace</span></code><span class=\"ne-text\">，所以是可以有多个</span><code class=\"ne-code\"><span class=\"ne-text\">workspace</span></code><span class=\"ne-text\"> 的，可以在 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 的 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 字段中进行配置。</span></p></div><h3 id=\"gLXts\"><span class=\"ne-text\">lerna 介绍</span></h3><h4 id=\"KinvH\"><span class=\"ne-text\">lerna 特性</span></h4><ol class=\"ne-ol\"><li id=\"u3a0ab3e5\"><span class=\"ne-text\">自动解决 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\"> 之间的依赖关系</span></li><li id=\"u0536c488\"><span class=\"ne-text\">通过 </span><code class=\"ne-code\"><span class=\"ne-text\">git</span></code><span class=\"ne-text\"> 检测文件改动，自动发布</span></li><li id=\"u8ee976f0\"><span class=\"ne-text\">根据 </span><code class=\"ne-code\"><span class=\"ne-text\">git</span></code><span class=\"ne-text\"> 提交记录，自动生成 </span><code class=\"ne-code\"><span class=\"ne-text\">CHANGELOG</span></code></li></ol><p id=\"u3aeb1188\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u385b940d\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\"> 不负责构建、测试等任务，它提出了一种集中管理 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\"> 的目录模式，提供了一套自动化管理程序，让开发者不必再深耕到具体的组件里维护内容，在项目根目录就可以全局掌控，基于 </span><code class=\"ne-code\"><span class=\"ne-text\">npm scripts</span></code><span class=\"ne-text\">，可以很好地完成组件构建，代码格式化等操作，并在最后用 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\"> 统一变更 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\"> 版本，将其发布上传至远端。</span></p><h4 id=\"jUT5Q\"><span class=\"ne-text\">lerna 常用命令</span></h4><ul class=\"ne-ul\"><li id=\"u001c375c\"><code class=\"ne-code\"><span class=\"ne-text\">lerna init</span></code><span class=\"ne-text\">：初始化 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 工程项目，生成 </span><code class=\"ne-code\"><span class=\"ne-text\">packages/</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">lerna.json</span></code></li></ul><pre data-language=\"markdown\" id=\"SALCV\" class=\"ne-codeblock language-markdown\">.\n├── lerna.json\n├── package.json\n└── packages/ # 这里将存放所有子 repo 目录\n    ├── project_1/\n    │   ├── index.js\n    │   ├── node_modules/\n    │   └── package.json\n    ├── project_2/\n    │   ├── index.js\n    │   ├── node_module/\n    │   └── package.json\n    ...</pre><ul class=\"ne-ul\"><li id=\"uaec811cd\"><code class=\"ne-code\"><span class=\"ne-text\">lerna bootstrap --hoist</span></code><span class=\"ne-text\"> 为所有项目安装依赖，并链接所有依赖包，类似于 </span><code class=\"ne-code\"><span class=\"ne-text\">npm i</span></code><span class=\"ne-text\">使用</span><code class=\"ne-code\"><span class=\"ne-text\">--hoist</span></code><span class=\"ne-text\"> 选项后，所有公共的依赖都只会安装在根目录的 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\"> 目录中去,而不会在每个包目录下的 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\"> 中都保留各自的依赖包。</span></li><li id=\"ua7e80eb9\"><code class=\"ne-code\"><span class=\"ne-text\">lerna clean</span></code><span class=\"ne-text\"> 删除所有项目的 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\"> 目录</span></li><li id=\"ua163dc27\"><code class=\"ne-code\"><span class=\"ne-text\">lerna run [script]</span></code><span class=\"ne-text\"> 默认为所有的项目运行 </span><code class=\"ne-code\"><span class=\"ne-text\">npm run [script]</span></code><span class=\"ne-text\">脚本，可以指定项目；</span></li><li id=\"u2b81b98e\"><code class=\"ne-code\"><span class=\"ne-text\">lerna changed</span></code><span class=\"ne-text\"> 列出下次发版 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna publish</span></code><span class=\"ne-text\"> 要更新的包。</span></li><li id=\"u1f2f485d\"><code class=\"ne-code\"><span class=\"ne-text\">lerna publish</span></code><span class=\"ne-text\"> 版本发布，按提示选择版本号(递增，或自定义)，将会执行以下步骤：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u215f4efe\"><span class=\"ne-text\">运行 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna updated</span></code><span class=\"ne-text\"> 来决定哪一个包需要被 </span><code class=\"ne-code\"><span class=\"ne-text\">publish</span></code></li><li id=\"u75e46789\"><span class=\"ne-text\">如果有必要，将会更新 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna.json</span></code><span class=\"ne-text\"> 中的 </span><code class=\"ne-code\"><span class=\"ne-text\">version</span></code></li><li id=\"u863db64c\"><span class=\"ne-text\">将所有更新过的的包中的 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 的 </span><code class=\"ne-code\"><span class=\"ne-text\">version</span></code><span class=\"ne-text\"> 字段更新</span></li><li id=\"u06710d39\"><span class=\"ne-text\">将所有更新过的包中的依赖更新</span></li><li id=\"udd1363f7\"><span class=\"ne-text\">为新版本创建一个 </span><code class=\"ne-code\"><span class=\"ne-text\">git commit</span></code><span class=\"ne-text\"> 或 </span><code class=\"ne-code\"><span class=\"ne-text\">tag</span></code></li><li id=\"u7e972dc0\"><span class=\"ne-text\">将包 </span><code class=\"ne-code\"><span class=\"ne-text\">publish</span></code><span class=\"ne-text\"> 到 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 上；注意要先用 </span><code class=\"ne-code\"><span class=\"ne-text\">npm adduser</span></code><span class=\"ne-text\"> 登录 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 源，否则会失败；</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ub1724b6c\"><code class=\"ne-code\"><span class=\"ne-text\">lerna add [@version] [--dev] [--exact] [--peer]</span></code><span class=\"ne-text\"> ：可以指定为某一个或所有的包安装依赖，依赖可以是外部(</span><code class=\"ne-code\"><span class=\"ne-text\">npm i </span></code><span class=\"ne-text\">安装的)，也可以是内部依赖(</span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\">/下的包，会创建符号链接)，</span><code class=\"ne-code\"><span class=\"ne-text\">example</span></code><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ubb0369d9\"><code class=\"ne-code\"><span class=\"ne-text\">lerna add babel</span></code><span class=\"ne-text\"> , 该命令会在 </span><code class=\"ne-code\"><span class=\"ne-text\">package-1</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">package-2</span></code><span class=\"ne-text\"> 下安装 </span><code class=\"ne-code\"><span class=\"ne-text\">babel</span></code></li><li id=\"u62a42391\"><code class=\"ne-code\"><span class=\"ne-text\">lerna add react --scope=package-1</span></code><span class=\"ne-text\"> ,该命令会在 </span><code class=\"ne-code\"><span class=\"ne-text\">package-1</span></code><span class=\"ne-text\"> 下安装 </span><code class=\"ne-code\"><span class=\"ne-text\">react</span></code></li><li id=\"u746ec85d\"><code class=\"ne-code\"><span class=\"ne-text\">lerna add package-2 --scope=package-1</span></code><span class=\"ne-text\">，该命令会在 </span><code class=\"ne-code\"><span class=\"ne-text\">package-1</span></code><span class=\"ne-text\"> 下安装 </span><code class=\"ne-code\"><span class=\"ne-text\">package-2</span></code></li></ul></ul><ul class=\"ne-ul\"><li id=\"ucbfb9f1d\"><code class=\"ne-code\"><span class=\"ne-text\">lerna create [loc]</span></code><span class=\"ne-text\"> 创建一个 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\"> 管理的包</span></li><li id=\"ua7b98b64\"><code class=\"ne-code\"><span class=\"ne-text\">lerna ls</span></code><span class=\"ne-text\"> 控制台打印 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\"> 下的包名</span></li><li id=\"u506742c9\"><code class=\"ne-code\"><span class=\"ne-text\">lerna link</span></code><span class=\"ne-text\"> 类似 </span><code class=\"ne-code\"><span class=\"ne-text\">npm link</span></code></li></ul><h4 id=\"bkDYM\"><span class=\"ne-text\">lerna.json 配置介绍</span></h4><pre data-language=\"json\" id=\"znv2d\" class=\"ne-codeblock language-json\">{\n  &quot;version&quot;: &quot;1.1.1&quot;,\n  &quot;npmClient&quot;: &quot;yarn&quot;,\n  &quot;command&quot;: {\n    &quot;publish&quot;: {\n      &quot;ignoreChanges&quot;: [&quot;ignored-file&quot;, &quot;*.md&quot;],\n      &quot;message&quot;: &quot;chore(release): publish %s&quot;,\n      &quot;registry&quot;: &quot;https://npm.pkg.github.com&quot;\n    },\n    &quot;bootstrap&quot;: {\n      &quot;ignore&quot;: &quot;component-*&quot;,\n      &quot;npmClientArgs&quot;: [&quot;--no-package-lock&quot;]\n    }\n  },\n  &quot;packages&quot;: [&quot;packages/*&quot;]\n}</pre><ul class=\"ne-ul\"><li id=\"u3fcaf057\"><code class=\"ne-code\"><span class=\"ne-text\">version</span></code><span class=\"ne-text\">：当前存储库的版本，当为 </span><code class=\"ne-code\"><span class=\"ne-text\">independent</span></code><span class=\"ne-text\"> 时，开启独立模式</span></li><li id=\"u0307f208\"><code class=\"ne-code\"><span class=\"ne-text\">npmClient</span></code><span class=\"ne-text\">：一个选项，用于指定运行命令的特定客户端。 可更改为 </span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\"></span></li><li id=\"u3506ba5e\"><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\">：用作包装位置的 </span><code class=\"ne-code\"><span class=\"ne-text\">glob</span></code><span class=\"ne-text\"> 数组， 默认为 </span><code class=\"ne-code\"><span class=\"ne-text\">[&quot;packages/*&quot;]</span></code><span class=\"ne-text\">, 也可以修改为其他目录</span></li><li id=\"uaf90e68a\"><code class=\"ne-code\"><span class=\"ne-text\">command.publish.ignoreChanges</span></code><span class=\"ne-text\">: 接受一组 </span><code class=\"ne-code\"><span class=\"ne-text\">glob</span></code><span class=\"ne-text\"> 数组，忽略不必要的更改发布新版本，例如 </span><code class=\"ne-code\"><span class=\"ne-text\">md</span></code><span class=\"ne-text\"> 修改</span></li><li id=\"u46c00d71\"><code class=\"ne-code\"><span class=\"ne-text\">command.publish.message</span></code><span class=\"ne-text\">: 执行发布版本时自动会 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 一条指定记录，当消息记录里包含 </span><code class=\"ne-code\"><span class=\"ne-text\">%s</span></code><span class=\"ne-text\"> 将会替换为 </span><code class=\"ne-code\"><span class=\"ne-text\">v1.1.1</span></code><span class=\"ne-text\">, 如果是 </span><code class=\"ne-code\"><span class=\"ne-text\">%v</span></code><span class=\"ne-text\"> 则直接替换为 </span><code class=\"ne-code\"><span class=\"ne-text\">1.1.1</span></code><span class=\"ne-text\">，如果是 </span><code class=\"ne-code\"><span class=\"ne-text\">independent</span></code><span class=\"ne-text\"> 模式则会独立更新每个包的版本</span></li><li id=\"uc8c92ba4\"><code class=\"ne-code\"><span class=\"ne-text\">command.publish.registry</span></code><span class=\"ne-text\">: 设置要发布到的自定义地址</span></li><li id=\"u6fa66ae0\"><code class=\"ne-code\"><span class=\"ne-text\">command.bootstrap.ignore</span></code><span class=\"ne-text\">: 接收一个 </span><code class=\"ne-code\"><span class=\"ne-text\">glob</span></code><span class=\"ne-text\"> 数组， 指定运行 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna bootstrap</span></code><span class=\"ne-text\"> 命令时需要忽略的目录</span></li><li id=\"u77f0f179\"><code class=\"ne-code\"><span class=\"ne-text\">command.bootstrap.npmClientArg</span></code><span class=\"ne-text\">: 接收一个字符串数组， 将参数直接传递给 </span><code class=\"ne-code\"><span class=\"ne-text\">npm install</span></code></li><li id=\"ud01b1464\"><code class=\"ne-code\"><span class=\"ne-text\">command.bootstrap.scope</span></code><span class=\"ne-text\">: 一组 </span><code class=\"ne-code\"><span class=\"ne-text\">glob</span></code><span class=\"ne-text\">，用于限制在运行 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna bootstrap</span></code><span class=\"ne-text\"> 命令时将 包含的软件包。</span></li></ul><h4 id=\"d2nuq\"><span class=\"ne-text\">lerna 多包版本管理机制</span></h4><ul class=\"ne-ul\"><li id=\"u5bb3cf3f\"><code class=\"ne-code\"><span class=\"ne-text\">Fixed/Locked mode(default)</span></code><span data-color=\"5\" id=\"YBLfG\" class=\"ne-label\">固定模式</span></li></ul><p id=\"uaeb92082\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">vue</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">babel</span></code><span class=\"ne-text\">都是用这种，在</span><code class=\"ne-code\"><span class=\"ne-text\">publish</span></code><span class=\"ne-text\">的时候，会在</span><code class=\"ne-code\"><span class=\"ne-text\">lerna.json</span></code><span class=\"ne-text\">文件里面 </span><code class=\"ne-code\"><span class=\"ne-text\">&quot;version&quot;: &quot;0.15&quot;</span></code><span class=\"ne-text\">，依据这个号进行增加，只选择一次，其他有改动的包自动更新版本号</span></p><ul class=\"ne-ul\"><li id=\"u216c373e\"><code class=\"ne-code\"><span class=\"ne-text\">Independence mode</span></code><span data-color=\"5\" id=\"s4fQy\" class=\"ne-label\">独立模式</span></li></ul><p id=\"u53b02706\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">lerna init --independent</span></code><span class=\"ne-text\">初始化项目，</span><code class=\"ne-code\"><span class=\"ne-text\">lerna.json</span></code><span class=\"ne-text\">文件里面 </span><code class=\"ne-code\"><span class=\"ne-text\">&quot;version&quot;: &quot;independent&quot;</span></code><span class=\"ne-text\">，每次</span><code class=\"ne-code\"><span class=\"ne-text\">publish</span></code><span class=\"ne-text\">时，都将得到一个提示符，提示每个已更改的包，以指定是：</span><code class=\"ne-code\"><span class=\"ne-text\">major</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">minor</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">patch</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">premajor</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">preminor</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">prepatch</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">prerelease</span></code></p><h4 id=\"RSN7r\"><span class=\"ne-text\">启用 workspace 模式</span></h4><p id=\"u9ba4b383\" class=\"ne-p\"><span class=\"ne-text\">默认是 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\">，而且每个子 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\"> 都有自己的</span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\">，通过这样的设置后，只有顶层有一个</span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code></p><ul class=\"ne-ul\"><li id=\"u77d28581\"><span class=\"ne-text\">修改顶层</span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">lerna.json</span></code></li></ul><pre data-language=\"javascript\" id=\"sp9Eq\" class=\"ne-codeblock language-javascript\">// package.json 文件加入\n{\n  &quot;private&quot;: true,\n  &quot;workspaces&quot;: [&quot;packages/*&quot;]\n}\n\n// lerna.json 文件加入\n{\n  &quot;useWorkspaces&quot;: true,\n  &quot;npmClient&quot;: &quot;yarn&quot; // 启动 yarn，不设置默认为 npm，npm7.x+ 支持 workspaces\n}</pre><h3 id=\"p58HN\"><span class=\"ne-text\">Workspaces</span></h3><h4 id=\"ncpyk\"><span class=\"ne-text\">使用</span></h4><pre data-language=\"json\" id=\"u1BJg\" class=\"ne-codeblock language-json\">{\n  &quot;name&quot;: &quot;vite-pros&quot;,\n  &quot;description&quot;: &quot;使用 vite 作为构建工具的前端项目&quot;,\n  &quot;private&quot;: true,\n  &quot;workspaces&quot;: [\n    &quot;packages/*&quot;\n  ]\n}</pre><p id=\"ua3c4e806\" class=\"ne-p\"><span class=\"ne-text\">其中 </span><code class=\"ne-code\"><span class=\"ne-text\">private: true</span></code><span class=\"ne-text\"> 是必需的！工作区并不意味着要发布，所以增加了这个安全措施，以确保没有任何东西可以意外暴露它们。</span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 字段是包含每个工作区的路径的数组。由于追踪每个路径可能很乏味，因此该字段也接受 </span><code class=\"ne-code\"><span class=\"ne-text\">glob</span></code><span class=\"ne-text\"> 模式！</span></p><ol class=\"ne-ol\"><li id=\"u555f27a4\"><span class=\"ne-text\">新建 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\"> 目录</span></li><li id=\"ue2db347a\"><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\"> 目录下就是我们的正常的工程了。</span></li></ol><h4 id=\"H2maV\"><span class=\"ne-text\">介绍</span></h4><ol class=\"ne-ol\"><li id=\"u2085ae89\"><span class=\"ne-text\">安装依赖</span></li></ol><pre data-language=\"shell\" id=\"PtWEF\" class=\"ne-codeblock language-shell\">[yarn|npm] install</pre><ol start=\"2\" class=\"ne-ol\"><li id=\"u8e605db0\"><span class=\"ne-text\">为某一个子项目安装依赖</span></li></ol><pre data-language=\"shell\" id=\"ga4J6\" class=\"ne-codeblock language-shell\"># pro1 = packages/pro1\n# npm\nnpm install vue -w pro1\n# yarn\nyarn workspace pro1 add -D react</pre><div data-type=\"tips\" class=\"ne-alert\"><p id=\"u012f4013\" class=\"ne-p\"><span class=\"ne-text\">这里可以依赖同一个工作区下的其它工程，以 </span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\"> 为例，如果依赖同工作区下的其它工程，</span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 的 </span><code class=\"ne-code\"><span class=\"ne-text\">dependencies</span></code><span class=\"ne-text\"> 就会发生改变，例如：</span><code class=\"ne-code\"><span class=\"ne-text\">&quot;ph-utils&quot;: &quot;workspace:packages/utils&quot;</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">&quot;ph-terminal-spinner&quot;: &quot;workspace:packages/terminal-spinner&quot;</span></code><span class=\"ne-text\"> 这就表明依赖的是同一个工作区的其它工程。<br /></span><span class=\"ne-text\">这样的可能有人就会有疑问了，如果 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 改变了后，上传后会怎么样呢？这个就是下面的命令了。</span></p></div><ol start=\"3\" class=\"ne-ol\"><li id=\"ub348f77a\"><span class=\"ne-text\">发布</span></li></ol><pre data-language=\"shell\" id=\"Uvsga\" class=\"ne-codeblock language-shell\"># npm\nnpm publish\n# yarn 发布的时候，会自动替换本地依赖的版本\nyarn workspace pro1 npm publish</pre><div data-type=\"tips\" class=\"ne-alert\"><p id=\"ucd718b36\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\"> 发布的时候，如果会有本地有本地依赖如：</span><code class=\"ne-code\"><span class=\"ne-text\">&quot;ph-utils&quot;: &quot;workspace:packages/utils&quot;</span></code><span class=\"ne-text\"> 则会被替换为 </span><code class=\"ne-code\"><span class=\"ne-text\">&quot;ph-utils&quot;: &quot;0.0.1&quot;</span></code><span class=\"ne-text\"> 其中 </span><code class=\"ne-code\"><span class=\"ne-text\">0.0.1</span></code><span class=\"ne-text\"> 就是本地 </span><code class=\"ne-code\"><span class=\"ne-text\">ph-utils</span></code><span class=\"ne-text\"> 的版本。</span></p></div><h2 id=\"XGgua\"><span class=\"ne-text\">Monorepo 方案实践</span></h2><h3 id=\"gn9GX\"><span class=\"ne-text\">1. 锁定环境: Volta</span></h3><p id=\"u39a03f48\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648747756372-c5aea202-62a4-4b65-8394-b7b81a777c52.png\" width=\"484.8\" id=\"u024df87c\" class=\"ne-image\"></p><p id=\"u8034b404\" class=\"ne-p\"><a href=\"https://volta.sh/\" data-href=\"https://volta.sh/\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Volta</span></a><span class=\"ne-text\"> 是一个 </span><code class=\"ne-code\"><span class=\"ne-text\">JavaScript</span></code><span class=\"ne-text\"> 工具管理器，它可以让我们轻松地在项目中锁定 </span><code class=\"ne-code\"><span class=\"ne-text\">node</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\"> 的版本。你只需在安装完 </span><code class=\"ne-code\"><span class=\"ne-text\">Volta</span></code><span class=\"ne-text\"> 后，在项目的根目录中执行 </span><code class=\"ne-code\"><span class=\"ne-text\">volta pin</span></code><span class=\"ne-text\"> 命令，那么无论您当前使用的 </span><code class=\"ne-code\"><span class=\"ne-text\">node</span></code><span class=\"ne-text\"> 或 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\">（</span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\">）版本是什么，</span><code class=\"ne-code\"><span class=\"ne-text\">volta</span></code><span class=\"ne-text\"> 都会自动切换为您指定的版本。</span></p><p id=\"u27b08639\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"uda2bfaf6\" class=\"ne-p\"><span class=\"ne-text\">因此，除了使用 </span><code class=\"ne-code\"><span class=\"ne-text\">Docker</span></code><span class=\"ne-text\"> 和显示在文档中声明 </span><code class=\"ne-code\"><span class=\"ne-text\">node</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\">（</span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\">）的版本之外，您就有了另一个锁定环境的强力工具。</span></p><p id=\"u95ef6475\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u8bfa757a\" class=\"ne-p\"><span class=\"ne-text\">而且相较于 </span><code class=\"ne-code\"><span class=\"ne-text\">nvm</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">Volta</span></code><span class=\"ne-text\"> 还具有一个诱人的特性：当您项目的 </span><code class=\"ne-code\"><span class=\"ne-text\">CLI</span></code><span class=\"ne-text\"> 工具与全局 </span><code class=\"ne-code\"><span class=\"ne-text\">CLI</span></code><span class=\"ne-text\"> 工具不一致时，</span><code class=\"ne-code\"><span class=\"ne-text\">Volta</span></code><span class=\"ne-text\"> 可以做到在项目根目录下自动识别，切换到项目指定的版本，这一切都是由 </span><code class=\"ne-code\"><span class=\"ne-text\">Volta</span></code><span class=\"ne-text\"> 默默做到的，开发者不必关心任何事情。</span></p><h3 id=\"p9nEa\"><span class=\"ne-text\">2. 复用 packages: workspace</span></h3><p id=\"u579703a6\" class=\"ne-p\"><span class=\"ne-text\">使用 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 策略后，收益最大的两点是：</span></p><ol class=\"ne-ol\"><li id=\"ua8fe2baf\"><span class=\"ne-text\">避免重复安装包，因此减少了磁盘空间的占用，并降低了构建时间</span><span class=\"ne-text\">；</span></li><li id=\"u9b1733f2\"><span class=\"ne-text\">内部代码可以彼此相互引用；</span></li></ol><p id=\"u4a5d6344\" class=\"ne-p\"><br></p><p id=\"u8a2977be\" class=\"ne-p\"><span class=\"ne-text\">这两项好处全部都可以由一个成熟的包管理工具来完成，对前端开发而言，即是 </span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\">（</span><code class=\"ne-code\"><span class=\"ne-text\">1.0</span></code><span class=\"ne-text\"> 以上）或 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\">（</span><code class=\"ne-code\"><span class=\"ne-text\">7.0</span></code><span class=\"ne-text\"> 以上）通过名为 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 的特性实现的（⚠️ 注意，支持 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 特性的 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 目前依旧不是 </span><code class=\"ne-code\"><span class=\"ne-text\">TLS</span></code><span class=\"ne-text\"> 版本）。</span></p><p id=\"u85ddeb7c\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u243ab284\" class=\"ne-p\"><span class=\"ne-text\">为了实现前面提到的两点收益，您需要在代码中做三件事：</span></p><ol class=\"ne-ol\"><li id=\"u4a0cbee6\"><span class=\"ne-text\">调整目录结构，将相互关联的项目放置在同一个目录，推荐命名为 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\">；</span></li><li id=\"u6722b056\"><span class=\"ne-text\">在项目根目录里的 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件中，设置 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 属性，属性值为之前创建的目录；</span></li><li id=\"ue81d7c17\"><span class=\"ne-text\">同样，在 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件中，设置 </span><code class=\"ne-code\"><span class=\"ne-text\">private</span></code><span class=\"ne-text\"> 属性为 </span><code class=\"ne-code\"><span class=\"ne-text\">true</span></code><span class=\"ne-text\"> (为了避免我们误操作将仓库发布)；</span></li></ol><p id=\"ud8c4315f\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(44, 62, 80); font-size: 16px\"></span></p><p id=\"uafaffd24\" class=\"ne-p\"><span class=\"ne-text\">经过修改，项目目录看起来应该是这样：</span></p><pre data-language=\"markdown\" id=\"Fgeoa\" class=\"ne-codeblock language-markdown\">.\n├── package.json\n└── packages/\n    ├── @mono/project_1/ # 推荐使用 `@&lt;项目名&gt;/&lt;子项目名&gt;` 的方式命名\n    │   ├── index.js\n    │   └── package.json\n    └── @mono/project_2/\n        ├── index.js\n        └── package.json</pre><p id=\"u2d47e904\" class=\"ne-p\"><span class=\"ne-text\">而当在项目根目录中执行 </span><code class=\"ne-code\"><span class=\"ne-text\">npm install</span></code><span class=\"ne-text\"> 或 </span><code class=\"ne-code\"><span class=\"ne-text\">yarn install</span></code><span class=\"ne-text\"> 后，会发现在项目根目录中出现了 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\"> 目录，并且该目录不仅拥有所有子项目共用的 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 包，还包含了我们的子项目。因此，我们可以在子项目中通过各种模块引入机制，像引入一般的 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 模块一样引入其他子项目的代码。</span></p><p id=\"ucd5633a0\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u96363688\" class=\"ne-p\"><span class=\"ne-text\">请注意我们对子项目的命名，统一以 </span><code class=\"ne-code\"><span class=\"ne-text\">@&lt;repo_name&gt;/</span></code><span class=\"ne-text\"> 开头，这是一种社区最佳实践，不仅可以让用户更容易了解整个应用的架构，也方便您在项目中更快捷的找到所需的子项目。</span></p><p id=\"u30f5279b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u70ecb25d\" class=\"ne-p\"><span class=\"ne-text\">至此，我们已经完成了 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 策略的核心部分，实在是很容易不是吗？但是老话说「行百里者半九十」，距离优雅的搭建一个 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 项目，我们还有一些路要走。</span></p><h3 id=\"eHgR9\"><span class=\"ne-text\">3. 统一配置: 合并同类项 - Eslint、TypeScript、Babel</span></h3><p id=\"uba766d35\" class=\"ne-p\"><span class=\"ne-text\">编写代码要遵循 </span><code class=\"ne-code\"><span class=\"ne-text\">DRY</span></code><span class=\"ne-text\"> 原则（</span><code class=\"ne-code\"><span class=\"ne-text\">Don't Repeat Yourself</span></code><span class=\"ne-text\"> 的缩写）。那么，理所当然地，我们应该尽量避免在多个子项目中放置重复的 </span><code class=\"ne-code\"><span class=\"ne-text\">eslintrc</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">tsconfig</span></code><span class=\"ne-text\"> 等配置文件。幸运的是，</span><code class=\"ne-code\"><span class=\"ne-text\">Babel</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">Eslint</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">Typescript</span></code><span class=\"ne-text\"> 都提供了相应的功能让我们减少自我重复。</span></p><h4 id=\"p6Ser\"><span class=\"ne-text\">TypeScript</span></h4><p id=\"u4ee1bd18\" class=\"ne-p\"><span class=\"ne-text\">我们可以在 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\">目录中放置 </span><code class=\"ne-code\"><span class=\"ne-text\">tsconfig.setting.json</span></code><span class=\"ne-text\"> 文件，并在文件中定义通用的 </span><code class=\"ne-code\"><span class=\"ne-text\">ts</span></code><span class=\"ne-text\"> 配置。然后，在每个子项目中，可以通过 </span><code class=\"ne-code\"><span class=\"ne-text\">extends</span></code><span class=\"ne-text\"> 属性，引入通用配置，并设置 </span><code class=\"ne-code\"><span class=\"ne-text\">compilerOptions.composite</span></code><span class=\"ne-text\"> 的值为 </span><code class=\"ne-code\"><span class=\"ne-text\">true</span></code><span class=\"ne-text\">，理想情况下，子项目中的 </span><code class=\"ne-code\"><span class=\"ne-text\">tsconfig</span></code><span class=\"ne-text\"> 文件应该仅包含下述内容：</span></p><pre data-language=\"json\" id=\"NFkg1\" class=\"ne-codeblock language-json\">{\n  &quot;extends&quot;: &quot;../tsconfig.setting.json&quot;, // 继承 packages 目录下通用配置\n  &quot;compilerOptions&quot;: {\n    &quot;composite&quot;: true, // 用于帮助 TypeScript 快速确定引用工程的输出文件位置\n    &quot;outDir&quot;: &quot;dist&quot;,\n    &quot;rootDir&quot;: &quot;src&quot;\n  },\n  &quot;include&quot;: [&quot;src&quot;]\n}</pre><h4 id=\"p5cZY\"><span class=\"ne-text\">Eslint</span></h4><p id=\"u14014cce\" class=\"ne-p\"><span class=\"ne-text\">对于 </span><code class=\"ne-code\"><span class=\"ne-text\">Eslint</span></code><span class=\"ne-text\"> 配置文件，我们也可以如法炮制，这样定义子项目的 </span><code class=\"ne-code\"><span class=\"ne-text\">.eslintrc</span></code><span class=\"ne-text\"> 文件内容：</span></p><pre data-language=\"json\" id=\"FyMlt\" class=\"ne-codeblock language-json\">{\n  &quot;extends&quot;: &quot;../../.eslintrc&quot;, // 注意这里的不同\n  &quot;parserOptions&quot;: {\n    &quot;project&quot;: &quot;tsconfig.json&quot;\n  }\n}</pre><p id=\"ud0104e85\" class=\"ne-p\"><span class=\"ne-text\">对于通用的 </span><code class=\"ne-code\"><span class=\"ne-text\">eslint</span></code><span class=\"ne-text\"> 配置，我们并没有将其放置在 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\"> 目录中，而是放在整个项目的根目录下，这样做的目的是：一些编辑器插件只会在项目根目录寻找 </span><code class=\"ne-code\"><span class=\"ne-text\">.eslintrc</span></code><span class=\"ne-text\"> 文件，因此为了我们的项目能够保持良好的</span><strong><span class=\"ne-text\">「开发环境一致性」</span></strong><span class=\"ne-text\">，请务必将通用配置文件放置在项目的根目录中。</span></p><h4 id=\"WcliS\"><span class=\"ne-text\">Babel</span></h4><p id=\"ufe6b5695\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">Babel</span></code><span class=\"ne-text\">配置文件合并的方式与 </span><code class=\"ne-code\"><span class=\"ne-text\">TypeScript</span></code><span class=\"ne-text\">如出一辙，甚至更加简单，我们只需在子项目中的 </span><code class=\"ne-code\"><span class=\"ne-text\">.babelrc</span></code><span class=\"ne-text\">文件中这样声明即可：</span></p><pre data-language=\"json\" id=\"MbgKB\" class=\"ne-codeblock language-json\">{\n  &quot;extends&quot;: &quot;../.babelrc&quot;\n}</pre><p id=\"u6d08a3f4\" class=\"ne-p\"><span class=\"ne-text\">当一切准备就绪后，我们的项目目录应该大致呈现如下所示的结构：</span></p><pre data-language=\"markdown\" id=\"dSfzZ\" class=\"ne-codeblock language-markdown\">.\n├── package.json\n├── .eslintrc\n└── packages/\n    │   ├── tsconfig.settings.json\n    │   ├── .babelrc\n    ├── @mono/project_1/\n    │   ├── index.js\n    │   ├── .eslintrc\n    │   ├── .babelrc\n    │   ├── tsconfig.json\n    │   └── package.json\n    └───@mono/project_2/\n        ├── index.js\n        ├── .eslintrc\n        ├── .babelrc\n        ├── tsconfig.json\n        └── package.json</pre><h3 id=\"xyN0R\"><span class=\"ne-text\">4. 统一命令脚本: scripty</span></h3><p id=\"uab4ff4b7\" class=\"ne-p\"><span class=\"ne-text\">在上一步中，我们尽可能的将所有配置文件进行抽象，从而精简了代码，并提高了整个项目的一致性。我们的整个仓库也因此有了</span><strong><span class=\"ne-text\">「更浓郁的 monorepo 风味 ☕️」</span></strong><span class=\"ne-text\">。但如果仔细审视我们的整个工程文件，还有一处存在着明显的瑕疵和一些恼人的坏味道，当您仔细审视您的众多 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件时，您就知道我在说什么了 </span><code class=\"ne-code\"><span class=\"ne-text\">-- scripts</span></code><span class=\"ne-text\"> 脚本。</span></p><p id=\"ub834fdb1\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u35e8dab9\" class=\"ne-p\"><span class=\"ne-text\">如果您的子项目足够多，您可能会发现，每个 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件中的 </span><code class=\"ne-code\"><span class=\"ne-text\">scripts</span></code><span class=\"ne-text\"> 属性都大同小异，并且一些 </span><code class=\"ne-code\"><span class=\"ne-text\">scripts</span></code><span class=\"ne-text\"> 充斥着各种 </span><code class=\"ne-code\"><span class=\"ne-text\">Linux</span></code><span class=\"ne-text\"> 语法，例如管道操作符，重定向或目录生成。重复带来低效，复杂则使人难以理解，这都是需要我们解决的问题。</span></p><p id=\"u588a17bc\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u90dc71a8\" class=\"ne-p\"><span class=\"ne-text\">这里给出的解决方案是，使用 </span><a href=\"https://www.npmjs.com/package/scripty\" data-href=\"https://www.npmjs.com/package/scripty\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">scripty</span></a><span class=\"ne-text\"> 管理您的脚本命令，简单来说，</span><code class=\"ne-code\"><span class=\"ne-text\">scripty</span></code><span class=\"ne-text\"> 允许您将脚本命令定义在文件中，并在 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件中直接通过文件名来引用。这使我们可以实现如下目的：</span></p><ol class=\"ne-ol\"><li id=\"uad44ff18\"><span class=\"ne-text\">子项目间复用脚本命令</span><span class=\"ne-text\">；</span></li><li id=\"u8a5717f5\"><span class=\"ne-text\">像写代码一样编写脚本命令，无论它有多复杂，而在调用时，像调用函数一样调用；</span></li></ol><p id=\"u46137330\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u938d3aa2\" class=\"ne-p\"><span class=\"ne-text\">通过使用 </span><code class=\"ne-code\"><span class=\"ne-text\">scripty</span></code><span class=\"ne-text\"> 管理我们的 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 应用，目录结构看起来将会是这样：</span></p><pre data-language=\"markdown\" id=\"Zz4W6\" class=\"ne-codeblock language-markdown\">.\n├── package.json\n├── .eslintrc\n├── scirpts/ # 这里存放所有的脚本\n│   │   ├── packages/ # 包级别脚本\n│   │   │   ├── build.sh\n│   │   │   └── test.sh\n│   └───└── workspaces/ # 全局脚本\n│           ├── build.sh\n│           └── test.sh\n└── packages/\n    │   ├── tsconfig.settings.json\n    │   ├── .babelrc\n    ├── @mono/project_1/\n    │   ├── index.js\n    │   ├── .eslintrc\n    │   ├── .babelrc\n    │   ├── tsconfig.json\n    │   └── package.json\n    └── @mono/project_2/\n        ├── index.js\n        ├── .eslintrc\n        ├── .babelrc\n        ├── tsconfig.json\n        └── package.json</pre><p id=\"u28248414\" class=\"ne-p\"><span class=\"ne-text\">注意，我们脚本分为两类</span><strong><span class=\"ne-text\">「package 级别」</span></strong><span class=\"ne-text\">与</span><strong><span class=\"ne-text\">「workspace 级别</span></strong><span class=\"ne-text\">」，并且分别放在两个文件夹内。这样做的好处在于，我们既可以在项目根目录执行全局脚本，也可以针对单个项目执行特定的脚本。</span></p><p id=\"u2986ff87\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u6a689a35\" class=\"ne-p\"><span class=\"ne-text\">通过使用 </span><code class=\"ne-code\"><span class=\"ne-text\">scripty</span></code><span class=\"ne-text\">，子项目的 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件中的 </span><code class=\"ne-code\"><span class=\"ne-text\">scripts</span></code><span class=\"ne-text\"> 属性将变得非常精简：</span></p><pre data-language=\"json\" id=\"fHxeB\" class=\"ne-codeblock language-json\">{\n  ...\n  &quot;scripts&quot;: {\n    &quot;test&quot;: &quot;scripty&quot;,\n    &quot;lint&quot;: &quot;scripty&quot;,\n    &quot;build&quot;: &quot;scripty&quot;\n  },\n  &quot;scripty&quot;: {\n    &quot;path&quot;: &quot;../../scripts/packages&quot; // 注意这里我们指定了 scripty 的路径\n  },\n  ...\n}</pre><p id=\"u585c33a7\" class=\"ne-p\"><span class=\"ne-text\">大功告成！🎉 至此，我们尽己所能地删除了整个项目中的重复代码，让整个项目变得干净，清爽并且有极强的复用性。</span></p><div data-type=\"info\" class=\"ne-alert\"><p id=\"u48cf5b3f\" class=\"ne-p\"><span class=\"ne-text\">🧉 小贴士：</span></p><p id=\"ufd40322e\" class=\"ne-p\"><span class=\"ne-text\">别忘了使用 </span><code class=\"ne-code\"><span class=\"ne-text\">chmod -R u+x scripts</span></code><span class=\"ne-text\"> 命令使所有的 </span><code class=\"ne-code\"><span class=\"ne-text\">shell</span></code><span class=\"ne-text\"> 脚本具备可执行权限，也千万别忘了把这条贴士写在您的 </span><code class=\"ne-code\"><span class=\"ne-text\">README.md</span></code><span class=\"ne-text\"> 文件中！</span></p></div><h3 id=\"HpKUb\"><span class=\"ne-text\">5. 统一包管理: lerna</span></h3><p id=\"u81dd33a5\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648747742904-bb7df604-18ef-4547-93c2-382b3cd5a574.png\" width=\"600\" id=\"u76e7c2b9\" class=\"ne-image\"></p><p id=\"u37da6979\" class=\"ne-p\"><span class=\"ne-text\">我有时会感慨自己的灵感匮乏，怎么就想不到 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 这样既有神话色彩又能自我释义的好名字。您可以大胆想象，九头龙的每只龙头都在帮您管理着一个子项目，而您只需要骑在龙身上发号施令的场景，这基本上就是我们使用 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 时的直观感受。</span></p><p id=\"ued055ae9\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ubbeb37d6\" class=\"ne-p\"><span class=\"ne-text\">这也是为什么当我们提起 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 策略，就几乎不得不提到 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 的原因了，它的确提供了一种非常便捷的方式供我们管理 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 项目。当子项目越多时，</span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 就越能显示其威力。</span></p><p id=\"u3ebdd90c\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u777b0f5a\" class=\"ne-p\"><span class=\"ne-text\">当多个子项目放在一个代码仓库，并且子项目之间又相互依赖时，我们面临的棘手问题有两个：</span></p><ol class=\"ne-ol\"><li id=\"u27c47ae8\"><span class=\"ne-text\">如果我们需要在多个子目录执行相同的命令，我们需要手动进入各个目录，并执行命令</span><span class=\"ne-text\">；</span></li><li id=\"udead62d3\"><span class=\"ne-text\">当一个子项目更新后，我们只能手动追踪依赖该项目的其他子项目，并升级其版本</span><span class=\"ne-text\">。</span></li></ol><p id=\"u56c53fac\" class=\"ne-p\"><span class=\"ne-text\">通过使用 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\">，这些棘手的问题都将不复存在。</span></p><p id=\"ua2b12287\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ua81c0076\" class=\"ne-p\"><span class=\"ne-text\">当在项目根目录使用 </span><code class=\"ne-code\"><span class=\"ne-text\">npx lerna init</span></code><span class=\"ne-text\"> 初始化后，我们的根目录会新增一个 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna.json</span></code><span class=\"ne-text\"> 文件，默认内容为：</span></p><pre data-language=\"json\" id=\"sf4mf\" class=\"ne-codeblock language-json\">{\n  &quot;packages&quot;: [&quot;packages/*&quot;],\n  &quot;version&quot;: &quot;0.0.0&quot;\n}</pre><p id=\"u8b66d0f7\" class=\"ne-p\"><span class=\"ne-text\">让我们稍稍改动这个文件，使其变为：</span></p><pre data-language=\"json\" id=\"sgCQn\" class=\"ne-codeblock language-json\">{\n  &quot;packages&quot;: [&quot;packages/*&quot;],\n  &quot;npmClient&quot;: &quot;yarn&quot;,\n  &quot;version&quot;: &quot;independent&quot;,\n  &quot;useWorkspaces&quot;: true,\n}</pre><p id=\"u7159bb2a\" class=\"ne-p\"><span class=\"ne-text\">可以注意到，我们显示声明了我们的包客户端（</span><code class=\"ne-code\"><span class=\"ne-text\">npmClient</span></code><span class=\"ne-text\">）为 </span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\">，并且让 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 追踪我们 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 设置的目录，这样我们就依旧保留了之前 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 的所有特性（子项目引用和通用包提升）。</span></p><p id=\"u89c66570\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ub429bda9\" class=\"ne-p\"><span class=\"ne-text\">除此之外一个有趣的改动在于我们将 </span><code class=\"ne-code\"><span class=\"ne-text\">version</span></code><span class=\"ne-text\"> 属性指定为一个关键字 </span><code class=\"ne-code\"><span class=\"ne-text\">independent</span></code><span class=\"ne-text\">，这将告诉 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\"> 应该将每个子项目的版本号看作是相互独立的。当某个子项目代码更新后，运行 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna publish</span></code><span class=\"ne-text\"> 时，</span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 将监听到代码变化的子项目并以交互式 </span><code class=\"ne-code\"><span class=\"ne-text\">CLI</span></code><span class=\"ne-text\"> 方式让开发者决定需要升级的版本号，关联的子项目版本号不会自动升级，反之，当我们填入固定的版本号时，则任一子项目的代码变动，都会导致所有子项目的版本号基于当前指定的版本号升级。</span></p><p id=\"u0e61fc9c\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u52cf8053\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 提供了很多 </span><code class=\"ne-code\"><span class=\"ne-text\">CLI</span></code><span class=\"ne-text\"> 命令以满足我们的各种需求，但根据 2/8 法则，您应该首先关注以下这些命令：</span></p><ul class=\"ne-ul\"><li id=\"u6c700d82\"><code class=\"ne-code\"><span class=\"ne-text\">lerna bootstrap</span></code><span class=\"ne-text\">：等同于 lerna link + yarn install，用于创建符合链接并安装依赖包；</span></li><li id=\"uf9469c10\"><code class=\"ne-code\"><span class=\"ne-text\">lerna run</span></code><span class=\"ne-text\">：会像执行一个 for 循环一样，在所有子项目中执行 npm script 脚本，并且，它会非常智能的识别依赖关系，并从根依赖开始执行命令；</span></li><li id=\"u932e5cfe\"><code class=\"ne-code\"><span class=\"ne-text\">lerna exec</span></code><span class=\"ne-text\">：像 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna run </span></code><span class=\"ne-text\">一样，会按照依赖顺序执行命令，不同的是，它可以执行任何命令，例如 </span><code class=\"ne-code\"><span class=\"ne-text\">shell</span></code><span class=\"ne-text\"> 脚本；</span></li><li id=\"ub06c4bdf\"><code class=\"ne-code\"><span class=\"ne-text\">lerna publish</span></code><span class=\"ne-text\">：发布代码有变动的 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\">，因此首先您需要在使用 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 前使用 </span><code class=\"ne-code\"><span class=\"ne-text\">git commit</span></code><span class=\"ne-text\"> 命令提交代码，好让 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 有一个 </span><code class=\"ne-code\"><span class=\"ne-text\">baseline</span></code><span class=\"ne-text\">；</span></li><li id=\"u06b01b17\"><code class=\"ne-code\"><span class=\"ne-text\">lerna add</span></code><span class=\"ne-text\">：将本地或远程的包作为依赖添加至当前的 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 仓库中，该命令让 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 可以识别并追踪包之间的依赖关系，因此非常重要；</span></li></ul><pre data-language=\"shell\" id=\"g2KSh\" class=\"ne-codeblock language-shell\"># 向 @mono/project2 和 @mono/project3 中添加 @mono/project1\nlerna add @mono/project1 '@mono/project{2,3}'</pre><h4 id=\"IoUuw\"><span class=\"ne-text\">lerna 高级命令</span></h4><p id=\"u2fac2e13\" class=\"ne-p\"><span class=\"ne-text\">除了上面介绍到的常用命令外，</span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 还提供了一些参数满足我们更灵活的需求，例如：</span></p><ul class=\"ne-ul\"><li id=\"ua122680d\"><code class=\"ne-code\"><span class=\"ne-text\">--concurrency &lt;number&gt;</span></code><span class=\"ne-text\">：参数可以使 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 利用计算机上的多个核心，并发运行，从而提升构建速度；</span></li><li id=\"u5d330b31\"><code class=\"ne-code\"><span class=\"ne-text\">--scope '@mono/{pkg1,pkg2}'</span></code><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">--scope</span></code><span class=\"ne-text\"> 参数可以指定 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 命令的运行环境，通过使用该参数，</span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 将不再是一把梭的在所有仓库中执行命令，而是可以精准地在我们所指定的仓库中执行命令，并且还支持示例中的模版语法；</span></li><li id=\"ucbcd7067\"><code class=\"ne-code\"><span class=\"ne-text\">--stream</span></code><span class=\"ne-text\">：该参数可使我们查看 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 运行时的命令执行信息；</span></li></ul><h4 id=\"iCnP2\"><span class=\"ne-text\" style=\"color: rgb(44, 62, 80)\">npm 包本地发布：Verdaccio</span></h4><p id=\"u76369f55\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648748304497-5e3fff8e-c3f8-45d1-838f-c3e5bd18ed1c.png\" width=\"481.6\" id=\"u8ce3b6ee\" class=\"ne-image\"></p><p id=\"ue967177c\" class=\"ne-p\"><span class=\"ne-text\">看到这里，您可能想要亲自体验一把使用 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 管理/发布 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 项目的感觉。可是很快您会发现，将示例代码发布到真实世界的 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 仓库并非一个好主意，这多少有些令人沮丧，但是别担心，您可以使用 </span><a href=\"https://verdaccio.org/\" data-href=\"https://verdaccio.org/\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Verdaccio</span></a><span class=\"ne-text\"> 在本地创建一个 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 仓库作为代理，然后尽情体验 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 的种种强大之处。</span></p><p id=\"u8fce2d9a\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u06ffb147\" class=\"ne-p\"><span class=\"ne-text\">安装运行 </span><code class=\"ne-code\"><span class=\"ne-text\">Verdaccio</span></code><span class=\"ne-text\"> 非常简单，您只需运行：</span></p><pre data-language=\"shell\" id=\"Zj2aV\" class=\"ne-codeblock language-shell\">npm install --global verdaccio</pre><p id=\"u75c40ef9\" class=\"ne-p\"><span class=\"ne-text\">在全局安装 </span><code class=\"ne-code\"><span class=\"ne-text\">Verdaccio</span></code><span class=\"ne-text\"> 应用，然后在 </span><code class=\"ne-code\"><span class=\"ne-text\">shell</span></code><span class=\"ne-text\"> 中输入：</span></p><pre data-language=\"shell\" id=\"Ha0Mi\" class=\"ne-codeblock language-shell\">verdaccio</pre><p id=\"u5dc97380\" class=\"ne-p\"><span class=\"ne-text\">即可通过 </span><code class=\"ne-code\"><span class=\"ne-text\">localhost:4837</span></code><span class=\"ne-text\"> 访问您的本地代理 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 仓库，别忘了在您的项目根目录创建 </span><code class=\"ne-code\"><span class=\"ne-text\">.npmrc</span></code><span class=\"ne-text\"> 文件，并在文件中将 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 仓库地址改写为您的本地代理地址：</span></p><pre data-language=\"shell\" id=\"tHFHj\" class=\"ne-codeblock language-shell\">registry=&quot;http://localhost:4873/&quot;</pre><p id=\"ucf137b08\" class=\"ne-p\"><span class=\"ne-text\">大功告成 🙌！每当您执行 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna publish</span></code><span class=\"ne-text\"> 时，子项目所构建成的 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\"> 将会发布在本地 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 仓库中，而当您执行 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna bootstrap</span></code><span class=\"ne-text\"> 时，</span><code class=\"ne-code\"><span class=\"ne-text\">Verdaccio</span></code><span class=\"ne-text\"> 将会放行，让您成功从远程 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 仓库中拉取相应的代码。</span></p><h3 id=\"iwmes\"><span class=\"ne-text\">6. 格式化 commit 管理</span></h3><p id=\"u3950e952\" class=\"ne-p\"><span class=\"ne-text\">至此，我们已经掌握了组织一个项目级 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 仓库的所有前沿技巧，最后，让我们看看最后一个可以优化的地方：代码提交时，约束 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息。</span></p><p id=\"u43c1bb9b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u20f94032\" class=\"ne-p\"><span class=\"ne-text\">一个 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 仓库可能被不同的开发者提交不同子项目的代码，如果没有规范化的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息，在故障排查或版本回滚时毫无意外会遭遇灾难。因此，千万不要小看 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息格式化的重要性（当然，同样重要的还有代码注释！）。</span></p><p id=\"u0f6d9481\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ub83c335b\" class=\"ne-p\"><span class=\"ne-text\">为了我们能够一目了然的追踪每次代码变更的信息，我们使用 </span><a href=\"https://github.com/conventional-changelog/commitlint/#what-is-commitlint\" data-href=\"https://github.com/conventional-changelog/commitlint/#what-is-commitlint\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">commitlint</span></a><span class=\"ne-text\"> 工具作为格式化 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息的不二之选。</span></p><p id=\"udfabd56a\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ub23f9896\" class=\"ne-p\"><span class=\"ne-text\">顾名思义，</span><code class=\"ne-code\"><span class=\"ne-text\">commitlint</span></code><span class=\"ne-text\"> 可以帮助我们检查提交的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息，它强制约束我们的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息必须在开头附加指定类型，用于标示本次提交的大致意图，支持的类型关键字有：</span></p><ul class=\"ne-ul\"><li id=\"u26ab9e73\"><code class=\"ne-code\"><span class=\"ne-text\">feat</span></code><span class=\"ne-text\">：表示添加一个新特性；</span></li><li id=\"u8f5d8328\"><code class=\"ne-code\"><span class=\"ne-text\">chore</span></code><span class=\"ne-text\">：表示做了一些与特性和修复无关的「家务事」；</span></li><li id=\"ua1b40293\"><code class=\"ne-code\"><span class=\"ne-text\">fix</span></code><span class=\"ne-text\">：表示修复了一个 </span><code class=\"ne-code\"><span class=\"ne-text\">Bug</span></code><span class=\"ne-text\">；</span></li><li id=\"ue7db7ec0\"><code class=\"ne-code\"><span class=\"ne-text\">refactor</span></code><span class=\"ne-text\">：表示本次提交是因为重构了代码；</span></li><li id=\"u9a4f7abc\"><code class=\"ne-code\"><span class=\"ne-text\">style</span></code><span class=\"ne-text\">：表示代码美化或格式化；</span></li><li id=\"uc24c75fc\"><span class=\"ne-text\">...</span></li></ul><p id=\"u896e216b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u886f7219\" class=\"ne-p\"><span class=\"ne-text\">我强烈建议您遵循该规范编写您的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息，不要偷懒，坚持下去，您的 git 日志将会显得整齐，有条理，富有表现力，同时，您也会收到同行的交口称赞，人人都会以和您这样优雅的工程师合作为荣。</span></p><p id=\"uea56f20e\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u557fd3ea\" class=\"ne-p\"><span class=\"ne-text\">除了限定 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息类型外，</span><code class=\"ne-code\"><span class=\"ne-text\">commitlint</span></code><span class=\"ne-text\"> 还支持（虽然不是必须的）显示指定我们本次提交所对应的子项目名称。假如我们有一个名为 </span><code class=\"ne-code\"><span class=\"ne-text\">@mono/project1</span></code><span class=\"ne-text\"> 的子项目，我们针对该项目提交的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息可以写为：</span></p><pre data-language=\"git\" id=\"mS363\" class=\"ne-codeblock language-git\">git commit -m &quot;feat(project1): add a attractive button&quot; # 注意，我们省略了 @mono 的项目前缀</pre><p id=\"u33f250b2\" class=\"ne-p\"><span class=\"ne-text\">毫无疑问，这将会使我们的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息更具表现力。</span></p><p id=\"u1142642d\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"uff98ac97\" class=\"ne-p\"><span class=\"ne-text\">我们可以通过下面的命令安装 </span><code class=\"ne-code\"><span class=\"ne-text\">commitlint</span></code><span class=\"ne-text\"> 以及周边依赖：</span></p><pre data-language=\"shell\" id=\"RkIa0\" class=\"ne-codeblock language-shell\">npm i -D @commitlint/cli @commitlint/config-conventional @commitlint/config-lerna-scopes commitlint husky lerna-changelog</pre><p id=\"ua6fc73f1\" class=\"ne-p\"><span class=\"ne-text\">注意到了吗？我偷偷安装了 </span><a href=\"https://www.npmjs.com/package/husky\" data-href=\"https://www.npmjs.com/package/husky\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">husky</span></a><span class=\"ne-text\">，它能够帮助我们在提交 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息时自动运行 </span><code class=\"ne-code\"><span class=\"ne-text\">commitlint</span></code><span class=\"ne-text\"> 进行检查，但在这之前，我们需要再在根目录下的 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件里加点料，像这样：</span></p><pre data-language=\"json\" id=\"jzcnb\" class=\"ne-codeblock language-json\">{\n ...\n &quot;husky&quot;: {\n    &quot;hooks&quot;: {\n      &quot;commit-msg&quot;: &quot;commitlint -E HUSKY_GIT_PARAMS&quot;\n    }\n  }\n ...\n}</pre><p id=\"ucb1bc6e7\" class=\"ne-p\"><span class=\"ne-text\">为了能够让 </span><code class=\"ne-code\"><span class=\"ne-text\">commitlint</span></code><span class=\"ne-text\"> 感知我们的子项目名称，我们还需在项目根目录中增加 </span><code class=\"ne-code\"><span class=\"ne-text\">commitlint.config.js</span></code><span class=\"ne-text\"> 文件，并设置文件内容为：</span></p><pre data-language=\"javascript\" id=\"cPxqv\" class=\"ne-codeblock language-javascript\">module.exports = {\n  extends: [\n    &quot;@commitlint/config-conventional&quot;,\n    &quot;@commitlint/config-lerna-scopes&quot;,\n  ],\n};</pre><p id=\"uaafcda09\" class=\"ne-p\"><span class=\"ne-text\">至此，我们统一并规范化了 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 项目的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息，终于整个 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 工程化的最后一块拼图被我们拼上了！</span></p><p id=\"u76a2a263\" class=\"ne-p\"><span class=\"ne-text\">（顺便一提，您可以通过在命令行执行 </span><code class=\"ne-code\"><span class=\"ne-text\">echo &quot;build(project1): change something&quot; | npx commitlint</span></code><span class=\"ne-text\"> 命令即可验证您的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息是否通过 </span><code class=\"ne-code\"><span class=\"ne-text\">commitlint</span></code><span class=\"ne-text\"> 的检查。）</span></p></div>",
  "body": "<a name=\"JA07R\"></a>\n## 大型项目管理  Monorepo\n<a name=\"x1ZjE\"></a>\n### 背景\n一个体系庞大的代码库拆分成多个单独的具有独立版本的 `package`，对于开发实际的代码共享非常有用。数量较少的时候，多个仓库维护不会有太大问题，但是当独立 `package` 数量越来越多的时候，就会暴露出很多开发困扰的问题：\n\n1. 跨越很多代码存储库，修改代码很麻烦\n2. `issue` 难以统一追踪、管理，因为其分散在独立的 `repo` 里\n3. 跨存储库的代码测试非常复杂\n4. 多个 `package` 之间相互依赖，对于互相引用的版本号依赖维护成本非常高，开发人员不得不使用 `npm link` 的方式去引用依赖\n\n为了解决上面这些问题，一些项目会将其代码库统一组织到多包存储库中，我们称之为 `monorepos`。如：`babel`、`react`、`angular`、`ember`、`meteor`、`jest`之类的项目以及许多其他项目都在单个存储库中开发所有软件包<br />![babel 使用 monorepo 策略管理代码](https://cdn.nlark.com/yuque/0/2022/png/732231/1648745861879-4f0cfeac-98d9-4bb6-976c-ce3d58870495.png#clientId=u6fbcdb1d-5fd6-4&from=paste&height=281&id=ufb051cd7&originHeight=351&originWidth=750&originalType=binary&ratio=1&rotation=0&showTitle=true&size=284185&status=done&style=none&taskId=u303bc63b-4c32-41c9-aafa-5130ad049b5&title=babel%20%E4%BD%BF%E7%94%A8%20monorepo%20%E7%AD%96%E7%95%A5%E7%AE%A1%E7%90%86%E4%BB%A3%E7%A0%81&width=600 \"babel 使用 monorepo 策略管理代码\")\n<a name=\"WDvDL\"></a>\n### 概念\n`Menorepo` 是管理项目代码的一个方式，指在一个项目仓库 `repo` 中管理多个模块/包(`package`)，不同于常见的每个模块建立一个 `repo`。\n\n:::success\n`Meonorepo`的好处：<br />统一的工作流、`Code Shaking`。搭建一套脚手架，就能管理(构建、测试、发布)多个 package，统一测试、统一发版。\n:::\n\n:::danger\n`Meonorepo`的坏处：<br />就是 `repo`的体积会比较大，由于每个 `package`都有自己的 `package.json`，会安装自己的 `node_modules`，但是大概率会很多包是重复的，这就使本来就很大的 `node_modules`变得更大。\n:::\n\n:::info\n`Meonorepo`的解决方案：<br />`lerna`和`workspaces`特性。\n\n对于 `node_modules`包重复安装的问题：<br />`lerna`提供了 `--hoist`选项，相同的依赖，会**提升**到 `repo`根目录下安装(比较鸡肋)，`lerna` 直接以字符串对比 `dependency` 的版本号，完全相同才会进行提升，`npm` 的 `semver` 约定(语义化版本规范)在这里并不起作用。<br />`yarn` 作为包管理器很好的解决了这个问题，只需要在根 `package.json`中以 `workspaces`字段声明 `packages` 目录和 `\"private\": true`，`yarn`就会以 `menorepo`的方式管理 `packages`。`yarn`会以 `semver`约定来分析 `dependencies`的版本，安装依赖时更快、占用体积更小。(`pnpm`也支持 `workspaces`)<br />在 `npm7.x+` 后，也开始支持了 `workspaces` 特性，这个功能让我们在本地开发包，尤其是多个互相依赖的包时更加得心应手。它可以避免我们再手动的去执行 `npm link` 命令，而是在`npm install` 的时候，会自动把 `workspaces`下面的合法包，自动创建符号链接到根目录的 `node_modules`里。能够被单独作为一个包创建符号链接的文件夹，我们就称为一个`workspace`，所以是可以有多个`workspace` 的，可以在 `package.json` 的 `workspaces` 字段中进行配置。\n:::\n<a name=\"gLXts\"></a>\n### lerna 介绍\n<a name=\"KinvH\"></a>\n#### lerna 特性\n\n1. 自动解决 `packages` 之间的依赖关系\n2. 通过 `git` 检测文件改动，自动发布\n3. 根据 `git` 提交记录，自动生成 `CHANGELOG`\n\n`lerna` 不负责构建、测试等任务，它提出了一种集中管理 `package` 的目录模式，提供了一套自动化管理程序，让开发者不必再深耕到具体的组件里维护内容，在项目根目录就可以全局掌控，基于 `npm scripts`，可以很好地完成组件构建，代码格式化等操作，并在最后用 `lerna` 统一变更 `package` 版本，将其发布上传至远端。\n<a name=\"jUT5Q\"></a>\n#### lerna 常用命令\n\n- `lerna init`：初始化 `monorepo` 工程项目，生成 `packages/`、`package.json`、`lerna.json`\n```markdown\n.\n├── lerna.json\n├── package.json\n└── packages/ # 这里将存放所有子 repo 目录\n    ├── project_1/\n    │   ├── index.js\n    │   ├── node_modules/\n    │   └── package.json\n    ├── project_2/\n    │   ├── index.js\n    │   ├── node_module/\n    │   └── package.json\n    ...\n```\n\n- `lerna bootstrap --hoist` 为所有项目安装依赖，并链接所有依赖包，类似于 `npm i`使用`--hoist` 选项后，所有公共的依赖都只会安装在根目录的 `node_modules` 目录中去,而不会在每个包目录下的 `node_modules` 中都保留各自的依赖包。\n- `lerna clean` 删除所有项目的 `node_modules` 目录\n- `lerna run [script]` 默认为所有的项目运行 `npm run [script]`脚本，可以指定项目；\n- `lerna changed` 列出下次发版 `lerna publish` 要更新的包。\n- `lerna publish` 版本发布，按提示选择版本号(递增，或自定义)，将会执行以下步骤：\n   - 运行 `lerna updated` 来决定哪一个包需要被 `publish`\n   - 如果有必要，将会更新 `lerna.json` 中的 `version`\n   - 将所有更新过的的包中的 `package.json` 的 `version` 字段更新\n   - 将所有更新过的包中的依赖更新\n   - 为新版本创建一个 `git commit` 或 `tag`\n   - 将包 `publish` 到 `npm` 上；注意要先用 `npm adduser` 登录 `npm` 源，否则会失败；\n- `lerna add [@version] [--dev] [--exact] [--peer]` ：可以指定为某一个或所有的包安装依赖，依赖可以是外部(`npm i `安装的)，也可以是内部依赖(`packages`/下的包，会创建符号链接)，`example`：\n   - `lerna add babel` , 该命令会在 `package-1` 和 `package-2` 下安装 `babel`\n   - `lerna add react --scope=package-1` ,该命令会在 `package-1` 下安装 `react`\n   - `lerna add package-2 --scope=package-1`，该命令会在 `package-1` 下安装 `package-2`\n- `lerna create [loc]` 创建一个 `lerna` 管理的包\n- `lerna ls` 控制台打印 `packages` 下的包名\n- `lerna link` 类似 `npm link`\n<a name=\"bkDYM\"></a>\n#### lerna.json 配置介绍\n```json\n{\n  \"version\": \"1.1.1\",\n  \"npmClient\": \"yarn\",\n  \"command\": {\n    \"publish\": {\n      \"ignoreChanges\": [\"ignored-file\", \"*.md\"],\n      \"message\": \"chore(release): publish %s\",\n      \"registry\": \"https://npm.pkg.github.com\"\n    },\n    \"bootstrap\": {\n      \"ignore\": \"component-*\",\n      \"npmClientArgs\": [\"--no-package-lock\"]\n    }\n  },\n  \"packages\": [\"packages/*\"]\n}\n```\n\n- `version`：当前存储库的版本，当为 `independent` 时，开启独立模式\n- `npmClient`：一个选项，用于指定运行命令的特定客户端。 可更改为 `yarn`\n- `packages`：用作包装位置的 `glob` 数组， 默认为 `[\"packages/*\"]`, 也可以修改为其他目录\n- `command.publish.ignoreChanges`: 接受一组 `glob` 数组，忽略不必要的更改发布新版本，例如 `md` 修改\n- `command.publish.message`: 执行发布版本时自动会 `commit` 一条指定记录，当消息记录里包含 `%s` 将会替换为 `v1.1.1`, 如果是 `%v` 则直接替换为 `1.1.1`，如果是 `independent` 模式则会独立更新每个包的版本\n- `command.publish.registry`: 设置要发布到的自定义地址\n- `command.bootstrap.ignore`: 接收一个 `glob` 数组， 指定运行 `lerna bootstrap` 命令时需要忽略的目录\n- `command.bootstrap.npmClientArg`: 接收一个字符串数组， 将参数直接传递给 `npm install`\n- `command.bootstrap.scope`: 一组 `glob`，用于限制在运行 `lerna bootstrap` 命令时将 包含的软件包。\n<a name=\"d2nuq\"></a>\n#### lerna 多包版本管理机制\n\n- `Fixed/Locked mode(default)`固定模式\n\n`vue`、`babel`都是用这种，在`publish`的时候，会在`lerna.json`文件里面 `\"version\": \"0.15\"`，依据这个号进行增加，只选择一次，其他有改动的包自动更新版本号\n\n- `Independence mode`独立模式\n\n`lerna init --independent`初始化项目，`lerna.json`文件里面 `\"version\": \"independent\"`，每次`publish`时，都将得到一个提示符，提示每个已更改的包，以指定是：`major`、`minor`、`patch`、`premajor`、`preminor`、`prepatch`、`prerelease`\n<a name=\"RSN7r\"></a>\n#### 启用 workspace 模式\n默认是 `npm`，而且每个子 `package` 都有自己的`node_modules`，通过这样的设置后，只有顶层有一个`node_modules`\n\n- 修改顶层`package.json`、`lerna.json`\n```javascript\n// package.json 文件加入\n{\n  \"private\": true,\n  \"workspaces\": [\"packages/*\"]\n}\n\n// lerna.json 文件加入\n{\n  \"useWorkspaces\": true,\n  \"npmClient\": \"yarn\" // 启动 yarn，不设置默认为 npm，npm7.x+ 支持 workspaces\n}\n```\n<a name=\"p58HN\"></a>\n### Workspaces\n<a name=\"ncpyk\"></a>\n#### 使用\n```json\n{\n  \"name\": \"vite-pros\",\n  \"description\": \"使用 vite 作为构建工具的前端项目\",\n  \"private\": true,\n  \"workspaces\": [\n    \"packages/*\"\n  ]\n}\n```\n其中 `private: true` 是必需的！工作区并不意味着要发布，所以增加了这个安全措施，以确保没有任何东西可以意外暴露它们。`workspaces` 字段是包含每个工作区的路径的数组。由于追踪每个路径可能很乏味，因此该字段也接受 `glob` 模式！\n\n1. 新建 `packages` 目录\n2. `packages` 目录下就是我们的正常的工程了。\n<a name=\"H2maV\"></a>\n#### 介绍\n\n1. 安装依赖\n```shell\n[yarn|npm] install\n```\n\n2. 为某一个子项目安装依赖\n```shell\n# pro1 = packages/pro1\n# npm\nnpm install vue -w pro1\n# yarn\nyarn workspace pro1 add -D react\n```\n:::tips\n这里可以依赖同一个工作区下的其它工程，以 `yarn` 为例，如果依赖同工作区下的其它工程，`package.json` 的 `dependencies` 就会发生改变，例如：`\"ph-utils\": \"workspace:packages/utils\"`、`\"ph-terminal-spinner\": \"workspace:packages/terminal-spinner\"` 这就表明依赖的是同一个工作区的其它工程。<br />这样的可能有人就会有疑问了，如果 `package.json` 改变了后，上传后会怎么样呢？这个就是下面的命令了。\n:::\n\n3. 发布\n```shell\n# npm\nnpm publish\n# yarn 发布的时候，会自动替换本地依赖的版本\nyarn workspace pro1 npm publish\n```\n:::tips\n`yarn` 发布的时候，如果会有本地有本地依赖如：`\"ph-utils\": \"workspace:packages/utils\"` 则会被替换为 `\"ph-utils\": \"0.0.1\"` 其中 `0.0.1` 就是本地 `ph-utils` 的版本。\n:::\n<a name=\"XGgua\"></a>\n## Monorepo 方案实践\n<a name=\"gn9GX\"></a>\n### 1. 锁定环境: Volta\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1648747756372-c5aea202-62a4-4b65-8394-b7b81a777c52.png#clientId=u6fbcdb1d-5fd6-4&from=paste&height=230&id=u024df87c&originHeight=288&originWidth=606&originalType=binary&ratio=1&rotation=0&showTitle=false&size=42021&status=done&style=none&taskId=u8eae952d-3f68-4089-ab61-00ed5a55355&title=&width=484.8)<br />[Volta](https://volta.sh/) 是一个 `JavaScript` 工具管理器，它可以让我们轻松地在项目中锁定 `node`，`npm` 和 `yarn` 的版本。你只需在安装完 `Volta` 后，在项目的根目录中执行 `volta pin` 命令，那么无论您当前使用的 `node` 或 `npm`（`yarn`）版本是什么，`volta` 都会自动切换为您指定的版本。\n\n因此，除了使用 `Docker` 和显示在文档中声明 `node` 和 `npm`（`yarn`）的版本之外，您就有了另一个锁定环境的强力工具。\n\n而且相较于 `nvm`，`Volta` 还具有一个诱人的特性：当您项目的 `CLI` 工具与全局 `CLI` 工具不一致时，`Volta` 可以做到在项目根目录下自动识别，切换到项目指定的版本，这一切都是由 `Volta` 默默做到的，开发者不必关心任何事情。\n<a name=\"p9nEa\"></a>\n### 2. 复用 packages: workspace\n使用 `monorepo` 策略后，收益最大的两点是：\n\n1. 避免重复安装包，因此减少了磁盘空间的占用，并降低了构建时间；\n2. 内部代码可以彼此相互引用；\n\n这两项好处全部都可以由一个成熟的包管理工具来完成，对前端开发而言，即是 `yarn`（`1.0` 以上）或 `npm`（`7.0` 以上）通过名为 `workspaces` 的特性实现的（⚠️ 注意，支持 `workspaces` 特性的 `npm` 目前依旧不是 `TLS` 版本）。\n\n为了实现前面提到的两点收益，您需要在代码中做三件事：\n\n1. 调整目录结构，将相互关联的项目放置在同一个目录，推荐命名为 `packages`；\n2. 在项目根目录里的 `package.json` 文件中，设置 `workspaces` 属性，属性值为之前创建的目录；\n3. 同样，在 `package.json` 文件中，设置 `private` 属性为 `true` (为了避免我们误操作将仓库发布)；\n\n经过修改，项目目录看起来应该是这样：\n```markdown\n.\n├── package.json\n└── packages/\n    ├── @mono/project_1/ # 推荐使用 `@<项目名>/<子项目名>` 的方式命名\n    │   ├── index.js\n    │   └── package.json\n    └── @mono/project_2/\n        ├── index.js\n        └── package.json\n```\n而当在项目根目录中执行 `npm install` 或 `yarn install` 后，会发现在项目根目录中出现了 `node_modules` 目录，并且该目录不仅拥有所有子项目共用的 `npm` 包，还包含了我们的子项目。因此，我们可以在子项目中通过各种模块引入机制，像引入一般的 `npm` 模块一样引入其他子项目的代码。\n\n请注意我们对子项目的命名，统一以 `@<repo_name>/` 开头，这是一种社区最佳实践，不仅可以让用户更容易了解整个应用的架构，也方便您在项目中更快捷的找到所需的子项目。\n\n至此，我们已经完成了 `monorepo` 策略的核心部分，实在是很容易不是吗？但是老话说「行百里者半九十」，距离优雅的搭建一个 `monorepo` 项目，我们还有一些路要走。\n<a name=\"eHgR9\"></a>\n### 3. 统一配置: 合并同类项 - Eslint、TypeScript、Babel\n编写代码要遵循 `DRY` 原则（`Don't Repeat Yourself` 的缩写）。那么，理所当然地，我们应该尽量避免在多个子项目中放置重复的 `eslintrc`，`tsconfig` 等配置文件。幸运的是，`Babel`，`Eslint` 和 `Typescript` 都提供了相应的功能让我们减少自我重复。\n<a name=\"p6Ser\"></a>\n#### TypeScript\n我们可以在 `package.json`目录中放置 `tsconfig.setting.json` 文件，并在文件中定义通用的 `ts` 配置。然后，在每个子项目中，可以通过 `extends` 属性，引入通用配置，并设置 `compilerOptions.composite` 的值为 `true`，理想情况下，子项目中的 `tsconfig` 文件应该仅包含下述内容：\n```json\n{\n  \"extends\": \"../tsconfig.setting.json\", // 继承 packages 目录下通用配置\n  \"compilerOptions\": {\n    \"composite\": true, // 用于帮助 TypeScript 快速确定引用工程的输出文件位置\n    \"outDir\": \"dist\",\n    \"rootDir\": \"src\"\n  },\n  \"include\": [\"src\"]\n}\n```\n<a name=\"p5cZY\"></a>\n#### Eslint\n对于 `Eslint` 配置文件，我们也可以如法炮制，这样定义子项目的 `.eslintrc` 文件内容：\n```json\n{\n  \"extends\": \"../../.eslintrc\", // 注意这里的不同\n  \"parserOptions\": {\n    \"project\": \"tsconfig.json\"\n  }\n}\n```\n对于通用的 `eslint` 配置，我们并没有将其放置在 `packages` 目录中，而是放在整个项目的根目录下，这样做的目的是：一些编辑器插件只会在项目根目录寻找 `.eslintrc` 文件，因此为了我们的项目能够保持良好的**「开发环境一致性」**，请务必将通用配置文件放置在项目的根目录中。\n<a name=\"WcliS\"></a>\n#### Babel\n`Babel`配置文件合并的方式与 `TypeScript`如出一辙，甚至更加简单，我们只需在子项目中的 `.babelrc`文件中这样声明即可：\n```json\n{\n  \"extends\": \"../.babelrc\"\n}\n```\n当一切准备就绪后，我们的项目目录应该大致呈现如下所示的结构：\n```markdown\n.\n├── package.json\n├── .eslintrc\n└── packages/\n    │   ├── tsconfig.settings.json\n    │   ├── .babelrc\n    ├── @mono/project_1/\n    │   ├── index.js\n    │   ├── .eslintrc\n    │   ├── .babelrc\n    │   ├── tsconfig.json\n    │   └── package.json\n    └───@mono/project_2/\n        ├── index.js\n        ├── .eslintrc\n        ├── .babelrc\n        ├── tsconfig.json\n        └── package.json\n```\n<a name=\"xyN0R\"></a>\n### 4. 统一命令脚本: scripty\n在上一步中，我们尽可能的将所有配置文件进行抽象，从而精简了代码，并提高了整个项目的一致性。我们的整个仓库也因此有了**「更浓郁的 monorepo 风味 ☕️」**。但如果仔细审视我们的整个工程文件，还有一处存在着明显的瑕疵和一些恼人的坏味道，当您仔细审视您的众多 `package.json` 文件时，您就知道我在说什么了 `-- scripts` 脚本。\n\n如果您的子项目足够多，您可能会发现，每个 `package.json` 文件中的 `scripts` 属性都大同小异，并且一些 `scripts` 充斥着各种 `Linux` 语法，例如管道操作符，重定向或目录生成。重复带来低效，复杂则使人难以理解，这都是需要我们解决的问题。\n\n这里给出的解决方案是，使用 [scripty](https://www.npmjs.com/package/scripty) 管理您的脚本命令，简单来说，`scripty` 允许您将脚本命令定义在文件中，并在 `package.json` 文件中直接通过文件名来引用。这使我们可以实现如下目的：\n\n1. 子项目间复用脚本命令；\n2. 像写代码一样编写脚本命令，无论它有多复杂，而在调用时，像调用函数一样调用；\n\n通过使用 `scripty` 管理我们的 `monorepo` 应用，目录结构看起来将会是这样：\n```markdown\n.\n├── package.json\n├── .eslintrc\n├── scirpts/ # 这里存放所有的脚本\n│   │   ├── packages/ # 包级别脚本\n│   │   │   ├── build.sh\n│   │   │   └── test.sh\n│   └───└── workspaces/ # 全局脚本\n│           ├── build.sh\n│           └── test.sh\n└── packages/\n    │   ├── tsconfig.settings.json\n    │   ├── .babelrc\n    ├── @mono/project_1/\n    │   ├── index.js\n    │   ├── .eslintrc\n    │   ├── .babelrc\n    │   ├── tsconfig.json\n    │   └── package.json\n    └── @mono/project_2/\n        ├── index.js\n        ├── .eslintrc\n        ├── .babelrc\n        ├── tsconfig.json\n        └── package.json\n```\n注意，我们脚本分为两类**「package 级别」**与**「workspace 级别**」，并且分别放在两个文件夹内。这样做的好处在于，我们既可以在项目根目录执行全局脚本，也可以针对单个项目执行特定的脚本。\n\n通过使用 `scripty`，子项目的 `package.json` 文件中的 `scripts` 属性将变得非常精简：\n```json\n{\n  ...\n  \"scripts\": {\n    \"test\": \"scripty\",\n    \"lint\": \"scripty\",\n    \"build\": \"scripty\"\n  },\n  \"scripty\": {\n    \"path\": \"../../scripts/packages\" // 注意这里我们指定了 scripty 的路径\n  },\n  ...\n}\n```\n大功告成！🎉 至此，我们尽己所能地删除了整个项目中的重复代码，让整个项目变得干净，清爽并且有极强的复用性。\n:::info\n🧉 小贴士：<br />别忘了使用 `chmod -R u+x scripts` 命令使所有的 `shell` 脚本具备可执行权限，也千万别忘了把这条贴士写在您的 `README.md` 文件中！\n:::\n<a name=\"HpKUb\"></a>\n### 5. 统一包管理: lerna\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1648747742904-bb7df604-18ef-4547-93c2-382b3cd5a574.png#clientId=u6fbcdb1d-5fd6-4&from=paste&height=542&id=u76e7c2b9&originHeight=678&originWidth=750&originalType=binary&ratio=1&rotation=0&showTitle=false&size=197677&status=done&style=none&taskId=ufd26afd3-4bfc-4f4a-becf-0f9c4c874c0&title=&width=600)<br />我有时会感慨自己的灵感匮乏，怎么就想不到 `Lerna` 这样既有神话色彩又能自我释义的好名字。您可以大胆想象，九头龙的每只龙头都在帮您管理着一个子项目，而您只需要骑在龙身上发号施令的场景，这基本上就是我们使用 `Lerna` 时的直观感受。\n\n这也是为什么当我们提起 `monorepo` 策略，就几乎不得不提到 `Lerna` 的原因了，它的确提供了一种非常便捷的方式供我们管理 `monorepo` 项目。当子项目越多时，`Lerna` 就越能显示其威力。\n\n当多个子项目放在一个代码仓库，并且子项目之间又相互依赖时，我们面临的棘手问题有两个：\n\n1. 如果我们需要在多个子目录执行相同的命令，我们需要手动进入各个目录，并执行命令；\n2. 当一个子项目更新后，我们只能手动追踪依赖该项目的其他子项目，并升级其版本。\n\n通过使用 `Lerna`，这些棘手的问题都将不复存在。\n\n当在项目根目录使用 `npx lerna init` 初始化后，我们的根目录会新增一个 `lerna.json` 文件，默认内容为：\n```json\n{\n  \"packages\": [\"packages/*\"],\n  \"version\": \"0.0.0\"\n}\n```\n让我们稍稍改动这个文件，使其变为：\n```json\n{\n  \"packages\": [\"packages/*\"],\n  \"npmClient\": \"yarn\",\n  \"version\": \"independent\",\n  \"useWorkspaces\": true,\n}\n```\n可以注意到，我们显示声明了我们的包客户端（`npmClient`）为 `yarn`，并且让 `Lerna` 追踪我们 `workspaces` 设置的目录，这样我们就依旧保留了之前 `workspaces` 的所有特性（子项目引用和通用包提升）。\n\n除此之外一个有趣的改动在于我们将 `version` 属性指定为一个关键字 `independent`，这将告诉 `lerna` 应该将每个子项目的版本号看作是相互独立的。当某个子项目代码更新后，运行 `lerna publish` 时，`Lerna` 将监听到代码变化的子项目并以交互式 `CLI` 方式让开发者决定需要升级的版本号，关联的子项目版本号不会自动升级，反之，当我们填入固定的版本号时，则任一子项目的代码变动，都会导致所有子项目的版本号基于当前指定的版本号升级。\n\n`Lerna` 提供了很多 `CLI` 命令以满足我们的各种需求，但根据 2/8 法则，您应该首先关注以下这些命令：\n\n- `lerna bootstrap`：等同于 lerna link + yarn install，用于创建符合链接并安装依赖包；\n- `lerna run`：会像执行一个 for 循环一样，在所有子项目中执行 npm script 脚本，并且，它会非常智能的识别依赖关系，并从根依赖开始执行命令；\n- `lerna exec`：像 `lerna run `一样，会按照依赖顺序执行命令，不同的是，它可以执行任何命令，例如 `shell` 脚本；\n- `lerna publish`：发布代码有变动的 `package`，因此首先您需要在使用 `Lerna` 前使用 `git commit` 命令提交代码，好让 `Lerna` 有一个 `baseline`；\n- `lerna add`：将本地或远程的包作为依赖添加至当前的 `monorepo` 仓库中，该命令让 `Lerna` 可以识别并追踪包之间的依赖关系，因此非常重要；\n```shell\n# 向 @mono/project2 和 @mono/project3 中添加 @mono/project1\nlerna add @mono/project1 '@mono/project{2,3}'\n```\n<a name=\"IoUuw\"></a>\n#### lerna 高级命令\n除了上面介绍到的常用命令外，`Lerna` 还提供了一些参数满足我们更灵活的需求，例如：\n\n- `--concurrency <number>`：参数可以使 `Lerna` 利用计算机上的多个核心，并发运行，从而提升构建速度；\n- `--scope '@mono/{pkg1,pkg2}'`：`--scope` 参数可以指定 `Lerna` 命令的运行环境，通过使用该参数，`Lerna` 将不再是一把梭的在所有仓库中执行命令，而是可以精准地在我们所指定的仓库中执行命令，并且还支持示例中的模版语法；\n- `--stream`：该参数可使我们查看 `Lerna` 运行时的命令执行信息；\n<a name=\"iCnP2\"></a>\n#### npm 包本地发布：Verdaccio\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1648748304497-5e3fff8e-c3f8-45d1-838f-c3e5bd18ed1c.png#clientId=u6fbcdb1d-5fd6-4&from=paste&height=160&id=u8ce3b6ee&originHeight=200&originWidth=602&originalType=binary&ratio=1&rotation=0&showTitle=false&size=15746&status=done&style=none&taskId=u1a3f5727-3987-4438-971e-193107de381&title=&width=481.6)<br />看到这里，您可能想要亲自体验一把使用 `Lerna` 管理/发布 `monorepo` 项目的感觉。可是很快您会发现，将示例代码发布到真实世界的 `npm` 仓库并非一个好主意，这多少有些令人沮丧，但是别担心，您可以使用 [Verdaccio](https://verdaccio.org/) 在本地创建一个 `npm` 仓库作为代理，然后尽情体验 `Lerna` 的种种强大之处。\n\n安装运行 `Verdaccio` 非常简单，您只需运行：\n```shell\nnpm install --global verdaccio\n```\n在全局安装 `Verdaccio` 应用，然后在 `shell` 中输入：\n```shell\nverdaccio\n```\n即可通过 `localhost:4837` 访问您的本地代理 `npm` 仓库，别忘了在您的项目根目录创建 `.npmrc` 文件，并在文件中将 `npm` 仓库地址改写为您的本地代理地址：\n```shell\nregistry=\"http://localhost:4873/\"\n```\n大功告成 🙌！每当您执行 `lerna publish` 时，子项目所构建成的 `package` 将会发布在本地 `npm` 仓库中，而当您执行 `lerna bootstrap` 时，`Verdaccio` 将会放行，让您成功从远程 `npm` 仓库中拉取相应的代码。\n<a name=\"iwmes\"></a>\n### 6. 格式化 commit 管理\n至此，我们已经掌握了组织一个项目级 `monorepo` 仓库的所有前沿技巧，最后，让我们看看最后一个可以优化的地方：代码提交时，约束 `commit` 信息。\n\n一个 `monorepo` 仓库可能被不同的开发者提交不同子项目的代码，如果没有规范化的 `commit` 信息，在故障排查或版本回滚时毫无意外会遭遇灾难。因此，千万不要小看 `commit` 信息格式化的重要性（当然，同样重要的还有代码注释！）。\n\n为了我们能够一目了然的追踪每次代码变更的信息，我们使用 [commitlint](https://github.com/conventional-changelog/commitlint/#what-is-commitlint) 工具作为格式化 `commit` 信息的不二之选。\n\n顾名思义，`commitlint` 可以帮助我们检查提交的 `commit` 信息，它强制约束我们的 `commit` 信息必须在开头附加指定类型，用于标示本次提交的大致意图，支持的类型关键字有：\n\n- `feat`：表示添加一个新特性；\n- `chore`：表示做了一些与特性和修复无关的「家务事」；\n- `fix`：表示修复了一个 `Bug`；\n- `refactor`：表示本次提交是因为重构了代码；\n- `style`：表示代码美化或格式化；\n- ...\n\n我强烈建议您遵循该规范编写您的 `commit` 信息，不要偷懒，坚持下去，您的 git 日志将会显得整齐，有条理，富有表现力，同时，您也会收到同行的交口称赞，人人都会以和您这样优雅的工程师合作为荣。\n\n除了限定 `commit` 信息类型外，`commitlint` 还支持（虽然不是必须的）显示指定我们本次提交所对应的子项目名称。假如我们有一个名为 `@mono/project1` 的子项目，我们针对该项目提交的 `commit` 信息可以写为：\n```git\ngit commit -m \"feat(project1): add a attractive button\" # 注意，我们省略了 @mono 的项目前缀\n```\n毫无疑问，这将会使我们的 `commit` 信息更具表现力。\n\n我们可以通过下面的命令安装 `commitlint` 以及周边依赖：\n```shell\nnpm i -D @commitlint/cli @commitlint/config-conventional @commitlint/config-lerna-scopes commitlint husky lerna-changelog\n```\n注意到了吗？我偷偷安装了 [husky](https://www.npmjs.com/package/husky)，它能够帮助我们在提交 `commit` 信息时自动运行 `commitlint` 进行检查，但在这之前，我们需要再在根目录下的 `package.json` 文件里加点料，像这样：\n```json\n{\n ...\n \"husky\": {\n    \"hooks\": {\n      \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n    }\n  }\n ...\n}\n```\n为了能够让 `commitlint` 感知我们的子项目名称，我们还需在项目根目录中增加 `commitlint.config.js` 文件，并设置文件内容为：\n```javascript\nmodule.exports = {\n  extends: [\n    \"@commitlint/config-conventional\",\n    \"@commitlint/config-lerna-scopes\",\n  ],\n};\n```\n至此，我们统一并规范化了 `monorepo` 项目的 `commit` 信息，终于整个 `monorepo` 工程化的最后一块拼图被我们拼上了！<br />（顺便一提，您可以通过在命令行执行 `echo \"build(project1): change something\" | npx commitlint` 命令即可验证您的 `commit` 信息是否通过 `commitlint` 的检查。）\n",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"JA07R\"><span class=\"ne-text\">大型项目管理  Monorepo</span></h2><h3 id=\"x1ZjE\"><span class=\"ne-text\">背景</span></h3><p id=\"u2e632aaa\" class=\"ne-p\"><span class=\"ne-text\">一个体系庞大的代码库拆分成多个单独的具有独立版本的 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\">，对于开发实际的代码共享非常有用。数量较少的时候，多个仓库维护不会有太大问题，但是当独立 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\"> 数量越来越多的时候，就会暴露出很多开发困扰的问题：</span></p><ol class=\"ne-ol\"><li id=\"u9902f6b3\"><span class=\"ne-text\">跨越很多代码存储库，修改代码很麻烦</span></li><li id=\"ufa96120e\"><code class=\"ne-code\"><span class=\"ne-text\">issue</span></code><span class=\"ne-text\"> 难以统一追踪、管理，因为其分散在独立的 </span><code class=\"ne-code\"><span class=\"ne-text\">repo</span></code><span class=\"ne-text\"> 里</span></li><li id=\"u893ee488\"><span class=\"ne-text\">跨存储库的代码测试非常复杂</span></li><li id=\"u8fd3db18\"><span class=\"ne-text\">多个 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\"> 之间相互依赖，对于互相引用的版本号依赖维护成本非常高，开发人员不得不使用 </span><code class=\"ne-code\"><span class=\"ne-text\">npm link</span></code><span class=\"ne-text\"> 的方式去引用依赖</span></li></ol><p id=\"u4bdd18fc\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u5ed6653c\" class=\"ne-p\"><span class=\"ne-text\">为了解决上面这些问题，一些项目会将其代码库统一组织到多包存储库中，我们称之为 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepos</span></code><span class=\"ne-text\">。如：</span><code class=\"ne-code\"><span class=\"ne-text\">babel</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">react</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">angular</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">ember</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">meteor</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">jest</span></code><span class=\"ne-text\">之类的项目以及许多其他项目都在单个存储库中开发所有软件包</span></p><p id=\"u2382a6fb\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648745861879-4f0cfeac-98d9-4bb6-976c-ce3d58870495.png\" width=\"600\" id=\"ufb051cd7\" class=\"ne-image\"></p><h3 id=\"WDvDL\"><span class=\"ne-text\">概念</span></h3><p id=\"u95179c94\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">Menorepo</span></code><span class=\"ne-text\"> 是管理项目代码的一个方式，指在一个项目仓库 </span><code class=\"ne-code\"><span class=\"ne-text\">repo</span></code><span class=\"ne-text\"> 中管理多个模块/包(</span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\">)，不同于常见的每个模块建立一个 </span><code class=\"ne-code\"><span class=\"ne-text\">repo</span></code><span class=\"ne-text\">。</span></p><p id=\"uad5b860b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><div data-type=\"success\" class=\"ne-alert\"><p id=\"ua18f5de6\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">Meonorepo</span></code><span class=\"ne-text\">的好处：</span></p><p id=\"ua2f329e1\" class=\"ne-p\" style=\"text-indent: 2em\"><span class=\"ne-text\">统一的工作流、</span><code class=\"ne-code\"><span class=\"ne-text\">Code Shaking</span></code><span class=\"ne-text\">。搭建一套脚手架，就能管理(构建、测试、发布)多个 package，统一测试、统一发版。</span></p></div><p id=\"u9ee7ed42\" class=\"ne-p\"><br></p><div data-type=\"danger\" class=\"ne-alert\"><p id=\"u8a7c6853\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">Meonorepo</span></code><span class=\"ne-text\">的坏处：</span></p><p id=\"u63ade5a2\" class=\"ne-p\" style=\"text-indent: 2em\"><span class=\"ne-text\">就是 </span><code class=\"ne-code\"><span class=\"ne-text\">repo</span></code><span class=\"ne-text\">的体积会比较大，由于每个 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\">都有自己的 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\">，会安装自己的 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\">，但是大概率会很多包是重复的，这就使本来就很大的 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\">变得更大。</span></p></div><p id=\"ud4fc82ae\" class=\"ne-p\"><span class=\"ne-text\"></span></p><div data-type=\"info\" class=\"ne-alert\"><p id=\"uee3af175\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">Meonorepo</span></code><span class=\"ne-text\">的解决方案：</span></p><p id=\"u03183c70\" class=\"ne-p\" style=\"text-indent: 2em\"><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\">和</span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\">特性。</span></p><p id=\"uc46ba0dc\" class=\"ne-p\"><br></p><p id=\"u54cd54c2\" class=\"ne-p\"><span class=\"ne-text\">对于 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\">包重复安装的问题：</span></p><p id=\"u5100dad8\" class=\"ne-p\" style=\"text-indent: 2em\"><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\">提供了 </span><code class=\"ne-code\"><span class=\"ne-text\">--hoist</span></code><span class=\"ne-text\">选项，相同的依赖，会</span><strong><span class=\"ne-text\">提升</span></strong><span class=\"ne-text\">到 </span><code class=\"ne-code\"><span class=\"ne-text\">repo</span></code><span class=\"ne-text\">根目录下安装(比较鸡肋)，</span><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\"> 直接以字符串对比 </span><code class=\"ne-code\"><span class=\"ne-text\">dependency</span></code><span class=\"ne-text\"> 的版本号，完全相同才会进行提升，</span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 的 </span><code class=\"ne-code\"><span class=\"ne-text\">semver</span></code><span class=\"ne-text\"> 约定(语义化版本规范)在这里并不起作用。</span></p><p id=\"u81347626\" class=\"ne-p\" style=\"text-indent: 2em\"><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\"> 作为包管理器很好的解决了这个问题，只需要在根 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\">中以 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\">字段声明 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\"> 目录和 </span><code class=\"ne-code\"><span class=\"ne-text\">&quot;private&quot;: true</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\">就会以 </span><code class=\"ne-code\"><span class=\"ne-text\">menorepo</span></code><span class=\"ne-text\">的方式管理 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\">。</span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\">会以 </span><code class=\"ne-code\"><span class=\"ne-text\">semver</span></code><span class=\"ne-text\">约定来分析 </span><code class=\"ne-code\"><span class=\"ne-text\">dependencies</span></code><span class=\"ne-text\">的版本，安装依赖时更快、占用体积更小。(</span><code class=\"ne-code\"><span class=\"ne-text\">pnpm</span></code><span class=\"ne-text\">也支持 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\">)</span></p><p id=\"u77df6c63\" class=\"ne-p\" style=\"text-indent: 2em\"><span class=\"ne-text\">在 </span><code class=\"ne-code\"><span class=\"ne-text\">npm7.x+</span></code><span class=\"ne-text\"> 后，也开始支持了 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 特性，这个功能让我们在本地开发包，尤其是多个互相依赖的包时更加得心应手。它可以避免我们再手动的去执行 </span><code class=\"ne-code\"><span class=\"ne-text\">npm link</span></code><span class=\"ne-text\"> 命令，而是在</span><code class=\"ne-code\"><span class=\"ne-text\">npm install</span></code><span class=\"ne-text\"> 的时候，会自动把 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\">下面的合法包，自动创建符号链接到根目录的 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\">里。能够被单独作为一个包创建符号链接的文件夹，我们就称为一个</span><code class=\"ne-code\"><span class=\"ne-text\">workspace</span></code><span class=\"ne-text\">，所以是可以有多个</span><code class=\"ne-code\"><span class=\"ne-text\">workspace</span></code><span class=\"ne-text\"> 的，可以在 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 的 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 字段中进行配置。</span></p></div><h3 id=\"gLXts\"><span class=\"ne-text\">lerna 介绍</span></h3><h4 id=\"KinvH\"><span class=\"ne-text\">lerna 特性</span></h4><ol class=\"ne-ol\"><li id=\"u3a0ab3e5\"><span class=\"ne-text\">自动解决 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\"> 之间的依赖关系</span></li><li id=\"u0536c488\"><span class=\"ne-text\">通过 </span><code class=\"ne-code\"><span class=\"ne-text\">git</span></code><span class=\"ne-text\"> 检测文件改动，自动发布</span></li><li id=\"u8ee976f0\"><span class=\"ne-text\">根据 </span><code class=\"ne-code\"><span class=\"ne-text\">git</span></code><span class=\"ne-text\"> 提交记录，自动生成 </span><code class=\"ne-code\"><span class=\"ne-text\">CHANGELOG</span></code></li></ol><p id=\"u3aeb1188\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u385b940d\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\"> 不负责构建、测试等任务，它提出了一种集中管理 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\"> 的目录模式，提供了一套自动化管理程序，让开发者不必再深耕到具体的组件里维护内容，在项目根目录就可以全局掌控，基于 </span><code class=\"ne-code\"><span class=\"ne-text\">npm scripts</span></code><span class=\"ne-text\">，可以很好地完成组件构建，代码格式化等操作，并在最后用 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\"> 统一变更 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\"> 版本，将其发布上传至远端。</span></p><h4 id=\"jUT5Q\"><span class=\"ne-text\">lerna 常用命令</span></h4><ul class=\"ne-ul\"><li id=\"u001c375c\"><code class=\"ne-code\"><span class=\"ne-text\">lerna init</span></code><span class=\"ne-text\">：初始化 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 工程项目，生成 </span><code class=\"ne-code\"><span class=\"ne-text\">packages/</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">lerna.json</span></code></li></ul><pre data-language=\"markdown\" id=\"SALCV\" class=\"ne-codeblock language-markdown\">.\n├── lerna.json\n├── package.json\n└── packages/ # 这里将存放所有子 repo 目录\n    ├── project_1/\n    │   ├── index.js\n    │   ├── node_modules/\n    │   └── package.json\n    ├── project_2/\n    │   ├── index.js\n    │   ├── node_module/\n    │   └── package.json\n    ...</pre><ul class=\"ne-ul\"><li id=\"uaec811cd\"><code class=\"ne-code\"><span class=\"ne-text\">lerna bootstrap --hoist</span></code><span class=\"ne-text\"> 为所有项目安装依赖，并链接所有依赖包，类似于 </span><code class=\"ne-code\"><span class=\"ne-text\">npm i</span></code><span class=\"ne-text\">使用</span><code class=\"ne-code\"><span class=\"ne-text\">--hoist</span></code><span class=\"ne-text\"> 选项后，所有公共的依赖都只会安装在根目录的 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\"> 目录中去,而不会在每个包目录下的 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\"> 中都保留各自的依赖包。</span></li><li id=\"ua7e80eb9\"><code class=\"ne-code\"><span class=\"ne-text\">lerna clean</span></code><span class=\"ne-text\"> 删除所有项目的 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\"> 目录</span></li><li id=\"ua163dc27\"><code class=\"ne-code\"><span class=\"ne-text\">lerna run [script]</span></code><span class=\"ne-text\"> 默认为所有的项目运行 </span><code class=\"ne-code\"><span class=\"ne-text\">npm run [script]</span></code><span class=\"ne-text\">脚本，可以指定项目；</span></li><li id=\"u2b81b98e\"><code class=\"ne-code\"><span class=\"ne-text\">lerna changed</span></code><span class=\"ne-text\"> 列出下次发版 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna publish</span></code><span class=\"ne-text\"> 要更新的包。</span></li><li id=\"u1f2f485d\"><code class=\"ne-code\"><span class=\"ne-text\">lerna publish</span></code><span class=\"ne-text\"> 版本发布，按提示选择版本号(递增，或自定义)，将会执行以下步骤：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u215f4efe\"><span class=\"ne-text\">运行 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna updated</span></code><span class=\"ne-text\"> 来决定哪一个包需要被 </span><code class=\"ne-code\"><span class=\"ne-text\">publish</span></code></li><li id=\"u75e46789\"><span class=\"ne-text\">如果有必要，将会更新 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna.json</span></code><span class=\"ne-text\"> 中的 </span><code class=\"ne-code\"><span class=\"ne-text\">version</span></code></li><li id=\"u863db64c\"><span class=\"ne-text\">将所有更新过的的包中的 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 的 </span><code class=\"ne-code\"><span class=\"ne-text\">version</span></code><span class=\"ne-text\"> 字段更新</span></li><li id=\"u06710d39\"><span class=\"ne-text\">将所有更新过的包中的依赖更新</span></li><li id=\"udd1363f7\"><span class=\"ne-text\">为新版本创建一个 </span><code class=\"ne-code\"><span class=\"ne-text\">git commit</span></code><span class=\"ne-text\"> 或 </span><code class=\"ne-code\"><span class=\"ne-text\">tag</span></code></li><li id=\"u7e972dc0\"><span class=\"ne-text\">将包 </span><code class=\"ne-code\"><span class=\"ne-text\">publish</span></code><span class=\"ne-text\"> 到 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 上；注意要先用 </span><code class=\"ne-code\"><span class=\"ne-text\">npm adduser</span></code><span class=\"ne-text\"> 登录 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 源，否则会失败；</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ub1724b6c\"><code class=\"ne-code\"><span class=\"ne-text\">lerna add [@version] [--dev] [--exact] [--peer]</span></code><span class=\"ne-text\"> ：可以指定为某一个或所有的包安装依赖，依赖可以是外部(</span><code class=\"ne-code\"><span class=\"ne-text\">npm i </span></code><span class=\"ne-text\">安装的)，也可以是内部依赖(</span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\">/下的包，会创建符号链接)，</span><code class=\"ne-code\"><span class=\"ne-text\">example</span></code><span class=\"ne-text\">：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"ubb0369d9\"><code class=\"ne-code\"><span class=\"ne-text\">lerna add babel</span></code><span class=\"ne-text\"> , 该命令会在 </span><code class=\"ne-code\"><span class=\"ne-text\">package-1</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">package-2</span></code><span class=\"ne-text\"> 下安装 </span><code class=\"ne-code\"><span class=\"ne-text\">babel</span></code></li><li id=\"u62a42391\"><code class=\"ne-code\"><span class=\"ne-text\">lerna add react --scope=package-1</span></code><span class=\"ne-text\"> ,该命令会在 </span><code class=\"ne-code\"><span class=\"ne-text\">package-1</span></code><span class=\"ne-text\"> 下安装 </span><code class=\"ne-code\"><span class=\"ne-text\">react</span></code></li><li id=\"u746ec85d\"><code class=\"ne-code\"><span class=\"ne-text\">lerna add package-2 --scope=package-1</span></code><span class=\"ne-text\">，该命令会在 </span><code class=\"ne-code\"><span class=\"ne-text\">package-1</span></code><span class=\"ne-text\"> 下安装 </span><code class=\"ne-code\"><span class=\"ne-text\">package-2</span></code></li></ul></ul><ul class=\"ne-ul\"><li id=\"ucbfb9f1d\"><code class=\"ne-code\"><span class=\"ne-text\">lerna create [loc]</span></code><span class=\"ne-text\"> 创建一个 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\"> 管理的包</span></li><li id=\"ua7b98b64\"><code class=\"ne-code\"><span class=\"ne-text\">lerna ls</span></code><span class=\"ne-text\"> 控制台打印 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\"> 下的包名</span></li><li id=\"u506742c9\"><code class=\"ne-code\"><span class=\"ne-text\">lerna link</span></code><span class=\"ne-text\"> 类似 </span><code class=\"ne-code\"><span class=\"ne-text\">npm link</span></code></li></ul><h4 id=\"bkDYM\"><span class=\"ne-text\">lerna.json 配置介绍</span></h4><pre data-language=\"json\" id=\"znv2d\" class=\"ne-codeblock language-json\">{\n  &quot;version&quot;: &quot;1.1.1&quot;,\n  &quot;npmClient&quot;: &quot;yarn&quot;,\n  &quot;command&quot;: {\n    &quot;publish&quot;: {\n      &quot;ignoreChanges&quot;: [&quot;ignored-file&quot;, &quot;*.md&quot;],\n      &quot;message&quot;: &quot;chore(release): publish %s&quot;,\n      &quot;registry&quot;: &quot;https://npm.pkg.github.com&quot;\n    },\n    &quot;bootstrap&quot;: {\n      &quot;ignore&quot;: &quot;component-*&quot;,\n      &quot;npmClientArgs&quot;: [&quot;--no-package-lock&quot;]\n    }\n  },\n  &quot;packages&quot;: [&quot;packages/*&quot;]\n}</pre><ul class=\"ne-ul\"><li id=\"u3fcaf057\"><code class=\"ne-code\"><span class=\"ne-text\">version</span></code><span class=\"ne-text\">：当前存储库的版本，当为 </span><code class=\"ne-code\"><span class=\"ne-text\">independent</span></code><span class=\"ne-text\"> 时，开启独立模式</span></li><li id=\"u0307f208\"><code class=\"ne-code\"><span class=\"ne-text\">npmClient</span></code><span class=\"ne-text\">：一个选项，用于指定运行命令的特定客户端。 可更改为 </span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\"></span></li><li id=\"u3506ba5e\"><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\">：用作包装位置的 </span><code class=\"ne-code\"><span class=\"ne-text\">glob</span></code><span class=\"ne-text\"> 数组， 默认为 </span><code class=\"ne-code\"><span class=\"ne-text\">[&quot;packages/*&quot;]</span></code><span class=\"ne-text\">, 也可以修改为其他目录</span></li><li id=\"uaf90e68a\"><code class=\"ne-code\"><span class=\"ne-text\">command.publish.ignoreChanges</span></code><span class=\"ne-text\">: 接受一组 </span><code class=\"ne-code\"><span class=\"ne-text\">glob</span></code><span class=\"ne-text\"> 数组，忽略不必要的更改发布新版本，例如 </span><code class=\"ne-code\"><span class=\"ne-text\">md</span></code><span class=\"ne-text\"> 修改</span></li><li id=\"u46c00d71\"><code class=\"ne-code\"><span class=\"ne-text\">command.publish.message</span></code><span class=\"ne-text\">: 执行发布版本时自动会 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 一条指定记录，当消息记录里包含 </span><code class=\"ne-code\"><span class=\"ne-text\">%s</span></code><span class=\"ne-text\"> 将会替换为 </span><code class=\"ne-code\"><span class=\"ne-text\">v1.1.1</span></code><span class=\"ne-text\">, 如果是 </span><code class=\"ne-code\"><span class=\"ne-text\">%v</span></code><span class=\"ne-text\"> 则直接替换为 </span><code class=\"ne-code\"><span class=\"ne-text\">1.1.1</span></code><span class=\"ne-text\">，如果是 </span><code class=\"ne-code\"><span class=\"ne-text\">independent</span></code><span class=\"ne-text\"> 模式则会独立更新每个包的版本</span></li><li id=\"uc8c92ba4\"><code class=\"ne-code\"><span class=\"ne-text\">command.publish.registry</span></code><span class=\"ne-text\">: 设置要发布到的自定义地址</span></li><li id=\"u6fa66ae0\"><code class=\"ne-code\"><span class=\"ne-text\">command.bootstrap.ignore</span></code><span class=\"ne-text\">: 接收一个 </span><code class=\"ne-code\"><span class=\"ne-text\">glob</span></code><span class=\"ne-text\"> 数组， 指定运行 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna bootstrap</span></code><span class=\"ne-text\"> 命令时需要忽略的目录</span></li><li id=\"u77f0f179\"><code class=\"ne-code\"><span class=\"ne-text\">command.bootstrap.npmClientArg</span></code><span class=\"ne-text\">: 接收一个字符串数组， 将参数直接传递给 </span><code class=\"ne-code\"><span class=\"ne-text\">npm install</span></code></li><li id=\"ud01b1464\"><code class=\"ne-code\"><span class=\"ne-text\">command.bootstrap.scope</span></code><span class=\"ne-text\">: 一组 </span><code class=\"ne-code\"><span class=\"ne-text\">glob</span></code><span class=\"ne-text\">，用于限制在运行 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna bootstrap</span></code><span class=\"ne-text\"> 命令时将 包含的软件包。</span></li></ul><h4 id=\"d2nuq\"><span class=\"ne-text\">lerna 多包版本管理机制</span></h4><ul class=\"ne-ul\"><li id=\"u5bb3cf3f\"><code class=\"ne-code\"><span class=\"ne-text\">Fixed/Locked mode(default)</span></code><span data-color=\"5\" id=\"YBLfG\" class=\"ne-label\">固定模式</span></li></ul><p id=\"uaeb92082\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">vue</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">babel</span></code><span class=\"ne-text\">都是用这种，在</span><code class=\"ne-code\"><span class=\"ne-text\">publish</span></code><span class=\"ne-text\">的时候，会在</span><code class=\"ne-code\"><span class=\"ne-text\">lerna.json</span></code><span class=\"ne-text\">文件里面 </span><code class=\"ne-code\"><span class=\"ne-text\">&quot;version&quot;: &quot;0.15&quot;</span></code><span class=\"ne-text\">，依据这个号进行增加，只选择一次，其他有改动的包自动更新版本号</span></p><ul class=\"ne-ul\"><li id=\"u216c373e\"><code class=\"ne-code\"><span class=\"ne-text\">Independence mode</span></code><span data-color=\"5\" id=\"s4fQy\" class=\"ne-label\">独立模式</span></li></ul><p id=\"u53b02706\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">lerna init --independent</span></code><span class=\"ne-text\">初始化项目，</span><code class=\"ne-code\"><span class=\"ne-text\">lerna.json</span></code><span class=\"ne-text\">文件里面 </span><code class=\"ne-code\"><span class=\"ne-text\">&quot;version&quot;: &quot;independent&quot;</span></code><span class=\"ne-text\">，每次</span><code class=\"ne-code\"><span class=\"ne-text\">publish</span></code><span class=\"ne-text\">时，都将得到一个提示符，提示每个已更改的包，以指定是：</span><code class=\"ne-code\"><span class=\"ne-text\">major</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">minor</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">patch</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">premajor</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">preminor</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">prepatch</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">prerelease</span></code></p><h4 id=\"RSN7r\"><span class=\"ne-text\">启用 workspace 模式</span></h4><p id=\"u9ba4b383\" class=\"ne-p\"><span class=\"ne-text\">默认是 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\">，而且每个子 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\"> 都有自己的</span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\">，通过这样的设置后，只有顶层有一个</span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code></p><ul class=\"ne-ul\"><li id=\"u77d28581\"><span class=\"ne-text\">修改顶层</span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">lerna.json</span></code></li></ul><pre data-language=\"javascript\" id=\"sp9Eq\" class=\"ne-codeblock language-javascript\">// package.json 文件加入\n{\n  &quot;private&quot;: true,\n  &quot;workspaces&quot;: [&quot;packages/*&quot;]\n}\n\n// lerna.json 文件加入\n{\n  &quot;useWorkspaces&quot;: true,\n  &quot;npmClient&quot;: &quot;yarn&quot; // 启动 yarn，不设置默认为 npm，npm7.x+ 支持 workspaces\n}</pre><h3 id=\"p58HN\"><span class=\"ne-text\">Workspaces</span></h3><h4 id=\"ncpyk\"><span class=\"ne-text\">使用</span></h4><pre data-language=\"json\" id=\"u1BJg\" class=\"ne-codeblock language-json\">{\n  &quot;name&quot;: &quot;vite-pros&quot;,\n  &quot;description&quot;: &quot;使用 vite 作为构建工具的前端项目&quot;,\n  &quot;private&quot;: true,\n  &quot;workspaces&quot;: [\n    &quot;packages/*&quot;\n  ]\n}</pre><p id=\"ua3c4e806\" class=\"ne-p\"><span class=\"ne-text\">其中 </span><code class=\"ne-code\"><span class=\"ne-text\">private: true</span></code><span class=\"ne-text\"> 是必需的！工作区并不意味着要发布，所以增加了这个安全措施，以确保没有任何东西可以意外暴露它们。</span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 字段是包含每个工作区的路径的数组。由于追踪每个路径可能很乏味，因此该字段也接受 </span><code class=\"ne-code\"><span class=\"ne-text\">glob</span></code><span class=\"ne-text\"> 模式！</span></p><ol class=\"ne-ol\"><li id=\"u555f27a4\"><span class=\"ne-text\">新建 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\"> 目录</span></li><li id=\"ue2db347a\"><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\"> 目录下就是我们的正常的工程了。</span></li></ol><h4 id=\"H2maV\"><span class=\"ne-text\">介绍</span></h4><ol class=\"ne-ol\"><li id=\"u2085ae89\"><span class=\"ne-text\">安装依赖</span></li></ol><pre data-language=\"shell\" id=\"PtWEF\" class=\"ne-codeblock language-shell\">[yarn|npm] install</pre><ol start=\"2\" class=\"ne-ol\"><li id=\"u8e605db0\"><span class=\"ne-text\">为某一个子项目安装依赖</span></li></ol><pre data-language=\"shell\" id=\"ga4J6\" class=\"ne-codeblock language-shell\"># pro1 = packages/pro1\n# npm\nnpm install vue -w pro1\n# yarn\nyarn workspace pro1 add -D react</pre><div data-type=\"tips\" class=\"ne-alert\"><p id=\"u012f4013\" class=\"ne-p\"><span class=\"ne-text\">这里可以依赖同一个工作区下的其它工程，以 </span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\"> 为例，如果依赖同工作区下的其它工程，</span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 的 </span><code class=\"ne-code\"><span class=\"ne-text\">dependencies</span></code><span class=\"ne-text\"> 就会发生改变，例如：</span><code class=\"ne-code\"><span class=\"ne-text\">&quot;ph-utils&quot;: &quot;workspace:packages/utils&quot;</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">&quot;ph-terminal-spinner&quot;: &quot;workspace:packages/terminal-spinner&quot;</span></code><span class=\"ne-text\"> 这就表明依赖的是同一个工作区的其它工程。<br /></span><span class=\"ne-text\">这样的可能有人就会有疑问了，如果 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 改变了后，上传后会怎么样呢？这个就是下面的命令了。</span></p></div><ol start=\"3\" class=\"ne-ol\"><li id=\"ub348f77a\"><span class=\"ne-text\">发布</span></li></ol><pre data-language=\"shell\" id=\"Uvsga\" class=\"ne-codeblock language-shell\"># npm\nnpm publish\n# yarn 发布的时候，会自动替换本地依赖的版本\nyarn workspace pro1 npm publish</pre><div data-type=\"tips\" class=\"ne-alert\"><p id=\"ucd718b36\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\"> 发布的时候，如果会有本地有本地依赖如：</span><code class=\"ne-code\"><span class=\"ne-text\">&quot;ph-utils&quot;: &quot;workspace:packages/utils&quot;</span></code><span class=\"ne-text\"> 则会被替换为 </span><code class=\"ne-code\"><span class=\"ne-text\">&quot;ph-utils&quot;: &quot;0.0.1&quot;</span></code><span class=\"ne-text\"> 其中 </span><code class=\"ne-code\"><span class=\"ne-text\">0.0.1</span></code><span class=\"ne-text\"> 就是本地 </span><code class=\"ne-code\"><span class=\"ne-text\">ph-utils</span></code><span class=\"ne-text\"> 的版本。</span></p></div><h2 id=\"XGgua\"><span class=\"ne-text\">Monorepo 方案实践</span></h2><h3 id=\"gn9GX\"><span class=\"ne-text\">1. 锁定环境: Volta</span></h3><p id=\"u39a03f48\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648747756372-c5aea202-62a4-4b65-8394-b7b81a777c52.png\" width=\"484.8\" id=\"u024df87c\" class=\"ne-image\"></p><p id=\"u8034b404\" class=\"ne-p\"><a href=\"https://volta.sh/\" data-href=\"https://volta.sh/\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Volta</span></a><span class=\"ne-text\"> 是一个 </span><code class=\"ne-code\"><span class=\"ne-text\">JavaScript</span></code><span class=\"ne-text\"> 工具管理器，它可以让我们轻松地在项目中锁定 </span><code class=\"ne-code\"><span class=\"ne-text\">node</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\"> 的版本。你只需在安装完 </span><code class=\"ne-code\"><span class=\"ne-text\">Volta</span></code><span class=\"ne-text\"> 后，在项目的根目录中执行 </span><code class=\"ne-code\"><span class=\"ne-text\">volta pin</span></code><span class=\"ne-text\"> 命令，那么无论您当前使用的 </span><code class=\"ne-code\"><span class=\"ne-text\">node</span></code><span class=\"ne-text\"> 或 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\">（</span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\">）版本是什么，</span><code class=\"ne-code\"><span class=\"ne-text\">volta</span></code><span class=\"ne-text\"> 都会自动切换为您指定的版本。</span></p><p id=\"u27b08639\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"uda2bfaf6\" class=\"ne-p\"><span class=\"ne-text\">因此，除了使用 </span><code class=\"ne-code\"><span class=\"ne-text\">Docker</span></code><span class=\"ne-text\"> 和显示在文档中声明 </span><code class=\"ne-code\"><span class=\"ne-text\">node</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\">（</span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\">）的版本之外，您就有了另一个锁定环境的强力工具。</span></p><p id=\"u95ef6475\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u8bfa757a\" class=\"ne-p\"><span class=\"ne-text\">而且相较于 </span><code class=\"ne-code\"><span class=\"ne-text\">nvm</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">Volta</span></code><span class=\"ne-text\"> 还具有一个诱人的特性：当您项目的 </span><code class=\"ne-code\"><span class=\"ne-text\">CLI</span></code><span class=\"ne-text\"> 工具与全局 </span><code class=\"ne-code\"><span class=\"ne-text\">CLI</span></code><span class=\"ne-text\"> 工具不一致时，</span><code class=\"ne-code\"><span class=\"ne-text\">Volta</span></code><span class=\"ne-text\"> 可以做到在项目根目录下自动识别，切换到项目指定的版本，这一切都是由 </span><code class=\"ne-code\"><span class=\"ne-text\">Volta</span></code><span class=\"ne-text\"> 默默做到的，开发者不必关心任何事情。</span></p><h3 id=\"p9nEa\"><span class=\"ne-text\">2. 复用 packages: workspace</span></h3><p id=\"u579703a6\" class=\"ne-p\"><span class=\"ne-text\">使用 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 策略后，收益最大的两点是：</span></p><ol class=\"ne-ol\"><li id=\"ua8fe2baf\"><span class=\"ne-text\">避免重复安装包，因此减少了磁盘空间的占用，并降低了构建时间</span><span class=\"ne-text\">；</span></li><li id=\"u9b1733f2\"><span class=\"ne-text\">内部代码可以彼此相互引用；</span></li></ol><p id=\"u4a5d6344\" class=\"ne-p\"><br></p><p id=\"u8a2977be\" class=\"ne-p\"><span class=\"ne-text\">这两项好处全部都可以由一个成熟的包管理工具来完成，对前端开发而言，即是 </span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\">（</span><code class=\"ne-code\"><span class=\"ne-text\">1.0</span></code><span class=\"ne-text\"> 以上）或 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\">（</span><code class=\"ne-code\"><span class=\"ne-text\">7.0</span></code><span class=\"ne-text\"> 以上）通过名为 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 的特性实现的（⚠️ 注意，支持 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 特性的 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 目前依旧不是 </span><code class=\"ne-code\"><span class=\"ne-text\">TLS</span></code><span class=\"ne-text\"> 版本）。</span></p><p id=\"u85ddeb7c\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u243ab284\" class=\"ne-p\"><span class=\"ne-text\">为了实现前面提到的两点收益，您需要在代码中做三件事：</span></p><ol class=\"ne-ol\"><li id=\"u4a0cbee6\"><span class=\"ne-text\">调整目录结构，将相互关联的项目放置在同一个目录，推荐命名为 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\">；</span></li><li id=\"u6722b056\"><span class=\"ne-text\">在项目根目录里的 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件中，设置 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 属性，属性值为之前创建的目录；</span></li><li id=\"ue81d7c17\"><span class=\"ne-text\">同样，在 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件中，设置 </span><code class=\"ne-code\"><span class=\"ne-text\">private</span></code><span class=\"ne-text\"> 属性为 </span><code class=\"ne-code\"><span class=\"ne-text\">true</span></code><span class=\"ne-text\"> (为了避免我们误操作将仓库发布)；</span></li></ol><p id=\"ud8c4315f\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(44, 62, 80); font-size: 16px\"></span></p><p id=\"uafaffd24\" class=\"ne-p\"><span class=\"ne-text\">经过修改，项目目录看起来应该是这样：</span></p><pre data-language=\"markdown\" id=\"Fgeoa\" class=\"ne-codeblock language-markdown\">.\n├── package.json\n└── packages/\n    ├── @mono/project_1/ # 推荐使用 `@&lt;项目名&gt;/&lt;子项目名&gt;` 的方式命名\n    │   ├── index.js\n    │   └── package.json\n    └── @mono/project_2/\n        ├── index.js\n        └── package.json</pre><p id=\"u2d47e904\" class=\"ne-p\"><span class=\"ne-text\">而当在项目根目录中执行 </span><code class=\"ne-code\"><span class=\"ne-text\">npm install</span></code><span class=\"ne-text\"> 或 </span><code class=\"ne-code\"><span class=\"ne-text\">yarn install</span></code><span class=\"ne-text\"> 后，会发现在项目根目录中出现了 </span><code class=\"ne-code\"><span class=\"ne-text\">node_modules</span></code><span class=\"ne-text\"> 目录，并且该目录不仅拥有所有子项目共用的 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 包，还包含了我们的子项目。因此，我们可以在子项目中通过各种模块引入机制，像引入一般的 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 模块一样引入其他子项目的代码。</span></p><p id=\"ucd5633a0\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u96363688\" class=\"ne-p\"><span class=\"ne-text\">请注意我们对子项目的命名，统一以 </span><code class=\"ne-code\"><span class=\"ne-text\">@&lt;repo_name&gt;/</span></code><span class=\"ne-text\"> 开头，这是一种社区最佳实践，不仅可以让用户更容易了解整个应用的架构，也方便您在项目中更快捷的找到所需的子项目。</span></p><p id=\"u30f5279b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u70ecb25d\" class=\"ne-p\"><span class=\"ne-text\">至此，我们已经完成了 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 策略的核心部分，实在是很容易不是吗？但是老话说「行百里者半九十」，距离优雅的搭建一个 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 项目，我们还有一些路要走。</span></p><h3 id=\"eHgR9\"><span class=\"ne-text\">3. 统一配置: 合并同类项 - Eslint、TypeScript、Babel</span></h3><p id=\"uba766d35\" class=\"ne-p\"><span class=\"ne-text\">编写代码要遵循 </span><code class=\"ne-code\"><span class=\"ne-text\">DRY</span></code><span class=\"ne-text\"> 原则（</span><code class=\"ne-code\"><span class=\"ne-text\">Don't Repeat Yourself</span></code><span class=\"ne-text\"> 的缩写）。那么，理所当然地，我们应该尽量避免在多个子项目中放置重复的 </span><code class=\"ne-code\"><span class=\"ne-text\">eslintrc</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">tsconfig</span></code><span class=\"ne-text\"> 等配置文件。幸运的是，</span><code class=\"ne-code\"><span class=\"ne-text\">Babel</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">Eslint</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">Typescript</span></code><span class=\"ne-text\"> 都提供了相应的功能让我们减少自我重复。</span></p><h4 id=\"p6Ser\"><span class=\"ne-text\">TypeScript</span></h4><p id=\"u4ee1bd18\" class=\"ne-p\"><span class=\"ne-text\">我们可以在 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\">目录中放置 </span><code class=\"ne-code\"><span class=\"ne-text\">tsconfig.setting.json</span></code><span class=\"ne-text\"> 文件，并在文件中定义通用的 </span><code class=\"ne-code\"><span class=\"ne-text\">ts</span></code><span class=\"ne-text\"> 配置。然后，在每个子项目中，可以通过 </span><code class=\"ne-code\"><span class=\"ne-text\">extends</span></code><span class=\"ne-text\"> 属性，引入通用配置，并设置 </span><code class=\"ne-code\"><span class=\"ne-text\">compilerOptions.composite</span></code><span class=\"ne-text\"> 的值为 </span><code class=\"ne-code\"><span class=\"ne-text\">true</span></code><span class=\"ne-text\">，理想情况下，子项目中的 </span><code class=\"ne-code\"><span class=\"ne-text\">tsconfig</span></code><span class=\"ne-text\"> 文件应该仅包含下述内容：</span></p><pre data-language=\"json\" id=\"NFkg1\" class=\"ne-codeblock language-json\">{\n  &quot;extends&quot;: &quot;../tsconfig.setting.json&quot;, // 继承 packages 目录下通用配置\n  &quot;compilerOptions&quot;: {\n    &quot;composite&quot;: true, // 用于帮助 TypeScript 快速确定引用工程的输出文件位置\n    &quot;outDir&quot;: &quot;dist&quot;,\n    &quot;rootDir&quot;: &quot;src&quot;\n  },\n  &quot;include&quot;: [&quot;src&quot;]\n}</pre><h4 id=\"p5cZY\"><span class=\"ne-text\">Eslint</span></h4><p id=\"u14014cce\" class=\"ne-p\"><span class=\"ne-text\">对于 </span><code class=\"ne-code\"><span class=\"ne-text\">Eslint</span></code><span class=\"ne-text\"> 配置文件，我们也可以如法炮制，这样定义子项目的 </span><code class=\"ne-code\"><span class=\"ne-text\">.eslintrc</span></code><span class=\"ne-text\"> 文件内容：</span></p><pre data-language=\"json\" id=\"FyMlt\" class=\"ne-codeblock language-json\">{\n  &quot;extends&quot;: &quot;../../.eslintrc&quot;, // 注意这里的不同\n  &quot;parserOptions&quot;: {\n    &quot;project&quot;: &quot;tsconfig.json&quot;\n  }\n}</pre><p id=\"ud0104e85\" class=\"ne-p\"><span class=\"ne-text\">对于通用的 </span><code class=\"ne-code\"><span class=\"ne-text\">eslint</span></code><span class=\"ne-text\"> 配置，我们并没有将其放置在 </span><code class=\"ne-code\"><span class=\"ne-text\">packages</span></code><span class=\"ne-text\"> 目录中，而是放在整个项目的根目录下，这样做的目的是：一些编辑器插件只会在项目根目录寻找 </span><code class=\"ne-code\"><span class=\"ne-text\">.eslintrc</span></code><span class=\"ne-text\"> 文件，因此为了我们的项目能够保持良好的</span><strong><span class=\"ne-text\">「开发环境一致性」</span></strong><span class=\"ne-text\">，请务必将通用配置文件放置在项目的根目录中。</span></p><h4 id=\"WcliS\"><span class=\"ne-text\">Babel</span></h4><p id=\"ufe6b5695\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">Babel</span></code><span class=\"ne-text\">配置文件合并的方式与 </span><code class=\"ne-code\"><span class=\"ne-text\">TypeScript</span></code><span class=\"ne-text\">如出一辙，甚至更加简单，我们只需在子项目中的 </span><code class=\"ne-code\"><span class=\"ne-text\">.babelrc</span></code><span class=\"ne-text\">文件中这样声明即可：</span></p><pre data-language=\"json\" id=\"MbgKB\" class=\"ne-codeblock language-json\">{\n  &quot;extends&quot;: &quot;../.babelrc&quot;\n}</pre><p id=\"u6d08a3f4\" class=\"ne-p\"><span class=\"ne-text\">当一切准备就绪后，我们的项目目录应该大致呈现如下所示的结构：</span></p><pre data-language=\"markdown\" id=\"dSfzZ\" class=\"ne-codeblock language-markdown\">.\n├── package.json\n├── .eslintrc\n└── packages/\n    │   ├── tsconfig.settings.json\n    │   ├── .babelrc\n    ├── @mono/project_1/\n    │   ├── index.js\n    │   ├── .eslintrc\n    │   ├── .babelrc\n    │   ├── tsconfig.json\n    │   └── package.json\n    └───@mono/project_2/\n        ├── index.js\n        ├── .eslintrc\n        ├── .babelrc\n        ├── tsconfig.json\n        └── package.json</pre><h3 id=\"xyN0R\"><span class=\"ne-text\">4. 统一命令脚本: scripty</span></h3><p id=\"uab4ff4b7\" class=\"ne-p\"><span class=\"ne-text\">在上一步中，我们尽可能的将所有配置文件进行抽象，从而精简了代码，并提高了整个项目的一致性。我们的整个仓库也因此有了</span><strong><span class=\"ne-text\">「更浓郁的 monorepo 风味 ☕️」</span></strong><span class=\"ne-text\">。但如果仔细审视我们的整个工程文件，还有一处存在着明显的瑕疵和一些恼人的坏味道，当您仔细审视您的众多 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件时，您就知道我在说什么了 </span><code class=\"ne-code\"><span class=\"ne-text\">-- scripts</span></code><span class=\"ne-text\"> 脚本。</span></p><p id=\"ub834fdb1\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u35e8dab9\" class=\"ne-p\"><span class=\"ne-text\">如果您的子项目足够多，您可能会发现，每个 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件中的 </span><code class=\"ne-code\"><span class=\"ne-text\">scripts</span></code><span class=\"ne-text\"> 属性都大同小异，并且一些 </span><code class=\"ne-code\"><span class=\"ne-text\">scripts</span></code><span class=\"ne-text\"> 充斥着各种 </span><code class=\"ne-code\"><span class=\"ne-text\">Linux</span></code><span class=\"ne-text\"> 语法，例如管道操作符，重定向或目录生成。重复带来低效，复杂则使人难以理解，这都是需要我们解决的问题。</span></p><p id=\"u588a17bc\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u90dc71a8\" class=\"ne-p\"><span class=\"ne-text\">这里给出的解决方案是，使用 </span><a href=\"https://www.npmjs.com/package/scripty\" data-href=\"https://www.npmjs.com/package/scripty\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">scripty</span></a><span class=\"ne-text\"> 管理您的脚本命令，简单来说，</span><code class=\"ne-code\"><span class=\"ne-text\">scripty</span></code><span class=\"ne-text\"> 允许您将脚本命令定义在文件中，并在 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件中直接通过文件名来引用。这使我们可以实现如下目的：</span></p><ol class=\"ne-ol\"><li id=\"uad44ff18\"><span class=\"ne-text\">子项目间复用脚本命令</span><span class=\"ne-text\">；</span></li><li id=\"u8a5717f5\"><span class=\"ne-text\">像写代码一样编写脚本命令，无论它有多复杂，而在调用时，像调用函数一样调用；</span></li></ol><p id=\"u46137330\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u938d3aa2\" class=\"ne-p\"><span class=\"ne-text\">通过使用 </span><code class=\"ne-code\"><span class=\"ne-text\">scripty</span></code><span class=\"ne-text\"> 管理我们的 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 应用，目录结构看起来将会是这样：</span></p><pre data-language=\"markdown\" id=\"Zz4W6\" class=\"ne-codeblock language-markdown\">.\n├── package.json\n├── .eslintrc\n├── scirpts/ # 这里存放所有的脚本\n│   │   ├── packages/ # 包级别脚本\n│   │   │   ├── build.sh\n│   │   │   └── test.sh\n│   └───└── workspaces/ # 全局脚本\n│           ├── build.sh\n│           └── test.sh\n└── packages/\n    │   ├── tsconfig.settings.json\n    │   ├── .babelrc\n    ├── @mono/project_1/\n    │   ├── index.js\n    │   ├── .eslintrc\n    │   ├── .babelrc\n    │   ├── tsconfig.json\n    │   └── package.json\n    └── @mono/project_2/\n        ├── index.js\n        ├── .eslintrc\n        ├── .babelrc\n        ├── tsconfig.json\n        └── package.json</pre><p id=\"u28248414\" class=\"ne-p\"><span class=\"ne-text\">注意，我们脚本分为两类</span><strong><span class=\"ne-text\">「package 级别」</span></strong><span class=\"ne-text\">与</span><strong><span class=\"ne-text\">「workspace 级别</span></strong><span class=\"ne-text\">」，并且分别放在两个文件夹内。这样做的好处在于，我们既可以在项目根目录执行全局脚本，也可以针对单个项目执行特定的脚本。</span></p><p id=\"u2986ff87\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u6a689a35\" class=\"ne-p\"><span class=\"ne-text\">通过使用 </span><code class=\"ne-code\"><span class=\"ne-text\">scripty</span></code><span class=\"ne-text\">，子项目的 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件中的 </span><code class=\"ne-code\"><span class=\"ne-text\">scripts</span></code><span class=\"ne-text\"> 属性将变得非常精简：</span></p><pre data-language=\"json\" id=\"fHxeB\" class=\"ne-codeblock language-json\">{\n  ...\n  &quot;scripts&quot;: {\n    &quot;test&quot;: &quot;scripty&quot;,\n    &quot;lint&quot;: &quot;scripty&quot;,\n    &quot;build&quot;: &quot;scripty&quot;\n  },\n  &quot;scripty&quot;: {\n    &quot;path&quot;: &quot;../../scripts/packages&quot; // 注意这里我们指定了 scripty 的路径\n  },\n  ...\n}</pre><p id=\"u585c33a7\" class=\"ne-p\"><span class=\"ne-text\">大功告成！🎉 至此，我们尽己所能地删除了整个项目中的重复代码，让整个项目变得干净，清爽并且有极强的复用性。</span></p><div data-type=\"info\" class=\"ne-alert\"><p id=\"u48cf5b3f\" class=\"ne-p\"><span class=\"ne-text\">🧉 小贴士：</span></p><p id=\"ufd40322e\" class=\"ne-p\"><span class=\"ne-text\">别忘了使用 </span><code class=\"ne-code\"><span class=\"ne-text\">chmod -R u+x scripts</span></code><span class=\"ne-text\"> 命令使所有的 </span><code class=\"ne-code\"><span class=\"ne-text\">shell</span></code><span class=\"ne-text\"> 脚本具备可执行权限，也千万别忘了把这条贴士写在您的 </span><code class=\"ne-code\"><span class=\"ne-text\">README.md</span></code><span class=\"ne-text\"> 文件中！</span></p></div><h3 id=\"HpKUb\"><span class=\"ne-text\">5. 统一包管理: lerna</span></h3><p id=\"u81dd33a5\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648747742904-bb7df604-18ef-4547-93c2-382b3cd5a574.png\" width=\"600\" id=\"u76e7c2b9\" class=\"ne-image\"></p><p id=\"u37da6979\" class=\"ne-p\"><span class=\"ne-text\">我有时会感慨自己的灵感匮乏，怎么就想不到 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 这样既有神话色彩又能自我释义的好名字。您可以大胆想象，九头龙的每只龙头都在帮您管理着一个子项目，而您只需要骑在龙身上发号施令的场景，这基本上就是我们使用 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 时的直观感受。</span></p><p id=\"ued055ae9\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ubbeb37d6\" class=\"ne-p\"><span class=\"ne-text\">这也是为什么当我们提起 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 策略，就几乎不得不提到 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 的原因了，它的确提供了一种非常便捷的方式供我们管理 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 项目。当子项目越多时，</span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 就越能显示其威力。</span></p><p id=\"u3ebdd90c\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u777b0f5a\" class=\"ne-p\"><span class=\"ne-text\">当多个子项目放在一个代码仓库，并且子项目之间又相互依赖时，我们面临的棘手问题有两个：</span></p><ol class=\"ne-ol\"><li id=\"u27c47ae8\"><span class=\"ne-text\">如果我们需要在多个子目录执行相同的命令，我们需要手动进入各个目录，并执行命令</span><span class=\"ne-text\">；</span></li><li id=\"udead62d3\"><span class=\"ne-text\">当一个子项目更新后，我们只能手动追踪依赖该项目的其他子项目，并升级其版本</span><span class=\"ne-text\">。</span></li></ol><p id=\"u56c53fac\" class=\"ne-p\"><span class=\"ne-text\">通过使用 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\">，这些棘手的问题都将不复存在。</span></p><p id=\"ua2b12287\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ua81c0076\" class=\"ne-p\"><span class=\"ne-text\">当在项目根目录使用 </span><code class=\"ne-code\"><span class=\"ne-text\">npx lerna init</span></code><span class=\"ne-text\"> 初始化后，我们的根目录会新增一个 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna.json</span></code><span class=\"ne-text\"> 文件，默认内容为：</span></p><pre data-language=\"json\" id=\"sf4mf\" class=\"ne-codeblock language-json\">{\n  &quot;packages&quot;: [&quot;packages/*&quot;],\n  &quot;version&quot;: &quot;0.0.0&quot;\n}</pre><p id=\"u8b66d0f7\" class=\"ne-p\"><span class=\"ne-text\">让我们稍稍改动这个文件，使其变为：</span></p><pre data-language=\"json\" id=\"sgCQn\" class=\"ne-codeblock language-json\">{\n  &quot;packages&quot;: [&quot;packages/*&quot;],\n  &quot;npmClient&quot;: &quot;yarn&quot;,\n  &quot;version&quot;: &quot;independent&quot;,\n  &quot;useWorkspaces&quot;: true,\n}</pre><p id=\"u7159bb2a\" class=\"ne-p\"><span class=\"ne-text\">可以注意到，我们显示声明了我们的包客户端（</span><code class=\"ne-code\"><span class=\"ne-text\">npmClient</span></code><span class=\"ne-text\">）为 </span><code class=\"ne-code\"><span class=\"ne-text\">yarn</span></code><span class=\"ne-text\">，并且让 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 追踪我们 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 设置的目录，这样我们就依旧保留了之前 </span><code class=\"ne-code\"><span class=\"ne-text\">workspaces</span></code><span class=\"ne-text\"> 的所有特性（子项目引用和通用包提升）。</span></p><p id=\"u89c66570\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ub429bda9\" class=\"ne-p\"><span class=\"ne-text\">除此之外一个有趣的改动在于我们将 </span><code class=\"ne-code\"><span class=\"ne-text\">version</span></code><span class=\"ne-text\"> 属性指定为一个关键字 </span><code class=\"ne-code\"><span class=\"ne-text\">independent</span></code><span class=\"ne-text\">，这将告诉 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna</span></code><span class=\"ne-text\"> 应该将每个子项目的版本号看作是相互独立的。当某个子项目代码更新后，运行 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna publish</span></code><span class=\"ne-text\"> 时，</span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 将监听到代码变化的子项目并以交互式 </span><code class=\"ne-code\"><span class=\"ne-text\">CLI</span></code><span class=\"ne-text\"> 方式让开发者决定需要升级的版本号，关联的子项目版本号不会自动升级，反之，当我们填入固定的版本号时，则任一子项目的代码变动，都会导致所有子项目的版本号基于当前指定的版本号升级。</span></p><p id=\"u0e61fc9c\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u52cf8053\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 提供了很多 </span><code class=\"ne-code\"><span class=\"ne-text\">CLI</span></code><span class=\"ne-text\"> 命令以满足我们的各种需求，但根据 2/8 法则，您应该首先关注以下这些命令：</span></p><ul class=\"ne-ul\"><li id=\"u6c700d82\"><code class=\"ne-code\"><span class=\"ne-text\">lerna bootstrap</span></code><span class=\"ne-text\">：等同于 lerna link + yarn install，用于创建符合链接并安装依赖包；</span></li><li id=\"uf9469c10\"><code class=\"ne-code\"><span class=\"ne-text\">lerna run</span></code><span class=\"ne-text\">：会像执行一个 for 循环一样，在所有子项目中执行 npm script 脚本，并且，它会非常智能的识别依赖关系，并从根依赖开始执行命令；</span></li><li id=\"u932e5cfe\"><code class=\"ne-code\"><span class=\"ne-text\">lerna exec</span></code><span class=\"ne-text\">：像 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna run </span></code><span class=\"ne-text\">一样，会按照依赖顺序执行命令，不同的是，它可以执行任何命令，例如 </span><code class=\"ne-code\"><span class=\"ne-text\">shell</span></code><span class=\"ne-text\"> 脚本；</span></li><li id=\"ub06c4bdf\"><code class=\"ne-code\"><span class=\"ne-text\">lerna publish</span></code><span class=\"ne-text\">：发布代码有变动的 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\">，因此首先您需要在使用 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 前使用 </span><code class=\"ne-code\"><span class=\"ne-text\">git commit</span></code><span class=\"ne-text\"> 命令提交代码，好让 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 有一个 </span><code class=\"ne-code\"><span class=\"ne-text\">baseline</span></code><span class=\"ne-text\">；</span></li><li id=\"u06b01b17\"><code class=\"ne-code\"><span class=\"ne-text\">lerna add</span></code><span class=\"ne-text\">：将本地或远程的包作为依赖添加至当前的 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 仓库中，该命令让 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 可以识别并追踪包之间的依赖关系，因此非常重要；</span></li></ul><pre data-language=\"shell\" id=\"g2KSh\" class=\"ne-codeblock language-shell\"># 向 @mono/project2 和 @mono/project3 中添加 @mono/project1\nlerna add @mono/project1 '@mono/project{2,3}'</pre><h4 id=\"IoUuw\"><span class=\"ne-text\">lerna 高级命令</span></h4><p id=\"u2fac2e13\" class=\"ne-p\"><span class=\"ne-text\">除了上面介绍到的常用命令外，</span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 还提供了一些参数满足我们更灵活的需求，例如：</span></p><ul class=\"ne-ul\"><li id=\"ua122680d\"><code class=\"ne-code\"><span class=\"ne-text\">--concurrency &lt;number&gt;</span></code><span class=\"ne-text\">：参数可以使 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 利用计算机上的多个核心，并发运行，从而提升构建速度；</span></li><li id=\"u5d330b31\"><code class=\"ne-code\"><span class=\"ne-text\">--scope '@mono/{pkg1,pkg2}'</span></code><span class=\"ne-text\">：</span><code class=\"ne-code\"><span class=\"ne-text\">--scope</span></code><span class=\"ne-text\"> 参数可以指定 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 命令的运行环境，通过使用该参数，</span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 将不再是一把梭的在所有仓库中执行命令，而是可以精准地在我们所指定的仓库中执行命令，并且还支持示例中的模版语法；</span></li><li id=\"ucbcd7067\"><code class=\"ne-code\"><span class=\"ne-text\">--stream</span></code><span class=\"ne-text\">：该参数可使我们查看 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 运行时的命令执行信息；</span></li></ul><h4 id=\"iCnP2\"><span class=\"ne-text\" style=\"color: rgb(44, 62, 80)\">npm 包本地发布：Verdaccio</span></h4><p id=\"u76369f55\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648748304497-5e3fff8e-c3f8-45d1-838f-c3e5bd18ed1c.png\" width=\"481.6\" id=\"u8ce3b6ee\" class=\"ne-image\"></p><p id=\"ue967177c\" class=\"ne-p\"><span class=\"ne-text\">看到这里，您可能想要亲自体验一把使用 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 管理/发布 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 项目的感觉。可是很快您会发现，将示例代码发布到真实世界的 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 仓库并非一个好主意，这多少有些令人沮丧，但是别担心，您可以使用 </span><a href=\"https://verdaccio.org/\" data-href=\"https://verdaccio.org/\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Verdaccio</span></a><span class=\"ne-text\"> 在本地创建一个 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 仓库作为代理，然后尽情体验 </span><code class=\"ne-code\"><span class=\"ne-text\">Lerna</span></code><span class=\"ne-text\"> 的种种强大之处。</span></p><p id=\"u8fce2d9a\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u06ffb147\" class=\"ne-p\"><span class=\"ne-text\">安装运行 </span><code class=\"ne-code\"><span class=\"ne-text\">Verdaccio</span></code><span class=\"ne-text\"> 非常简单，您只需运行：</span></p><pre data-language=\"shell\" id=\"Zj2aV\" class=\"ne-codeblock language-shell\">npm install --global verdaccio</pre><p id=\"u75c40ef9\" class=\"ne-p\"><span class=\"ne-text\">在全局安装 </span><code class=\"ne-code\"><span class=\"ne-text\">Verdaccio</span></code><span class=\"ne-text\"> 应用，然后在 </span><code class=\"ne-code\"><span class=\"ne-text\">shell</span></code><span class=\"ne-text\"> 中输入：</span></p><pre data-language=\"shell\" id=\"Ha0Mi\" class=\"ne-codeblock language-shell\">verdaccio</pre><p id=\"u5dc97380\" class=\"ne-p\"><span class=\"ne-text\">即可通过 </span><code class=\"ne-code\"><span class=\"ne-text\">localhost:4837</span></code><span class=\"ne-text\"> 访问您的本地代理 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 仓库，别忘了在您的项目根目录创建 </span><code class=\"ne-code\"><span class=\"ne-text\">.npmrc</span></code><span class=\"ne-text\"> 文件，并在文件中将 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 仓库地址改写为您的本地代理地址：</span></p><pre data-language=\"shell\" id=\"tHFHj\" class=\"ne-codeblock language-shell\">registry=&quot;http://localhost:4873/&quot;</pre><p id=\"ucf137b08\" class=\"ne-p\"><span class=\"ne-text\">大功告成 🙌！每当您执行 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna publish</span></code><span class=\"ne-text\"> 时，子项目所构建成的 </span><code class=\"ne-code\"><span class=\"ne-text\">package</span></code><span class=\"ne-text\"> 将会发布在本地 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 仓库中，而当您执行 </span><code class=\"ne-code\"><span class=\"ne-text\">lerna bootstrap</span></code><span class=\"ne-text\"> 时，</span><code class=\"ne-code\"><span class=\"ne-text\">Verdaccio</span></code><span class=\"ne-text\"> 将会放行，让您成功从远程 </span><code class=\"ne-code\"><span class=\"ne-text\">npm</span></code><span class=\"ne-text\"> 仓库中拉取相应的代码。</span></p><h3 id=\"iwmes\"><span class=\"ne-text\">6. 格式化 commit 管理</span></h3><p id=\"u3950e952\" class=\"ne-p\"><span class=\"ne-text\">至此，我们已经掌握了组织一个项目级 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 仓库的所有前沿技巧，最后，让我们看看最后一个可以优化的地方：代码提交时，约束 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息。</span></p><p id=\"u43c1bb9b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u20f94032\" class=\"ne-p\"><span class=\"ne-text\">一个 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 仓库可能被不同的开发者提交不同子项目的代码，如果没有规范化的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息，在故障排查或版本回滚时毫无意外会遭遇灾难。因此，千万不要小看 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息格式化的重要性（当然，同样重要的还有代码注释！）。</span></p><p id=\"u0f6d9481\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ub83c335b\" class=\"ne-p\"><span class=\"ne-text\">为了我们能够一目了然的追踪每次代码变更的信息，我们使用 </span><a href=\"https://github.com/conventional-changelog/commitlint/#what-is-commitlint\" data-href=\"https://github.com/conventional-changelog/commitlint/#what-is-commitlint\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">commitlint</span></a><span class=\"ne-text\"> 工具作为格式化 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息的不二之选。</span></p><p id=\"udfabd56a\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ub23f9896\" class=\"ne-p\"><span class=\"ne-text\">顾名思义，</span><code class=\"ne-code\"><span class=\"ne-text\">commitlint</span></code><span class=\"ne-text\"> 可以帮助我们检查提交的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息，它强制约束我们的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息必须在开头附加指定类型，用于标示本次提交的大致意图，支持的类型关键字有：</span></p><ul class=\"ne-ul\"><li id=\"u26ab9e73\"><code class=\"ne-code\"><span class=\"ne-text\">feat</span></code><span class=\"ne-text\">：表示添加一个新特性；</span></li><li id=\"u8f5d8328\"><code class=\"ne-code\"><span class=\"ne-text\">chore</span></code><span class=\"ne-text\">：表示做了一些与特性和修复无关的「家务事」；</span></li><li id=\"ua1b40293\"><code class=\"ne-code\"><span class=\"ne-text\">fix</span></code><span class=\"ne-text\">：表示修复了一个 </span><code class=\"ne-code\"><span class=\"ne-text\">Bug</span></code><span class=\"ne-text\">；</span></li><li id=\"ue7db7ec0\"><code class=\"ne-code\"><span class=\"ne-text\">refactor</span></code><span class=\"ne-text\">：表示本次提交是因为重构了代码；</span></li><li id=\"u9a4f7abc\"><code class=\"ne-code\"><span class=\"ne-text\">style</span></code><span class=\"ne-text\">：表示代码美化或格式化；</span></li><li id=\"uc24c75fc\"><span class=\"ne-text\">...</span></li></ul><p id=\"u896e216b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u886f7219\" class=\"ne-p\"><span class=\"ne-text\">我强烈建议您遵循该规范编写您的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息，不要偷懒，坚持下去，您的 git 日志将会显得整齐，有条理，富有表现力，同时，您也会收到同行的交口称赞，人人都会以和您这样优雅的工程师合作为荣。</span></p><p id=\"uea56f20e\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u557fd3ea\" class=\"ne-p\"><span class=\"ne-text\">除了限定 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息类型外，</span><code class=\"ne-code\"><span class=\"ne-text\">commitlint</span></code><span class=\"ne-text\"> 还支持（虽然不是必须的）显示指定我们本次提交所对应的子项目名称。假如我们有一个名为 </span><code class=\"ne-code\"><span class=\"ne-text\">@mono/project1</span></code><span class=\"ne-text\"> 的子项目，我们针对该项目提交的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息可以写为：</span></p><pre data-language=\"git\" id=\"mS363\" class=\"ne-codeblock language-git\">git commit -m &quot;feat(project1): add a attractive button&quot; # 注意，我们省略了 @mono 的项目前缀</pre><p id=\"u33f250b2\" class=\"ne-p\"><span class=\"ne-text\">毫无疑问，这将会使我们的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息更具表现力。</span></p><p id=\"u1142642d\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"uff98ac97\" class=\"ne-p\"><span class=\"ne-text\">我们可以通过下面的命令安装 </span><code class=\"ne-code\"><span class=\"ne-text\">commitlint</span></code><span class=\"ne-text\"> 以及周边依赖：</span></p><pre data-language=\"shell\" id=\"RkIa0\" class=\"ne-codeblock language-shell\">npm i -D @commitlint/cli @commitlint/config-conventional @commitlint/config-lerna-scopes commitlint husky lerna-changelog</pre><p id=\"ua6fc73f1\" class=\"ne-p\"><span class=\"ne-text\">注意到了吗？我偷偷安装了 </span><a href=\"https://www.npmjs.com/package/husky\" data-href=\"https://www.npmjs.com/package/husky\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">husky</span></a><span class=\"ne-text\">，它能够帮助我们在提交 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息时自动运行 </span><code class=\"ne-code\"><span class=\"ne-text\">commitlint</span></code><span class=\"ne-text\"> 进行检查，但在这之前，我们需要再在根目录下的 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 文件里加点料，像这样：</span></p><pre data-language=\"json\" id=\"jzcnb\" class=\"ne-codeblock language-json\">{\n ...\n &quot;husky&quot;: {\n    &quot;hooks&quot;: {\n      &quot;commit-msg&quot;: &quot;commitlint -E HUSKY_GIT_PARAMS&quot;\n    }\n  }\n ...\n}</pre><p id=\"ucb1bc6e7\" class=\"ne-p\"><span class=\"ne-text\">为了能够让 </span><code class=\"ne-code\"><span class=\"ne-text\">commitlint</span></code><span class=\"ne-text\"> 感知我们的子项目名称，我们还需在项目根目录中增加 </span><code class=\"ne-code\"><span class=\"ne-text\">commitlint.config.js</span></code><span class=\"ne-text\"> 文件，并设置文件内容为：</span></p><pre data-language=\"javascript\" id=\"cPxqv\" class=\"ne-codeblock language-javascript\">module.exports = {\n  extends: [\n    &quot;@commitlint/config-conventional&quot;,\n    &quot;@commitlint/config-lerna-scopes&quot;,\n  ],\n};</pre><p id=\"uaafcda09\" class=\"ne-p\"><span class=\"ne-text\">至此，我们统一并规范化了 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 项目的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息，终于整个 </span><code class=\"ne-code\"><span class=\"ne-text\">monorepo</span></code><span class=\"ne-text\"> 工程化的最后一块拼图被我们拼上了！</span></p><p id=\"u76a2a263\" class=\"ne-p\"><span class=\"ne-text\">（顺便一提，您可以通过在命令行执行 </span><code class=\"ne-code\"><span class=\"ne-text\">echo &quot;build(project1): change something&quot; | npx commitlint</span></code><span class=\"ne-text\"> 命令即可验证您的 </span><code class=\"ne-code\"><span class=\"ne-text\">commit</span></code><span class=\"ne-text\"> 信息是否通过 </span><code class=\"ne-code\"><span class=\"ne-text\">commitlint</span></code><span class=\"ne-text\"> 的检查。）</span></p></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"JA07R\" id=\"JA07R\"><span data-lake-id=\"u8e8161df\" id=\"u8e8161df\">大型项目管理  Monorepo</span></h2><h3 data-lake-id=\"x1ZjE\" id=\"x1ZjE\"><span data-lake-id=\"u42649ce6\" id=\"u42649ce6\">背景</span></h3><p data-lake-id=\"u2e632aaa\" id=\"u2e632aaa\"><span data-lake-id=\"uc6b910df\" id=\"uc6b910df\">一个体系庞大的代码库拆分成多个单独的具有独立版本的 </span><code data-lake-id=\"u30467590\" id=\"u30467590\"><span data-lake-id=\"uaa251524\" id=\"uaa251524\">package</span></code><span data-lake-id=\"uc8a94664\" id=\"uc8a94664\">，对于开发实际的代码共享非常有用。数量较少的时候，多个仓库维护不会有太大问题，但是当独立 </span><code data-lake-id=\"ud1cf624e\" id=\"ud1cf624e\"><span data-lake-id=\"u3fac565b\" id=\"u3fac565b\">package</span></code><span data-lake-id=\"u5ef09c25\" id=\"u5ef09c25\"> 数量越来越多的时候，就会暴露出很多开发困扰的问题：</span></p><ol list=\"ud7ba8ca9\"><li fid=\"uaeca9024\" data-lake-id=\"u9902f6b3\" id=\"u9902f6b3\"><span data-lake-id=\"u43391b70\" id=\"u43391b70\">跨越很多代码存储库，修改代码很麻烦</span></li><li fid=\"uaeca9024\" data-lake-id=\"ufa96120e\" id=\"ufa96120e\"><code data-lake-id=\"u5b5281d3\" id=\"u5b5281d3\"><span data-lake-id=\"u7b650e25\" id=\"u7b650e25\">issue</span></code><span data-lake-id=\"u144a91c0\" id=\"u144a91c0\"> 难以统一追踪、管理，因为其分散在独立的 </span><code data-lake-id=\"ue0add46b\" id=\"ue0add46b\"><span data-lake-id=\"u6afebd5b\" id=\"u6afebd5b\">repo</span></code><span data-lake-id=\"uf5ac8e37\" id=\"uf5ac8e37\"> 里</span></li><li fid=\"uaeca9024\" data-lake-id=\"u893ee488\" id=\"u893ee488\"><span data-lake-id=\"u035cd5ee\" id=\"u035cd5ee\">跨存储库的代码测试非常复杂</span></li><li fid=\"uaeca9024\" data-lake-id=\"u8fd3db18\" id=\"u8fd3db18\"><span data-lake-id=\"ud2e86bb3\" id=\"ud2e86bb3\">多个 </span><code data-lake-id=\"ue7083cd0\" id=\"ue7083cd0\"><span data-lake-id=\"uc98f14a4\" id=\"uc98f14a4\">package</span></code><span data-lake-id=\"ue8b988ef\" id=\"ue8b988ef\"> 之间相互依赖，对于互相引用的版本号依赖维护成本非常高，开发人员不得不使用 </span><code data-lake-id=\"ub3a99775\" id=\"ub3a99775\"><span data-lake-id=\"u12d29c65\" id=\"u12d29c65\">npm link</span></code><span data-lake-id=\"ub754ad83\" id=\"ub754ad83\"> 的方式去引用依赖</span></li></ol><p data-lake-id=\"u4bdd18fc\" id=\"u4bdd18fc\"><span data-lake-id=\"u4629bc46\" id=\"u4629bc46\">​</span><br></p><p data-lake-id=\"u5ed6653c\" id=\"u5ed6653c\"><span data-lake-id=\"u625cc175\" id=\"u625cc175\">为了解决上面这些问题，一些项目会将其代码库统一组织到多包存储库中，我们称之为 </span><code data-lake-id=\"u58ea57e3\" id=\"u58ea57e3\"><span data-lake-id=\"u78db7f69\" id=\"u78db7f69\">monorepos</span></code><span data-lake-id=\"u6865c7a8\" id=\"u6865c7a8\">。如：</span><code data-lake-id=\"u2428f23e\" id=\"u2428f23e\"><span data-lake-id=\"u96a1fb83\" id=\"u96a1fb83\">babel</span></code><span data-lake-id=\"uc24c8881\" id=\"uc24c8881\">、</span><code data-lake-id=\"u3fddf11b\" id=\"u3fddf11b\"><span data-lake-id=\"uae8b5e62\" id=\"uae8b5e62\">react</span></code><span data-lake-id=\"u17c24583\" id=\"u17c24583\">、</span><code data-lake-id=\"u2877a71d\" id=\"u2877a71d\"><span data-lake-id=\"u8f3dcdba\" id=\"u8f3dcdba\">angular</span></code><span data-lake-id=\"udf3df58f\" id=\"udf3df58f\">、</span><code data-lake-id=\"u4e95a609\" id=\"u4e95a609\"><span data-lake-id=\"uef3f5800\" id=\"uef3f5800\">ember</span></code><span data-lake-id=\"udf531f21\" id=\"udf531f21\">、</span><code data-lake-id=\"u63dfb5bc\" id=\"u63dfb5bc\"><span data-lake-id=\"u504da6c6\" id=\"u504da6c6\">meteor</span></code><span data-lake-id=\"ub812c42b\" id=\"ub812c42b\">、</span><code data-lake-id=\"uafa727ef\" id=\"uafa727ef\"><span data-lake-id=\"ufda93e45\" id=\"ufda93e45\">jest</span></code><span data-lake-id=\"ueb4fc800\" id=\"ueb4fc800\">之类的项目以及许多其他项目都在单个存储库中开发所有软件包</span></p><p data-lake-id=\"u2382a6fb\" id=\"u2382a6fb\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1648745861879-4f0cfeac-98d9-4bb6-976c-ce3d58870495.png%22%2C%22taskId%22%3A%22u303bc63b-4c32-41c9-aafa-5130ad049b5%22%2C%22clientId%22%3A%22u6fbcdb1d-5fd6-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A600%2C%22height%22%3A281%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A284185%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A750%2C%22originHeight%22%3A351%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22BABEL%2FBABEL%20MAIN%20PACKAGES%20SYMBOLS%20FILES%20PACKAGES%20LIB%20PACKAGES%20FILES%20AND%20DIRECTORIES%20BABEL-PLUGIN-SYNTAX-JSX%2F%20BABEL-CLI%2F%20%3EBABEL-CLI%20BABEL-PLUGIN-SYNTAX-MODULE-STRING-NAMES%20BABEL-CODE-FRAME%2F%20BABEL-CODE-FRAME%20BABEL-PLUGIN-SYNTAX-PARTIAL-APPLICATION%2F%20BABEL-COMPAT-DATA%2F%20BABEL-COMPAT-DATA%20BABEL-PLUGIN-SYNTAX-PIPELINE-OPERATOR%2F%20BABEL-CORE%2F%20BABEL-CORE%20BABEL-GENERATOR%2F%20BABEL-PLUGIN-SYNTAX-RECORD-AND-TUPLE%2F%20BABEL-PLUGIN-SYNTAX-THROW-EXPRESSIONS%2F%20BABEL-HELPER-ANNOTATE-AS-PURE%2F%20BABEL-GENERATOR%20BABEL-PLUGIN-SYNTAX-TOP-LEVEL-AWAIT%2F%20BABEL-HELPER-BINDIFY-DECORATORS%2F%20BABEL-HELPER-ANNOTATE-AS-PUR%20BABEL-PLUGIN-SYNTAX-TYPESCRIPT%2F%20BABEL-HELPER-BUILDER-BINARY-ASSIGNMENT-O%20BABEL-HELPER-BINDIFY-DECORATO%20BABEL-HELPER-BUILDER-REACT-JSX%2F%20BABEL-PLUGIN-TRANSFORM-ARROW-FUNCTIONS%2F%20BABEL-HELPER-BUILDER-BINARY-A%20BABEL-HELPER-CALL-DELEGATE%2F%20BABEL-PLUGIN-TRANSFORM-ASYNC-TO-GENERATC%20BABEL-PLUGIN-TRANSFORM-BLOCK-SCOPED-FUN%20BABEL-HELPER-COMPILATION-TARGETS%2F%20BABEL-HELPER-BUILDER-REACT-JSX%20BABEL-HELPER-CREATE-CLASS-FEATURES-PLUGIN%2C%20%20BABEL-PLUGIN-TRANSFORM-BLOCK-SCOPING%2F%20BABEL-HELPER-CALL-DELEGATE%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A27.226288%2C%22y%22%3A9.327278%2C%22width%22%3A69.035827%2C%22height%22%3A12.682532000000002%2C%22text%22%3A%22BABEL%2FBABEL%22%7D%2C%7B%22x%22%3A123.19318%2C%22y%22%3A10.729027%2C%22width%22%3A28.60078%2C%22height%22%3A10.624425999999998%2C%22text%22%3A%22MAIN%22%7D%2C%7B%22x%22%3A182.64436%2C%22y%22%3A11.591792%2C%22width%22%3A56.60473999999999%2C%22height%22%3A11.077481%2C%22text%22%3A%22PACKAGES%22%7D%2C%7B%22x%22%3A47.414608%2C%22y%22%3A35.86075%2C%22width%22%3A54.52820199999999%2C%22height%22%3A11.457729999999998%2C%22text%22%3A%22SYMBOLS%22%7D%2C%7B%22x%22%3A4.3277755%2C%22y%22%3A36.62773%2C%22width%22%3A31.229034499999997%2C%22height%22%3A10.346350000000001%2C%22text%22%3A%22FILES%22%7D%2C%7B%22x%22%3A259.34225%2C%22y%22%3A52.06438%2C%22width%22%3A88.33747%2C%22height%22%3A17.25783%2C%22text%22%3A%22PACKAGES%22%7D%2C%7B%22x%22%3A20.953821%2C%22y%22%3A62.51335%2C%22width%22%3A17.169499%2C%22height%22%3A10.711849999999998%2C%22text%22%3A%22LIB%22%7D%2C%7B%22x%22%3A23.42938%2C%22y%22%3A88.178825%2C%22width%22%3A54.154610000000005%2C%22height%22%3A10.759985%2C%22text%22%3A%22PACKAGES%22%7D%2C%7B%22x%22%3A234.70477%2C%22y%22%3A89.3899%2C%22width%22%3A128.11457000000001%2C%22height%22%3A13.846680000000006%2C%22text%22%3A%22FILES%20AND%20DIRECTORIES%22%7D%2C%7B%22x%22%3A498.75217%2C%22y%22%3A110.63647%2C%22width%22%3A144.23336000000006%2C%22height%22%3A13.168126%2C%22text%22%3A%22BABEL-PLUGIN-SYNTAX-JSX%2F%22%7D%2C%7B%22x%22%3A234.36852%2C%22y%22%3A110.69555%2C%22width%22%3A58.16572000000002%2C%22height%22%3A13.28052000000001%2C%22text%22%3A%22BABEL-CLI%2F%22%7D%2C%7B%22x%22%3A23.28417%2C%22y%22%3A112.5402%2C%22width%22%3A61.118719999999996%2C%22height%22%3A12.321290000000005%2C%22text%22%3A%22%3EBABEL-CLI%22%7D%2C%7B%22x%22%3A499.06033%2C%22y%22%3A130.2656%2C%22width%22%3A248.11987%2C%22height%22%3A13.592569999999995%2C%22text%22%3A%22BABEL-PLUGIN-SYNTAX-MODULE-STRING-NAMES%22%7D%2C%7B%22x%22%3A234.89445%2C%22y%22%3A131.68988%2C%22width%22%3A110.51425%2C%22height%22%3A11.51570000000001%2C%22text%22%3A%22BABEL-CODE-FRAME%2F%22%7D%2C%7B%22x%22%3A31.555506%2C%22y%22%3A137.69077%2C%22width%22%3A102.299654%2C%22height%22%3A12.326210000000003%2C%22text%22%3A%22BABEL-CODE-FRAME%22%7D%2C%7B%22x%22%3A499.20398%2C%22y%22%3A150.56187%2C%22width%22%3A234.38261999999997%2C%22height%22%3A13.360800000000012%2C%22text%22%3A%22BABEL-PLUGIN-SYNTAX-PARTIAL-APPLICATION%2F%22%7D%2C%7B%22x%22%3A234.96416%2C%22y%22%3A151.11113%2C%22width%22%3A116.40940999999998%2C%22height%22%3A11.907960000000003%2C%22text%22%3A%22BABEL-COMPAT-DATA%2F%22%7D%2C%7B%22x%22%3A33.07156%2C%22y%22%3A163.45583%2C%22width%22%3A108.37374%2C%22height%22%3A12.024100000000004%2C%22text%22%3A%22BABEL-COMPAT-DATA%22%7D%2C%7B%22x%22%3A498.51575%2C%22y%22%3A169.61719%2C%22width%22%3A228.74028999999996%2C%22height%22%3A14.119990000000001%2C%22text%22%3A%22BABEL-PLUGIN-SYNTAX-PIPELINE-OPERATOR%2F%22%7D%2C%7B%22x%22%3A234.04773%2C%22y%22%3A170.78363%2C%22width%22%3A69.48804000000001%2C%22height%22%3A11.704300000000018%2C%22text%22%3A%22BABEL-CORE%2F%22%7D%2C%7B%22x%22%3A29.353434%2C%22y%22%3A187.95811%2C%22width%22%3A66.774046%2C%22height%22%3A11.047730000000001%2C%22text%22%3A%22BABEL-CORE%22%7D%2C%7B%22x%22%3A234.15742%2C%22y%22%3A190.05562%2C%22width%22%3A101.44727999999998%2C%22height%22%3A12.907839999999993%2C%22text%22%3A%22BABEL-GENERATOR%2F%22%7D%2C%7B%22x%22%3A498.43933%2C%22y%22%3A190.21156%2C%22width%22%3A227.96576999999996%2C%22height%22%3A12.575000000000017%2C%22text%22%3A%22BABEL-PLUGIN-SYNTAX-RECORD-AND-TUPLE%2F%22%7D%2C%7B%22x%22%3A498.65494%2C%22y%22%3A209.89996%2C%22width%22%3A235.48110999999994%2C%22height%22%3A13.748340000000013%2C%22text%22%3A%22BABEL-PLUGIN-SYNTAX-THROW-EXPRESSIONS%2F%22%7D%2C%7B%22x%22%3A234.32068%2C%22y%22%3A210.46222%2C%22width%22%3A187.16846%2C%22height%22%3A12.732740000000007%2C%22text%22%3A%22BABEL-HELPER-ANNOTATE-AS-PURE%2F%22%7D%2C%7B%22x%22%3A32.848064%2C%22y%22%3A212.16577%2C%22width%22%3A91.63158100000001%2C%22height%22%3A11.880449999999996%2C%22text%22%3A%22BABEL-GENERATOR%22%7D%2C%7B%22x%22%3A499.1256%2C%22y%22%3A230.14253%2C%22width%22%3A215.01875%2C%22height%22%3A14.337369999999993%2C%22text%22%3A%22BABEL-PLUGIN-SYNTAX-TOP-LEVEL-AWAIT%2F%22%7D%2C%7B%22x%22%3A234.41798%2C%22y%22%3A230.2949%2C%22width%22%3A193.34983999999997%2C%22height%22%3A12.185749999999985%2C%22text%22%3A%22BABEL-HELPER-BINDIFY-DECORATORS%2F%22%7D%2C%7B%22x%22%3A31.787683%2C%22y%22%3A237.28105%2C%22width%22%3A165.912557%2C%22height%22%3A12.667969999999997%2C%22text%22%3A%22BABEL-HELPER-ANNOTATE-AS-PUR%22%7D%2C%7B%22x%22%3A498.78918%2C%22y%22%3A249.29616%2C%22width%22%3A187.73212%2C%22height%22%3A14.21708000000001%2C%22text%22%3A%22BABEL-PLUGIN-SYNTAX-TYPESCRIPT%2F%22%7D%2C%7B%22x%22%3A234.96649%2C%22y%22%3A250.35603%2C%22width%22%3A247.79483000000002%2C%22height%22%3A12.575090000000017%2C%22text%22%3A%22BABEL-HELPER-BUILDER-BINARY-ASSIGNMENT-O%22%7D%2C%7B%22x%22%3A29.181208%2C%22y%22%3A261.99527%2C%22width%22%3A168.691972%2C%22height%22%3A12.106870000000015%2C%22text%22%3A%22BABEL-HELPER-BINDIFY-DECORATO%22%7D%2C%7B%22x%22%3A234.63635%2C%22y%22%3A269.52536%2C%22width%22%3A181.96317%2C%22height%22%3A13.233980000000031%2C%22text%22%3A%22BABEL-HELPER-BUILDER-REACT-JSX%2F%22%7D%2C%7B%22x%22%3A499.53577%2C%22y%22%3A270.3076%2C%22width%22%3A238.41229000000004%2C%22height%22%3A12.140500000000031%2C%22text%22%3A%22BABEL-PLUGIN-TRANSFORM-ARROW-FUNCTIONS%2F%22%7D%2C%7B%22x%22%3A29.64811%2C%22y%22%3A286.94843%2C%22width%22%3A168.10966%2C%22height%22%3A12.510100000000023%2C%22text%22%3A%22BABEL-HELPER-BUILDER-BINARY-A%22%7D%2C%7B%22x%22%3A235.143%2C%22y%22%3A289.9068%2C%22width%22%3A160.42202999999998%2C%22height%22%3A12.900540000000035%2C%22text%22%3A%22BABEL-HELPER-CALL-DELEGATE%2F%22%7D%2C%7B%22x%22%3A499.79257%2C%22y%22%3A289.9713%2C%22width%22%3A247.01652999999993%2C%22height%22%3A14.36098000000004%2C%22text%22%3A%22BABEL-PLUGIN-TRANSFORM-ASYNC-TO-GENERATC%22%7D%2C%7B%22x%22%3A499.28625%2C%22y%22%3A308.83768%2C%22width%22%3A248.10779000000002%2C%22height%22%3A13.513700000000028%2C%22text%22%3A%22BABEL-PLUGIN-TRANSFORM-BLOCK-SCOPED-FUN%22%7D%2C%7B%22x%22%3A235.43103%2C%22y%22%3A310.006%2C%22width%22%3A196.75195%2C%22height%22%3A12.006730000000005%2C%22text%22%3A%22BABEL-HELPER-COMPILATION-TARGETS%2F%22%7D%2C%7B%22x%22%3A26.988047%2C%22y%22%3A311.56094%2C%22width%22%3A170.13780300000002%2C%22height%22%3A13.643159999999966%2C%22text%22%3A%22BABEL-HELPER-BUILDER-REACT-JSX%22%7D%2C%7B%22x%22%3A235.08105%2C%22y%22%3A329.7709%2C%22width%22%3A491.47225000000003%2C%22height%22%3A12.67804000000001%2C%22text%22%3A%22BABEL-HELPER-CREATE-CLASS-FEATURES-PLUGIN%2C%20%20BABEL-PLUGIN-TRANSFORM-BLOCK-SCOPING%2F%22%7D%2C%7B%22x%22%3A27.065042%2C%22y%22%3A336.19858%2C%22width%22%3A153.888078%2C%22height%22%3A12.063780000000008%2C%22text%22%3A%22BABEL-HELPER-CALL-DELEGATE%22%7D%5D%2C%22showTitle%22%3Atrue%2C%22title%22%3A%22babel%20%E4%BD%BF%E7%94%A8%20monorepo%20%E7%AD%96%E7%95%A5%E7%AE%A1%E7%90%86%E4%BB%A3%E7%A0%81%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22ufb051cd7%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><h3 data-lake-id=\"WDvDL\" id=\"WDvDL\"><span data-lake-id=\"ub8646ccb\" id=\"ub8646ccb\">概念</span></h3><p data-lake-id=\"u95179c94\" id=\"u95179c94\"><code data-lake-id=\"u2cd1a398\" id=\"u2cd1a398\"><span data-lake-id=\"ua3c43b86\" id=\"ua3c43b86\">Menorepo</span></code><span data-lake-id=\"u86a2949c\" id=\"u86a2949c\"> 是管理项目代码的一个方式，指在一个项目仓库 </span><code data-lake-id=\"u52c4c95e\" id=\"u52c4c95e\"><span data-lake-id=\"uf003677c\" id=\"uf003677c\">repo</span></code><span data-lake-id=\"ua81e1437\" id=\"ua81e1437\"> 中管理多个模块/包(</span><code data-lake-id=\"uaf5f58a9\" id=\"uaf5f58a9\"><span data-lake-id=\"u6db342b5\" id=\"u6db342b5\">package</span></code><span data-lake-id=\"u2d927436\" id=\"u2d927436\">)，不同于常见的每个模块建立一个 </span><code data-lake-id=\"uef088593\" id=\"uef088593\"><span data-lake-id=\"u6d57ebc9\" id=\"u6d57ebc9\">repo</span></code><span data-lake-id=\"ub3e661f3\" id=\"ub3e661f3\">。</span></p><p data-lake-id=\"uad5b860b\" id=\"uad5b860b\"><span data-lake-id=\"uce73a0f1\" id=\"uce73a0f1\">​</span><br></p><blockquote data-lake-id=\"u7ada2d25\" id=\"u7ada2d25\" class=\"lake-alert lake-alert-success\"><p data-lake-id=\"ua18f5de6\" id=\"ua18f5de6\"><code data-lake-id=\"uf31d62a4\" id=\"uf31d62a4\"><span data-lake-id=\"u2413b852\" id=\"u2413b852\">Meonorepo</span></code><span data-lake-id=\"u63878f29\" id=\"u63878f29\">的好处：</span></p><p data-lake-id=\"ua2f329e1\" id=\"ua2f329e1\" style=\"text-indent: 2em\"><span data-lake-id=\"ue0fadada\" id=\"ue0fadada\">统一的工作流、</span><code data-lake-id=\"u13aa307c\" id=\"u13aa307c\"><span data-lake-id=\"ua67e2bb6\" id=\"ua67e2bb6\">Code Shaking</span></code><span data-lake-id=\"u4dc86e3a\" id=\"u4dc86e3a\">。搭建一套脚手架，就能管理(构建、测试、发布)多个 package，统一测试、统一发版。</span></p></blockquote><p data-lake-id=\"u9ee7ed42\" id=\"u9ee7ed42\"><br></p><blockquote data-lake-id=\"u5e746536\" id=\"u5e746536\" class=\"lake-alert lake-alert-danger\"><p data-lake-id=\"u8a7c6853\" id=\"u8a7c6853\"><code data-lake-id=\"uf99decd7\" id=\"uf99decd7\"><span data-lake-id=\"u3b08b9b9\" id=\"u3b08b9b9\">Meonorepo</span></code><span data-lake-id=\"ubd4208ed\" id=\"ubd4208ed\">的坏处：</span></p><p data-lake-id=\"u63ade5a2\" id=\"u63ade5a2\" style=\"text-indent: 2em\"><span data-lake-id=\"ub54ef668\" id=\"ub54ef668\">就是 </span><code data-lake-id=\"u62cb3c09\" id=\"u62cb3c09\"><span data-lake-id=\"u9abfa3d9\" id=\"u9abfa3d9\">repo</span></code><span data-lake-id=\"ua20803b5\" id=\"ua20803b5\">的体积会比较大，由于每个 </span><code data-lake-id=\"u450fcc78\" id=\"u450fcc78\"><span data-lake-id=\"u3ea072f2\" id=\"u3ea072f2\">package</span></code><span data-lake-id=\"uc32a4351\" id=\"uc32a4351\">都有自己的 </span><code data-lake-id=\"u071e732e\" id=\"u071e732e\"><span data-lake-id=\"u02ef6644\" id=\"u02ef6644\">package.json</span></code><span data-lake-id=\"u8feeeaef\" id=\"u8feeeaef\">，会安装自己的 </span><code data-lake-id=\"ue4a7e926\" id=\"ue4a7e926\"><span data-lake-id=\"ua3845663\" id=\"ua3845663\">node_modules</span></code><span data-lake-id=\"uac72ac8a\" id=\"uac72ac8a\">，但是大概率会很多包是重复的，这就使本来就很大的 </span><code data-lake-id=\"udf8040f0\" id=\"udf8040f0\"><span data-lake-id=\"ua753e6f0\" id=\"ua753e6f0\">node_modules</span></code><span data-lake-id=\"u6d5a1588\" id=\"u6d5a1588\">变得更大。</span></p></blockquote><p data-lake-id=\"ud4fc82ae\" id=\"ud4fc82ae\"><span data-lake-id=\"u08f3a915\" id=\"u08f3a915\">​</span><br></p><blockquote data-lake-id=\"ucb9cfffb\" id=\"ucb9cfffb\" class=\"lake-alert lake-alert-info\"><p data-lake-id=\"uee3af175\" id=\"uee3af175\"><code data-lake-id=\"u920cfd31\" id=\"u920cfd31\"><span data-lake-id=\"u6112df08\" id=\"u6112df08\">Meonorepo</span></code><span data-lake-id=\"u8c04c144\" id=\"u8c04c144\">的解决方案：</span></p><p data-lake-id=\"u03183c70\" id=\"u03183c70\" style=\"text-indent: 2em\"><code data-lake-id=\"u788a128e\" id=\"u788a128e\"><span data-lake-id=\"u87ac424d\" id=\"u87ac424d\">lerna</span></code><span data-lake-id=\"ub19afef2\" id=\"ub19afef2\">和</span><code data-lake-id=\"ud8357633\" id=\"ud8357633\"><span data-lake-id=\"ua9f35d93\" id=\"ua9f35d93\">workspaces</span></code><span data-lake-id=\"u75406a10\" id=\"u75406a10\">特性。</span></p><p data-lake-id=\"uc46ba0dc\" id=\"uc46ba0dc\"><br></p><p data-lake-id=\"u54cd54c2\" id=\"u54cd54c2\"><span data-lake-id=\"u93f2b243\" id=\"u93f2b243\">对于 </span><code data-lake-id=\"u1dfe3462\" id=\"u1dfe3462\"><span data-lake-id=\"ucc2ff629\" id=\"ucc2ff629\">node_modules</span></code><span data-lake-id=\"u18e44adf\" id=\"u18e44adf\">包重复安装的问题：</span></p><p data-lake-id=\"u5100dad8\" id=\"u5100dad8\" style=\"text-indent: 2em\"><code data-lake-id=\"u659fe31f\" id=\"u659fe31f\"><span data-lake-id=\"ub4e45152\" id=\"ub4e45152\">lerna</span></code><span data-lake-id=\"u9067b132\" id=\"u9067b132\">提供了 </span><code data-lake-id=\"ud6c2c865\" id=\"ud6c2c865\"><span data-lake-id=\"uabc061f2\" id=\"uabc061f2\">--hoist</span></code><span data-lake-id=\"u42cd833b\" id=\"u42cd833b\">选项，相同的依赖，会</span><strong><span data-lake-id=\"u87ce785f\" id=\"u87ce785f\">提升</span></strong><span data-lake-id=\"u8bd4e001\" id=\"u8bd4e001\">到 </span><code data-lake-id=\"u563ae1be\" id=\"u563ae1be\"><span data-lake-id=\"u0da64c86\" id=\"u0da64c86\">repo</span></code><span data-lake-id=\"u550cb898\" id=\"u550cb898\">根目录下安装(比较鸡肋)，</span><code data-lake-id=\"u967150ab\" id=\"u967150ab\"><span data-lake-id=\"uab16fdc2\" id=\"uab16fdc2\">lerna</span></code><span data-lake-id=\"u864c73e2\" id=\"u864c73e2\"> 直接以字符串对比 </span><code data-lake-id=\"u0f11ab79\" id=\"u0f11ab79\"><span data-lake-id=\"u21058843\" id=\"u21058843\">dependency</span></code><span data-lake-id=\"u5f1c1dfa\" id=\"u5f1c1dfa\"> 的版本号，完全相同才会进行提升，</span><code data-lake-id=\"u6f950cf9\" id=\"u6f950cf9\"><span data-lake-id=\"u3dd7ac8c\" id=\"u3dd7ac8c\">npm</span></code><span data-lake-id=\"u582a9573\" id=\"u582a9573\"> 的 </span><code data-lake-id=\"u6d7201e2\" id=\"u6d7201e2\"><span data-lake-id=\"u0f56ff9e\" id=\"u0f56ff9e\">semver</span></code><span data-lake-id=\"u60929d34\" id=\"u60929d34\"> 约定(语义化版本规范)在这里并不起作用。</span></p><p data-lake-id=\"u81347626\" id=\"u81347626\" style=\"text-indent: 2em\"><code data-lake-id=\"ub083aa9b\" id=\"ub083aa9b\"><span data-lake-id=\"ud5aebbc7\" id=\"ud5aebbc7\">yarn</span></code><span data-lake-id=\"uaacf66c6\" id=\"uaacf66c6\"> 作为包管理器很好的解决了这个问题，只需要在根 </span><code data-lake-id=\"u67b49aad\" id=\"u67b49aad\"><span data-lake-id=\"u64082d62\" id=\"u64082d62\">package.json</span></code><span data-lake-id=\"ua5c89962\" id=\"ua5c89962\">中以 </span><code data-lake-id=\"uaeb2a398\" id=\"uaeb2a398\"><span data-lake-id=\"u0987a90d\" id=\"u0987a90d\">workspaces</span></code><span data-lake-id=\"uee985678\" id=\"uee985678\">字段声明 </span><code data-lake-id=\"u5eb9d24c\" id=\"u5eb9d24c\"><span data-lake-id=\"u8a34541e\" id=\"u8a34541e\">packages</span></code><span data-lake-id=\"udbe66306\" id=\"udbe66306\"> 目录和 </span><code data-lake-id=\"u8af5684a\" id=\"u8af5684a\"><span data-lake-id=\"u0a47d3db\" id=\"u0a47d3db\">&quot;private&quot;: true</span></code><span data-lake-id=\"u83731df1\" id=\"u83731df1\">，</span><code data-lake-id=\"u170b325e\" id=\"u170b325e\"><span data-lake-id=\"u98476b76\" id=\"u98476b76\">yarn</span></code><span data-lake-id=\"ufc699aea\" id=\"ufc699aea\">就会以 </span><code data-lake-id=\"udd191b09\" id=\"udd191b09\"><span data-lake-id=\"u544f78c3\" id=\"u544f78c3\">menorepo</span></code><span data-lake-id=\"u39aff094\" id=\"u39aff094\">的方式管理 </span><code data-lake-id=\"ua12679e5\" id=\"ua12679e5\"><span data-lake-id=\"u51bec3c3\" id=\"u51bec3c3\">packages</span></code><span data-lake-id=\"u638b3c83\" id=\"u638b3c83\">。</span><code data-lake-id=\"u8bb6d418\" id=\"u8bb6d418\"><span data-lake-id=\"u0e9dafcf\" id=\"u0e9dafcf\">yarn</span></code><span data-lake-id=\"u29b9b71a\" id=\"u29b9b71a\">会以 </span><code data-lake-id=\"u43f6019b\" id=\"u43f6019b\"><span data-lake-id=\"ufdf6bba2\" id=\"ufdf6bba2\">semver</span></code><span data-lake-id=\"u28801898\" id=\"u28801898\">约定来分析 </span><code data-lake-id=\"u80327897\" id=\"u80327897\"><span data-lake-id=\"u2b5168f4\" id=\"u2b5168f4\">dependencies</span></code><span data-lake-id=\"ue9309460\" id=\"ue9309460\">的版本，安装依赖时更快、占用体积更小。(</span><code data-lake-id=\"u607bf279\" id=\"u607bf279\"><span data-lake-id=\"u243a5b15\" id=\"u243a5b15\">pnpm</span></code><span data-lake-id=\"u77e1e26b\" id=\"u77e1e26b\">也支持 </span><code data-lake-id=\"u39ad3f70\" id=\"u39ad3f70\"><span data-lake-id=\"u6370223b\" id=\"u6370223b\">workspaces</span></code><span data-lake-id=\"u66a228a8\" id=\"u66a228a8\">)</span></p><p data-lake-id=\"u77df6c63\" id=\"u77df6c63\" style=\"text-indent: 2em\"><span data-lake-id=\"u118bfeee\" id=\"u118bfeee\">在 </span><code data-lake-id=\"u32b0b9d9\" id=\"u32b0b9d9\"><span data-lake-id=\"uca982d53\" id=\"uca982d53\">npm7.x+</span></code><span data-lake-id=\"uaa2075b2\" id=\"uaa2075b2\"> 后，也开始支持了 </span><code data-lake-id=\"u0277e0af\" id=\"u0277e0af\"><span data-lake-id=\"ub49a7596\" id=\"ub49a7596\">workspaces</span></code><span data-lake-id=\"ub1541937\" id=\"ub1541937\"> 特性，这个功能让我们在本地开发包，尤其是多个互相依赖的包时更加得心应手。它可以避免我们再手动的去执行 </span><code data-lake-id=\"u4b17a5cb\" id=\"u4b17a5cb\"><span data-lake-id=\"u59b581e2\" id=\"u59b581e2\">npm link</span></code><span data-lake-id=\"u1be28604\" id=\"u1be28604\"> 命令，而是在</span><code data-lake-id=\"uc6c98d58\" id=\"uc6c98d58\"><span data-lake-id=\"u98e51676\" id=\"u98e51676\">npm install</span></code><span data-lake-id=\"u05ecc667\" id=\"u05ecc667\"> 的时候，会自动把 </span><code data-lake-id=\"u5c9b867b\" id=\"u5c9b867b\"><span data-lake-id=\"ue399d1e7\" id=\"ue399d1e7\">workspaces</span></code><span data-lake-id=\"ua4d2683a\" id=\"ua4d2683a\">下面的合法包，自动创建符号链接到根目录的 </span><code data-lake-id=\"uc39b34ab\" id=\"uc39b34ab\"><span data-lake-id=\"uf1f1f353\" id=\"uf1f1f353\">node_modules</span></code><span data-lake-id=\"ud32013c6\" id=\"ud32013c6\">里。能够被单独作为一个包创建符号链接的文件夹，我们就称为一个</span><code data-lake-id=\"uf64fb6ab\" id=\"uf64fb6ab\"><span data-lake-id=\"u56aefbfd\" id=\"u56aefbfd\">workspace</span></code><span data-lake-id=\"ub1da4e1d\" id=\"ub1da4e1d\">，所以是可以有多个</span><code data-lake-id=\"ud8e70309\" id=\"ud8e70309\"><span data-lake-id=\"u5d6b0415\" id=\"u5d6b0415\">workspace</span></code><span data-lake-id=\"u4d0c5680\" id=\"u4d0c5680\"> 的，可以在 </span><code data-lake-id=\"u9a8aa49e\" id=\"u9a8aa49e\"><span data-lake-id=\"u3f613084\" id=\"u3f613084\">package.json</span></code><span data-lake-id=\"u1a30ff42\" id=\"u1a30ff42\"> 的 </span><code data-lake-id=\"ud1c6a5c5\" id=\"ud1c6a5c5\"><span data-lake-id=\"ue3a1d287\" id=\"ue3a1d287\">workspaces</span></code><span data-lake-id=\"uc1431f7b\" id=\"uc1431f7b\"> 字段中进行配置。</span></p></blockquote><h3 data-lake-id=\"gLXts\" id=\"gLXts\"><span data-lake-id=\"ud2190578\" id=\"ud2190578\">lerna 介绍</span></h3><h4 data-lake-id=\"KinvH\" id=\"KinvH\"><span data-lake-id=\"u42ca86fc\" id=\"u42ca86fc\">lerna 特性</span></h4><ol list=\"u5e8822af\"><li fid=\"uc263149a\" data-lake-id=\"u3a0ab3e5\" id=\"u3a0ab3e5\"><span data-lake-id=\"udbf64f3d\" id=\"udbf64f3d\">自动解决 </span><code data-lake-id=\"ue1babc87\" id=\"ue1babc87\"><span data-lake-id=\"ubc20ed09\" id=\"ubc20ed09\">packages</span></code><span data-lake-id=\"u0a623e36\" id=\"u0a623e36\"> 之间的依赖关系</span></li><li fid=\"uc263149a\" data-lake-id=\"u0536c488\" id=\"u0536c488\"><span data-lake-id=\"u6d77b21b\" id=\"u6d77b21b\">通过 </span><code data-lake-id=\"uf8ae267d\" id=\"uf8ae267d\"><span data-lake-id=\"u4a01c826\" id=\"u4a01c826\">git</span></code><span data-lake-id=\"u10ba65b1\" id=\"u10ba65b1\"> 检测文件改动，自动发布</span></li><li fid=\"uc263149a\" data-lake-id=\"u8ee976f0\" id=\"u8ee976f0\"><span data-lake-id=\"u537e3805\" id=\"u537e3805\">根据 </span><code data-lake-id=\"uedbf6e81\" id=\"uedbf6e81\"><span data-lake-id=\"u533286dc\" id=\"u533286dc\">git</span></code><span data-lake-id=\"u28257680\" id=\"u28257680\"> 提交记录，自动生成 </span><code data-lake-id=\"u2ab053ea\" id=\"u2ab053ea\"><span data-lake-id=\"u38bb29bc\" id=\"u38bb29bc\">CHANGELOG</span></code></li></ol><p data-lake-id=\"u3aeb1188\" id=\"u3aeb1188\"><span data-lake-id=\"uf5153740\" id=\"uf5153740\">​</span><br></p><p data-lake-id=\"u385b940d\" id=\"u385b940d\"><code data-lake-id=\"u475a824f\" id=\"u475a824f\"><span data-lake-id=\"u706c3481\" id=\"u706c3481\">lerna</span></code><span data-lake-id=\"u239c2aca\" id=\"u239c2aca\"> 不负责构建、测试等任务，它提出了一种集中管理 </span><code data-lake-id=\"u32d43d3d\" id=\"u32d43d3d\"><span data-lake-id=\"u8cbd95af\" id=\"u8cbd95af\">package</span></code><span data-lake-id=\"u2f6c0c0f\" id=\"u2f6c0c0f\"> 的目录模式，提供了一套自动化管理程序，让开发者不必再深耕到具体的组件里维护内容，在项目根目录就可以全局掌控，基于 </span><code data-lake-id=\"u62f5a5ab\" id=\"u62f5a5ab\"><span data-lake-id=\"ua6b40d24\" id=\"ua6b40d24\">npm scripts</span></code><span data-lake-id=\"u7b8ca94d\" id=\"u7b8ca94d\">，可以很好地完成组件构建，代码格式化等操作，并在最后用 </span><code data-lake-id=\"ucaf5197a\" id=\"ucaf5197a\"><span data-lake-id=\"u37e94abb\" id=\"u37e94abb\">lerna</span></code><span data-lake-id=\"ud6058dbb\" id=\"ud6058dbb\"> 统一变更 </span><code data-lake-id=\"ub570ec25\" id=\"ub570ec25\"><span data-lake-id=\"u5d73151f\" id=\"u5d73151f\">package</span></code><span data-lake-id=\"u14b5634a\" id=\"u14b5634a\"> 版本，将其发布上传至远端。</span></p><h4 data-lake-id=\"jUT5Q\" id=\"jUT5Q\"><span data-lake-id=\"u95fc192e\" id=\"u95fc192e\">lerna 常用命令</span></h4><ul list=\"u50287b30\"><li fid=\"u08fd95d4\" data-lake-id=\"u001c375c\" id=\"u001c375c\"><code data-lake-id=\"u3abb61cf\" id=\"u3abb61cf\"><span data-lake-id=\"u91291774\" id=\"u91291774\">lerna init</span></code><span data-lake-id=\"u50dcaaae\" id=\"u50dcaaae\">：初始化 </span><code data-lake-id=\"uf5253a2f\" id=\"uf5253a2f\"><span data-lake-id=\"u0acf1041\" id=\"u0acf1041\">monorepo</span></code><span data-lake-id=\"ubb07d6c0\" id=\"ubb07d6c0\"> 工程项目，生成 </span><code data-lake-id=\"u1b027394\" id=\"u1b027394\"><span data-lake-id=\"ud792b05b\" id=\"ud792b05b\">packages/</span></code><span data-lake-id=\"u43ee735a\" id=\"u43ee735a\">、</span><code data-lake-id=\"uf224be39\" id=\"uf224be39\"><span data-lake-id=\"uc4ec4fa8\" id=\"uc4ec4fa8\">package.json</span></code><span data-lake-id=\"u21069dad\" id=\"u21069dad\">、</span><code data-lake-id=\"ue9185c13\" id=\"ue9185c13\"><span data-lake-id=\"u206876c1\" id=\"u206876c1\">lerna.json</span></code></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22markdown%22%2C%22code%22%3A%22.%5Cn%E2%94%9C%E2%94%80%E2%94%80%20lerna.json%5Cn%E2%94%9C%E2%94%80%E2%94%80%20package.json%5Cn%E2%94%94%E2%94%80%E2%94%80%20packages%2F%20%23%20%E8%BF%99%E9%87%8C%E5%B0%86%E5%AD%98%E6%94%BE%E6%89%80%E6%9C%89%E5%AD%90%20repo%20%E7%9B%AE%E5%BD%95%5Cn%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20project_1%2F%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20index.js%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20node_modules%2F%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20package.json%5Cn%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20project_2%2F%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20index.js%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20node_module%2F%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20package.json%5Cn%20%20%20%20...%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22SALCV%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ul list=\"u50287b30\" start=\"2\"><li fid=\"u08fd95d4\" data-lake-id=\"uaec811cd\" id=\"uaec811cd\"><code data-lake-id=\"u16f0d5ba\" id=\"u16f0d5ba\"><span data-lake-id=\"ub723ad3a\" id=\"ub723ad3a\">lerna bootstrap --hoist</span></code><span data-lake-id=\"u13493bcd\" id=\"u13493bcd\"> 为所有项目安装依赖，并链接所有依赖包，类似于 </span><code data-lake-id=\"u9ca53ba0\" id=\"u9ca53ba0\"><span data-lake-id=\"ub3664bb0\" id=\"ub3664bb0\">npm i</span></code><span data-lake-id=\"u9d798f75\" id=\"u9d798f75\">使用</span><code data-lake-id=\"u22b39011\" id=\"u22b39011\"><span data-lake-id=\"ud8c289c9\" id=\"ud8c289c9\">--hoist</span></code><span data-lake-id=\"u47d9105b\" id=\"u47d9105b\"> 选项后，所有公共的依赖都只会安装在根目录的 </span><code data-lake-id=\"u39f2751f\" id=\"u39f2751f\"><span data-lake-id=\"u70d117a9\" id=\"u70d117a9\">node_modules</span></code><span data-lake-id=\"u46b3251b\" id=\"u46b3251b\"> 目录中去,而不会在每个包目录下的 </span><code data-lake-id=\"u645a6e52\" id=\"u645a6e52\"><span data-lake-id=\"u0125129a\" id=\"u0125129a\">node_modules</span></code><span data-lake-id=\"uccd4a7e2\" id=\"uccd4a7e2\"> 中都保留各自的依赖包。</span></li><li fid=\"u08fd95d4\" data-lake-id=\"ua7e80eb9\" id=\"ua7e80eb9\"><code data-lake-id=\"ub88a5161\" id=\"ub88a5161\"><span data-lake-id=\"u5988f58e\" id=\"u5988f58e\">lerna clean</span></code><span data-lake-id=\"u740edb9e\" id=\"u740edb9e\"> 删除所有项目的 </span><code data-lake-id=\"u3ae8bf0c\" id=\"u3ae8bf0c\"><span data-lake-id=\"u3b3b1da7\" id=\"u3b3b1da7\">node_modules</span></code><span data-lake-id=\"uf5365d1e\" id=\"uf5365d1e\"> 目录</span></li><li fid=\"u08fd95d4\" data-lake-id=\"ua163dc27\" id=\"ua163dc27\"><code data-lake-id=\"u376f41be\" id=\"u376f41be\"><span data-lake-id=\"u83063e1f\" id=\"u83063e1f\">lerna run [script]</span></code><span data-lake-id=\"ue97796e9\" id=\"ue97796e9\"> 默认为所有的项目运行 </span><code data-lake-id=\"ue42d6b7a\" id=\"ue42d6b7a\"><span data-lake-id=\"u93a281f9\" id=\"u93a281f9\">npm run [script]</span></code><span data-lake-id=\"uee81cb4b\" id=\"uee81cb4b\">脚本，可以指定项目；</span></li><li fid=\"u08fd95d4\" data-lake-id=\"u2b81b98e\" id=\"u2b81b98e\"><code data-lake-id=\"u21aec0fd\" id=\"u21aec0fd\"><span data-lake-id=\"u150e4e6a\" id=\"u150e4e6a\">lerna changed</span></code><span data-lake-id=\"u674cb06b\" id=\"u674cb06b\"> 列出下次发版 </span><code data-lake-id=\"u4ca37509\" id=\"u4ca37509\"><span data-lake-id=\"u356424a4\" id=\"u356424a4\">lerna publish</span></code><span data-lake-id=\"ucbd2ddec\" id=\"ucbd2ddec\"> 要更新的包。</span></li><li fid=\"u08fd95d4\" data-lake-id=\"u1f2f485d\" id=\"u1f2f485d\"><code data-lake-id=\"uf8aa797e\" id=\"uf8aa797e\"><span data-lake-id=\"u6185f1c0\" id=\"u6185f1c0\">lerna publish</span></code><span data-lake-id=\"u82e06448\" id=\"u82e06448\"> 版本发布，按提示选择版本号(递增，或自定义)，将会执行以下步骤：</span></li></ul><ul list=\"u50287b30\" data-lake-indent=\"1\"><li fid=\"ub41c1773\" data-lake-id=\"u215f4efe\" id=\"u215f4efe\"><span data-lake-id=\"uf479d210\" id=\"uf479d210\">运行 </span><code data-lake-id=\"uc814d3b7\" id=\"uc814d3b7\"><span data-lake-id=\"u8086807d\" id=\"u8086807d\">lerna updated</span></code><span data-lake-id=\"u182041fc\" id=\"u182041fc\"> 来决定哪一个包需要被 </span><code data-lake-id=\"u601ca61d\" id=\"u601ca61d\"><span data-lake-id=\"u07945443\" id=\"u07945443\">publish</span></code></li><li fid=\"ub41c1773\" data-lake-id=\"u75e46789\" id=\"u75e46789\"><span data-lake-id=\"uc96cb637\" id=\"uc96cb637\">如果有必要，将会更新 </span><code data-lake-id=\"u5a6138ec\" id=\"u5a6138ec\"><span data-lake-id=\"uba3a0ea8\" id=\"uba3a0ea8\">lerna.json</span></code><span data-lake-id=\"ub1d973ec\" id=\"ub1d973ec\"> 中的 </span><code data-lake-id=\"u3ab15bad\" id=\"u3ab15bad\"><span data-lake-id=\"u7511f90c\" id=\"u7511f90c\">version</span></code></li><li fid=\"ub41c1773\" data-lake-id=\"u863db64c\" id=\"u863db64c\"><span data-lake-id=\"u3827a0ac\" id=\"u3827a0ac\">将所有更新过的的包中的 </span><code data-lake-id=\"u75977e1f\" id=\"u75977e1f\"><span data-lake-id=\"u99601bc7\" id=\"u99601bc7\">package.json</span></code><span data-lake-id=\"u40897b1b\" id=\"u40897b1b\"> 的 </span><code data-lake-id=\"u708b6902\" id=\"u708b6902\"><span data-lake-id=\"ud79d9b7d\" id=\"ud79d9b7d\">version</span></code><span data-lake-id=\"uea6bdd16\" id=\"uea6bdd16\"> 字段更新</span></li><li fid=\"ub41c1773\" data-lake-id=\"u06710d39\" id=\"u06710d39\"><span data-lake-id=\"u98278d93\" id=\"u98278d93\">将所有更新过的包中的依赖更新</span></li><li fid=\"ub41c1773\" data-lake-id=\"udd1363f7\" id=\"udd1363f7\"><span data-lake-id=\"uc53fc03b\" id=\"uc53fc03b\">为新版本创建一个 </span><code data-lake-id=\"u8fbc25c8\" id=\"u8fbc25c8\"><span data-lake-id=\"ub926c195\" id=\"ub926c195\">git commit</span></code><span data-lake-id=\"u5c8dc6e6\" id=\"u5c8dc6e6\"> 或 </span><code data-lake-id=\"u0ed5770c\" id=\"u0ed5770c\"><span data-lake-id=\"u64bbfc45\" id=\"u64bbfc45\">tag</span></code></li><li fid=\"ub41c1773\" data-lake-id=\"u7e972dc0\" id=\"u7e972dc0\"><span data-lake-id=\"u37dab2ae\" id=\"u37dab2ae\">将包 </span><code data-lake-id=\"u7855ebab\" id=\"u7855ebab\"><span data-lake-id=\"u72287ea0\" id=\"u72287ea0\">publish</span></code><span data-lake-id=\"u9f8f82ae\" id=\"u9f8f82ae\"> 到 </span><code data-lake-id=\"ude1490ef\" id=\"ude1490ef\"><span data-lake-id=\"ud85568e8\" id=\"ud85568e8\">npm</span></code><span data-lake-id=\"ue628034f\" id=\"ue628034f\"> 上；注意要先用 </span><code data-lake-id=\"u1a62374e\" id=\"u1a62374e\"><span data-lake-id=\"u511264f9\" id=\"u511264f9\">npm adduser</span></code><span data-lake-id=\"u01b57788\" id=\"u01b57788\"> 登录 </span><code data-lake-id=\"u621fa4ac\" id=\"u621fa4ac\"><span data-lake-id=\"u84c60772\" id=\"u84c60772\">npm</span></code><span data-lake-id=\"ue0f7c856\" id=\"ue0f7c856\"> 源，否则会失败；</span></li></ul><ul list=\"u50287b30\" start=\"7\"><li fid=\"u08fd95d4\" data-lake-id=\"ub1724b6c\" id=\"ub1724b6c\"><code data-lake-id=\"u1c5c6240\" id=\"u1c5c6240\"><span data-lake-id=\"ub188aaa6\" id=\"ub188aaa6\">lerna add [@version] [--dev] [--exact] [--peer]</span></code><span data-lake-id=\"ue6358f19\" id=\"ue6358f19\"> ：可以指定为某一个或所有的包安装依赖，依赖可以是外部(</span><code data-lake-id=\"u1a359920\" id=\"u1a359920\"><span data-lake-id=\"uc38d64db\" id=\"uc38d64db\">npm i </span></code><span data-lake-id=\"ua4095cb4\" id=\"ua4095cb4\">安装的)，也可以是内部依赖(</span><code data-lake-id=\"ubd11f8b9\" id=\"ubd11f8b9\"><span data-lake-id=\"u8e1cbf69\" id=\"u8e1cbf69\">packages</span></code><span data-lake-id=\"u41f735d6\" id=\"u41f735d6\">/下的包，会创建符号链接)，</span><code data-lake-id=\"uca99e075\" id=\"uca99e075\"><span data-lake-id=\"u1c547f16\" id=\"u1c547f16\">example</span></code><span data-lake-id=\"u28133327\" id=\"u28133327\">：</span></li></ul><ul list=\"u50287b30\" data-lake-indent=\"1\"><li fid=\"ub41c1773\" data-lake-id=\"ubb0369d9\" id=\"ubb0369d9\"><code data-lake-id=\"u6c0eac38\" id=\"u6c0eac38\"><span data-lake-id=\"u89c7a3ea\" id=\"u89c7a3ea\">lerna add babel</span></code><span data-lake-id=\"u3ac43040\" id=\"u3ac43040\"> , 该命令会在 </span><code data-lake-id=\"ufce6360c\" id=\"ufce6360c\"><span data-lake-id=\"ua045d273\" id=\"ua045d273\">package-1</span></code><span data-lake-id=\"u1ae5cc29\" id=\"u1ae5cc29\"> 和 </span><code data-lake-id=\"u7fe32751\" id=\"u7fe32751\"><span data-lake-id=\"ue97de824\" id=\"ue97de824\">package-2</span></code><span data-lake-id=\"ue09fc8f4\" id=\"ue09fc8f4\"> 下安装 </span><code data-lake-id=\"u51e9ea64\" id=\"u51e9ea64\"><span data-lake-id=\"u5f8cdc5f\" id=\"u5f8cdc5f\">babel</span></code></li><li fid=\"ub41c1773\" data-lake-id=\"u62a42391\" id=\"u62a42391\"><code data-lake-id=\"u5f2a9f13\" id=\"u5f2a9f13\"><span data-lake-id=\"u093d2aee\" id=\"u093d2aee\">lerna add react --scope=package-1</span></code><span data-lake-id=\"u17dd629f\" id=\"u17dd629f\"> ,该命令会在 </span><code data-lake-id=\"u9c6656ba\" id=\"u9c6656ba\"><span data-lake-id=\"u3b82a613\" id=\"u3b82a613\">package-1</span></code><span data-lake-id=\"u801d538b\" id=\"u801d538b\"> 下安装 </span><code data-lake-id=\"u445c78c3\" id=\"u445c78c3\"><span data-lake-id=\"u2eed9b05\" id=\"u2eed9b05\">react</span></code></li><li fid=\"ub41c1773\" data-lake-id=\"u746ec85d\" id=\"u746ec85d\"><code data-lake-id=\"uf7929547\" id=\"uf7929547\"><span data-lake-id=\"ua4037e4e\" id=\"ua4037e4e\">lerna add package-2 --scope=package-1</span></code><span data-lake-id=\"ub04414b7\" id=\"ub04414b7\">，该命令会在 </span><code data-lake-id=\"u2ab01f30\" id=\"u2ab01f30\"><span data-lake-id=\"u3d4c3c32\" id=\"u3d4c3c32\">package-1</span></code><span data-lake-id=\"u2a260e5a\" id=\"u2a260e5a\"> 下安装 </span><code data-lake-id=\"u3023422f\" id=\"u3023422f\"><span data-lake-id=\"uff9be3d3\" id=\"uff9be3d3\">package-2</span></code></li></ul><ul list=\"u50287b30\" start=\"8\"><li fid=\"u08fd95d4\" data-lake-id=\"ucbfb9f1d\" id=\"ucbfb9f1d\"><code data-lake-id=\"u734357c6\" id=\"u734357c6\"><span data-lake-id=\"ub4f28339\" id=\"ub4f28339\">lerna create [loc]</span></code><span data-lake-id=\"u71351620\" id=\"u71351620\"> 创建一个 </span><code data-lake-id=\"u99e58e11\" id=\"u99e58e11\"><span data-lake-id=\"ude402776\" id=\"ude402776\">lerna</span></code><span data-lake-id=\"u96a72155\" id=\"u96a72155\"> 管理的包</span></li><li fid=\"u08fd95d4\" data-lake-id=\"ua7b98b64\" id=\"ua7b98b64\"><code data-lake-id=\"u34180a32\" id=\"u34180a32\"><span data-lake-id=\"u803da5ed\" id=\"u803da5ed\">lerna ls</span></code><span data-lake-id=\"u31094f39\" id=\"u31094f39\"> 控制台打印 </span><code data-lake-id=\"ud38d9e5c\" id=\"ud38d9e5c\"><span data-lake-id=\"u2ffab541\" id=\"u2ffab541\">packages</span></code><span data-lake-id=\"u4ac60bfb\" id=\"u4ac60bfb\"> 下的包名</span></li><li fid=\"u08fd95d4\" data-lake-id=\"u506742c9\" id=\"u506742c9\"><code data-lake-id=\"uf46264c2\" id=\"uf46264c2\"><span data-lake-id=\"ud060d499\" id=\"ud060d499\">lerna link</span></code><span data-lake-id=\"u800e06fb\" id=\"u800e06fb\"> 类似 </span><code data-lake-id=\"u34171381\" id=\"u34171381\"><span data-lake-id=\"u4edf7166\" id=\"u4edf7166\">npm link</span></code></li></ul><h4 data-lake-id=\"bkDYM\" id=\"bkDYM\"><span data-lake-id=\"ud22c0320\" id=\"ud22c0320\">lerna.json 配置介绍</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22version%5C%22%3A%20%5C%221.1.1%5C%22%2C%5Cn%20%20%5C%22npmClient%5C%22%3A%20%5C%22yarn%5C%22%2C%5Cn%20%20%5C%22command%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22publish%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%5C%22ignoreChanges%5C%22%3A%20%5B%5C%22ignored-file%5C%22%2C%20%5C%22*.md%5C%22%5D%2C%5Cn%20%20%20%20%20%20%5C%22message%5C%22%3A%20%5C%22chore(release)%3A%20publish%20%25s%5C%22%2C%5Cn%20%20%20%20%20%20%5C%22registry%5C%22%3A%20%5C%22https%3A%2F%2Fnpm.pkg.github.com%5C%22%5Cn%20%20%20%20%7D%2C%5Cn%20%20%20%20%5C%22bootstrap%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%5C%22ignore%5C%22%3A%20%5C%22component-*%5C%22%2C%5Cn%20%20%20%20%20%20%5C%22npmClientArgs%5C%22%3A%20%5B%5C%22--no-package-lock%5C%22%5D%5Cn%20%20%20%20%7D%5Cn%20%20%7D%2C%5Cn%20%20%5C%22packages%5C%22%3A%20%5B%5C%22packages%2F*%5C%22%5D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22znv2d%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ul list=\"u41b07550\"><li fid=\"u0bc9456f\" data-lake-id=\"u3fcaf057\" id=\"u3fcaf057\"><code data-lake-id=\"ufb22fa50\" id=\"ufb22fa50\"><span data-lake-id=\"u078cb898\" id=\"u078cb898\">version</span></code><span data-lake-id=\"ueff4a136\" id=\"ueff4a136\">：当前存储库的版本，当为 </span><code data-lake-id=\"u725c5ba0\" id=\"u725c5ba0\"><span data-lake-id=\"u594a39ff\" id=\"u594a39ff\">independent</span></code><span data-lake-id=\"u4010069b\" id=\"u4010069b\"> 时，开启独立模式</span></li><li fid=\"u0bc9456f\" data-lake-id=\"u0307f208\" id=\"u0307f208\"><code data-lake-id=\"u01112995\" id=\"u01112995\"><span data-lake-id=\"u7fc1ef76\" id=\"u7fc1ef76\">npmClient</span></code><span data-lake-id=\"udd44db50\" id=\"udd44db50\">：一个选项，用于指定运行命令的特定客户端。 可更改为 </span><code data-lake-id=\"ud3d59f8b\" id=\"ud3d59f8b\"><span data-lake-id=\"ubb0d1c28\" id=\"ubb0d1c28\">yarn</span></code><span data-lake-id=\"u63ebe74f\" id=\"u63ebe74f\">​</span></li><li fid=\"u0bc9456f\" data-lake-id=\"u3506ba5e\" id=\"u3506ba5e\"><code data-lake-id=\"u4e9104a8\" id=\"u4e9104a8\"><span data-lake-id=\"udf77430c\" id=\"udf77430c\">packages</span></code><span data-lake-id=\"u9ee1b7a8\" id=\"u9ee1b7a8\">：用作包装位置的 </span><code data-lake-id=\"ue4c7eb6d\" id=\"ue4c7eb6d\"><span data-lake-id=\"u7b7beaa1\" id=\"u7b7beaa1\">glob</span></code><span data-lake-id=\"ua590053f\" id=\"ua590053f\"> 数组， 默认为 </span><code data-lake-id=\"u0af34fa1\" id=\"u0af34fa1\"><span data-lake-id=\"u23e83b96\" id=\"u23e83b96\">[&quot;packages/*&quot;]</span></code><span data-lake-id=\"u555730d5\" id=\"u555730d5\">, 也可以修改为其他目录</span></li><li fid=\"u0bc9456f\" data-lake-id=\"uaf90e68a\" id=\"uaf90e68a\"><code data-lake-id=\"uf59d8b98\" id=\"uf59d8b98\"><span data-lake-id=\"u5f27f42b\" id=\"u5f27f42b\">command.publish.ignoreChanges</span></code><span data-lake-id=\"u5a3daf96\" id=\"u5a3daf96\">: 接受一组 </span><code data-lake-id=\"u8c384c2d\" id=\"u8c384c2d\"><span data-lake-id=\"u0a455a8a\" id=\"u0a455a8a\">glob</span></code><span data-lake-id=\"u9ca012a9\" id=\"u9ca012a9\"> 数组，忽略不必要的更改发布新版本，例如 </span><code data-lake-id=\"ue86831f4\" id=\"ue86831f4\"><span data-lake-id=\"u6d9a74c6\" id=\"u6d9a74c6\">md</span></code><span data-lake-id=\"ub33c74d2\" id=\"ub33c74d2\"> 修改</span></li><li fid=\"u0bc9456f\" data-lake-id=\"u46c00d71\" id=\"u46c00d71\"><code data-lake-id=\"u84d63c45\" id=\"u84d63c45\"><span data-lake-id=\"udf5cae95\" id=\"udf5cae95\">command.publish.message</span></code><span data-lake-id=\"ua87eb51f\" id=\"ua87eb51f\">: 执行发布版本时自动会 </span><code data-lake-id=\"u385f6e28\" id=\"u385f6e28\"><span data-lake-id=\"u198c3a56\" id=\"u198c3a56\">commit</span></code><span data-lake-id=\"u2e633cfe\" id=\"u2e633cfe\"> 一条指定记录，当消息记录里包含 </span><code data-lake-id=\"u21095137\" id=\"u21095137\"><span data-lake-id=\"ue83cab33\" id=\"ue83cab33\">%s</span></code><span data-lake-id=\"u0334bd38\" id=\"u0334bd38\"> 将会替换为 </span><code data-lake-id=\"u6a4da8cf\" id=\"u6a4da8cf\"><span data-lake-id=\"u19c14239\" id=\"u19c14239\">v1.1.1</span></code><span data-lake-id=\"u09eb5e11\" id=\"u09eb5e11\">, 如果是 </span><code data-lake-id=\"ub1a41410\" id=\"ub1a41410\"><span data-lake-id=\"ub81f26b5\" id=\"ub81f26b5\">%v</span></code><span data-lake-id=\"ubaa88889\" id=\"ubaa88889\"> 则直接替换为 </span><code data-lake-id=\"u04dd5113\" id=\"u04dd5113\"><span data-lake-id=\"uf30349a8\" id=\"uf30349a8\">1.1.1</span></code><span data-lake-id=\"uc03f4c2b\" id=\"uc03f4c2b\">，如果是 </span><code data-lake-id=\"ubf8c0804\" id=\"ubf8c0804\"><span data-lake-id=\"u0ab34faf\" id=\"u0ab34faf\">independent</span></code><span data-lake-id=\"uc5a137d9\" id=\"uc5a137d9\"> 模式则会独立更新每个包的版本</span></li><li fid=\"u0bc9456f\" data-lake-id=\"uc8c92ba4\" id=\"uc8c92ba4\"><code data-lake-id=\"u7f88a469\" id=\"u7f88a469\"><span data-lake-id=\"uc172b6a1\" id=\"uc172b6a1\">command.publish.registry</span></code><span data-lake-id=\"u523567a0\" id=\"u523567a0\">: 设置要发布到的自定义地址</span></li><li fid=\"u0bc9456f\" data-lake-id=\"u6fa66ae0\" id=\"u6fa66ae0\"><code data-lake-id=\"u5764386c\" id=\"u5764386c\"><span data-lake-id=\"ub0118932\" id=\"ub0118932\">command.bootstrap.ignore</span></code><span data-lake-id=\"ua1b592dd\" id=\"ua1b592dd\">: 接收一个 </span><code data-lake-id=\"ua20980f5\" id=\"ua20980f5\"><span data-lake-id=\"u580e706e\" id=\"u580e706e\">glob</span></code><span data-lake-id=\"ub54134d5\" id=\"ub54134d5\"> 数组， 指定运行 </span><code data-lake-id=\"u8ea36b65\" id=\"u8ea36b65\"><span data-lake-id=\"u37e41958\" id=\"u37e41958\">lerna bootstrap</span></code><span data-lake-id=\"ud2d74fc3\" id=\"ud2d74fc3\"> 命令时需要忽略的目录</span></li><li fid=\"u0bc9456f\" data-lake-id=\"u77f0f179\" id=\"u77f0f179\"><code data-lake-id=\"u55283d20\" id=\"u55283d20\"><span data-lake-id=\"ua4ee31cd\" id=\"ua4ee31cd\">command.bootstrap.npmClientArg</span></code><span data-lake-id=\"uc2c74d12\" id=\"uc2c74d12\">: 接收一个字符串数组， 将参数直接传递给 </span><code data-lake-id=\"u87acbf99\" id=\"u87acbf99\"><span data-lake-id=\"u68124b2f\" id=\"u68124b2f\">npm install</span></code></li><li fid=\"u0bc9456f\" data-lake-id=\"ud01b1464\" id=\"ud01b1464\"><code data-lake-id=\"u7ac14928\" id=\"u7ac14928\"><span data-lake-id=\"u654c2bcb\" id=\"u654c2bcb\">command.bootstrap.scope</span></code><span data-lake-id=\"ub6a34861\" id=\"ub6a34861\">: 一组 </span><code data-lake-id=\"u6f45ceae\" id=\"u6f45ceae\"><span data-lake-id=\"uaa789fad\" id=\"uaa789fad\">glob</span></code><span data-lake-id=\"ud6fe63e7\" id=\"ud6fe63e7\">，用于限制在运行 </span><code data-lake-id=\"u0e6f28b4\" id=\"u0e6f28b4\"><span data-lake-id=\"ufdc1acdc\" id=\"ufdc1acdc\">lerna bootstrap</span></code><span data-lake-id=\"ub2067b2d\" id=\"ub2067b2d\"> 命令时将 包含的软件包。</span></li></ul><h4 data-lake-id=\"d2nuq\" id=\"d2nuq\"><span data-lake-id=\"u35f21b11\" id=\"u35f21b11\">lerna 多包版本管理机制</span></h4><ul list=\"ue454fdec\"><li fid=\"u7a7fe245\" data-lake-id=\"u5bb3cf3f\" id=\"u5bb3cf3f\"><code data-lake-id=\"u539f7f26\" id=\"u539f7f26\"><span data-lake-id=\"u9d9ec87f\" id=\"u9d9ec87f\">Fixed/Locked mode(default)</span></code><card type=\"inline\" name=\"label\" value=\"data:%7B%22label%22%3A%22%E5%9B%BA%E5%AE%9A%E6%A8%A1%E5%BC%8F%22%2C%22colorIndex%22%3A5%2C%22id%22%3A%22YBLfG%22%7D\"></card></li></ul><p data-lake-id=\"uaeb92082\" id=\"uaeb92082\"><code data-lake-id=\"u70fe7519\" id=\"u70fe7519\"><span data-lake-id=\"ude9fa4f1\" id=\"ude9fa4f1\">vue</span></code><span data-lake-id=\"uf92a511d\" id=\"uf92a511d\">、</span><code data-lake-id=\"ua21fffe1\" id=\"ua21fffe1\"><span data-lake-id=\"ua30bf97e\" id=\"ua30bf97e\">babel</span></code><span data-lake-id=\"u897ef547\" id=\"u897ef547\">都是用这种，在</span><code data-lake-id=\"u590526c7\" id=\"u590526c7\"><span data-lake-id=\"u9e2eae74\" id=\"u9e2eae74\">publish</span></code><span data-lake-id=\"u056f3d2d\" id=\"u056f3d2d\">的时候，会在</span><code data-lake-id=\"ud6f2bf00\" id=\"ud6f2bf00\"><span data-lake-id=\"u6976e237\" id=\"u6976e237\">lerna.json</span></code><span data-lake-id=\"u4e4eea43\" id=\"u4e4eea43\">文件里面 </span><code data-lake-id=\"u3b00adbe\" id=\"u3b00adbe\"><span data-lake-id=\"u28065faa\" id=\"u28065faa\">&quot;version&quot;: &quot;0.15&quot;</span></code><span data-lake-id=\"u053033a8\" id=\"u053033a8\">，依据这个号进行增加，只选择一次，其他有改动的包自动更新版本号</span></p><ul list=\"ue454fdec\" start=\"2\"><li fid=\"u7a7fe245\" data-lake-id=\"u216c373e\" id=\"u216c373e\"><code data-lake-id=\"uae7de33c\" id=\"uae7de33c\"><span data-lake-id=\"u54aeaf94\" id=\"u54aeaf94\">Independence mode</span></code><card type=\"inline\" name=\"label\" value=\"data:%7B%22label%22%3A%22%E7%8B%AC%E7%AB%8B%E6%A8%A1%E5%BC%8F%22%2C%22colorIndex%22%3A5%2C%22id%22%3A%22s4fQy%22%7D\"></card></li></ul><p data-lake-id=\"u53b02706\" id=\"u53b02706\"><code data-lake-id=\"uec9c11e7\" id=\"uec9c11e7\"><span data-lake-id=\"u59bb98ba\" id=\"u59bb98ba\">lerna init --independent</span></code><span data-lake-id=\"u146ed290\" id=\"u146ed290\">初始化项目，</span><code data-lake-id=\"u0ff3df2a\" id=\"u0ff3df2a\"><span data-lake-id=\"u9c34a35d\" id=\"u9c34a35d\">lerna.json</span></code><span data-lake-id=\"uf803c3ac\" id=\"uf803c3ac\">文件里面 </span><code data-lake-id=\"u1cce8876\" id=\"u1cce8876\"><span data-lake-id=\"u8943953e\" id=\"u8943953e\">&quot;version&quot;: &quot;independent&quot;</span></code><span data-lake-id=\"ucfbe2ebd\" id=\"ucfbe2ebd\">，每次</span><code data-lake-id=\"ub7ad6c83\" id=\"ub7ad6c83\"><span data-lake-id=\"u802680dd\" id=\"u802680dd\">publish</span></code><span data-lake-id=\"ub4db0e8c\" id=\"ub4db0e8c\">时，都将得到一个提示符，提示每个已更改的包，以指定是：</span><code data-lake-id=\"ud14446dd\" id=\"ud14446dd\"><span data-lake-id=\"ua0fd1aa4\" id=\"ua0fd1aa4\">major</span></code><span data-lake-id=\"u32e7dfd6\" id=\"u32e7dfd6\">、</span><code data-lake-id=\"u598bfc10\" id=\"u598bfc10\"><span data-lake-id=\"uc456e181\" id=\"uc456e181\">minor</span></code><span data-lake-id=\"u8d7150c3\" id=\"u8d7150c3\">、</span><code data-lake-id=\"ud8645e71\" id=\"ud8645e71\"><span data-lake-id=\"uec93ff8b\" id=\"uec93ff8b\">patch</span></code><span data-lake-id=\"u1397ca23\" id=\"u1397ca23\">、</span><code data-lake-id=\"u0f0a016a\" id=\"u0f0a016a\"><span data-lake-id=\"uae41cdd8\" id=\"uae41cdd8\">premajor</span></code><span data-lake-id=\"u3a52eb88\" id=\"u3a52eb88\">、</span><code data-lake-id=\"uebc6681e\" id=\"uebc6681e\"><span data-lake-id=\"u6099e7f6\" id=\"u6099e7f6\">preminor</span></code><span data-lake-id=\"uef5deac2\" id=\"uef5deac2\">、</span><code data-lake-id=\"u6d7a4296\" id=\"u6d7a4296\"><span data-lake-id=\"udb9ac92d\" id=\"udb9ac92d\">prepatch</span></code><span data-lake-id=\"ue30e0028\" id=\"ue30e0028\">、</span><code data-lake-id=\"u3ee492eb\" id=\"u3ee492eb\"><span data-lake-id=\"ufc57fd99\" id=\"ufc57fd99\">prerelease</span></code></p><h4 data-lake-id=\"RSN7r\" id=\"RSN7r\"><span data-lake-id=\"u5b444239\" id=\"u5b444239\">启用 workspace 模式</span></h4><p data-lake-id=\"u9ba4b383\" id=\"u9ba4b383\"><span data-lake-id=\"u5e24945d\" id=\"u5e24945d\">默认是 </span><code data-lake-id=\"u5f4e451e\" id=\"u5f4e451e\"><span data-lake-id=\"u9c161fef\" id=\"u9c161fef\">npm</span></code><span data-lake-id=\"ue6717b92\" id=\"ue6717b92\">，而且每个子 </span><code data-lake-id=\"u5cea7198\" id=\"u5cea7198\"><span data-lake-id=\"u9963fc56\" id=\"u9963fc56\">package</span></code><span data-lake-id=\"u04c799e4\" id=\"u04c799e4\"> 都有自己的</span><code data-lake-id=\"u3762b1d2\" id=\"u3762b1d2\"><span data-lake-id=\"u2e8f6b3b\" id=\"u2e8f6b3b\">node_modules</span></code><span data-lake-id=\"ub0d345ff\" id=\"ub0d345ff\">，通过这样的设置后，只有顶层有一个</span><code data-lake-id=\"u6dab6048\" id=\"u6dab6048\"><span data-lake-id=\"ue2f124f1\" id=\"ue2f124f1\">node_modules</span></code></p><ul list=\"u073f2052\"><li fid=\"u1b5c2285\" data-lake-id=\"u77d28581\" id=\"u77d28581\"><span data-lake-id=\"u2cd44ece\" id=\"u2cd44ece\">修改顶层</span><code data-lake-id=\"ue954ba79\" id=\"ue954ba79\"><span data-lake-id=\"u19102666\" id=\"u19102666\">package.json</span></code><span data-lake-id=\"u1dc57df8\" id=\"u1dc57df8\">、</span><code data-lake-id=\"u74f7ff17\" id=\"u74f7ff17\"><span data-lake-id=\"u051ef774\" id=\"u051ef774\">lerna.json</span></code></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20package.json%20%E6%96%87%E4%BB%B6%E5%8A%A0%E5%85%A5%5Cn%7B%5Cn%20%20%5C%22private%5C%22%3A%20true%2C%5Cn%20%20%5C%22workspaces%5C%22%3A%20%5B%5C%22packages%2F*%5C%22%5D%5Cn%7D%5Cn%5Cn%2F%2F%20lerna.json%20%E6%96%87%E4%BB%B6%E5%8A%A0%E5%85%A5%5Cn%7B%5Cn%20%20%5C%22useWorkspaces%5C%22%3A%20true%2C%5Cn%20%20%5C%22npmClient%5C%22%3A%20%5C%22yarn%5C%22%20%2F%2F%20%E5%90%AF%E5%8A%A8%20yarn%EF%BC%8C%E4%B8%8D%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E4%B8%BA%20npm%EF%BC%8Cnpm7.x%2B%20%E6%94%AF%E6%8C%81%20workspaces%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%E4%BE%8B%E5%AD%90%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22sp9Eq%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"p58HN\" id=\"p58HN\"><span data-lake-id=\"u1086d345\" id=\"u1086d345\">Workspaces</span></h3><h4 data-lake-id=\"ncpyk\" id=\"ncpyk\"><span data-lake-id=\"u70c9aa76\" id=\"u70c9aa76\">使用</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22name%5C%22%3A%20%5C%22vite-pros%5C%22%2C%5Cn%20%20%5C%22description%5C%22%3A%20%5C%22%E4%BD%BF%E7%94%A8%20vite%20%E4%BD%9C%E4%B8%BA%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E7%9A%84%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%5C%22%2C%5Cn%20%20%5C%22private%5C%22%3A%20true%2C%5Cn%20%20%5C%22workspaces%5C%22%3A%20%5B%5Cn%20%20%20%20%5C%22packages%2F*%5C%22%5Cn%20%20%5D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22package.json%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22u1BJg%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ua3c4e806\" id=\"ua3c4e806\"><span data-lake-id=\"u7bd1d057\" id=\"u7bd1d057\">其中 </span><code data-lake-id=\"u48b031c2\" id=\"u48b031c2\"><span data-lake-id=\"uae55af84\" id=\"uae55af84\">private: true</span></code><span data-lake-id=\"ubec974f5\" id=\"ubec974f5\"> 是必需的！工作区并不意味着要发布，所以增加了这个安全措施，以确保没有任何东西可以意外暴露它们。</span><code data-lake-id=\"uebe9b227\" id=\"uebe9b227\"><span data-lake-id=\"u9082aca8\" id=\"u9082aca8\">workspaces</span></code><span data-lake-id=\"udcd63679\" id=\"udcd63679\"> 字段是包含每个工作区的路径的数组。由于追踪每个路径可能很乏味，因此该字段也接受 </span><code data-lake-id=\"u748744bf\" id=\"u748744bf\"><span data-lake-id=\"uf0bec0be\" id=\"uf0bec0be\">glob</span></code><span data-lake-id=\"u1230432f\" id=\"u1230432f\"> 模式！</span></p><ol list=\"uece33324\"><li fid=\"u9d68edd8\" data-lake-id=\"u555f27a4\" id=\"u555f27a4\"><span data-lake-id=\"ube62eb2d\" id=\"ube62eb2d\">新建 </span><code data-lake-id=\"u6f89d13d\" id=\"u6f89d13d\"><span data-lake-id=\"u27416f6d\" id=\"u27416f6d\">packages</span></code><span data-lake-id=\"u6f044367\" id=\"u6f044367\"> 目录</span></li><li fid=\"u9d68edd8\" data-lake-id=\"ue2db347a\" id=\"ue2db347a\"><code data-lake-id=\"u71c0bcba\" id=\"u71c0bcba\"><span data-lake-id=\"ue8bfe219\" id=\"ue8bfe219\">packages</span></code><span data-lake-id=\"u98d5d07e\" id=\"u98d5d07e\"> 目录下就是我们的正常的工程了。</span></li></ol><h4 data-lake-id=\"H2maV\" id=\"H2maV\"><span data-lake-id=\"u4603fafd\" id=\"u4603fafd\">介绍</span></h4><ol list=\"ufec08c3f\"><li fid=\"u6e55945f\" data-lake-id=\"u2085ae89\" id=\"u2085ae89\"><span data-lake-id=\"u8b456746\" id=\"u8b456746\">安装依赖</span></li></ol><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22%5Byarn%7Cnpm%5D%20install%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22PtWEF%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ol list=\"ufec08c3f\" start=\"2\"><li fid=\"u6e55945f\" data-lake-id=\"u8e605db0\" id=\"u8e605db0\"><span data-lake-id=\"ud9977828\" id=\"ud9977828\">为某一个子项目安装依赖</span></li></ol><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22%23%20pro1%20%3D%20packages%2Fpro1%5Cn%23%20npm%5Cnnpm%20install%20vue%20-w%20pro1%5Cn%23%20yarn%5Cnyarn%20workspace%20pro1%20add%20-D%20react%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ga4J6%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><blockquote data-lake-id=\"u0a69458c\" id=\"u0a69458c\" class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"u012f4013\" id=\"u012f4013\"><span data-lake-id=\"u0143a1fd\" id=\"u0143a1fd\">这里可以依赖同一个工作区下的其它工程，以 </span><code data-lake-id=\"u77329b85\" id=\"u77329b85\"><span data-lake-id=\"u15f46038\" id=\"u15f46038\">yarn</span></code><span data-lake-id=\"ua64cf1eb\" id=\"ua64cf1eb\"> 为例，如果依赖同工作区下的其它工程，</span><code data-lake-id=\"ucc20c283\" id=\"ucc20c283\"><span data-lake-id=\"u1b090172\" id=\"u1b090172\">package.json</span></code><span data-lake-id=\"u94fd5dbf\" id=\"u94fd5dbf\"> 的 </span><code data-lake-id=\"ucd035af4\" id=\"ucd035af4\"><span data-lake-id=\"u06ca59db\" id=\"u06ca59db\">dependencies</span></code><span data-lake-id=\"u270afaee\" id=\"u270afaee\"> 就会发生改变，例如：</span><code data-lake-id=\"ufbb2fa80\" id=\"ufbb2fa80\"><span data-lake-id=\"ub33e6fa8\" id=\"ub33e6fa8\">&quot;ph-utils&quot;: &quot;workspace:packages/utils&quot;</span></code><span data-lake-id=\"uaf44fedf\" id=\"uaf44fedf\">、</span><code data-lake-id=\"u2228b80d\" id=\"u2228b80d\"><span data-lake-id=\"u560a5c0c\" id=\"u560a5c0c\">&quot;ph-terminal-spinner&quot;: &quot;workspace:packages/terminal-spinner&quot;</span></code><span data-lake-id=\"uf255a964\" id=\"uf255a964\"> 这就表明依赖的是同一个工作区的其它工程。<br /></span><span data-lake-id=\"uc6442914\" id=\"uc6442914\">这样的可能有人就会有疑问了，如果 </span><code data-lake-id=\"ufd941845\" id=\"ufd941845\"><span data-lake-id=\"u8e58895b\" id=\"u8e58895b\">package.json</span></code><span data-lake-id=\"uda21b7f2\" id=\"uda21b7f2\"> 改变了后，上传后会怎么样呢？这个就是下面的命令了。</span></p></blockquote><ol list=\"u8bc31d84\" start=\"3\"><li fid=\"ud3b6bebc\" data-lake-id=\"ub348f77a\" id=\"ub348f77a\"><span data-lake-id=\"u2ed5eda7\" id=\"u2ed5eda7\">发布</span></li></ol><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22%23%20npm%5Cnnpm%20publish%5Cn%23%20yarn%20%E5%8F%91%E5%B8%83%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E4%BC%9A%E8%87%AA%E5%8A%A8%E6%9B%BF%E6%8D%A2%E6%9C%AC%E5%9C%B0%E4%BE%9D%E8%B5%96%E7%9A%84%E7%89%88%E6%9C%AC%5Cnyarn%20workspace%20pro1%20npm%20publish%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Uvsga%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><blockquote data-lake-id=\"u6b9ec3da\" id=\"u6b9ec3da\" class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"ucd718b36\" id=\"ucd718b36\"><code data-lake-id=\"ufdaab7ca\" id=\"ufdaab7ca\"><span data-lake-id=\"u3627591e\" id=\"u3627591e\">yarn</span></code><span data-lake-id=\"uc06186ee\" id=\"uc06186ee\"> 发布的时候，如果会有本地有本地依赖如：</span><code data-lake-id=\"ua6f02dbd\" id=\"ua6f02dbd\"><span data-lake-id=\"u13aced8c\" id=\"u13aced8c\">&quot;ph-utils&quot;: &quot;workspace:packages/utils&quot;</span></code><span data-lake-id=\"u4a46ba4c\" id=\"u4a46ba4c\"> 则会被替换为 </span><code data-lake-id=\"u4ab578c7\" id=\"u4ab578c7\"><span data-lake-id=\"uf6a53310\" id=\"uf6a53310\">&quot;ph-utils&quot;: &quot;0.0.1&quot;</span></code><span data-lake-id=\"u89e1c274\" id=\"u89e1c274\"> 其中 </span><code data-lake-id=\"u7de2ecb1\" id=\"u7de2ecb1\"><span data-lake-id=\"ud1b02a2d\" id=\"ud1b02a2d\">0.0.1</span></code><span data-lake-id=\"u6323a43e\" id=\"u6323a43e\"> 就是本地 </span><code data-lake-id=\"u7972569a\" id=\"u7972569a\"><span data-lake-id=\"u9219dd8f\" id=\"u9219dd8f\">ph-utils</span></code><span data-lake-id=\"u72e3b1a1\" id=\"u72e3b1a1\"> 的版本。</span></p></blockquote><h2 data-lake-id=\"XGgua\" id=\"XGgua\"><span data-lake-id=\"ufb113104\" id=\"ufb113104\">Monorepo 方案实践</span></h2><h3 data-lake-id=\"gn9GX\" id=\"gn9GX\"><span data-lake-id=\"u7633212a\" id=\"u7633212a\">1. 锁定环境: Volta</span></h3><p data-lake-id=\"u39a03f48\" id=\"u39a03f48\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1648747756372-c5aea202-62a4-4b65-8394-b7b81a777c52.png%22%2C%22taskId%22%3A%22u8eae952d-3f68-4089-ab61-00ed5a55355%22%2C%22clientId%22%3A%22u6fbcdb1d-5fd6-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A484.8%2C%22height%22%3A230%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A42021%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A606%2C%22originHeight%22%3A288%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22ocrLocations%22%3A%5B%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22u024df87c%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"u8034b404\" id=\"u8034b404\"><a href=\"https://volta.sh/\" target=\"_blank\" data-lake-id=\"u80cdc94b\" id=\"u80cdc94b\"><span data-lake-id=\"ufbec241f\" id=\"ufbec241f\">Volta</span></a><span data-lake-id=\"u56401b6b\" id=\"u56401b6b\"> 是一个 </span><code data-lake-id=\"u5bdaf787\" id=\"u5bdaf787\"><span data-lake-id=\"uf3eda4bf\" id=\"uf3eda4bf\">JavaScript</span></code><span data-lake-id=\"uc0431426\" id=\"uc0431426\"> 工具管理器，它可以让我们轻松地在项目中锁定 </span><code data-lake-id=\"u0fdc7548\" id=\"u0fdc7548\"><span data-lake-id=\"uc9ac4ae6\" id=\"uc9ac4ae6\">node</span></code><span data-lake-id=\"u0de7a48b\" id=\"u0de7a48b\">，</span><code data-lake-id=\"u07391c7c\" id=\"u07391c7c\"><span data-lake-id=\"u8840225c\" id=\"u8840225c\">npm</span></code><span data-lake-id=\"ue977b7be\" id=\"ue977b7be\"> 和 </span><code data-lake-id=\"u257ac185\" id=\"u257ac185\"><span data-lake-id=\"u9d298f13\" id=\"u9d298f13\">yarn</span></code><span data-lake-id=\"udb6074a7\" id=\"udb6074a7\"> 的版本。你只需在安装完 </span><code data-lake-id=\"u235e1fb4\" id=\"u235e1fb4\"><span data-lake-id=\"u46cab4ef\" id=\"u46cab4ef\">Volta</span></code><span data-lake-id=\"u8b5faad4\" id=\"u8b5faad4\"> 后，在项目的根目录中执行 </span><code data-lake-id=\"ubf4dbbe7\" id=\"ubf4dbbe7\"><span data-lake-id=\"u38a3eafd\" id=\"u38a3eafd\">volta pin</span></code><span data-lake-id=\"ua92a3994\" id=\"ua92a3994\"> 命令，那么无论您当前使用的 </span><code data-lake-id=\"u462a30aa\" id=\"u462a30aa\"><span data-lake-id=\"uec40c6e3\" id=\"uec40c6e3\">node</span></code><span data-lake-id=\"u96f325b7\" id=\"u96f325b7\"> 或 </span><code data-lake-id=\"uf3424a71\" id=\"uf3424a71\"><span data-lake-id=\"u62cb8873\" id=\"u62cb8873\">npm</span></code><span data-lake-id=\"u70b368fa\" id=\"u70b368fa\">（</span><code data-lake-id=\"u29393260\" id=\"u29393260\"><span data-lake-id=\"u43d2f8ac\" id=\"u43d2f8ac\">yarn</span></code><span data-lake-id=\"u305942b9\" id=\"u305942b9\">）版本是什么，</span><code data-lake-id=\"u08b1afe5\" id=\"u08b1afe5\"><span data-lake-id=\"ufa552372\" id=\"ufa552372\">volta</span></code><span data-lake-id=\"u3c77f968\" id=\"u3c77f968\"> 都会自动切换为您指定的版本。</span></p><p data-lake-id=\"u27b08639\" id=\"u27b08639\"><span data-lake-id=\"u65eb9ab2\" id=\"u65eb9ab2\">​</span><br></p><p data-lake-id=\"uda2bfaf6\" id=\"uda2bfaf6\"><span data-lake-id=\"u7c56dfda\" id=\"u7c56dfda\">因此，除了使用 </span><code data-lake-id=\"uc4469d01\" id=\"uc4469d01\"><span data-lake-id=\"u47431862\" id=\"u47431862\">Docker</span></code><span data-lake-id=\"uda568688\" id=\"uda568688\"> 和显示在文档中声明 </span><code data-lake-id=\"ud518bb64\" id=\"ud518bb64\"><span data-lake-id=\"ud1786b92\" id=\"ud1786b92\">node</span></code><span data-lake-id=\"u0c809566\" id=\"u0c809566\"> 和 </span><code data-lake-id=\"ua1fcec63\" id=\"ua1fcec63\"><span data-lake-id=\"u9f366e2a\" id=\"u9f366e2a\">npm</span></code><span data-lake-id=\"u2278a9a0\" id=\"u2278a9a0\">（</span><code data-lake-id=\"u9cc8949d\" id=\"u9cc8949d\"><span data-lake-id=\"u19f71f96\" id=\"u19f71f96\">yarn</span></code><span data-lake-id=\"u62b0b429\" id=\"u62b0b429\">）的版本之外，您就有了另一个锁定环境的强力工具。</span></p><p data-lake-id=\"u95ef6475\" id=\"u95ef6475\"><span data-lake-id=\"u205194cb\" id=\"u205194cb\">​</span><br></p><p data-lake-id=\"u8bfa757a\" id=\"u8bfa757a\"><span data-lake-id=\"ud5ee87d4\" id=\"ud5ee87d4\">而且相较于 </span><code data-lake-id=\"u00ad2419\" id=\"u00ad2419\"><span data-lake-id=\"u49b67ab8\" id=\"u49b67ab8\">nvm</span></code><span data-lake-id=\"u986550a8\" id=\"u986550a8\">，</span><code data-lake-id=\"ufb377601\" id=\"ufb377601\"><span data-lake-id=\"u3c06315f\" id=\"u3c06315f\">Volta</span></code><span data-lake-id=\"udae9fccb\" id=\"udae9fccb\"> 还具有一个诱人的特性：当您项目的 </span><code data-lake-id=\"uf401cac9\" id=\"uf401cac9\"><span data-lake-id=\"ub85554ca\" id=\"ub85554ca\">CLI</span></code><span data-lake-id=\"uf11d0e67\" id=\"uf11d0e67\"> 工具与全局 </span><code data-lake-id=\"ua25cf12b\" id=\"ua25cf12b\"><span data-lake-id=\"u6f72838b\" id=\"u6f72838b\">CLI</span></code><span data-lake-id=\"ud4f074cf\" id=\"ud4f074cf\"> 工具不一致时，</span><code data-lake-id=\"ucfb16dae\" id=\"ucfb16dae\"><span data-lake-id=\"u425ce383\" id=\"u425ce383\">Volta</span></code><span data-lake-id=\"ub2e706b6\" id=\"ub2e706b6\"> 可以做到在项目根目录下自动识别，切换到项目指定的版本，这一切都是由 </span><code data-lake-id=\"u723d60b1\" id=\"u723d60b1\"><span data-lake-id=\"uaed96ef0\" id=\"uaed96ef0\">Volta</span></code><span data-lake-id=\"uf859dbe0\" id=\"uf859dbe0\"> 默默做到的，开发者不必关心任何事情。</span></p><h3 data-lake-id=\"p9nEa\" id=\"p9nEa\"><span data-lake-id=\"u075a53d3\" id=\"u075a53d3\">2. 复用 packages: workspace</span></h3><p data-lake-id=\"u579703a6\" id=\"u579703a6\"><span data-lake-id=\"u84c618b4\" id=\"u84c618b4\">使用 </span><code data-lake-id=\"ud745c82b\" id=\"ud745c82b\"><span data-lake-id=\"u25cdd979\" id=\"u25cdd979\">monorepo</span></code><span data-lake-id=\"u99bb4f0f\" id=\"u99bb4f0f\"> 策略后，收益最大的两点是：</span></p><ol list=\"u60e37020\"><li fid=\"uf1b4985e\" data-lake-id=\"ua8fe2baf\" id=\"ua8fe2baf\"><span data-lake-id=\"uce22f40d\" id=\"uce22f40d\">避免重复安装包，因此减少了磁盘空间的占用，并降低了构建时间</span><span data-lake-id=\"u2dec9739\" id=\"u2dec9739\">；</span></li><li fid=\"uf1b4985e\" data-lake-id=\"u9b1733f2\" id=\"u9b1733f2\"><span data-lake-id=\"u9a6b1881\" id=\"u9a6b1881\">内部代码可以彼此相互引用；</span></li></ol><p data-lake-id=\"u4a5d6344\" id=\"u4a5d6344\"><br></p><p data-lake-id=\"u8a2977be\" id=\"u8a2977be\"><span data-lake-id=\"uc9501a66\" id=\"uc9501a66\">这两项好处全部都可以由一个成熟的包管理工具来完成，对前端开发而言，即是 </span><code data-lake-id=\"u29cc5da3\" id=\"u29cc5da3\"><span data-lake-id=\"u532d1274\" id=\"u532d1274\">yarn</span></code><span data-lake-id=\"ued4a082d\" id=\"ued4a082d\">（</span><code data-lake-id=\"u74acf75b\" id=\"u74acf75b\"><span data-lake-id=\"u09bad7ff\" id=\"u09bad7ff\">1.0</span></code><span data-lake-id=\"uece2a887\" id=\"uece2a887\"> 以上）或 </span><code data-lake-id=\"ub77817c9\" id=\"ub77817c9\"><span data-lake-id=\"u7a1a0ac6\" id=\"u7a1a0ac6\">npm</span></code><span data-lake-id=\"u0a20d1c2\" id=\"u0a20d1c2\">（</span><code data-lake-id=\"u0d0f20b0\" id=\"u0d0f20b0\"><span data-lake-id=\"u5c3475de\" id=\"u5c3475de\">7.0</span></code><span data-lake-id=\"ufda8b9e1\" id=\"ufda8b9e1\"> 以上）通过名为 </span><code data-lake-id=\"uc7b610b1\" id=\"uc7b610b1\"><span data-lake-id=\"u38e4a8dc\" id=\"u38e4a8dc\">workspaces</span></code><span data-lake-id=\"ub3303bc7\" id=\"ub3303bc7\"> 的特性实现的（⚠️ 注意，支持 </span><code data-lake-id=\"u8d8eb7fe\" id=\"u8d8eb7fe\"><span data-lake-id=\"uce691c3f\" id=\"uce691c3f\">workspaces</span></code><span data-lake-id=\"u638ab60e\" id=\"u638ab60e\"> 特性的 </span><code data-lake-id=\"u7a376fbb\" id=\"u7a376fbb\"><span data-lake-id=\"ubb34d99a\" id=\"ubb34d99a\">npm</span></code><span data-lake-id=\"u506874ed\" id=\"u506874ed\"> 目前依旧不是 </span><code data-lake-id=\"u67d4a543\" id=\"u67d4a543\"><span data-lake-id=\"u19fdcae0\" id=\"u19fdcae0\">TLS</span></code><span data-lake-id=\"ubd247b89\" id=\"ubd247b89\"> 版本）。</span></p><p data-lake-id=\"u85ddeb7c\" id=\"u85ddeb7c\"><span data-lake-id=\"u4982bff5\" id=\"u4982bff5\">​</span><br></p><p data-lake-id=\"u243ab284\" id=\"u243ab284\"><span data-lake-id=\"u516601c1\" id=\"u516601c1\">为了实现前面提到的两点收益，您需要在代码中做三件事：</span></p><ol list=\"u04deac11\"><li fid=\"uec3573e9\" data-lake-id=\"u4a0cbee6\" id=\"u4a0cbee6\"><span data-lake-id=\"u282f9e42\" id=\"u282f9e42\">调整目录结构，将相互关联的项目放置在同一个目录，推荐命名为 </span><code data-lake-id=\"u9f3fadeb\" id=\"u9f3fadeb\"><span data-lake-id=\"u640ab08f\" id=\"u640ab08f\">packages</span></code><span data-lake-id=\"u8bea9ee6\" id=\"u8bea9ee6\">；</span></li><li fid=\"uec3573e9\" data-lake-id=\"u6722b056\" id=\"u6722b056\"><span data-lake-id=\"u6534bb9d\" id=\"u6534bb9d\">在项目根目录里的 </span><code data-lake-id=\"u66a242ca\" id=\"u66a242ca\"><span data-lake-id=\"ud04637d0\" id=\"ud04637d0\">package.json</span></code><span data-lake-id=\"u69e70938\" id=\"u69e70938\"> 文件中，设置 </span><code data-lake-id=\"u5fe989ee\" id=\"u5fe989ee\"><span data-lake-id=\"u2a808af9\" id=\"u2a808af9\">workspaces</span></code><span data-lake-id=\"u9f92bbee\" id=\"u9f92bbee\"> 属性，属性值为之前创建的目录；</span></li><li fid=\"uec3573e9\" data-lake-id=\"ue81d7c17\" id=\"ue81d7c17\"><span data-lake-id=\"u4fd8c5c8\" id=\"u4fd8c5c8\">同样，在 </span><code data-lake-id=\"ub94c3b9b\" id=\"ub94c3b9b\"><span data-lake-id=\"ucec1f188\" id=\"ucec1f188\">package.json</span></code><span data-lake-id=\"u530be199\" id=\"u530be199\"> 文件中，设置 </span><code data-lake-id=\"udb29af29\" id=\"udb29af29\"><span data-lake-id=\"u186f4902\" id=\"u186f4902\">private</span></code><span data-lake-id=\"u62f9e6be\" id=\"u62f9e6be\"> 属性为 </span><code data-lake-id=\"u7968bd43\" id=\"u7968bd43\"><span data-lake-id=\"u7dc18e52\" id=\"u7dc18e52\">true</span></code><span data-lake-id=\"ud0eafc18\" id=\"ud0eafc18\"> (为了避免我们误操作将仓库发布)；</span></li></ol><p data-lake-id=\"ud8c4315f\" id=\"ud8c4315f\"><span data-lake-id=\"u72bd5155\" id=\"u72bd5155\" class=\"lake-fontsize-12\" style=\"color: rgb(44, 62, 80)\">​</span><br></p><p data-lake-id=\"uafaffd24\" id=\"uafaffd24\"><span data-lake-id=\"uf8cbf136\" id=\"uf8cbf136\">经过修改，项目目录看起来应该是这样：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22markdown%22%2C%22code%22%3A%22.%5Cn%E2%94%9C%E2%94%80%E2%94%80%20package.json%5Cn%E2%94%94%E2%94%80%E2%94%80%20packages%2F%5Cn%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20%40mono%2Fproject_1%2F%20%23%20%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8%20%60%40%3C%E9%A1%B9%E7%9B%AE%E5%90%8D%3E%2F%3C%E5%AD%90%E9%A1%B9%E7%9B%AE%E5%90%8D%3E%60%20%E7%9A%84%E6%96%B9%E5%BC%8F%E5%91%BD%E5%90%8D%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20index.js%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20package.json%5Cn%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20%40mono%2Fproject_2%2F%5Cn%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20index.js%5Cn%20%20%20%20%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20package.json%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Fgeoa%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u2d47e904\" id=\"u2d47e904\"><span data-lake-id=\"ube9901c8\" id=\"ube9901c8\">而当在项目根目录中执行 </span><code data-lake-id=\"u2a7c9285\" id=\"u2a7c9285\"><span data-lake-id=\"u4a72b70d\" id=\"u4a72b70d\">npm install</span></code><span data-lake-id=\"udd6110f1\" id=\"udd6110f1\"> 或 </span><code data-lake-id=\"u941c7ab2\" id=\"u941c7ab2\"><span data-lake-id=\"u0963b9ff\" id=\"u0963b9ff\">yarn install</span></code><span data-lake-id=\"u7afb3d12\" id=\"u7afb3d12\"> 后，会发现在项目根目录中出现了 </span><code data-lake-id=\"u8ee55c8f\" id=\"u8ee55c8f\"><span data-lake-id=\"u8cdacd14\" id=\"u8cdacd14\">node_modules</span></code><span data-lake-id=\"u7e9f978d\" id=\"u7e9f978d\"> 目录，并且该目录不仅拥有所有子项目共用的 </span><code data-lake-id=\"uf058957d\" id=\"uf058957d\"><span data-lake-id=\"u5e1ec2eb\" id=\"u5e1ec2eb\">npm</span></code><span data-lake-id=\"u1a540e8d\" id=\"u1a540e8d\"> 包，还包含了我们的子项目。因此，我们可以在子项目中通过各种模块引入机制，像引入一般的 </span><code data-lake-id=\"u84a8a506\" id=\"u84a8a506\"><span data-lake-id=\"ufcb9eec8\" id=\"ufcb9eec8\">npm</span></code><span data-lake-id=\"ue26fa8a8\" id=\"ue26fa8a8\"> 模块一样引入其他子项目的代码。</span></p><p data-lake-id=\"ucd5633a0\" id=\"ucd5633a0\"><span data-lake-id=\"ua5d363e0\" id=\"ua5d363e0\">​</span><br></p><p data-lake-id=\"u96363688\" id=\"u96363688\"><span data-lake-id=\"u4840bfcd\" id=\"u4840bfcd\">请注意我们对子项目的命名，统一以 </span><code data-lake-id=\"u632dfdba\" id=\"u632dfdba\"><span data-lake-id=\"u929b82d5\" id=\"u929b82d5\">@&lt;repo_name&gt;/</span></code><span data-lake-id=\"u1e2e1012\" id=\"u1e2e1012\"> 开头，这是一种社区最佳实践，不仅可以让用户更容易了解整个应用的架构，也方便您在项目中更快捷的找到所需的子项目。</span></p><p data-lake-id=\"u30f5279b\" id=\"u30f5279b\"><span data-lake-id=\"u51868e46\" id=\"u51868e46\">​</span><br></p><p data-lake-id=\"u70ecb25d\" id=\"u70ecb25d\"><span data-lake-id=\"u53b20289\" id=\"u53b20289\">至此，我们已经完成了 </span><code data-lake-id=\"ua9c80d72\" id=\"ua9c80d72\"><span data-lake-id=\"u263aeb73\" id=\"u263aeb73\">monorepo</span></code><span data-lake-id=\"u31898662\" id=\"u31898662\"> 策略的核心部分，实在是很容易不是吗？但是老话说「行百里者半九十」，距离优雅的搭建一个 </span><code data-lake-id=\"u4c4aaed9\" id=\"u4c4aaed9\"><span data-lake-id=\"ue4979af4\" id=\"ue4979af4\">monorepo</span></code><span data-lake-id=\"u5ad09e01\" id=\"u5ad09e01\"> 项目，我们还有一些路要走。</span></p><h3 data-lake-id=\"eHgR9\" id=\"eHgR9\"><span data-lake-id=\"u9788f740\" id=\"u9788f740\">3. 统一配置: 合并同类项 - Eslint、TypeScript、Babel</span></h3><p data-lake-id=\"uba766d35\" id=\"uba766d35\"><span data-lake-id=\"u2c5dad52\" id=\"u2c5dad52\">编写代码要遵循 </span><code data-lake-id=\"uc07445c1\" id=\"uc07445c1\"><span data-lake-id=\"u00a2a078\" id=\"u00a2a078\">DRY</span></code><span data-lake-id=\"u62bb7e65\" id=\"u62bb7e65\"> 原则（</span><code data-lake-id=\"u3293edaf\" id=\"u3293edaf\"><span data-lake-id=\"u196aa061\" id=\"u196aa061\">Don't Repeat Yourself</span></code><span data-lake-id=\"u08bbc13d\" id=\"u08bbc13d\"> 的缩写）。那么，理所当然地，我们应该尽量避免在多个子项目中放置重复的 </span><code data-lake-id=\"uf9c28d34\" id=\"uf9c28d34\"><span data-lake-id=\"u195b9df9\" id=\"u195b9df9\">eslintrc</span></code><span data-lake-id=\"u0d3ea4cc\" id=\"u0d3ea4cc\">，</span><code data-lake-id=\"ue186e1aa\" id=\"ue186e1aa\"><span data-lake-id=\"u22b22e4d\" id=\"u22b22e4d\">tsconfig</span></code><span data-lake-id=\"ua6bfaaed\" id=\"ua6bfaaed\"> 等配置文件。幸运的是，</span><code data-lake-id=\"u5ee52ff3\" id=\"u5ee52ff3\"><span data-lake-id=\"ua0fbd6f4\" id=\"ua0fbd6f4\">Babel</span></code><span data-lake-id=\"u5c59fcf7\" id=\"u5c59fcf7\">，</span><code data-lake-id=\"ub2c4f399\" id=\"ub2c4f399\"><span data-lake-id=\"u76b1a84c\" id=\"u76b1a84c\">Eslint</span></code><span data-lake-id=\"ua9cd2207\" id=\"ua9cd2207\"> 和 </span><code data-lake-id=\"u5ca5ef65\" id=\"u5ca5ef65\"><span data-lake-id=\"uebf84d6f\" id=\"uebf84d6f\">Typescript</span></code><span data-lake-id=\"u3eb3dad5\" id=\"u3eb3dad5\"> 都提供了相应的功能让我们减少自我重复。</span></p><h4 data-lake-id=\"p6Ser\" id=\"p6Ser\"><span data-lake-id=\"u29fa9ad2\" id=\"u29fa9ad2\">TypeScript</span></h4><p data-lake-id=\"u4ee1bd18\" id=\"u4ee1bd18\"><span data-lake-id=\"u53e91ade\" id=\"u53e91ade\">我们可以在 </span><code data-lake-id=\"u561d9964\" id=\"u561d9964\"><span data-lake-id=\"ub6b75b06\" id=\"ub6b75b06\">package.json</span></code><span data-lake-id=\"u07522e94\" id=\"u07522e94\">目录中放置 </span><code data-lake-id=\"u3002bbaa\" id=\"u3002bbaa\"><span data-lake-id=\"u8b827b89\" id=\"u8b827b89\">tsconfig.setting.json</span></code><span data-lake-id=\"u94017e81\" id=\"u94017e81\"> 文件，并在文件中定义通用的 </span><code data-lake-id=\"ubafa533b\" id=\"ubafa533b\"><span data-lake-id=\"u125f2b1a\" id=\"u125f2b1a\">ts</span></code><span data-lake-id=\"ue0b7fed4\" id=\"ue0b7fed4\"> 配置。然后，在每个子项目中，可以通过 </span><code data-lake-id=\"u777000bb\" id=\"u777000bb\"><span data-lake-id=\"u20bc8644\" id=\"u20bc8644\">extends</span></code><span data-lake-id=\"uf9741b65\" id=\"uf9741b65\"> 属性，引入通用配置，并设置 </span><code data-lake-id=\"u78a81729\" id=\"u78a81729\"><span data-lake-id=\"u822625cd\" id=\"u822625cd\">compilerOptions.composite</span></code><span data-lake-id=\"ue59d8d4a\" id=\"ue59d8d4a\"> 的值为 </span><code data-lake-id=\"u43a2e928\" id=\"u43a2e928\"><span data-lake-id=\"ue22709fe\" id=\"ue22709fe\">true</span></code><span data-lake-id=\"u2a05257e\" id=\"u2a05257e\">，理想情况下，子项目中的 </span><code data-lake-id=\"ued4cf579\" id=\"ued4cf579\"><span data-lake-id=\"ud1c981bb\" id=\"ud1c981bb\">tsconfig</span></code><span data-lake-id=\"u61c03a0f\" id=\"u61c03a0f\"> 文件应该仅包含下述内容：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22extends%5C%22%3A%20%5C%22..%2Ftsconfig.setting.json%5C%22%2C%20%2F%2F%20%E7%BB%A7%E6%89%BF%20packages%20%E7%9B%AE%E5%BD%95%E4%B8%8B%E9%80%9A%E7%94%A8%E9%85%8D%E7%BD%AE%5Cn%20%20%5C%22compilerOptions%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22composite%5C%22%3A%20true%2C%20%2F%2F%20%E7%94%A8%E4%BA%8E%E5%B8%AE%E5%8A%A9%20TypeScript%20%E5%BF%AB%E9%80%9F%E7%A1%AE%E5%AE%9A%E5%BC%95%E7%94%A8%E5%B7%A5%E7%A8%8B%E7%9A%84%E8%BE%93%E5%87%BA%E6%96%87%E4%BB%B6%E4%BD%8D%E7%BD%AE%5Cn%20%20%20%20%5C%22outDir%5C%22%3A%20%5C%22dist%5C%22%2C%5Cn%20%20%20%20%5C%22rootDir%5C%22%3A%20%5C%22src%5C%22%5Cn%20%20%7D%2C%5Cn%20%20%5C%22include%5C%22%3A%20%5B%5C%22src%5C%22%5D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22NFkg1%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h4 data-lake-id=\"p5cZY\" id=\"p5cZY\"><span data-lake-id=\"u6a0ae1c8\" id=\"u6a0ae1c8\">Eslint</span></h4><p data-lake-id=\"u14014cce\" id=\"u14014cce\"><span data-lake-id=\"u892c9845\" id=\"u892c9845\">对于 </span><code data-lake-id=\"u1abfcee3\" id=\"u1abfcee3\"><span data-lake-id=\"u4c165916\" id=\"u4c165916\">Eslint</span></code><span data-lake-id=\"u04ade832\" id=\"u04ade832\"> 配置文件，我们也可以如法炮制，这样定义子项目的 </span><code data-lake-id=\"ub9e43a74\" id=\"ub9e43a74\"><span data-lake-id=\"u6df89665\" id=\"u6df89665\">.eslintrc</span></code><span data-lake-id=\"ub22bb411\" id=\"ub22bb411\"> 文件内容：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22extends%5C%22%3A%20%5C%22..%2F..%2F.eslintrc%5C%22%2C%20%2F%2F%20%E6%B3%A8%E6%84%8F%E8%BF%99%E9%87%8C%E7%9A%84%E4%B8%8D%E5%90%8C%5Cn%20%20%5C%22parserOptions%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22project%5C%22%3A%20%5C%22tsconfig.json%5C%22%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22FyMlt%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ud0104e85\" id=\"ud0104e85\"><span data-lake-id=\"u84b12237\" id=\"u84b12237\">对于通用的 </span><code data-lake-id=\"u30243173\" id=\"u30243173\"><span data-lake-id=\"u53abe99e\" id=\"u53abe99e\">eslint</span></code><span data-lake-id=\"u00095f4d\" id=\"u00095f4d\"> 配置，我们并没有将其放置在 </span><code data-lake-id=\"u639462c3\" id=\"u639462c3\"><span data-lake-id=\"u5a69d3ef\" id=\"u5a69d3ef\">packages</span></code><span data-lake-id=\"uc1507f5f\" id=\"uc1507f5f\"> 目录中，而是放在整个项目的根目录下，这样做的目的是：一些编辑器插件只会在项目根目录寻找 </span><code data-lake-id=\"ud21883f2\" id=\"ud21883f2\"><span data-lake-id=\"ubc4867d1\" id=\"ubc4867d1\">.eslintrc</span></code><span data-lake-id=\"u18a727de\" id=\"u18a727de\"> 文件，因此为了我们的项目能够保持良好的</span><strong><span data-lake-id=\"uee66944a\" id=\"uee66944a\">「开发环境一致性」</span></strong><span data-lake-id=\"u3025c949\" id=\"u3025c949\">，请务必将通用配置文件放置在项目的根目录中。</span></p><h4 data-lake-id=\"WcliS\" id=\"WcliS\"><span data-lake-id=\"u2b3892c5\" id=\"u2b3892c5\">Babel</span></h4><p data-lake-id=\"ufe6b5695\" id=\"ufe6b5695\"><code data-lake-id=\"uda2b308d\" id=\"uda2b308d\"><span data-lake-id=\"u1b7c48c2\" id=\"u1b7c48c2\">Babel</span></code><span data-lake-id=\"uf701dcc5\" id=\"uf701dcc5\">配置文件合并的方式与 </span><code data-lake-id=\"udefc64ce\" id=\"udefc64ce\"><span data-lake-id=\"ub04508d4\" id=\"ub04508d4\">TypeScript</span></code><span data-lake-id=\"ub49de55c\" id=\"ub49de55c\">如出一辙，甚至更加简单，我们只需在子项目中的 </span><code data-lake-id=\"ubd1aab5c\" id=\"ubd1aab5c\"><span data-lake-id=\"ub16474a3\" id=\"ub16474a3\">.babelrc</span></code><span data-lake-id=\"u2a42797f\" id=\"u2a42797f\">文件中这样声明即可：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22extends%5C%22%3A%20%5C%22..%2F.babelrc%5C%22%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22MbgKB%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u6d08a3f4\" id=\"u6d08a3f4\"><span data-lake-id=\"u72561ed0\" id=\"u72561ed0\">当一切准备就绪后，我们的项目目录应该大致呈现如下所示的结构：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22markdown%22%2C%22code%22%3A%22.%5Cn%E2%94%9C%E2%94%80%E2%94%80%20package.json%5Cn%E2%94%9C%E2%94%80%E2%94%80%20.eslintrc%5Cn%E2%94%94%E2%94%80%E2%94%80%20packages%2F%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20tsconfig.settings.json%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20.babelrc%5Cn%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20%40mono%2Fproject_1%2F%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20index.js%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20.eslintrc%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20.babelrc%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20tsconfig.json%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20package.json%5Cn%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%E2%94%80%40mono%2Fproject_2%2F%5Cn%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20index.js%5Cn%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20.eslintrc%5Cn%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20.babelrc%5Cn%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20tsconfig.json%5Cn%20%20%20%20%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20package.json%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22dSfzZ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"xyN0R\" id=\"xyN0R\"><span data-lake-id=\"u34ac3af4\" id=\"u34ac3af4\">4. 统一命令脚本: scripty</span></h3><p data-lake-id=\"uab4ff4b7\" id=\"uab4ff4b7\"><span data-lake-id=\"ucaf4ae4a\" id=\"ucaf4ae4a\">在上一步中，我们尽可能的将所有配置文件进行抽象，从而精简了代码，并提高了整个项目的一致性。我们的整个仓库也因此有了</span><strong><span data-lake-id=\"ua08f3503\" id=\"ua08f3503\">「更浓郁的 monorepo 风味 ☕️」</span></strong><span data-lake-id=\"u526c6c0d\" id=\"u526c6c0d\">。但如果仔细审视我们的整个工程文件，还有一处存在着明显的瑕疵和一些恼人的坏味道，当您仔细审视您的众多 </span><code data-lake-id=\"u8feca985\" id=\"u8feca985\"><span data-lake-id=\"u8310e17a\" id=\"u8310e17a\">package.json</span></code><span data-lake-id=\"u434958a8\" id=\"u434958a8\"> 文件时，您就知道我在说什么了 </span><code data-lake-id=\"u5689b135\" id=\"u5689b135\"><span data-lake-id=\"u25c2e51d\" id=\"u25c2e51d\">-- scripts</span></code><span data-lake-id=\"u119603fa\" id=\"u119603fa\"> 脚本。</span></p><p data-lake-id=\"ub834fdb1\" id=\"ub834fdb1\"><span data-lake-id=\"u605bb520\" id=\"u605bb520\">​</span><br></p><p data-lake-id=\"u35e8dab9\" id=\"u35e8dab9\"><span data-lake-id=\"u31221121\" id=\"u31221121\">如果您的子项目足够多，您可能会发现，每个 </span><code data-lake-id=\"u2a64527d\" id=\"u2a64527d\"><span data-lake-id=\"ua8ebb21c\" id=\"ua8ebb21c\">package.json</span></code><span data-lake-id=\"u0887dfce\" id=\"u0887dfce\"> 文件中的 </span><code data-lake-id=\"ue077140c\" id=\"ue077140c\"><span data-lake-id=\"u55025fb5\" id=\"u55025fb5\">scripts</span></code><span data-lake-id=\"u17f27a13\" id=\"u17f27a13\"> 属性都大同小异，并且一些 </span><code data-lake-id=\"u77360362\" id=\"u77360362\"><span data-lake-id=\"u4ec3983b\" id=\"u4ec3983b\">scripts</span></code><span data-lake-id=\"u88c44b8f\" id=\"u88c44b8f\"> 充斥着各种 </span><code data-lake-id=\"uaec3730c\" id=\"uaec3730c\"><span data-lake-id=\"u48a7d9ef\" id=\"u48a7d9ef\">Linux</span></code><span data-lake-id=\"u35e1d7f3\" id=\"u35e1d7f3\"> 语法，例如管道操作符，重定向或目录生成。重复带来低效，复杂则使人难以理解，这都是需要我们解决的问题。</span></p><p data-lake-id=\"u588a17bc\" id=\"u588a17bc\"><span data-lake-id=\"u27f1b072\" id=\"u27f1b072\">​</span><br></p><p data-lake-id=\"u90dc71a8\" id=\"u90dc71a8\"><span data-lake-id=\"uc4eadc3f\" id=\"uc4eadc3f\">这里给出的解决方案是，使用 </span><a href=\"https://www.npmjs.com/package/scripty\" target=\"_blank\" data-lake-id=\"u70097baa\" id=\"u70097baa\"><span data-lake-id=\"u58df6aac\" id=\"u58df6aac\">scripty</span></a><span data-lake-id=\"u1615da9c\" id=\"u1615da9c\"> 管理您的脚本命令，简单来说，</span><code data-lake-id=\"u32b53dbe\" id=\"u32b53dbe\"><span data-lake-id=\"ubdeebce8\" id=\"ubdeebce8\">scripty</span></code><span data-lake-id=\"u1d69cdd7\" id=\"u1d69cdd7\"> 允许您将脚本命令定义在文件中，并在 </span><code data-lake-id=\"u6127e0a8\" id=\"u6127e0a8\"><span data-lake-id=\"u6ce59fa6\" id=\"u6ce59fa6\">package.json</span></code><span data-lake-id=\"u8c75dd0b\" id=\"u8c75dd0b\"> 文件中直接通过文件名来引用。这使我们可以实现如下目的：</span></p><ol list=\"uf84362a8\"><li fid=\"ucf9dcdc3\" data-lake-id=\"uad44ff18\" id=\"uad44ff18\"><span data-lake-id=\"u38712623\" id=\"u38712623\">子项目间复用脚本命令</span><span data-lake-id=\"u358cc353\" id=\"u358cc353\">；</span></li><li fid=\"ucf9dcdc3\" data-lake-id=\"u8a5717f5\" id=\"u8a5717f5\"><span data-lake-id=\"u2f876db2\" id=\"u2f876db2\">像写代码一样编写脚本命令，无论它有多复杂，而在调用时，像调用函数一样调用；</span></li></ol><p data-lake-id=\"u46137330\" id=\"u46137330\"><span data-lake-id=\"uf5f46b01\" id=\"uf5f46b01\">​</span><br></p><p data-lake-id=\"u938d3aa2\" id=\"u938d3aa2\"><span data-lake-id=\"u685bc387\" id=\"u685bc387\">通过使用 </span><code data-lake-id=\"ub65ef327\" id=\"ub65ef327\"><span data-lake-id=\"ue834c30b\" id=\"ue834c30b\">scripty</span></code><span data-lake-id=\"uac6fc545\" id=\"uac6fc545\"> 管理我们的 </span><code data-lake-id=\"u04ef3b18\" id=\"u04ef3b18\"><span data-lake-id=\"u43760ea6\" id=\"u43760ea6\">monorepo</span></code><span data-lake-id=\"u59ac3b25\" id=\"u59ac3b25\"> 应用，目录结构看起来将会是这样：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22markdown%22%2C%22code%22%3A%22.%5Cn%E2%94%9C%E2%94%80%E2%94%80%20package.json%5Cn%E2%94%9C%E2%94%80%E2%94%80%20.eslintrc%5Cn%E2%94%9C%E2%94%80%E2%94%80%20scirpts%2F%20%23%20%E8%BF%99%E9%87%8C%E5%AD%98%E6%94%BE%E6%89%80%E6%9C%89%E7%9A%84%E8%84%9A%E6%9C%AC%5Cn%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20packages%2F%20%23%20%E5%8C%85%E7%BA%A7%E5%88%AB%E8%84%9A%E6%9C%AC%5Cn%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20build.sh%5Cn%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20test.sh%5Cn%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%E2%94%80%E2%94%94%E2%94%80%E2%94%80%20workspaces%2F%20%23%20%E5%85%A8%E5%B1%80%E8%84%9A%E6%9C%AC%5Cn%E2%94%82%20%20%20%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20build.sh%5Cn%E2%94%82%20%20%20%20%20%20%20%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20test.sh%5Cn%E2%94%94%E2%94%80%E2%94%80%20packages%2F%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20tsconfig.settings.json%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20.babelrc%5Cn%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20%40mono%2Fproject_1%2F%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20index.js%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20.eslintrc%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20.babelrc%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20tsconfig.json%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20package.json%5Cn%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20%40mono%2Fproject_2%2F%5Cn%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20index.js%5Cn%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20.eslintrc%5Cn%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20.babelrc%5Cn%20%20%20%20%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20tsconfig.json%5Cn%20%20%20%20%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20package.json%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Zz4W6%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u28248414\" id=\"u28248414\"><span data-lake-id=\"u3e886601\" id=\"u3e886601\">注意，我们脚本分为两类</span><strong><span data-lake-id=\"ub3024835\" id=\"ub3024835\">「package 级别」</span></strong><span data-lake-id=\"ue5448a1a\" id=\"ue5448a1a\">与</span><strong><span data-lake-id=\"ub89057a1\" id=\"ub89057a1\">「workspace 级别</span></strong><span data-lake-id=\"u70090e4d\" id=\"u70090e4d\">」，并且分别放在两个文件夹内。这样做的好处在于，我们既可以在项目根目录执行全局脚本，也可以针对单个项目执行特定的脚本。</span></p><p data-lake-id=\"u2986ff87\" id=\"u2986ff87\"><span data-lake-id=\"uf04928bb\" id=\"uf04928bb\">​</span><br></p><p data-lake-id=\"u6a689a35\" id=\"u6a689a35\"><span data-lake-id=\"uf83ffad8\" id=\"uf83ffad8\">通过使用 </span><code data-lake-id=\"u0b595e3d\" id=\"u0b595e3d\"><span data-lake-id=\"u1a314d32\" id=\"u1a314d32\">scripty</span></code><span data-lake-id=\"ub0f34d50\" id=\"ub0f34d50\">，子项目的 </span><code data-lake-id=\"u4843ecbb\" id=\"u4843ecbb\"><span data-lake-id=\"uc2335a74\" id=\"uc2335a74\">package.json</span></code><span data-lake-id=\"uf14c90b5\" id=\"uf14c90b5\"> 文件中的 </span><code data-lake-id=\"ub140e3dc\" id=\"ub140e3dc\"><span data-lake-id=\"ub1ed54f2\" id=\"ub1ed54f2\">scripts</span></code><span data-lake-id=\"uaa76e6dc\" id=\"uaa76e6dc\"> 属性将变得非常精简：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%20%20...%5Cn%20%20%5C%22scripts%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22test%5C%22%3A%20%5C%22scripty%5C%22%2C%5Cn%20%20%20%20%5C%22lint%5C%22%3A%20%5C%22scripty%5C%22%2C%5Cn%20%20%20%20%5C%22build%5C%22%3A%20%5C%22scripty%5C%22%5Cn%20%20%7D%2C%5Cn%20%20%5C%22scripty%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22path%5C%22%3A%20%5C%22..%2F..%2Fscripts%2Fpackages%5C%22%20%2F%2F%20%E6%B3%A8%E6%84%8F%E8%BF%99%E9%87%8C%E6%88%91%E4%BB%AC%E6%8C%87%E5%AE%9A%E4%BA%86%20scripty%20%E7%9A%84%E8%B7%AF%E5%BE%84%5Cn%20%20%7D%2C%5Cn%20%20...%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22fHxeB%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u585c33a7\" id=\"u585c33a7\"><span data-lake-id=\"u96f8f3b5\" id=\"u96f8f3b5\">大功告成！🎉 至此，我们尽己所能地删除了整个项目中的重复代码，让整个项目变得干净，清爽并且有极强的复用性。</span></p><blockquote data-lake-id=\"u71b62422\" id=\"u71b62422\" class=\"lake-alert lake-alert-info\"><p data-lake-id=\"u48cf5b3f\" id=\"u48cf5b3f\"><span data-lake-id=\"uaa7dd6c0\" id=\"uaa7dd6c0\">🧉 小贴士：</span></p><p data-lake-id=\"ufd40322e\" id=\"ufd40322e\"><span data-lake-id=\"u708a705e\" id=\"u708a705e\">别忘了使用 </span><code data-lake-id=\"u809b5ef1\" id=\"u809b5ef1\"><span data-lake-id=\"ucf2681c1\" id=\"ucf2681c1\">chmod -R u+x scripts</span></code><span data-lake-id=\"ua1094352\" id=\"ua1094352\"> 命令使所有的 </span><code data-lake-id=\"uc780fcaa\" id=\"uc780fcaa\"><span data-lake-id=\"uc3ba21f6\" id=\"uc3ba21f6\">shell</span></code><span data-lake-id=\"u0ce5c2d2\" id=\"u0ce5c2d2\"> 脚本具备可执行权限，也千万别忘了把这条贴士写在您的 </span><code data-lake-id=\"u2608bb94\" id=\"u2608bb94\"><span data-lake-id=\"u505a1cbe\" id=\"u505a1cbe\">README.md</span></code><span data-lake-id=\"u1900887c\" id=\"u1900887c\"> 文件中！</span></p></blockquote><h3 data-lake-id=\"HpKUb\" id=\"HpKUb\"><span data-lake-id=\"u3a06c229\" id=\"u3a06c229\">5. 统一包管理: lerna</span></h3><p data-lake-id=\"u81dd33a5\" id=\"u81dd33a5\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1648747742904-bb7df604-18ef-4547-93c2-382b3cd5a574.png%22%2C%22taskId%22%3A%22ufd26afd3-4bfc-4f4a-becf-0f9c4c874c0%22%2C%22clientId%22%3A%22u6fbcdb1d-5fd6-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A600%2C%22height%22%3A542%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A197677%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A750%2C%22originHeight%22%3A678%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22ocrLocations%22%3A%5B%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22u76e7c2b9%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"u37da6979\" id=\"u37da6979\"><span data-lake-id=\"u28b43c85\" id=\"u28b43c85\">我有时会感慨自己的灵感匮乏，怎么就想不到 </span><code data-lake-id=\"ud2c0292a\" id=\"ud2c0292a\"><span data-lake-id=\"u21e423c9\" id=\"u21e423c9\">Lerna</span></code><span data-lake-id=\"u5e78a598\" id=\"u5e78a598\"> 这样既有神话色彩又能自我释义的好名字。您可以大胆想象，九头龙的每只龙头都在帮您管理着一个子项目，而您只需要骑在龙身上发号施令的场景，这基本上就是我们使用 </span><code data-lake-id=\"ue6c8562a\" id=\"ue6c8562a\"><span data-lake-id=\"u1b6df4f3\" id=\"u1b6df4f3\">Lerna</span></code><span data-lake-id=\"u905b8caf\" id=\"u905b8caf\"> 时的直观感受。</span></p><p data-lake-id=\"ued055ae9\" id=\"ued055ae9\"><span data-lake-id=\"ufa6b5dd8\" id=\"ufa6b5dd8\">​</span><br></p><p data-lake-id=\"ubbeb37d6\" id=\"ubbeb37d6\"><span data-lake-id=\"u38d31832\" id=\"u38d31832\">这也是为什么当我们提起 </span><code data-lake-id=\"u443abc50\" id=\"u443abc50\"><span data-lake-id=\"u7c894328\" id=\"u7c894328\">monorepo</span></code><span data-lake-id=\"ucfa61cba\" id=\"ucfa61cba\"> 策略，就几乎不得不提到 </span><code data-lake-id=\"u62b62699\" id=\"u62b62699\"><span data-lake-id=\"u3d58146d\" id=\"u3d58146d\">Lerna</span></code><span data-lake-id=\"uba52613a\" id=\"uba52613a\"> 的原因了，它的确提供了一种非常便捷的方式供我们管理 </span><code data-lake-id=\"u8a67fcb6\" id=\"u8a67fcb6\"><span data-lake-id=\"u89bb0fd2\" id=\"u89bb0fd2\">monorepo</span></code><span data-lake-id=\"u20ee3e35\" id=\"u20ee3e35\"> 项目。当子项目越多时，</span><code data-lake-id=\"u82828a43\" id=\"u82828a43\"><span data-lake-id=\"u31ae6573\" id=\"u31ae6573\">Lerna</span></code><span data-lake-id=\"uf575208a\" id=\"uf575208a\"> 就越能显示其威力。</span></p><p data-lake-id=\"u3ebdd90c\" id=\"u3ebdd90c\"><span data-lake-id=\"u00fb7213\" id=\"u00fb7213\">​</span><br></p><p data-lake-id=\"u777b0f5a\" id=\"u777b0f5a\"><span data-lake-id=\"u9534a6b9\" id=\"u9534a6b9\">当多个子项目放在一个代码仓库，并且子项目之间又相互依赖时，我们面临的棘手问题有两个：</span></p><ol list=\"ud33d3062\"><li fid=\"u9b90fcda\" data-lake-id=\"u27c47ae8\" id=\"u27c47ae8\"><span data-lake-id=\"u7148c07c\" id=\"u7148c07c\">如果我们需要在多个子目录执行相同的命令，我们需要手动进入各个目录，并执行命令</span><span data-lake-id=\"u86895ccb\" id=\"u86895ccb\">；</span></li><li fid=\"u9b90fcda\" data-lake-id=\"udead62d3\" id=\"udead62d3\"><span data-lake-id=\"u12de36ea\" id=\"u12de36ea\">当一个子项目更新后，我们只能手动追踪依赖该项目的其他子项目，并升级其版本</span><span data-lake-id=\"u902c24cf\" id=\"u902c24cf\">。</span></li></ol><p data-lake-id=\"u56c53fac\" id=\"u56c53fac\"><span data-lake-id=\"uc9fe530c\" id=\"uc9fe530c\">通过使用 </span><code data-lake-id=\"u8e3f7dc6\" id=\"u8e3f7dc6\"><span data-lake-id=\"u6aaddd92\" id=\"u6aaddd92\">Lerna</span></code><span data-lake-id=\"u3dc0ea75\" id=\"u3dc0ea75\">，这些棘手的问题都将不复存在。</span></p><p data-lake-id=\"ua2b12287\" id=\"ua2b12287\"><span data-lake-id=\"ufa049638\" id=\"ufa049638\">​</span><br></p><p data-lake-id=\"ua81c0076\" id=\"ua81c0076\"><span data-lake-id=\"u82136600\" id=\"u82136600\">当在项目根目录使用 </span><code data-lake-id=\"uc5b5f278\" id=\"uc5b5f278\"><span data-lake-id=\"uee9a224d\" id=\"uee9a224d\">npx lerna init</span></code><span data-lake-id=\"u7398e61c\" id=\"u7398e61c\"> 初始化后，我们的根目录会新增一个 </span><code data-lake-id=\"u7e7efd46\" id=\"u7e7efd46\"><span data-lake-id=\"u99ec276e\" id=\"u99ec276e\">lerna.json</span></code><span data-lake-id=\"u0a37ae8d\" id=\"u0a37ae8d\"> 文件，默认内容为：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22packages%5C%22%3A%20%5B%5C%22packages%2F*%5C%22%5D%2C%5Cn%20%20%5C%22version%5C%22%3A%20%5C%220.0.0%5C%22%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22sf4mf%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u8b66d0f7\" id=\"u8b66d0f7\"><span data-lake-id=\"u952ccb46\" id=\"u952ccb46\">让我们稍稍改动这个文件，使其变为：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22packages%5C%22%3A%20%5B%5C%22packages%2F*%5C%22%5D%2C%5Cn%20%20%5C%22npmClient%5C%22%3A%20%5C%22yarn%5C%22%2C%5Cn%20%20%5C%22version%5C%22%3A%20%5C%22independent%5C%22%2C%5Cn%20%20%5C%22useWorkspaces%5C%22%3A%20true%2C%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22sgCQn%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u7159bb2a\" id=\"u7159bb2a\"><span data-lake-id=\"u7389423e\" id=\"u7389423e\">可以注意到，我们显示声明了我们的包客户端（</span><code data-lake-id=\"ubc5abac7\" id=\"ubc5abac7\"><span data-lake-id=\"u0d236061\" id=\"u0d236061\">npmClient</span></code><span data-lake-id=\"u0c323204\" id=\"u0c323204\">）为 </span><code data-lake-id=\"u9c5003e0\" id=\"u9c5003e0\"><span data-lake-id=\"u209be5cd\" id=\"u209be5cd\">yarn</span></code><span data-lake-id=\"u8dda1238\" id=\"u8dda1238\">，并且让 </span><code data-lake-id=\"u503e45c2\" id=\"u503e45c2\"><span data-lake-id=\"uc0fd8147\" id=\"uc0fd8147\">Lerna</span></code><span data-lake-id=\"u6f331d1c\" id=\"u6f331d1c\"> 追踪我们 </span><code data-lake-id=\"u810e569a\" id=\"u810e569a\"><span data-lake-id=\"u91b623e9\" id=\"u91b623e9\">workspaces</span></code><span data-lake-id=\"uc0fce246\" id=\"uc0fce246\"> 设置的目录，这样我们就依旧保留了之前 </span><code data-lake-id=\"u5e0f1b4c\" id=\"u5e0f1b4c\"><span data-lake-id=\"ua25285a8\" id=\"ua25285a8\">workspaces</span></code><span data-lake-id=\"u53731f7b\" id=\"u53731f7b\"> 的所有特性（子项目引用和通用包提升）。</span></p><p data-lake-id=\"u89c66570\" id=\"u89c66570\"><span data-lake-id=\"u26130be0\" id=\"u26130be0\">​</span><br></p><p data-lake-id=\"ub429bda9\" id=\"ub429bda9\"><span data-lake-id=\"ue3438871\" id=\"ue3438871\">除此之外一个有趣的改动在于我们将 </span><code data-lake-id=\"u22d74cb5\" id=\"u22d74cb5\"><span data-lake-id=\"u731a4841\" id=\"u731a4841\">version</span></code><span data-lake-id=\"ue7af5ab8\" id=\"ue7af5ab8\"> 属性指定为一个关键字 </span><code data-lake-id=\"ua7be2048\" id=\"ua7be2048\"><span data-lake-id=\"u88c8798b\" id=\"u88c8798b\">independent</span></code><span data-lake-id=\"u98aa9c1e\" id=\"u98aa9c1e\">，这将告诉 </span><code data-lake-id=\"u48eb4e31\" id=\"u48eb4e31\"><span data-lake-id=\"udfa0c3be\" id=\"udfa0c3be\">lerna</span></code><span data-lake-id=\"u1dcd1e5a\" id=\"u1dcd1e5a\"> 应该将每个子项目的版本号看作是相互独立的。当某个子项目代码更新后，运行 </span><code data-lake-id=\"uded8ef7f\" id=\"uded8ef7f\"><span data-lake-id=\"ucbf8d0df\" id=\"ucbf8d0df\">lerna publish</span></code><span data-lake-id=\"u5b23cc52\" id=\"u5b23cc52\"> 时，</span><code data-lake-id=\"u4f94b6c9\" id=\"u4f94b6c9\"><span data-lake-id=\"u8098ba8b\" id=\"u8098ba8b\">Lerna</span></code><span data-lake-id=\"u5785c5f3\" id=\"u5785c5f3\"> 将监听到代码变化的子项目并以交互式 </span><code data-lake-id=\"u71ed9b80\" id=\"u71ed9b80\"><span data-lake-id=\"uab1cd051\" id=\"uab1cd051\">CLI</span></code><span data-lake-id=\"uedd7ce46\" id=\"uedd7ce46\"> 方式让开发者决定需要升级的版本号，关联的子项目版本号不会自动升级，反之，当我们填入固定的版本号时，则任一子项目的代码变动，都会导致所有子项目的版本号基于当前指定的版本号升级。</span></p><p data-lake-id=\"u0e61fc9c\" id=\"u0e61fc9c\"><span data-lake-id=\"u93cfe941\" id=\"u93cfe941\">​</span><br></p><p data-lake-id=\"u52cf8053\" id=\"u52cf8053\"><code data-lake-id=\"u226144b6\" id=\"u226144b6\"><span data-lake-id=\"u457c28b1\" id=\"u457c28b1\">Lerna</span></code><span data-lake-id=\"u4b011786\" id=\"u4b011786\"> 提供了很多 </span><code data-lake-id=\"ubb578f7f\" id=\"ubb578f7f\"><span data-lake-id=\"uf9ab7078\" id=\"uf9ab7078\">CLI</span></code><span data-lake-id=\"u1f3eef00\" id=\"u1f3eef00\"> 命令以满足我们的各种需求，但根据 2/8 法则，您应该首先关注以下这些命令：</span></p><ul list=\"u0f2d0160\"><li fid=\"u96c14c3c\" data-lake-id=\"u6c700d82\" id=\"u6c700d82\"><code data-lake-id=\"u6e66edef\" id=\"u6e66edef\"><span data-lake-id=\"u51c8f6e5\" id=\"u51c8f6e5\">lerna bootstrap</span></code><span data-lake-id=\"u65e44626\" id=\"u65e44626\">：等同于 lerna link + yarn install，用于创建符合链接并安装依赖包；</span></li><li fid=\"u96c14c3c\" data-lake-id=\"uf9469c10\" id=\"uf9469c10\"><code data-lake-id=\"ue9c9fd57\" id=\"ue9c9fd57\"><span data-lake-id=\"u0a912e06\" id=\"u0a912e06\">lerna run</span></code><span data-lake-id=\"u46369e44\" id=\"u46369e44\">：会像执行一个 for 循环一样，在所有子项目中执行 npm script 脚本，并且，它会非常智能的识别依赖关系，并从根依赖开始执行命令；</span></li><li fid=\"u96c14c3c\" data-lake-id=\"u932e5cfe\" id=\"u932e5cfe\"><code data-lake-id=\"uea96ee06\" id=\"uea96ee06\"><span data-lake-id=\"u8e84e0e6\" id=\"u8e84e0e6\">lerna exec</span></code><span data-lake-id=\"u9cb2abdc\" id=\"u9cb2abdc\">：像 </span><code data-lake-id=\"u4dbbe01b\" id=\"u4dbbe01b\"><span data-lake-id=\"u4ef614f5\" id=\"u4ef614f5\">lerna run </span></code><span data-lake-id=\"u0cce2ddc\" id=\"u0cce2ddc\">一样，会按照依赖顺序执行命令，不同的是，它可以执行任何命令，例如 </span><code data-lake-id=\"u34631147\" id=\"u34631147\"><span data-lake-id=\"uef815cec\" id=\"uef815cec\">shell</span></code><span data-lake-id=\"u9a6ea920\" id=\"u9a6ea920\"> 脚本；</span></li><li fid=\"u96c14c3c\" data-lake-id=\"ub06c4bdf\" id=\"ub06c4bdf\"><code data-lake-id=\"u3a0ddc61\" id=\"u3a0ddc61\"><span data-lake-id=\"uded6cbf2\" id=\"uded6cbf2\">lerna publish</span></code><span data-lake-id=\"ub3021ef0\" id=\"ub3021ef0\">：发布代码有变动的 </span><code data-lake-id=\"uf4fc1a51\" id=\"uf4fc1a51\"><span data-lake-id=\"u3a37fe92\" id=\"u3a37fe92\">package</span></code><span data-lake-id=\"u1a05dc3d\" id=\"u1a05dc3d\">，因此首先您需要在使用 </span><code data-lake-id=\"ua57749fe\" id=\"ua57749fe\"><span data-lake-id=\"u5d924c15\" id=\"u5d924c15\">Lerna</span></code><span data-lake-id=\"uad572e34\" id=\"uad572e34\"> 前使用 </span><code data-lake-id=\"ua849817e\" id=\"ua849817e\"><span data-lake-id=\"ue3be218f\" id=\"ue3be218f\">git commit</span></code><span data-lake-id=\"u9cead675\" id=\"u9cead675\"> 命令提交代码，好让 </span><code data-lake-id=\"ud884a33e\" id=\"ud884a33e\"><span data-lake-id=\"ub13f5b6a\" id=\"ub13f5b6a\">Lerna</span></code><span data-lake-id=\"u80c6521d\" id=\"u80c6521d\"> 有一个 </span><code data-lake-id=\"ud4cad663\" id=\"ud4cad663\"><span data-lake-id=\"u48985cb5\" id=\"u48985cb5\">baseline</span></code><span data-lake-id=\"ue9d10e58\" id=\"ue9d10e58\">；</span></li><li fid=\"u96c14c3c\" data-lake-id=\"u06b01b17\" id=\"u06b01b17\"><code data-lake-id=\"uaa7110f5\" id=\"uaa7110f5\"><span data-lake-id=\"ube0b3a5c\" id=\"ube0b3a5c\">lerna add</span></code><span data-lake-id=\"u11bad790\" id=\"u11bad790\">：将本地或远程的包作为依赖添加至当前的 </span><code data-lake-id=\"ue89025be\" id=\"ue89025be\"><span data-lake-id=\"uaec135f5\" id=\"uaec135f5\">monorepo</span></code><span data-lake-id=\"ua0fa8fb2\" id=\"ua0fa8fb2\"> 仓库中，该命令让 </span><code data-lake-id=\"u4a28e472\" id=\"u4a28e472\"><span data-lake-id=\"u872066f7\" id=\"u872066f7\">Lerna</span></code><span data-lake-id=\"u438ec196\" id=\"u438ec196\"> 可以识别并追踪包之间的依赖关系，因此非常重要；</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22%23%20%E5%90%91%20%40mono%2Fproject2%20%E5%92%8C%20%40mono%2Fproject3%20%E4%B8%AD%E6%B7%BB%E5%8A%A0%20%40mono%2Fproject1%5Cnlerna%20add%20%40mono%2Fproject1%20'%40mono%2Fproject%7B2%2C3%7D'%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22g2KSh%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h4 data-lake-id=\"IoUuw\" id=\"IoUuw\"><span data-lake-id=\"u4e544ba7\" id=\"u4e544ba7\">lerna 高级命令</span></h4><p data-lake-id=\"u2fac2e13\" id=\"u2fac2e13\"><span data-lake-id=\"u14d58dd6\" id=\"u14d58dd6\">除了上面介绍到的常用命令外，</span><code data-lake-id=\"u5aa8a46a\" id=\"u5aa8a46a\"><span data-lake-id=\"ud5b5ddd2\" id=\"ud5b5ddd2\">Lerna</span></code><span data-lake-id=\"u4d7dbfc6\" id=\"u4d7dbfc6\"> 还提供了一些参数满足我们更灵活的需求，例如：</span></p><ul list=\"u8ebab5dc\"><li fid=\"u6bb8a866\" data-lake-id=\"ua122680d\" id=\"ua122680d\"><code data-lake-id=\"u144593c4\" id=\"u144593c4\"><span data-lake-id=\"ud02523dd\" id=\"ud02523dd\">--concurrency &lt;number&gt;</span></code><span data-lake-id=\"ue2b878ae\" id=\"ue2b878ae\">：参数可以使 </span><code data-lake-id=\"ue4743758\" id=\"ue4743758\"><span data-lake-id=\"u44856711\" id=\"u44856711\">Lerna</span></code><span data-lake-id=\"u60e6cf3a\" id=\"u60e6cf3a\"> 利用计算机上的多个核心，并发运行，从而提升构建速度；</span></li><li fid=\"u6bb8a866\" data-lake-id=\"u5d330b31\" id=\"u5d330b31\"><code data-lake-id=\"uaa8e5a88\" id=\"uaa8e5a88\"><span data-lake-id=\"ua8d01620\" id=\"ua8d01620\">--scope '@mono/{pkg1,pkg2}'</span></code><span data-lake-id=\"u95304184\" id=\"u95304184\">：</span><code data-lake-id=\"u430bd131\" id=\"u430bd131\"><span data-lake-id=\"u2a0865ba\" id=\"u2a0865ba\">--scope</span></code><span data-lake-id=\"ua40ceba6\" id=\"ua40ceba6\"> 参数可以指定 </span><code data-lake-id=\"u9c858ed9\" id=\"u9c858ed9\"><span data-lake-id=\"ua906bbda\" id=\"ua906bbda\">Lerna</span></code><span data-lake-id=\"ufd2c0221\" id=\"ufd2c0221\"> 命令的运行环境，通过使用该参数，</span><code data-lake-id=\"ue12f25c6\" id=\"ue12f25c6\"><span data-lake-id=\"u7a3be838\" id=\"u7a3be838\">Lerna</span></code><span data-lake-id=\"u9a1a37fe\" id=\"u9a1a37fe\"> 将不再是一把梭的在所有仓库中执行命令，而是可以精准地在我们所指定的仓库中执行命令，并且还支持示例中的模版语法；</span></li><li fid=\"u6bb8a866\" data-lake-id=\"ucbcd7067\" id=\"ucbcd7067\"><code data-lake-id=\"ua2a90836\" id=\"ua2a90836\"><span data-lake-id=\"u2658498e\" id=\"u2658498e\">--stream</span></code><span data-lake-id=\"ubfd50d58\" id=\"ubfd50d58\">：该参数可使我们查看 </span><code data-lake-id=\"u0a1fade1\" id=\"u0a1fade1\"><span data-lake-id=\"u77e7fa4e\" id=\"u77e7fa4e\">Lerna</span></code><span data-lake-id=\"u8295558d\" id=\"u8295558d\"> 运行时的命令执行信息；</span></li></ul><h4 data-lake-id=\"iCnP2\" id=\"iCnP2\"><span data-lake-id=\"u944d1e87\" id=\"u944d1e87\" style=\"color: rgb(44, 62, 80)\">npm 包本地发布：Verdaccio</span></h4><p data-lake-id=\"u76369f55\" id=\"u76369f55\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1648748304497-5e3fff8e-c3f8-45d1-838f-c3e5bd18ed1c.png%22%2C%22taskId%22%3A%22u1a3f5727-3987-4438-971e-193107de381%22%2C%22clientId%22%3A%22u6fbcdb1d-5fd6-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A481.6%2C%22height%22%3A160%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A15746%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A602%2C%22originHeight%22%3A200%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22V%20VERDACCIO%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A48.90202%2C%22y%22%3A49.563313%2C%22width%22%3A513.34038%2C%22height%22%3A102.25699700000001%2C%22text%22%3A%22V%20VERDACCIO%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22u8ce3b6ee%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"ue967177c\" id=\"ue967177c\"><span data-lake-id=\"u1571b825\" id=\"u1571b825\">看到这里，您可能想要亲自体验一把使用 </span><code data-lake-id=\"u2057b005\" id=\"u2057b005\"><span data-lake-id=\"ub3654c9d\" id=\"ub3654c9d\">Lerna</span></code><span data-lake-id=\"u5da47c24\" id=\"u5da47c24\"> 管理/发布 </span><code data-lake-id=\"u0a22889f\" id=\"u0a22889f\"><span data-lake-id=\"u892777ae\" id=\"u892777ae\">monorepo</span></code><span data-lake-id=\"u98afd606\" id=\"u98afd606\"> 项目的感觉。可是很快您会发现，将示例代码发布到真实世界的 </span><code data-lake-id=\"u787830ba\" id=\"u787830ba\"><span data-lake-id=\"u2acde9e5\" id=\"u2acde9e5\">npm</span></code><span data-lake-id=\"uaa1a984b\" id=\"uaa1a984b\"> 仓库并非一个好主意，这多少有些令人沮丧，但是别担心，您可以使用 </span><a href=\"https://verdaccio.org/\" target=\"_blank\" data-lake-id=\"u00abb48a\" id=\"u00abb48a\"><span data-lake-id=\"u4ae64066\" id=\"u4ae64066\">Verdaccio</span></a><span data-lake-id=\"ub7bf4c51\" id=\"ub7bf4c51\"> 在本地创建一个 </span><code data-lake-id=\"u13cfe6aa\" id=\"u13cfe6aa\"><span data-lake-id=\"u888fb2f6\" id=\"u888fb2f6\">npm</span></code><span data-lake-id=\"ucd324b1d\" id=\"ucd324b1d\"> 仓库作为代理，然后尽情体验 </span><code data-lake-id=\"u6347627d\" id=\"u6347627d\"><span data-lake-id=\"u5c947e97\" id=\"u5c947e97\">Lerna</span></code><span data-lake-id=\"u09335ec4\" id=\"u09335ec4\"> 的种种强大之处。</span></p><p data-lake-id=\"u8fce2d9a\" id=\"u8fce2d9a\"><span data-lake-id=\"u2b75d4e3\" id=\"u2b75d4e3\">​</span><br></p><p data-lake-id=\"u06ffb147\" id=\"u06ffb147\"><span data-lake-id=\"u6f24c6fb\" id=\"u6f24c6fb\">安装运行 </span><code data-lake-id=\"u45b1bf9f\" id=\"u45b1bf9f\"><span data-lake-id=\"u3ebfc342\" id=\"u3ebfc342\">Verdaccio</span></code><span data-lake-id=\"u19569285\" id=\"u19569285\"> 非常简单，您只需运行：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22npm%20install%20--global%20verdaccio%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Zj2aV%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u75c40ef9\" id=\"u75c40ef9\"><span data-lake-id=\"u087818ac\" id=\"u087818ac\">在全局安装 </span><code data-lake-id=\"ua4d7436d\" id=\"ua4d7436d\"><span data-lake-id=\"ua1e5b19d\" id=\"ua1e5b19d\">Verdaccio</span></code><span data-lake-id=\"ub53f808e\" id=\"ub53f808e\"> 应用，然后在 </span><code data-lake-id=\"u0e6f7684\" id=\"u0e6f7684\"><span data-lake-id=\"uffcd4a1c\" id=\"uffcd4a1c\">shell</span></code><span data-lake-id=\"ubac7c56d\" id=\"ubac7c56d\"> 中输入：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22verdaccio%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Ha0Mi%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u5dc97380\" id=\"u5dc97380\"><span data-lake-id=\"ucd9c15a8\" id=\"ucd9c15a8\">即可通过 </span><code data-lake-id=\"uee0c0e8c\" id=\"uee0c0e8c\"><span data-lake-id=\"u0df16382\" id=\"u0df16382\">localhost:4837</span></code><span data-lake-id=\"u7c6fdde0\" id=\"u7c6fdde0\"> 访问您的本地代理 </span><code data-lake-id=\"u74deeba6\" id=\"u74deeba6\"><span data-lake-id=\"u975077df\" id=\"u975077df\">npm</span></code><span data-lake-id=\"u84315d41\" id=\"u84315d41\"> 仓库，别忘了在您的项目根目录创建 </span><code data-lake-id=\"u964acb0c\" id=\"u964acb0c\"><span data-lake-id=\"u47500181\" id=\"u47500181\">.npmrc</span></code><span data-lake-id=\"u95d715a0\" id=\"u95d715a0\"> 文件，并在文件中将 </span><code data-lake-id=\"uc5145ba6\" id=\"uc5145ba6\"><span data-lake-id=\"u9b374dbc\" id=\"u9b374dbc\">npm</span></code><span data-lake-id=\"u34c73978\" id=\"u34c73978\"> 仓库地址改写为您的本地代理地址：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22registry%3D%5C%22http%3A%2F%2Flocalhost%3A4873%2F%5C%22%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22tHFHj%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ucf137b08\" id=\"ucf137b08\"><span data-lake-id=\"ub2b96da2\" id=\"ub2b96da2\">大功告成 🙌！每当您执行 </span><code data-lake-id=\"ufdf45c57\" id=\"ufdf45c57\"><span data-lake-id=\"ucce1fb3e\" id=\"ucce1fb3e\">lerna publish</span></code><span data-lake-id=\"u77cfe6e1\" id=\"u77cfe6e1\"> 时，子项目所构建成的 </span><code data-lake-id=\"ue5c4934e\" id=\"ue5c4934e\"><span data-lake-id=\"ud7031021\" id=\"ud7031021\">package</span></code><span data-lake-id=\"ue790c455\" id=\"ue790c455\"> 将会发布在本地 </span><code data-lake-id=\"u513c1de0\" id=\"u513c1de0\"><span data-lake-id=\"u7d6519ba\" id=\"u7d6519ba\">npm</span></code><span data-lake-id=\"uccc24d8e\" id=\"uccc24d8e\"> 仓库中，而当您执行 </span><code data-lake-id=\"uaa676f1d\" id=\"uaa676f1d\"><span data-lake-id=\"ua95c265c\" id=\"ua95c265c\">lerna bootstrap</span></code><span data-lake-id=\"ufbcce91b\" id=\"ufbcce91b\"> 时，</span><code data-lake-id=\"u06e814e0\" id=\"u06e814e0\"><span data-lake-id=\"u3552a049\" id=\"u3552a049\">Verdaccio</span></code><span data-lake-id=\"u2979393b\" id=\"u2979393b\"> 将会放行，让您成功从远程 </span><code data-lake-id=\"u4a2cc03c\" id=\"u4a2cc03c\"><span data-lake-id=\"u33cf32b3\" id=\"u33cf32b3\">npm</span></code><span data-lake-id=\"u2fe402dd\" id=\"u2fe402dd\"> 仓库中拉取相应的代码。</span></p><h3 data-lake-id=\"iwmes\" id=\"iwmes\"><span data-lake-id=\"u581f39d5\" id=\"u581f39d5\">6. 格式化 commit 管理</span></h3><p data-lake-id=\"u3950e952\" id=\"u3950e952\"><span data-lake-id=\"u81563063\" id=\"u81563063\">至此，我们已经掌握了组织一个项目级 </span><code data-lake-id=\"ubad05abd\" id=\"ubad05abd\"><span data-lake-id=\"ud9cd3250\" id=\"ud9cd3250\">monorepo</span></code><span data-lake-id=\"ua6826f63\" id=\"ua6826f63\"> 仓库的所有前沿技巧，最后，让我们看看最后一个可以优化的地方：代码提交时，约束 </span><code data-lake-id=\"uc2ab8f70\" id=\"uc2ab8f70\"><span data-lake-id=\"u06d0901c\" id=\"u06d0901c\">commit</span></code><span data-lake-id=\"ufba30c22\" id=\"ufba30c22\"> 信息。</span></p><p data-lake-id=\"u43c1bb9b\" id=\"u43c1bb9b\"><span data-lake-id=\"u9c6dc5b4\" id=\"u9c6dc5b4\">​</span><br></p><p data-lake-id=\"u20f94032\" id=\"u20f94032\"><span data-lake-id=\"u88934c42\" id=\"u88934c42\">一个 </span><code data-lake-id=\"u9bac3391\" id=\"u9bac3391\"><span data-lake-id=\"u931168fc\" id=\"u931168fc\">monorepo</span></code><span data-lake-id=\"u24c0b0a1\" id=\"u24c0b0a1\"> 仓库可能被不同的开发者提交不同子项目的代码，如果没有规范化的 </span><code data-lake-id=\"u00913250\" id=\"u00913250\"><span data-lake-id=\"u2d7efd8c\" id=\"u2d7efd8c\">commit</span></code><span data-lake-id=\"u81bff1ff\" id=\"u81bff1ff\"> 信息，在故障排查或版本回滚时毫无意外会遭遇灾难。因此，千万不要小看 </span><code data-lake-id=\"u62513a60\" id=\"u62513a60\"><span data-lake-id=\"u8c8939f6\" id=\"u8c8939f6\">commit</span></code><span data-lake-id=\"u162e6642\" id=\"u162e6642\"> 信息格式化的重要性（当然，同样重要的还有代码注释！）。</span></p><p data-lake-id=\"u0f6d9481\" id=\"u0f6d9481\"><span data-lake-id=\"uf6888164\" id=\"uf6888164\">​</span><br></p><p data-lake-id=\"ub83c335b\" id=\"ub83c335b\"><span data-lake-id=\"u2b020c05\" id=\"u2b020c05\">为了我们能够一目了然的追踪每次代码变更的信息，我们使用 </span><a href=\"https://github.com/conventional-changelog/commitlint/#what-is-commitlint\" target=\"_blank\" data-lake-id=\"u44f1f5cd\" id=\"u44f1f5cd\"><span data-lake-id=\"u6c155042\" id=\"u6c155042\">commitlint</span></a><span data-lake-id=\"u12699166\" id=\"u12699166\"> 工具作为格式化 </span><code data-lake-id=\"ua8976370\" id=\"ua8976370\"><span data-lake-id=\"u0bf255b4\" id=\"u0bf255b4\">commit</span></code><span data-lake-id=\"u97aceaf6\" id=\"u97aceaf6\"> 信息的不二之选。</span></p><p data-lake-id=\"udfabd56a\" id=\"udfabd56a\"><span data-lake-id=\"u6f16f447\" id=\"u6f16f447\">​</span><br></p><p data-lake-id=\"ub23f9896\" id=\"ub23f9896\"><span data-lake-id=\"uce5c7a2d\" id=\"uce5c7a2d\">顾名思义，</span><code data-lake-id=\"u51131993\" id=\"u51131993\"><span data-lake-id=\"u7800d0f5\" id=\"u7800d0f5\">commitlint</span></code><span data-lake-id=\"u5203ff6e\" id=\"u5203ff6e\"> 可以帮助我们检查提交的 </span><code data-lake-id=\"u7722672b\" id=\"u7722672b\"><span data-lake-id=\"u6f48b656\" id=\"u6f48b656\">commit</span></code><span data-lake-id=\"u34543077\" id=\"u34543077\"> 信息，它强制约束我们的 </span><code data-lake-id=\"u28153189\" id=\"u28153189\"><span data-lake-id=\"u696ab650\" id=\"u696ab650\">commit</span></code><span data-lake-id=\"u0a115257\" id=\"u0a115257\"> 信息必须在开头附加指定类型，用于标示本次提交的大致意图，支持的类型关键字有：</span></p><ul list=\"u7b02f726\"><li fid=\"udab148e1\" data-lake-id=\"u26ab9e73\" id=\"u26ab9e73\"><code data-lake-id=\"uab675aba\" id=\"uab675aba\"><span data-lake-id=\"u17d40b48\" id=\"u17d40b48\">feat</span></code><span data-lake-id=\"u0df73a16\" id=\"u0df73a16\">：表示添加一个新特性；</span></li><li fid=\"udab148e1\" data-lake-id=\"u8f5d8328\" id=\"u8f5d8328\"><code data-lake-id=\"uf449fc7b\" id=\"uf449fc7b\"><span data-lake-id=\"u906705da\" id=\"u906705da\">chore</span></code><span data-lake-id=\"uf96feb40\" id=\"uf96feb40\">：表示做了一些与特性和修复无关的「家务事」；</span></li><li fid=\"udab148e1\" data-lake-id=\"ua1b40293\" id=\"ua1b40293\"><code data-lake-id=\"u7052cd39\" id=\"u7052cd39\"><span data-lake-id=\"uf8f839e6\" id=\"uf8f839e6\">fix</span></code><span data-lake-id=\"u6022e015\" id=\"u6022e015\">：表示修复了一个 </span><code data-lake-id=\"ub98c4525\" id=\"ub98c4525\"><span data-lake-id=\"u1512a4b3\" id=\"u1512a4b3\">Bug</span></code><span data-lake-id=\"uf26e5232\" id=\"uf26e5232\">；</span></li><li fid=\"udab148e1\" data-lake-id=\"ue7db7ec0\" id=\"ue7db7ec0\"><code data-lake-id=\"u0beb9cd6\" id=\"u0beb9cd6\"><span data-lake-id=\"ud71fd52e\" id=\"ud71fd52e\">refactor</span></code><span data-lake-id=\"ue92e2f47\" id=\"ue92e2f47\">：表示本次提交是因为重构了代码；</span></li><li fid=\"udab148e1\" data-lake-id=\"u9a4f7abc\" id=\"u9a4f7abc\"><code data-lake-id=\"u53b33b0b\" id=\"u53b33b0b\"><span data-lake-id=\"uacc5c097\" id=\"uacc5c097\">style</span></code><span data-lake-id=\"u64c3ddc7\" id=\"u64c3ddc7\">：表示代码美化或格式化；</span></li><li fid=\"udab148e1\" data-lake-id=\"uc24c75fc\" id=\"uc24c75fc\"><span data-lake-id=\"u1bd134f3\" id=\"u1bd134f3\">...</span></li></ul><p data-lake-id=\"u896e216b\" id=\"u896e216b\"><span data-lake-id=\"u86f947ce\" id=\"u86f947ce\">​</span><br></p><p data-lake-id=\"u886f7219\" id=\"u886f7219\"><span data-lake-id=\"u135b2527\" id=\"u135b2527\">我强烈建议您遵循该规范编写您的 </span><code data-lake-id=\"u27968f39\" id=\"u27968f39\"><span data-lake-id=\"u38cc6f14\" id=\"u38cc6f14\">commit</span></code><span data-lake-id=\"u6cdc039f\" id=\"u6cdc039f\"> 信息，不要偷懒，坚持下去，您的 git 日志将会显得整齐，有条理，富有表现力，同时，您也会收到同行的交口称赞，人人都会以和您这样优雅的工程师合作为荣。</span></p><p data-lake-id=\"uea56f20e\" id=\"uea56f20e\"><span data-lake-id=\"u0de74706\" id=\"u0de74706\">​</span><br></p><p data-lake-id=\"u557fd3ea\" id=\"u557fd3ea\"><span data-lake-id=\"ua80ae608\" id=\"ua80ae608\">除了限定 </span><code data-lake-id=\"u21a72486\" id=\"u21a72486\"><span data-lake-id=\"u8a9a0984\" id=\"u8a9a0984\">commit</span></code><span data-lake-id=\"ua2e767e8\" id=\"ua2e767e8\"> 信息类型外，</span><code data-lake-id=\"u9b3e4fd5\" id=\"u9b3e4fd5\"><span data-lake-id=\"ua3cff6f1\" id=\"ua3cff6f1\">commitlint</span></code><span data-lake-id=\"u8465607b\" id=\"u8465607b\"> 还支持（虽然不是必须的）显示指定我们本次提交所对应的子项目名称。假如我们有一个名为 </span><code data-lake-id=\"u46c10ca8\" id=\"u46c10ca8\"><span data-lake-id=\"udbd013d5\" id=\"udbd013d5\">@mono/project1</span></code><span data-lake-id=\"u350d476e\" id=\"u350d476e\"> 的子项目，我们针对该项目提交的 </span><code data-lake-id=\"u033528b5\" id=\"u033528b5\"><span data-lake-id=\"uf64d899e\" id=\"uf64d899e\">commit</span></code><span data-lake-id=\"u5434e2e6\" id=\"u5434e2e6\"> 信息可以写为：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22git%22%2C%22code%22%3A%22git%20commit%20-m%20%5C%22feat(project1)%3A%20add%20a%20attractive%20button%5C%22%20%23%20%E6%B3%A8%E6%84%8F%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9C%81%E7%95%A5%E4%BA%86%20%40mono%20%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%89%8D%E7%BC%80%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22mS363%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u33f250b2\" id=\"u33f250b2\"><span data-lake-id=\"u39ee78d7\" id=\"u39ee78d7\">毫无疑问，这将会使我们的 </span><code data-lake-id=\"u8d39e761\" id=\"u8d39e761\"><span data-lake-id=\"u7e73f30a\" id=\"u7e73f30a\">commit</span></code><span data-lake-id=\"u597630bd\" id=\"u597630bd\"> 信息更具表现力。</span></p><p data-lake-id=\"u1142642d\" id=\"u1142642d\"><span data-lake-id=\"u00d85ab4\" id=\"u00d85ab4\">​</span><br></p><p data-lake-id=\"uff98ac97\" id=\"uff98ac97\"><span data-lake-id=\"u69aed614\" id=\"u69aed614\">我们可以通过下面的命令安装 </span><code data-lake-id=\"u6c379d0d\" id=\"u6c379d0d\"><span data-lake-id=\"ufe56aa7c\" id=\"ufe56aa7c\">commitlint</span></code><span data-lake-id=\"ub8f35156\" id=\"ub8f35156\"> 以及周边依赖：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22shell%22%2C%22code%22%3A%22npm%20i%20-D%20%40commitlint%2Fcli%20%40commitlint%2Fconfig-conventional%20%40commitlint%2Fconfig-lerna-scopes%20commitlint%20husky%20lerna-changelog%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22RkIa0%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ua6fc73f1\" id=\"ua6fc73f1\"><span data-lake-id=\"u602e0852\" id=\"u602e0852\">注意到了吗？我偷偷安装了 </span><a href=\"https://www.npmjs.com/package/husky\" target=\"_blank\" data-lake-id=\"u34a95f1f\" id=\"u34a95f1f\"><span data-lake-id=\"u236da9b2\" id=\"u236da9b2\">husky</span></a><span data-lake-id=\"u997d1eca\" id=\"u997d1eca\">，它能够帮助我们在提交 </span><code data-lake-id=\"u810cd935\" id=\"u810cd935\"><span data-lake-id=\"ua9d317f0\" id=\"ua9d317f0\">commit</span></code><span data-lake-id=\"ua98fe343\" id=\"ua98fe343\"> 信息时自动运行 </span><code data-lake-id=\"u15700044\" id=\"u15700044\"><span data-lake-id=\"uca7fd45e\" id=\"uca7fd45e\">commitlint</span></code><span data-lake-id=\"u5ffffbab\" id=\"u5ffffbab\"> 进行检查，但在这之前，我们需要再在根目录下的 </span><code data-lake-id=\"uad4c2104\" id=\"uad4c2104\"><span data-lake-id=\"u8c580867\" id=\"u8c580867\">package.json</span></code><span data-lake-id=\"u72fa236b\" id=\"u72fa236b\"> 文件里加点料，像这样：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%20...%5Cn%20%5C%22husky%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22hooks%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%5C%22commit-msg%5C%22%3A%20%5C%22commitlint%20-E%20HUSKY_GIT_PARAMS%5C%22%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20...%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22jzcnb%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ucb1bc6e7\" id=\"ucb1bc6e7\"><span data-lake-id=\"u75a9374a\" id=\"u75a9374a\">为了能够让 </span><code data-lake-id=\"u10dcb718\" id=\"u10dcb718\"><span data-lake-id=\"ueb94a3a5\" id=\"ueb94a3a5\">commitlint</span></code><span data-lake-id=\"u84d1702c\" id=\"u84d1702c\"> 感知我们的子项目名称，我们还需在项目根目录中增加 </span><code data-lake-id=\"ua710abb0\" id=\"ua710abb0\"><span data-lake-id=\"u2cc9cec6\" id=\"u2cc9cec6\">commitlint.config.js</span></code><span data-lake-id=\"ub96831c9\" id=\"ub96831c9\"> 文件，并设置文件内容为：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22module.exports%20%3D%20%7B%5Cn%20%20extends%3A%20%5B%5Cn%20%20%20%20%5C%22%40commitlint%2Fconfig-conventional%5C%22%2C%5Cn%20%20%20%20%5C%22%40commitlint%2Fconfig-lerna-scopes%5C%22%2C%5Cn%20%20%5D%2C%5Cn%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22cPxqv%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"uaafcda09\" id=\"uaafcda09\"><span data-lake-id=\"u0709ea10\" id=\"u0709ea10\">至此，我们统一并规范化了 </span><code data-lake-id=\"u6f624d5b\" id=\"u6f624d5b\"><span data-lake-id=\"uc4e7ad05\" id=\"uc4e7ad05\">monorepo</span></code><span data-lake-id=\"u87a29266\" id=\"u87a29266\"> 项目的 </span><code data-lake-id=\"u7d0d6105\" id=\"u7d0d6105\"><span data-lake-id=\"u71adea85\" id=\"u71adea85\">commit</span></code><span data-lake-id=\"u53eef623\" id=\"u53eef623\"> 信息，终于整个 </span><code data-lake-id=\"u6cf66f2a\" id=\"u6cf66f2a\"><span data-lake-id=\"ua8154aff\" id=\"ua8154aff\">monorepo</span></code><span data-lake-id=\"ucda6fc78\" id=\"ucda6fc78\"> 工程化的最后一块拼图被我们拼上了！</span></p><p data-lake-id=\"u76a2a263\" id=\"u76a2a263\"><span data-lake-id=\"u144eb853\" id=\"u144eb853\">（顺便一提，您可以通过在命令行执行 </span><code data-lake-id=\"u92212ec6\" id=\"u92212ec6\"><span data-lake-id=\"uebc2ce2c\" id=\"uebc2ce2c\">echo &quot;build(project1): change something&quot; | npx commitlint</span></code><span data-lake-id=\"u2114bc23\" id=\"u2114bc23\"> 命令即可验证您的 </span><code data-lake-id=\"u2e63527f\" id=\"u2e63527f\"><span data-lake-id=\"u09edc290\" id=\"u09edc290\">commit</span></code><span data-lake-id=\"u45fb9ca8\" id=\"u45fb9ca8\"> 信息是否通过 </span><code data-lake-id=\"u6fb0832a\" id=\"u6fb0832a\"><span data-lake-id=\"u9989d717\" id=\"u9989d717\">commitlint</span></code><span data-lake-id=\"u52b5d5aa\" id=\"u52b5d5aa\"> 的检查。）</span></p>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 6761,
  "created_at": "2022-04-04T11:33:56.000Z",
  "updated_at": "2022-05-09T16:14:38.000Z",
  "content_updated_at": "2022-05-09T16:14:37.000Z",
  "published_at": "2022-05-09T16:14:37.000Z",
  "first_published_at": "2022-04-04T11:33:56.374Z",
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "toc_yml": "- type: META\n  count: 266\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 372566485\n  published: true\n  max_level: 3\n  last_updated_at: 2023-11-19T17:42:04.477Z\n  version_id: 372566559\n- type: TITLE\n  title: Html\n  uuid: SGxU5CjqNEcbiuCZ\n  url: ''\n  prev_uuid: ''\n  sibling_uuid: zGMd5d7cJrlxTWC4\n  child_uuid: mg4resPTI5OX8qJv\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: DOM 和 BOM\n  uuid: mg4resPTI5OX8qJv\n  url: wi8m4d\n  prev_uuid: SGxU5CjqNEcbiuCZ\n  sibling_uuid: 0QwKgmDym3ugd0Sy\n  child_uuid: ''\n  parent_uuid: SGxU5CjqNEcbiuCZ\n  doc_id: 72212235\n  level: 1\n  id: 72212235\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 行内元素、块元素、空元素\n  uuid: 0QwKgmDym3ugd0Sy\n  url: iiw9gy\n  prev_uuid: mg4resPTI5OX8qJv\n  sibling_uuid: pSprvwAkoJCOsbn4\n  child_uuid: ''\n  parent_uuid: SGxU5CjqNEcbiuCZ\n  doc_id: 72212238\n  level: 1\n  id: 72212238\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: web worker\n  uuid: pSprvwAkoJCOsbn4\n  url: orgrng\n  prev_uuid: 0QwKgmDym3ugd0Sy\n  sibling_uuid: M9_OGyccVAlBlvhk\n  child_uuid: ''\n  parent_uuid: SGxU5CjqNEcbiuCZ\n  doc_id: 72212240\n  level: 1\n  id: 72212240\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: html5 离线储存相关问题\n  uuid: M9_OGyccVAlBlvhk\n  url: lefokp\n  prev_uuid: pSprvwAkoJCOsbn4\n  sibling_uuid: YJKrEyielhl4Nuav\n  child_uuid: ''\n  parent_uuid: SGxU5CjqNEcbiuCZ\n  doc_id: 72212243\n  level: 1\n  id: 72212243\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: html5 拖拽 api\n  uuid: YJKrEyielhl4Nuav\n  url: lfb4ol\n  prev_uuid: M9_OGyccVAlBlvhk\n  sibling_uuid: yh3hn6VjMiW-J-D0\n  child_uuid: ''\n  parent_uuid: SGxU5CjqNEcbiuCZ\n  doc_id: 72212244\n  level: 1\n  id: 72212244\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: <script>标签\n  uuid: yh3hn6VjMiW-J-D0\n  url: qtgnxp\n  prev_uuid: YJKrEyielhl4Nuav\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: SGxU5CjqNEcbiuCZ\n  doc_id: 72212241\n  level: 1\n  id: 72212241\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: CSS\n  uuid: zGMd5d7cJrlxTWC4\n  url: ''\n  prev_uuid: SGxU5CjqNEcbiuCZ\n  sibling_uuid: qhr80Kgya8JXe694\n  child_uuid: 0DPnkW0dsw8oLLr1\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 盒模型\n  uuid: 0DPnkW0dsw8oLLr1\n  url: cthggr\n  prev_uuid: zGMd5d7cJrlxTWC4\n  sibling_uuid: vip2qlmBz5ieS09L\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212182\n  level: 1\n  id: 72212182\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: CSS 选择器优先级\n  uuid: vip2qlmBz5ieS09L\n  url: ho82xg\n  prev_uuid: 0DPnkW0dsw8oLLr1\n  sibling_uuid: aKI0hRvFJqqxjonJ\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212058\n  level: 1\n  id: 72212058\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: CSS 中可继承和不可继承的元素\n  uuid: aKI0hRvFJqqxjonJ\n  url: wfdzgn\n  prev_uuid: vip2qlmBz5ieS09L\n  sibling_uuid: mTH7crgTT4xe8CWt\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 76189714\n  level: 1\n  id: 76189714\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: CSS3的新特性\n  uuid: mTH7crgTT4xe8CWt\n  url: ag74vy\n  prev_uuid: aKI0hRvFJqqxjonJ\n  sibling_uuid: ZnPd4wAZb2_hK2P9\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 76189695\n  level: 1\n  id: 76189695\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 重排(回流) reflow 和重绘 repaint\n  uuid: ZnPd4wAZb2_hK2P9\n  url: vm3nkg\n  prev_uuid: mTH7crgTT4xe8CWt\n  sibling_uuid: rWlv7dJ62sVgcOEs\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212190\n  level: 1\n  id: 72212190\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: bfc 块级格式化上下文\n  uuid: rWlv7dJ62sVgcOEs\n  url: px9dg8\n  prev_uuid: ZnPd4wAZb2_hK2P9\n  sibling_uuid: tuDf776mK4wcCPyG\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212187\n  level: 1\n  id: 72212187\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: flex 相关内容\n  uuid: tuDf776mK4wcCPyG\n  url: kwodx6\n  prev_uuid: rWlv7dJ62sVgcOEs\n  sibling_uuid: yUgkQgmvFErkPa3s\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212060\n  level: 1\n  id: 72212060\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 常见的 css 布局单位\n  uuid: yUgkQgmvFErkPa3s\n  url: hxcsv4\n  prev_uuid: tuDf776mK4wcCPyG\n  sibling_uuid: aVEVYdIPl8W6T6Xi\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 76176536\n  level: 1\n  id: 76176536\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 隐藏元素的方法有哪些\n  uuid: aVEVYdIPl8W6T6Xi\n  url: zgnzmd\n  prev_uuid: yUgkQgmvFErkPa3s\n  sibling_uuid: YtmH8avhvYJB9UyF\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 76166645\n  level: 1\n  id: 76166645\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 布局相关\n  uuid: YtmH8avhvYJB9UyF\n  url: krwdmg\n  prev_uuid: aVEVYdIPl8W6T6Xi\n  sibling_uuid: CrSjsBkXMs-MCWSW\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212185\n  level: 1\n  id: 72212185\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: position\n  uuid: CrSjsBkXMs-MCWSW\n  url: cy8e47\n  prev_uuid: YtmH8avhvYJB9UyF\n  sibling_uuid: GDsMyqZGAxiud0tu\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 76179418\n  level: 1\n  id: 76179418\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: line-height 继承\n  uuid: GDsMyqZGAxiud0tu\n  url: ov3l3t\n  prev_uuid: CrSjsBkXMs-MCWSW\n  sibling_uuid: 8IbRucskyeohIYm9\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212191\n  level: 1\n  id: 72212191\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: transition 和 animation 的区别\n  uuid: 8IbRucskyeohIYm9\n  url: dxfgvc\n  prev_uuid: GDsMyqZGAxiud0tu\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212248\n  level: 1\n  id: 72212248\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: JavaScript\n  uuid: qhr80Kgya8JXe694\n  url: ''\n  prev_uuid: zGMd5d7cJrlxTWC4\n  sibling_uuid: OvNosf5MpHIChAgK\n  child_uuid: 90tldmEuBBJgWC3T\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 事件相关\n  uuid: 90tldmEuBBJgWC3T\n  url: nt0p86\n  prev_uuid: qhr80Kgya8JXe694\n  sibling_uuid: xIU5xQr1JMCVH5cA\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 74888813\n  level: 1\n  id: 74888813\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: this 指向\n  uuid: xIU5xQr1JMCVH5cA\n  url: gg150b\n  prev_uuid: 90tldmEuBBJgWC3T\n  sibling_uuid: 6Ar0J-_X29oI3wTB\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 75890758\n  level: 1\n  id: 75890758\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 什么是 JavaScript 中的包装类型？\n  uuid: 6Ar0J-_X29oI3wTB\n  url: wzg6fe\n  prev_uuid: xIU5xQr1JMCVH5cA\n  sibling_uuid: Qa3xCtxz7N6SItvm\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212229\n  level: 1\n  id: 72212229\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 判断数据类型的方式\n  uuid: Qa3xCtxz7N6SItvm\n  url: sbc1s5\n  prev_uuid: 6Ar0J-_X29oI3wTB\n  sibling_uuid: YAfKsOzxyHtggeH_\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212065\n  level: 1\n  id: 72212065\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简述 0.1 + 0.2 !== 0.3 的原因\n  uuid: YAfKsOzxyHtggeH_\n  url: tbg0o2\n  prev_uuid: Qa3xCtxz7N6SItvm\n  sibling_uuid: auBZlGsXZ8oosiPU\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212193\n  level: 1\n  id: 72212193\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 内存和垃圾回收\n  uuid: auBZlGsXZ8oosiPU\n  url: ppt4fu\n  prev_uuid: YAfKsOzxyHtggeH_\n  sibling_uuid: 8PafJn7x0wmhigct\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212089\n  level: 1\n  id: 72212089\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: weakMap 和 weakSet\n  uuid: 8PafJn7x0wmhigct\n  url: gc9gp1\n  prev_uuid: auBZlGsXZ8oosiPU\n  sibling_uuid: WIf4vWi3HiZT-jbp\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212075\n  level: 1\n  id: 72212075\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 原型和原型链\n  uuid: WIf4vWi3HiZT-jbp\n  url: bwqx2g\n  prev_uuid: 8PafJn7x0wmhigct\n  sibling_uuid: VGXlQVKMm6owjMaV\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212063\n  level: 1\n  id: 72212063\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现继承的几种方式\n  uuid: VGXlQVKMm6owjMaV\n  url: ka9kuf\n  prev_uuid: WIf4vWi3HiZT-jbp\n  sibling_uuid: qDFgKZBKSFUKwgRw\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212064\n  level: 1\n  id: 72212064\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 跨域相关问题\n  uuid: qDFgKZBKSFUKwgRw\n  url: iqsxnp\n  prev_uuid: VGXlQVKMm6owjMaV\n  sibling_uuid: L68hwb7H_RxeZdQZ\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212080\n  level: 1\n  id: 72212080\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: AMD、CMD、UMD、CJS、ESM\n  uuid: L68hwb7H_RxeZdQZ\n  url: qthk0m\n  prev_uuid: qDFgKZBKSFUKwgRw\n  sibling_uuid: t54jiUmDgvh-8Dna\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212318\n  level: 1\n  id: 72212318\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: symbol\n  uuid: t54jiUmDgvh-8Dna\n  url: qi5rpw\n  prev_uuid: L68hwb7H_RxeZdQZ\n  sibling_uuid: FATize3JPlnxF85T\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212253\n  level: 1\n  id: 72212253\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: var、let 和 const\n  uuid: FATize3JPlnxF85T\n  url: licxpw\n  prev_uuid: t54jiUmDgvh-8Dna\n  sibling_uuid: 4ca5vn6xM_z6AK2O\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212068\n  level: 1\n  id: 72212068\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: for...in 和 for...of 的区别\n  uuid: 4ca5vn6xM_z6AK2O\n  url: bqhdyg\n  prev_uuid: FATize3JPlnxF85T\n  sibling_uuid: xsV0pLh6zFA5xtb5\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212231\n  level: 1\n  id: 72212231\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: for await ... of\n  uuid: xsV0pLh6zFA5xtb5\n  url: hcf3l8\n  prev_uuid: 4ca5vn6xM_z6AK2O\n  sibling_uuid: _BNsSFR706yxUItc\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 81931436\n  level: 1\n  id: 81931436\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 异步编程的实现方式\n  uuid: _BNsSFR706yxUItc\n  url: np50n2\n  prev_uuid: xsV0pLh6zFA5xtb5\n  sibling_uuid: la7KQjlbl3MUU77q\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212144\n  level: 1\n  id: 72212144\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: promise\n  uuid: la7KQjlbl3MUU77q\n  url: vc6k8l\n  prev_uuid: _BNsSFR706yxUItc\n  sibling_uuid: VuY72bKRcz1OB186\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212247\n  level: 1\n  id: 72212247\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: generator 和 async\n  uuid: VuY72bKRcz1OB186\n  url: ga86yq\n  prev_uuid: la7KQjlbl3MUU77q\n  sibling_uuid: 8vUmcmux3iz5MIpD\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212086\n  level: 1\n  id: 72212086\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: proxy 和 reflect\n  uuid: 8vUmcmux3iz5MIpD\n  url: in6cx4\n  prev_uuid: VuY72bKRcz1OB186\n  sibling_uuid: c47dSKFFfqVoM6Py\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212102\n  level: 1\n  id: 72212102\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: JavaScript 模块化\n  uuid: c47dSKFFfqVoM6Py\n  url: cakiwz\n  prev_uuid: 8vUmcmux3iz5MIpD\n  sibling_uuid: MAfl3GuGUP59jy4n\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212084\n  level: 1\n  id: 72212084\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: new 和 Object.create\n  uuid: MAfl3GuGUP59jy4n\n  url: gyo93k\n  prev_uuid: c47dSKFFfqVoM6Py\n  sibling_uuid: Je23tJi-nQnJPq9r\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212066\n  level: 1\n  id: 72212066\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 闭包\n  uuid: Je23tJi-nQnJPq9r\n  url: lfs5gz\n  prev_uuid: MAfl3GuGUP59jy4n\n  sibling_uuid: _fhtToBbga9ohrYS\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212077\n  level: 1\n  id: 72212077\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 事件源\n  uuid: _fhtToBbga9ohrYS\n  url: gt06mk\n  prev_uuid: Je23tJi-nQnJPq9r\n  sibling_uuid: U5MgBMWzTsB1RYDu\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212088\n  level: 1\n  id: 72212088\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ajax、jsonp、fetch\n  uuid: U5MgBMWzTsB1RYDu\n  url: irz8zx\n  prev_uuid: _fhtToBbga9ohrYS\n  sibling_uuid: bZdDm2XJBJD0pj9w\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212076\n  level: 1\n  id: 72212076\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: preload、prefetch、preconnect 以及 dns-prefetch\n  uuid: bZdDm2XJBJD0pj9w\n  url: fvfmxc\n  prev_uuid: U5MgBMWzTsB1RYDu\n  sibling_uuid: MW2JSrYEi0wxSNq3\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212183\n  level: 1\n  id: 72212183\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 正则表达式\n  uuid: MW2JSrYEi0wxSNq3\n  url: cw2t02\n  prev_uuid: bZdDm2XJBJD0pj9w\n  sibling_uuid: S00dNihJnQ2cS5Vm\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212027\n  level: 1\n  id: 72212027\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 常见的位运算符有哪些, 其计算规则是什么\n  uuid: S00dNihJnQ2cS5Vm\n  url: iz1yst\n  prev_uuid: MW2JSrYEi0wxSNq3\n  sibling_uuid: 2wcsFBtYfQic5eiX\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212227\n  level: 1\n  id: 72212227\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Unicode、UTF-8、UTF-16、UTF-32有什么区别\n  uuid: 2wcsFBtYfQic5eiX\n  url: es6bst\n  prev_uuid: S00dNihJnQ2cS5Vm\n  sibling_uuid: gbTtC2RHHJkC7-3a\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212226\n  level: 1\n  id: 72212226\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: escape、encodeURI、encodeURIComponent 的区别\n  uuid: gbTtC2RHHJkC7-3a\n  url: kbmg21\n  prev_uuid: 2wcsFBtYfQic5eiX\n  sibling_uuid: MObHc4irNOQbHvIR\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212232\n  level: 1\n  id: 72212232\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 为什么 proxy 不能被 polyfill\n  uuid: MObHc4irNOQbHvIR\n  url: hduwrh\n  prev_uuid: gbTtC2RHHJkC7-3a\n  sibling_uuid: jkZPHqL1CpgItML8\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212145\n  level: 1\n  id: 72212145\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 观察者模式和发布订阅模式的对比\n  uuid: jkZPHqL1CpgItML8\n  url: aywgrn\n  prev_uuid: MObHc4irNOQbHvIR\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212180\n  level: 1\n  id: 72212180\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 计算机网络\n  uuid: OvNosf5MpHIChAgK\n  url: ''\n  prev_uuid: qhr80Kgya8JXe694\n  sibling_uuid: yZ8pnWcSAgj7NDG4\n  child_uuid: qubg071rD6LP4TBM\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: tcp 三次握手四次挥手\n  uuid: qubg071rD6LP4TBM\n  url: yuqbh0\n  prev_uuid: OvNosf5MpHIChAgK\n  sibling_uuid: pA-xEh0trbi9z6_g\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212095\n  level: 1\n  id: 72212095\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: http 协议和 https 协议\n  uuid: pA-xEh0trbi9z6_g\n  url: zm62x4\n  prev_uuid: qubg071rD6LP4TBM\n  sibling_uuid: y_o_p-E2Tzle62mJ\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212085\n  level: 1\n  id: 72212085\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 浏览器缓存\n  uuid: y_o_p-E2Tzle62mJ\n  url: boce40\n  prev_uuid: pA-xEh0trbi9z6_g\n  sibling_uuid: ZQYAdT9uiq69c3iA\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212079\n  level: 1\n  id: 72212079\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: http 请求的 method\n  uuid: ZQYAdT9uiq69c3iA\n  url: fpmvpg\n  prev_uuid: y_o_p-E2Tzle62mJ\n  sibling_uuid: HgR76Gj7y9kNTaYe\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 88490090\n  level: 1\n  id: 88490090\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: get 和 post 的区别\n  uuid: HgR76Gj7y9kNTaYe\n  url: nk4fw8\n  prev_uuid: ZQYAdT9uiq69c3iA\n  sibling_uuid: PoOSFrO1TLcXG4PY\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212130\n  level: 1\n  id: 72212130\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: cookie、session、localStorage和sessionStorage\n  uuid: PoOSFrO1TLcXG4PY\n  url: bk9qnc\n  prev_uuid: HgR76Gj7y9kNTaYe\n  sibling_uuid: hhsYEiBi4CZOy9Ch\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 81366952\n  level: 1\n  id: 81366952\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: jwt\n  uuid: hhsYEiBi4CZOy9Ch\n  url: bl6emu\n  prev_uuid: PoOSFrO1TLcXG4PY\n  sibling_uuid: fJfHmbBBr_GxAcan\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 81941261\n  level: 1\n  id: 81941261\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 常见的 http 状态码\n  uuid: fJfHmbBBr_GxAcan\n  url: imp49b\n  prev_uuid: hhsYEiBi4CZOy9Ch\n  sibling_uuid: zgVX7fTpDl2L9-6c\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212093\n  level: 1\n  id: 72212093\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: lru 缓存机制\n  uuid: zgVX7fTpDl2L9-6c\n  url: gn5mcc\n  prev_uuid: fJfHmbBBr_GxAcan\n  sibling_uuid: JD3qXMjL2VUr4-BG\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 81944011\n  level: 1\n  id: 81944011\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: dns 协议\n  uuid: JD3qXMjL2VUr4-BG\n  url: dg4tg1\n  prev_uuid: zgVX7fTpDl2L9-6c\n  sibling_uuid: qhoie0g9LgYGDoNx\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212129\n  level: 1\n  id: 72212129\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: webSocket 协议\n  uuid: qhoie0g9LgYGDoNx\n  url: fzwma6\n  prev_uuid: JD3qXMjL2VUr4-BG\n  sibling_uuid: Z74gvBr6M7cblG3L\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212082\n  level: 1\n  id: 72212082\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: udp 协议\n  uuid: Z74gvBr6M7cblG3L\n  url: bcw1ix\n  prev_uuid: qhoie0g9LgYGDoNx\n  sibling_uuid: ZBAYX-mmHJMSbNVE\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212245\n  level: 1\n  id: 72212245\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 前端安全\n  uuid: ZBAYX-mmHJMSbNVE\n  url: ae6e6m\n  prev_uuid: Z74gvBr6M7cblG3L\n  sibling_uuid: 46cFvee2l7mbrO25\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212081\n  level: 1\n  id: 72212081\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 从 url 输入到页面渲染整个过程\n  uuid: 46cFvee2l7mbrO25\n  url: xq8v88\n  prev_uuid: ZBAYX-mmHJMSbNVE\n  sibling_uuid: 0kA-zwowKG0pX0PW\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212083\n  level: 1\n  id: 72212083\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: http 请求方法的 options 方法的作用\n  uuid: 0kA-zwowKG0pX0PW\n  url: sg1n3n\n  prev_uuid: 46cFvee2l7mbrO25\n  sibling_uuid: Jw389HdGLryB0kOx\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212141\n  level: 1\n  id: 72212141\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: tls/ssl 中为什么一定要用三个随机数，来生成会话密钥？\n  uuid: Jw389HdGLryB0kOx\n  url: gcggsc\n  prev_uuid: 0kA-zwowKG0pX0PW\n  sibling_uuid: pakLg61uoUeNvIdr\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212132\n  level: 1\n  id: 72212132\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ssl 连接断开后如何恢复\n  uuid: pakLg61uoUeNvIdr\n  url: nzhppv\n  prev_uuid: Jw389HdGLryB0kOx\n  sibling_uuid: JpyBYsq-UVyD8CUJ\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212133\n  level: 1\n  id: 72212133\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: rsa 算法的安全性保障\n  uuid: JpyBYsq-UVyD8CUJ\n  url: am614q\n  prev_uuid: pakLg61uoUeNvIdr\n  sibling_uuid: tOZ4EaNrn_pQcc61\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212131\n  level: 1\n  id: 72212131\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: dns 为什么使用 udp 协议作为传输层协议\n  uuid: tOZ4EaNrn_pQcc61\n  url: vxqwd7\n  prev_uuid: JpyBYsq-UVyD8CUJ\n  sibling_uuid: TxInBprdnCiNVH3Q\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212135\n  level: 1\n  id: 72212135\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: cdn 服务\n  uuid: TxInBprdnCiNVH3Q\n  url: yo63o7\n  prev_uuid: tOZ4EaNrn_pQcc61\n  sibling_uuid: Nib9sks0CPJxeqmk\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212136\n  level: 1\n  id: 72212136\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 正向代理和反向代理\n  uuid: Nib9sks0CPJxeqmk\n  url: ikn00f\n  prev_uuid: TxInBprdnCiNVH3Q\n  sibling_uuid: AfxQwTWEwbMgjd4o\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212134\n  level: 1\n  id: 72212134\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 负载平衡的两种实现方式\n  uuid: AfxQwTWEwbMgjd4o\n  url: kh4w6x\n  prev_uuid: Nib9sks0CPJxeqmk\n  sibling_uuid: TnQes05_sAmm18E2\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212138\n  level: 1\n  id: 72212138\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 即时通讯的实现，短轮询、长轮询、SSE 和 WebSocket 间的区别\n  uuid: TnQes05_sAmm18E2\n  url: rsxa0f\n  prev_uuid: AfxQwTWEwbMgjd4o\n  sibling_uuid: Qi2IZ6HU4mYUaoGj\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212139\n  level: 1\n  id: 72212139\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 如何实现多个网站之间共享登陆状态\n  uuid: Qi2IZ6HU4mYUaoGj\n  url: kc3lut\n  prev_uuid: TnQes05_sAmm18E2\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212142\n  level: 1\n  id: 72212142\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 框架\n  uuid: yZ8pnWcSAgj7NDG4\n  url: ''\n  prev_uuid: OvNosf5MpHIChAgK\n  sibling_uuid: 9P2eq3K9ULR0af5X\n  child_uuid: 8RK2le4DpAEY0Xhs\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: MVVM、MVC、MVP 的区别\n  uuid: 8RK2le4DpAEY0Xhs\n  url: nnwww9\n  prev_uuid: yZ8pnWcSAgj7NDG4\n  sibling_uuid: 3B-5QM6whAr8xbJa\n  child_uuid: ''\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: 72212201\n  level: 1\n  id: 72212201\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: template 和 jsx 的区别\n  uuid: 3B-5QM6whAr8xbJa\n  url: ki7zks\n  prev_uuid: 8RK2le4DpAEY0Xhs\n  sibling_uuid: DkeXEgTb0ATztbj5\n  child_uuid: ''\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: 72212199\n  level: 1\n  id: 72212199\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue 和 react 的对比\n  uuid: DkeXEgTb0ATztbj5\n  url: nm61qs\n  prev_uuid: 3B-5QM6whAr8xbJa\n  sibling_uuid: myf4AFewp6Q9j0jB\n  child_uuid: ''\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: 72212222\n  level: 1\n  id: 72212222\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 虚拟 dom\n  uuid: myf4AFewp6Q9j0jB\n  url: hmvf8u\n  prev_uuid: DkeXEgTb0ATztbj5\n  sibling_uuid: 6fj1Su82FQx4B9RA\n  child_uuid: ''\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: 72212052\n  level: 1\n  id: 72212052\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: diff 算法\n  uuid: 6fj1Su82FQx4B9RA\n  url: op7dg1\n  prev_uuid: myf4AFewp6Q9j0jB\n  sibling_uuid: KZOzseU257YUuz3Z\n  child_uuid: nsUtw5_Fy4zD43hj\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: 72212178\n  level: 1\n  id: 72212178\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue diff 算法\n  uuid: nsUtw5_Fy4zD43hj\n  url: diavmt\n  prev_uuid: 6fj1Su82FQx4B9RA\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 6fj1Su82FQx4B9RA\n  doc_id: 81946293\n  level: 2\n  id: 81946293\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue 和 react 中的 key\n  uuid: KZOzseU257YUuz3Z\n  url: ycltzx\n  prev_uuid: 6fj1Su82FQx4B9RA\n  sibling_uuid: tWIf-VANuEIzO79L\n  child_uuid: ''\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: 72212037\n  level: 1\n  id: 72212037\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: Vue\n  uuid: tWIf-VANuEIzO79L\n  url: ''\n  prev_uuid: KZOzseU257YUuz3Z\n  sibling_uuid: TDqDjUraeNpGcmKR\n  child_uuid: Z40f-xGca713sBpr\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: TITLE\n  title: Vue v2\n  uuid: Z40f-xGca713sBpr\n  url: ''\n  prev_uuid: tWIf-VANuEIzO79L\n  sibling_uuid: Qq1JPp61C_co9sXM\n  child_uuid: 0b7XOg1-9GQSIskY\n  parent_uuid: tWIf-VANuEIzO79L\n  doc_id: ''\n  level: 2\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 模版编译原理\n  uuid: 0b7XOg1-9GQSIskY\n  url: fyz5q4\n  prev_uuid: Z40f-xGca713sBpr\n  sibling_uuid: hz8t5ak_IXT2gXfW\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212041\n  level: 3\n  id: 72212041\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue2 数据响应式原理\n  uuid: hz8t5ak_IXT2gXfW\n  url: uh28xg\n  prev_uuid: 0b7XOg1-9GQSIskY\n  sibling_uuid: _bf1hn5-uZNg51Ke\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212115\n  level: 3\n  id: 72212115\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 生命周期相关问题\n  uuid: _bf1hn5-uZNg51Ke\n  url: oagu14\n  prev_uuid: hz8t5ak_IXT2gXfW\n  sibling_uuid: ivG3tDP22jM4J7ts\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212110\n  level: 3\n  id: 72212110\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 渲染方式\n  uuid: ivG3tDP22jM4J7ts\n  url: woi8l3\n  prev_uuid: _bf1hn5-uZNg51Ke\n  sibling_uuid: LKipxSOtArQIraVN\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212032\n  level: 3\n  id: 72212032\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 事件绑定原理\n  uuid: LKipxSOtArQIraVN\n  url: yl9mmz\n  prev_uuid: ivG3tDP22jM4J7ts\n  sibling_uuid: 01R9Nnisca_sLRRp\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212039\n  level: 3\n  id: 72212039\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 组件缓存(keep-alive)\n  uuid: 01R9Nnisca_sLRRp\n  url: wqgptk\n  prev_uuid: LKipxSOtArQIraVN\n  sibling_uuid: 20DpKtgxdFH0O-ix\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212045\n  level: 3\n  id: 72212045\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue 组件通信方式\n  uuid: 20DpKtgxdFH0O-ix\n  url: xxds30\n  prev_uuid: 01R9Nnisca_sLRRp\n  sibling_uuid: 6wj8C6XOZFvKx1QA\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 77460672\n  level: 3\n  id: 77460672\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: nextTick 相关问题\n  uuid: 6wj8C6XOZFvKx1QA\n  url: ggyg1d\n  prev_uuid: 20DpKtgxdFH0O-ix\n  sibling_uuid: xORSK62Sn5964_kc\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212042\n  level: 3\n  id: 72212042\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 组件中 data 为什么是一个函数\n  uuid: xORSK62Sn5964_kc\n  url: kwsg4m\n  prev_uuid: 6wj8C6XOZFvKx1QA\n  sibling_uuid: CWb6bsasGDnvMM-U\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212109\n  level: 3\n  id: 72212109\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: computed 相关问题\n  uuid: CWb6bsasGDnvMM-U\n  url: zq4s02\n  prev_uuid: xORSK62Sn5964_kc\n  sibling_uuid: K939tqfx_BW5lRDQ\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212116\n  level: 3\n  id: 72212116\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 服务端渲染 ssr\n  uuid: K939tqfx_BW5lRDQ\n  url: pw3v8v\n  prev_uuid: CWb6bsasGDnvMM-U\n  sibling_uuid: 6kQ_DqRf_zluG2z9\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212043\n  level: 3\n  id: 72212043\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue.use 具体的功能\n  uuid: 6kQ_DqRf_zluG2z9\n  url: bvokpn\n  prev_uuid: K939tqfx_BW5lRDQ\n  sibling_uuid: YzuZXyy9c_kaJu9c\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212046\n  level: 3\n  id: 72212046\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 单页应用与多页应用的区别\n  uuid: YzuZXyy9c_kaJu9c\n  url: pshmo2\n  prev_uuid: 6kQ_DqRf_zluG2z9\n  sibling_uuid: jso948tO58555KH-\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212224\n  level: 3\n  id: 72212224\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: assets 和 static 的区别\n  uuid: jso948tO58555KH-\n  url: yyhf0u\n  prev_uuid: YzuZXyy9c_kaJu9c\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212225\n  level: 3\n  id: 72212225\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: Vue v3\n  uuid: Qq1JPp61C_co9sXM\n  url: ''\n  prev_uuid: Z40f-xGca713sBpr\n  sibling_uuid: NDstnhh3QXikKrZa\n  child_uuid: s2KSqDo2LUDykK1r\n  parent_uuid: tWIf-VANuEIzO79L\n  doc_id: ''\n  level: 2\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: vue3 优化的关键点\n  uuid: s2KSqDo2LUDykK1r\n  url: vcur5h\n  prev_uuid: Qq1JPp61C_co9sXM\n  sibling_uuid: bK2zh7wDgnCOjGdb\n  child_uuid: ''\n  parent_uuid: Qq1JPp61C_co9sXM\n  doc_id: 72212029\n  level: 3\n  id: 72212029\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue3 数据响应式原理\n  uuid: bK2zh7wDgnCOjGdb\n  url: ghc5e2\n  prev_uuid: s2KSqDo2LUDykK1r\n  sibling_uuid: uCtRLhVps5ghz54g\n  child_uuid: ''\n  parent_uuid: Qq1JPp61C_co9sXM\n  doc_id: 72212036\n  level: 3\n  id: 72212036\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue3 新特性\n  uuid: uCtRLhVps5ghz54g\n  url: cmegik\n  prev_uuid: bK2zh7wDgnCOjGdb\n  sibling_uuid: TJgKi8_C6fiOd5dJ\n  child_uuid: ''\n  parent_uuid: Qq1JPp61C_co9sXM\n  doc_id: 81946525\n  level: 3\n  id: 81946525\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue3 生命周期\n  uuid: TJgKi8_C6fiOd5dJ\n  url: gwzgib\n  prev_uuid: uCtRLhVps5ghz54g\n  sibling_uuid: horvlR4VG0faCelq\n  child_uuid: ''\n  parent_uuid: Qq1JPp61C_co9sXM\n  doc_id: 72212114\n  level: 3\n  id: 72212114\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue3 api 的变化\n  uuid: horvlR4VG0faCelq\n  url: cgy1qw\n  prev_uuid: TJgKi8_C6fiOd5dJ\n  sibling_uuid: T4jbFsZR0B-ev_pi\n  child_uuid: ''\n  parent_uuid: Qq1JPp61C_co9sXM\n  doc_id: 72212096\n  level: 3\n  id: 72212096\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: composition API 与 react hook 区别\n  uuid: T4jbFsZR0B-ev_pi\n  url: kdnt9x\n  prev_uuid: horvlR4VG0faCelq\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: Qq1JPp61C_co9sXM\n  doc_id: 72212223\n  level: 3\n  id: 72212223\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: Vue Router\n  uuid: NDstnhh3QXikKrZa\n  url: ''\n  prev_uuid: Qq1JPp61C_co9sXM\n  sibling_uuid: OAPGa_yYZYTt0hO-\n  child_uuid: 4O6Acxrj4Z6ILMq7\n  parent_uuid: tWIf-VANuEIzO79L\n  doc_id: ''\n  level: 2\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现原理\n  uuid: 4O6Acxrj4Z6ILMq7\n  url: bgudpr\n  prev_uuid: NDstnhh3QXikKrZa\n  sibling_uuid: 3NsmXDCnBZguoYRa\n  child_uuid: ''\n  parent_uuid: NDstnhh3QXikKrZa\n  doc_id: 72212195\n  level: 3\n  id: 72212195\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 钩子函数和执行顺序\n  uuid: 3NsmXDCnBZguoYRa\n  url: ugd6ob\n  prev_uuid: 4O6Acxrj4Z6ILMq7\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: NDstnhh3QXikKrZa\n  doc_id: 72212111\n  level: 3\n  id: 72212111\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Vuex\n  uuid: OAPGa_yYZYTt0hO-\n  url: co230y\n  prev_uuid: NDstnhh3QXikKrZa\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: tWIf-VANuEIzO79L\n  doc_id: 72212048\n  level: 2\n  id: 72212048\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: React\n  uuid: TDqDjUraeNpGcmKR\n  url: ''\n  prev_uuid: tWIf-VANuEIzO79L\n  sibling_uuid: ''\n  child_uuid: TzgntU7-pdLEQIEy\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: props.children 和 React.Children 的区别\n  uuid: TzgntU7-pdLEQIEy\n  url: glhczw\n  prev_uuid: TDqDjUraeNpGcmKR\n  sibling_uuid: a5LfIfk4TICUM-se\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212221\n  level: 2\n  id: 72212221\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 生命周期\n  uuid: a5LfIfk4TICUM-se\n  url: ttmkd1\n  prev_uuid: TzgntU7-pdLEQIEy\n  sibling_uuid: Xl4JcMfM03VwU1Hb\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212054\n  level: 2\n  id: 72212054\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 事件相关问题\n  uuid: Xl4JcMfM03VwU1Hb\n  url: ed4qqb\n  prev_uuid: a5LfIfk4TICUM-se\n  sibling_uuid: CepfhgK9OC8dVV7r\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212050\n  level: 2\n  id: 72212050\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: react hooks 相关问题\n  uuid: CepfhgK9OC8dVV7r\n  url: gq900o\n  prev_uuid: Xl4JcMfM03VwU1Hb\n  sibling_uuid: ubGrfyb3NqJ_Lkqn\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212057\n  level: 2\n  id: 72212057\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: setState 相关问题\n  uuid: ubGrfyb3NqJ_Lkqn\n  url: pwqm3y\n  prev_uuid: CepfhgK9OC8dVV7r\n  sibling_uuid: 4pm440hNri1XmMGQ\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212205\n  level: 2\n  id: 72212205\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: props 相关问题\n  uuid: 4pm440hNri1XmMGQ\n  url: aopf74\n  prev_uuid: ubGrfyb3NqJ_Lkqn\n  sibling_uuid: FKTcfv0hyyXraJmD\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212215\n  level: 2\n  id: 72212215\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: context 相关问题\n  uuid: FKTcfv0hyyXraJmD\n  url: biktsf\n  prev_uuid: 4pm440hNri1XmMGQ\n  sibling_uuid: Y0S-6wqJKj2EF9W2\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212210\n  level: 2\n  id: 72212210\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 高阶组件\n  uuid: Y0S-6wqJKj2EF9W2\n  url: si40mg\n  prev_uuid: FKTcfv0hyyXraJmD\n  sibling_uuid: 7NqebQUMdfbQX_co\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212094\n  level: 2\n  id: 72212094\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: react fiber\n  uuid: 7NqebQUMdfbQX_co\n  url: fheyn3\n  prev_uuid: Y0S-6wqJKj2EF9W2\n  sibling_uuid: Z3dClfuPaIaWVJrc\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212055\n  level: 2\n  id: 72212055\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: react 新版本特性\n  uuid: Z3dClfuPaIaWVJrc\n  url: yr6q8p\n  prev_uuid: 7NqebQUMdfbQX_co\n  sibling_uuid: '-FVw4r0aOtQdA3mR'\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212125\n  level: 2\n  id: 72212125\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: React Router\n  uuid: '-FVw4r0aOtQdA3mR'\n  url: ''\n  prev_uuid: Z3dClfuPaIaWVJrc\n  sibling_uuid: fMyaiZHW0XSEI8sS\n  child_uuid: mVIvxzgV48RK5_Q4\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: ''\n  level: 2\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现原理\n  uuid: mVIvxzgV48RK5_Q4\n  url: wethcy\n  prev_uuid: '-FVw4r0aOtQdA3mR'\n  sibling_uuid: Bl1_fHvLILZsHBbF\n  child_uuid: ''\n  parent_uuid: '-FVw4r0aOtQdA3mR'\n  doc_id: 72212218\n  level: 3\n  id: 72212218\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Link 和 a 标签的区别\n  uuid: Bl1_fHvLILZsHBbF\n  url: wm4ok4\n  prev_uuid: mVIvxzgV48RK5_Q4\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: '-FVw4r0aOtQdA3mR'\n  doc_id: 72212179\n  level: 3\n  id: 72212179\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: React 数据管理\n  uuid: fMyaiZHW0XSEI8sS\n  url: ''\n  prev_uuid: '-FVw4r0aOtQdA3mR'\n  sibling_uuid: OeMWtixpAD2-KWzt\n  child_uuid: 59KZOAY7cpzzjK2t\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: ''\n  level: 2\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: redux\n  uuid: 59KZOAY7cpzzjK2t\n  url: lv63wa\n  prev_uuid: fMyaiZHW0XSEI8sS\n  sibling_uuid: 04W_NxYoVNi2nw_9\n  child_uuid: ''\n  parent_uuid: fMyaiZHW0XSEI8sS\n  doc_id: 72212124\n  level: 3\n  id: 72212124\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: mobx\n  uuid: 04W_NxYoVNi2nw_9\n  url: dyi5bf\n  prev_uuid: 59KZOAY7cpzzjK2t\n  sibling_uuid: _vbvvkBStDB0r4jY\n  child_uuid: ''\n  parent_uuid: fMyaiZHW0XSEI8sS\n  doc_id: 72212126\n  level: 3\n  id: 72212126\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: redux 和 mobx 对比\n  uuid: _vbvvkBStDB0r4jY\n  url: elg7s5\n  prev_uuid: 04W_NxYoVNi2nw_9\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: fMyaiZHW0XSEI8sS\n  doc_id: 72212127\n  level: 3\n  id: 72212127\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 服务端渲染 ssr\n  uuid: OeMWtixpAD2-KWzt\n  url: egaslg\n  prev_uuid: fMyaiZHW0XSEI8sS\n  sibling_uuid: MTc53b0X3W8cyi_3\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212219\n  level: 2\n  id: 72212219\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 哪些方法会触发 react 重渲染\n  uuid: MTc53b0X3W8cyi_3\n  url: qy4smk\n  prev_uuid: OeMWtixpAD2-KWzt\n  sibling_uuid: b7IhhfJU6La1DgRE\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212216\n  level: 2\n  id: 72212216\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 创建组件的几种方式\n  uuid: b7IhhfJU6La1DgRE\n  url: vg2cmd\n  prev_uuid: MTc53b0X3W8cyi_3\n  sibling_uuid: lhmlu-BvI_ms0sSC\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212175\n  level: 2\n  id: 72212175\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 组件通信的方式\n  uuid: lhmlu-BvI_ms0sSC\n  url: moqmzb\n  prev_uuid: b7IhhfJU6La1DgRE\n  sibling_uuid: amb-PuSjhZwSxODn\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212118\n  level: 2\n  id: 72212118\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Component 和 PureComponent 的区别\n  uuid: amb-PuSjhZwSxODn\n  url: ypfivt\n  prev_uuid: lhmlu-BvI_ms0sSC\n  sibling_uuid: BNAX1KhSgOp0v6r4\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212207\n  level: 2\n  id: 72212207\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 函数式编程的理解\n  uuid: BNAX1KhSgOp0v6r4\n  url: tqdy3a\n  prev_uuid: amb-PuSjhZwSxODn\n  sibling_uuid: 5pVccocS1pnwxzh2\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212194\n  level: 2\n  id: 72212194\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 有状态组件和无状态组件的理解及使用场景\n  uuid: 5pVccocS1pnwxzh2\n  url: gbrvz9\n  prev_uuid: BNAX1KhSgOp0v6r4\n  sibling_uuid: wtp8Bo-2_zSNLXbR\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212203\n  level: 2\n  id: 72212203\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Fragment 的理解和使用场景\n  uuid: wtp8Bo-2_zSNLXbR\n  url: dasmdx\n  prev_uuid: 5pVccocS1pnwxzh2\n  sibling_uuid: hYTp24IWi4pAhbqG\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212214\n  level: 2\n  id: 72212214\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 受控组件和非受控组件\n  uuid: hYTp24IWi4pAhbqG\n  url: bgt6ta\n  prev_uuid: wtp8Bo-2_zSNLXbR\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212208\n  level: 2\n  id: 72212208\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 构建工具\n  uuid: 9P2eq3K9ULR0af5X\n  url: ''\n  prev_uuid: yZ8pnWcSAgj7NDG4\n  sibling_uuid: _ib2ffJOMJ90FuD0\n  child_uuid: KkWBlMnn8vKsvI2E\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: TITLE\n  title: Webpack\n  uuid: KkWBlMnn8vKsvI2E\n  url: ''\n  prev_uuid: 9P2eq3K9ULR0af5X\n  sibling_uuid: PA5M4tEq9BGEMtO9\n  child_uuid: 3HGKlhysP-vEQXiM\n  parent_uuid: 9P2eq3K9ULR0af5X\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: webpack 概念\n  uuid: 3HGKlhysP-vEQXiM\n  url: gkdarc\n  prev_uuid: KkWBlMnn8vKsvI2E\n  sibling_uuid: Ci_c8WtimOb3m1kJ\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212169\n  level: 2\n  id: 72212169\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: webpack 中的 module 是什么\n  uuid: Ci_c8WtimOb3m1kJ\n  url: qyb5qk\n  prev_uuid: 3HGKlhysP-vEQXiM\n  sibling_uuid: gLWNNobChGyBvcJT\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212266\n  level: 2\n  id: 72212266\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 模块打包原理\n  uuid: gLWNNobChGyBvcJT\n  url: iohxdb\n  prev_uuid: Ci_c8WtimOb3m1kJ\n  sibling_uuid: YwCVADfU_XBsG0WO\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212160\n  level: 2\n  id: 72212160\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 打包构建流程\n  uuid: YwCVADfU_XBsG0WO\n  url: eshey5\n  prev_uuid: gLWNNobChGyBvcJT\n  sibling_uuid: EBqwwnL3J1wUmOlh\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212151\n  level: 2\n  id: 72212151\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 热更新原理\n  uuid: EBqwwnL3J1wUmOlh\n  url: yse9bt\n  prev_uuid: YwCVADfU_XBsG0WO\n  sibling_uuid: lwF1dFLq1rG9MdQU\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212165\n  level: 2\n  id: 72212165\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: chunk 和 bundle 的区别\n  uuid: lwF1dFLq1rG9MdQU\n  url: hg8h4r\n  prev_uuid: EBqwwnL3J1wUmOlh\n  sibling_uuid: o9ye0yiAxvwwA4jE\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212153\n  level: 2\n  id: 72212153\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: fullhash、chunkhash 和 contenthash 的区别\n  uuid: o9ye0yiAxvwwA4jE\n  url: puabgz\n  prev_uuid: lwF1dFLq1rG9MdQU\n  sibling_uuid: OxdvFHcLzVG6YfBc\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212173\n  level: 2\n  id: 72212173\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: loader 和 plugin\n  uuid: OxdvFHcLzVG6YfBc\n  url: hl39v0\n  prev_uuid: o9ye0yiAxvwwA4jE\n  sibling_uuid: nER_RrE8K11hpa78\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212157\n  level: 2\n  id: 72212157\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: babel\n  uuid: nER_RrE8K11hpa78\n  url: nny1iy\n  prev_uuid: OxdvFHcLzVG6YfBc\n  sibling_uuid: 8mmMPlYkLyNfpEq9\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212170\n  level: 2\n  id: 72212170\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: sourceMap\n  uuid: 8mmMPlYkLyNfpEq9\n  url: dtf17x\n  prev_uuid: nER_RrE8K11hpa78\n  sibling_uuid: M7r8XoDGrg6cNKlE\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212156\n  level: 2\n  id: 72212156\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 代码分割的本质\n  uuid: M7r8XoDGrg6cNKlE\n  url: pdp2uz\n  prev_uuid: 8mmMPlYkLyNfpEq9\n  sibling_uuid: Qs47BJts9deBE55f\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212163\n  level: 2\n  id: 72212163\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: npm 打包注意点\n  uuid: Qs47BJts9deBE55f\n  url: uhgsm9\n  prev_uuid: M7r8XoDGrg6cNKlE\n  sibling_uuid: 02dCOY3aMQkTKtr5\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212150\n  level: 2\n  id: 72212150\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 构建工具和打包工具的区别\n  uuid: 02dCOY3aMQkTKtr5\n  url: goy7xw\n  prev_uuid: Qs47BJts9deBE55f\n  sibling_uuid: HWLaGOPI5cyGuMSs\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212255\n  level: 2\n  id: 72212255\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: webpack 与 其他构建工具的异同\n  uuid: HWLaGOPI5cyGuMSs\n  url: wh1m7t\n  prev_uuid: 02dCOY3aMQkTKtr5\n  sibling_uuid: gpqfvEQbvGr-oYDM\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212154\n  level: 2\n  id: 72212154\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: webpack 5 和 webpack 4 的区别\n  uuid: gpqfvEQbvGr-oYDM\n  url: gwyegl\n  prev_uuid: HWLaGOPI5cyGuMSs\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212197\n  level: 2\n  id: 72212197\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: rollup\n  uuid: PA5M4tEq9BGEMtO9\n  url: ''\n  prev_uuid: KkWBlMnn8vKsvI2E\n  sibling_uuid: cc50VGYB9StWj9iE\n  child_uuid: rfwXExGVTXBKDdM2\n  parent_uuid: 9P2eq3K9ULR0af5X\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: rollup 概念\n  uuid: rfwXExGVTXBKDdM2\n  url: xx4xp9\n  prev_uuid: PA5M4tEq9BGEMtO9\n  sibling_uuid: IApizKSiwn87t7KS\n  child_uuid: ''\n  parent_uuid: PA5M4tEq9BGEMtO9\n  doc_id: 76721509\n  level: 2\n  id: 76721509\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: rollup 常用插件\n  uuid: IApizKSiwn87t7KS\n  url: kggg6d\n  prev_uuid: rfwXExGVTXBKDdM2\n  sibling_uuid: 0ak8GBSDIkitvTUZ\n  child_uuid: ''\n  parent_uuid: PA5M4tEq9BGEMtO9\n  doc_id: 76721975\n  level: 2\n  id: 76721975\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: rollup 优缺点\n  uuid: 0ak8GBSDIkitvTUZ\n  url: gugo43\n  prev_uuid: IApizKSiwn87t7KS\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: PA5M4tEq9BGEMtO9\n  doc_id: 76722698\n  level: 2\n  id: 76722698\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: Vite\n  uuid: cc50VGYB9StWj9iE\n  url: ''\n  prev_uuid: PA5M4tEq9BGEMtO9\n  sibling_uuid: ''\n  child_uuid: QzOULjlE0M-dX3XY\n  parent_uuid: 9P2eq3K9ULR0af5X\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: ESM 、 esbuild、rollup\n  uuid: QzOULjlE0M-dX3XY\n  url: zbte28\n  prev_uuid: cc50VGYB9StWj9iE\n  sibling_uuid: 2b9lJDrKP6nHewez\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212267\n  level: 2\n  id: 72212267\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vite 的实现原理\n  uuid: 2b9lJDrKP6nHewez\n  url: qa0ptd\n  prev_uuid: QzOULjlE0M-dX3XY\n  sibling_uuid: j9nVKLx68XcKSS5v\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212250\n  level: 2\n  id: 72212250\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vite 的热更新原理\n  uuid: j9nVKLx68XcKSS5v\n  url: de75ab\n  prev_uuid: 2b9lJDrKP6nHewez\n  sibling_uuid: F_ygXseqm2S2JzwI\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212258\n  level: 2\n  id: 72212258\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vite 的构建速度快的原因\n  uuid: F_ygXseqm2S2JzwI\n  url: on0xtf\n  prev_uuid: j9nVKLx68XcKSS5v\n  sibling_uuid: T4SDnSe1k7y_7x3W\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212171\n  level: 2\n  id: 72212171\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vite 的优缺点\n  uuid: T4SDnSe1k7y_7x3W\n  url: xqi8st\n  prev_uuid: F_ygXseqm2S2JzwI\n  sibling_uuid: iKoQ0EmfPV_t8bnB\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212257\n  level: 2\n  id: 72212257\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vite 生产环境使用了 rollup，是否能在生产环境使用 esm\n  uuid: iKoQ0EmfPV_t8bnB\n  url: wfsv84\n  prev_uuid: T4SDnSe1k7y_7x3W\n  sibling_uuid: w6EvBA84BcVw35TD\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212256\n  level: 2\n  id: 72212256\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vite 如何兼容非 commonjs 模块\n  uuid: w6EvBA84BcVw35TD\n  url: hpfp18\n  prev_uuid: iKoQ0EmfPV_t8bnB\n  sibling_uuid: NuVIodhn60MXc8rH\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212261\n  level: 2\n  id: 72212261\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 组件嵌套层级过深，是否会影响 vite 速度\n  uuid: NuVIodhn60MXc8rH\n  url: gw29gz\n  prev_uuid: w6EvBA84BcVw35TD\n  sibling_uuid: uo8BVC-6HYu_8QcI\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212260\n  level: 2\n  id: 72212260\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易 vite 实现\n  uuid: uo8BVC-6HYu_8QcI\n  url: oop1cx\n  prev_uuid: NuVIodhn60MXc8rH\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212265\n  level: 2\n  id: 72212265\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 性能优化\n  uuid: _ib2ffJOMJ90FuD0\n  url: ''\n  prev_uuid: 9P2eq3K9ULR0af5X\n  sibling_uuid: 9BBksIvNcFzfWLRd\n  child_uuid: kZWKWb1BdUt9h_Ua\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 前端项目性能指标\n  uuid: kZWKWb1BdUt9h_Ua\n  url: fv22gd\n  prev_uuid: _ib2ffJOMJ90FuD0\n  sibling_uuid: WMCvfSADqHqcTJXw\n  child_uuid: ''\n  parent_uuid: _ib2ffJOMJ90FuD0\n  doc_id: 72212177\n  level: 1\n  id: 72212177\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 优化 webpack 的构建速度\n  uuid: WMCvfSADqHqcTJXw\n  url: aft935\n  prev_uuid: kZWKWb1BdUt9h_Ua\n  sibling_uuid: 1ctvLIEro_Mh0xK-\n  child_uuid: ''\n  parent_uuid: _ib2ffJOMJ90FuD0\n  doc_id: 72212166\n  level: 1\n  id: 72212166\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 前端性能优化\n  uuid: 1ctvLIEro_Mh0xK-\n  url: tcfotb\n  prev_uuid: WMCvfSADqHqcTJXw\n  sibling_uuid: _eck6_rsRKfOJVvr\n  child_uuid: ''\n  parent_uuid: _ib2ffJOMJ90FuD0\n  doc_id: 72212146\n  level: 1\n  id: 72212146\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue2 性能优化\n  uuid: _eck6_rsRKfOJVvr\n  url: rkov84\n  prev_uuid: 1ctvLIEro_Mh0xK-\n  sibling_uuid: YZvWK7y4PMXszEwE\n  child_uuid: ''\n  parent_uuid: _ib2ffJOMJ90FuD0\n  doc_id: 72212123\n  level: 1\n  id: 72212123\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: react 性能优化\n  uuid: YZvWK7y4PMXszEwE\n  url: qf0cik\n  prev_uuid: _eck6_rsRKfOJVvr\n  sibling_uuid: '-vVIPSz4Z6P_s7e9'\n  child_uuid: ''\n  parent_uuid: _ib2ffJOMJ90FuD0\n  doc_id: 72212121\n  level: 1\n  id: 72212121\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 服务端性能优化 cdn、ssr\n  uuid: '-vVIPSz4Z6P_s7e9'\n  url: sg5qwg\n  prev_uuid: YZvWK7y4PMXszEwE\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: _ib2ffJOMJ90FuD0\n  doc_id: 72212202\n  level: 1\n  id: 72212202\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 包管理\n  uuid: 9BBksIvNcFzfWLRd\n  url: ''\n  prev_uuid: _ib2ffJOMJ90FuD0\n  sibling_uuid: kkdXxj_7f1anXGc6\n  child_uuid: Hf2631LtoAoZ4z-W\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: Monorepo\n  uuid: Hf2631LtoAoZ4z-W\n  url: xgnw24\n  prev_uuid: 9BBksIvNcFzfWLRd\n  sibling_uuid: 41gDqpiyNdq269Lp\n  child_uuid: ''\n  parent_uuid: 9BBksIvNcFzfWLRd\n  doc_id: 72212268\n  level: 1\n  id: 72212268\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: npm、yarn、pnpm\n  uuid: 41gDqpiyNdq269Lp\n  url: nvbtiy\n  prev_uuid: Hf2631LtoAoZ4z-W\n  sibling_uuid: ZxzFHpuyOFknxwqY\n  child_uuid: ''\n  parent_uuid: 9BBksIvNcFzfWLRd\n  doc_id: 72212269\n  level: 1\n  id: 72212269\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: verdaccio\n  uuid: ZxzFHpuyOFknxwqY\n  url: yms8mi\n  prev_uuid: 41gDqpiyNdq269Lp\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 9BBksIvNcFzfWLRd\n  doc_id: 76725286\n  level: 1\n  id: 76725286\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: TypeScript\n  uuid: kkdXxj_7f1anXGc6\n  url: ''\n  prev_uuid: 9BBksIvNcFzfWLRd\n  sibling_uuid: wtEzbVO2d1PioEzt\n  child_uuid: oXvKPuEdNzldyAga\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 什么是 TypeScript\n  uuid: oXvKPuEdNzldyAga\n  url: ycg3n9\n  prev_uuid: kkdXxj_7f1anXGc6\n  sibling_uuid: nIgWerTolUPcvwbs\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212313\n  level: 1\n  id: 72212313\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中常用内置工具类型有哪些\n  uuid: nIgWerTolUPcvwbs\n  url: ba7and\n  prev_uuid: oXvKPuEdNzldyAga\n  sibling_uuid: cKo1ehuC2Ezv_LkG\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 75214600\n  level: 1\n  id: 75214600\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中类型保护\n  uuid: cKo1ehuC2Ezv_LkG\n  url: cqgawt\n  prev_uuid: nIgWerTolUPcvwbs\n  sibling_uuid: 9WWFtyTsyXQ8444b\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 75214621\n  level: 1\n  id: 75214621\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 的模块加载机制\n  uuid: 9WWFtyTsyXQ8444b\n  url: ug5vit\n  prev_uuid: cKo1ehuC2Ezv_LkG\n  sibling_uuid: uyRC7gMPBD6WflDI\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212315\n  level: 1\n  id: 72212315\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中的访问修饰符\n  uuid: uyRC7gMPBD6WflDI\n  url: ku85bk\n  prev_uuid: 9WWFtyTsyXQ8444b\n  sibling_uuid: GVJiiBTgyp1nxuIJ\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212284\n  level: 1\n  id: 72212284\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 关键字间的区别\n  uuid: GVJiiBTgyp1nxuIJ\n  url: sagma3\n  prev_uuid: uyRC7gMPBD6WflDI\n  sibling_uuid: a7efyzFrZWkkYm_s\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212308\n  level: 1\n  id: 72212308\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中 enum 类型转 type\n  uuid: a7efyzFrZWkkYm_s\n  url: gehkyv\n  prev_uuid: GVJiiBTgyp1nxuIJ\n  sibling_uuid: '-BM8soj2CmjTa135'\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 75323990\n  level: 1\n  id: 75323990\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中枚举和常量枚举(const枚举)的区别\n  uuid: '-BM8soj2CmjTa135'\n  url: oznghr\n  prev_uuid: a7efyzFrZWkkYm_s\n  sibling_uuid: YPyFfjPr_NzLvDP3\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212282\n  level: 1\n  id: 72212282\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中的 interface 可以给 Function/Array/Class 做声明么\n  uuid: YPyFfjPr_NzLvDP3\n  url: ona7hl\n  prev_uuid: '-BM8soj2CmjTa135'\n  sibling_uuid: 49oDbGS0njKPDYjI\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212286\n  level: 1\n  id: 72212286\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中的 this 和 js 中的 this 有什么差异\n  uuid: 49oDbGS0njKPDYjI\n  url: eb4bg0\n  prev_uuid: YPyFfjPr_NzLvDP3\n  sibling_uuid: GsAFhvyPAqtOwB6m\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212288\n  level: 1\n  id: 72212288\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: ts 中如何枚举联合类型的 key\n  uuid: GsAFhvyPAqtOwB6m\n  url: ly5v3x\n  prev_uuid: 49oDbGS0njKPDYjI\n  sibling_uuid: CNWh84n78nKW-JK8\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212289\n  level: 1\n  id: 72212289\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中 ?.、??、!.、_、** 等符号的含义\n  uuid: CNWh84n78nKW-JK8\n  url: lyezty\n  prev_uuid: GsAFhvyPAqtOwB6m\n  sibling_uuid: iqwPMQndJB_eNuct\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212291\n  level: 1\n  id: 72212291\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中的 this 和 js 中的 this 有什么差异\n  uuid: iqwPMQndJB_eNuct\n  url: ld83ko\n  prev_uuid: CNWh84n78nKW-JK8\n  sibling_uuid: oKAWJxKVLy8BxvQy\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212314\n  level: 1\n  id: 72212314\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 什么是抗变、双变、协变和逆变\n  uuid: oKAWJxKVLy8BxvQy\n  url: ttipbo\n  prev_uuid: iqwPMQndJB_eNuct\n  sibling_uuid: bqK3b3uPMHw4gfuI\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212293\n  level: 1\n  id: 72212293\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中同名的 interface 或者同名的 interface 和 class 可以合并么\n  uuid: bqK3b3uPMHw4gfuI\n  url: vwk8ta\n  prev_uuid: oKAWJxKVLy8BxvQy\n  sibling_uuid: KPQ1D_KkpP1Og_rA\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212294\n  level: 1\n  id: 72212294\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 如何使 ts 项目引入并识别编译为 js 的 npm 库包\n  uuid: KPQ1D_KkpP1Og_rA\n  url: wprnb4\n  prev_uuid: bqK3b3uPMHw4gfuI\n  sibling_uuid: QYmnWc4XN-1SsH6y\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212295\n  level: 1\n  id: 72212295\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 如何自动生成库包的声明文件\n  uuid: QYmnWc4XN-1SsH6y\n  url: qthgtd\n  prev_uuid: KPQ1D_KkpP1Og_rA\n  sibling_uuid: NF_E4aerReEqE3W0\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212297\n  level: 1\n  id: 72212297\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 什么是泛型\n  uuid: NF_E4aerReEqE3W0\n  url: uaxegb\n  prev_uuid: QYmnWc4XN-1SsH6y\n  sibling_uuid: RzXzd38jikHanZPF\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212298\n  level: 1\n  id: 72212298\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: '-?、-readonly 的含义是什么'\n  uuid: RzXzd38jikHanZPF\n  url: vwkgu7\n  prev_uuid: NF_E4aerReEqE3W0\n  sibling_uuid: Ew56s2fseHbfjMcO\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212301\n  level: 1\n  id: 72212301\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 是基于结构类型兼容的\n  uuid: Ew56s2fseHbfjMcO\n  url: hct7os\n  prev_uuid: RzXzd38jikHanZPF\n  sibling_uuid: 6WmcslXNXxUHs9J5\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212304\n  level: 1\n  id: 72212304\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: const 断言\n  uuid: 6WmcslXNXxUHs9J5\n  url: xgt0bn\n  prev_uuid: Ew56s2fseHbfjMcO\n  sibling_uuid: SmKRuWqpkdAgtE3g\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212305\n  level: 1\n  id: 72212305\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 如何在 window 扩展类型\n  uuid: SmKRuWqpkdAgtE3g\n  url: lnqu18\n  prev_uuid: 6WmcslXNXxUHs9J5\n  sibling_uuid: e-hbAenE5NXBqgWo\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212309\n  level: 1\n  id: 72212309\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 复杂类型推导内容\n  uuid: e-hbAenE5NXBqgWo\n  url: bvhrsb\n  prev_uuid: SmKRuWqpkdAgtE3g\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212310\n  level: 1\n  id: 72212310\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 小程序\n  uuid: wtEzbVO2d1PioEzt\n  url: ''\n  prev_uuid: kkdXxj_7f1anXGc6\n  sibling_uuid: NjvgaFbxjDjDquPs\n  child_uuid: FLsungh0dT3ok_0a\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 小程序相关文件类型\n  uuid: FLsungh0dT3ok_0a\n  url: rugmeb\n  prev_uuid: wtEzbVO2d1PioEzt\n  sibling_uuid: mg4IRxHSo-LSctGx\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77463281\n  level: 1\n  id: 77463281\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序的优缺点\n  uuid: mg4IRxHSo-LSctGx\n  url: itwfg1\n  prev_uuid: FLsungh0dT3ok_0a\n  sibling_uuid: VLFzOMdd3wS3G3n8\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77456810\n  level: 1\n  id: 77456810\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序原理\n  uuid: VLFzOMdd3wS3G3n8\n  url: df386q\n  prev_uuid: mg4IRxHSo-LSctGx\n  sibling_uuid: iXXVOfAVEFFLUGLp\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77456951\n  level: 1\n  id: 77456951\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序的双向绑定与 vue 的异同\n  uuid: iXXVOfAVEFFLUGLp\n  url: pfeofq\n  prev_uuid: VLFzOMdd3wS3G3n8\n  sibling_uuid: Tg-jnrLu4reCBSx5\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77456254\n  level: 1\n  id: 77456254\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序尺寸单位 rpx\n  uuid: Tg-jnrLu4reCBSx5\n  url: dt36ib\n  prev_uuid: iXXVOfAVEFFLUGLp\n  sibling_uuid: zsf5ihjINsJtmdB7\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77462972\n  level: 1\n  id: 77462972\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序页面间传递数据的方法\n  uuid: zsf5ihjINsJtmdB7\n  url: lgfegn\n  prev_uuid: Tg-jnrLu4reCBSx5\n  sibling_uuid: pmT_DNWp1Kj3pNLh\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77463586\n  level: 1\n  id: 77463586\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序的生命周期函数\n  uuid: pmT_DNWp1Kj3pNLh\n  url: gnn51p\n  prev_uuid: zsf5ihjINsJtmdB7\n  sibling_uuid: Uhe3MJlkMOSgK0Rg\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77463729\n  level: 1\n  id: 77463729\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序中页面跳转的几种方式\n  uuid: Uhe3MJlkMOSgK0Rg\n  url: lgdk49\n  prev_uuid: pmT_DNWp1Kj3pNLh\n  sibling_uuid: 6A1qVz1XNaVyhfOk\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77456427\n  level: 1\n  id: 77456427\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: h5 跳转小程序的几种方式\n  uuid: 6A1qVz1XNaVyhfOk\n  url: uxfa80\n  prev_uuid: Uhe3MJlkMOSgK0Rg\n  sibling_uuid: ew7M9iTrzvOJfXaH\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77457654\n  level: 1\n  id: 77457654\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序中如何实现下拉刷新\n  uuid: ew7M9iTrzvOJfXaH\n  url: qk3yad\n  prev_uuid: 6A1qVz1XNaVyhfOk\n  sibling_uuid: 2Y1B8CPyL3LkgcKl\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77457211\n  level: 1\n  id: 77457211\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序中 bindtap 和 catchtap 的区别\n  uuid: 2Y1B8CPyL3LkgcKl\n  url: vtacoq\n  prev_uuid: ew7M9iTrzvOJfXaH\n  sibling_uuid: 9RPkwJ0bDYesKq0y\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77457391\n  level: 1\n  id: 77457391\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序关联微信公众号如何确定用户的唯一性\n  uuid: 9RPkwJ0bDYesKq0y\n  url: zy41fo\n  prev_uuid: 2Y1B8CPyL3LkgcKl\n  sibling_uuid: gKieZkqAn8bSEFC8\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77457485\n  level: 1\n  id: 77457485\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序登陆\n  uuid: gKieZkqAn8bSEFC8\n  url: ykzhe6\n  prev_uuid: 9RPkwJ0bDYesKq0y\n  sibling_uuid: RcTwzJ7rg9upyTN_\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77461717\n  level: 1\n  id: 77461717\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序授权获取用户信息流程\n  uuid: RcTwzJ7rg9upyTN_\n  url: yid7ry\n  prev_uuid: gKieZkqAn8bSEFC8\n  sibling_uuid: 8TCMQK_DARltEJe-\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77463054\n  level: 1\n  id: 77463054\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序性能优化\n  uuid: 8TCMQK_DARltEJe-\n  url: rm2ldf\n  prev_uuid: RcTwzJ7rg9upyTN_\n  sibling_uuid: oJtRGAclpkJwEuI8\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77463131\n  level: 1\n  id: 77463131\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 其他\n  uuid: oJtRGAclpkJwEuI8\n  url: ''\n  prev_uuid: 8TCMQK_DARltEJe-\n  sibling_uuid: ''\n  child_uuid: gNjUOGAJS5Dc3hG8\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 开发过程中的问题\n  uuid: gNjUOGAJS5Dc3hG8\n  url: kifv58\n  prev_uuid: oJtRGAclpkJwEuI8\n  sibling_uuid: nNiRI9qkLPlOVLR_\n  child_uuid: ''\n  parent_uuid: oJtRGAclpkJwEuI8\n  doc_id: 75215602\n  level: 2\n  id: 75215602\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 文档\n  uuid: nNiRI9qkLPlOVLR_\n  url: fyibny\n  prev_uuid: gNjUOGAJS5Dc3hG8\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: oJtRGAclpkJwEuI8\n  doc_id: 76180642\n  level: 2\n  id: 76180642\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 设计模式\n  uuid: NjvgaFbxjDjDquPs\n  url: ''\n  prev_uuid: wtEzbVO2d1PioEzt\n  sibling_uuid: EVQTfJhAXBsdI9RS\n  child_uuid: JrkuwvCs_WhsJYNf\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 面向对象的三大特征和六大原则\n  uuid: JrkuwvCs_WhsJYNf\n  url: ucwzqf\n  prev_uuid: NjvgaFbxjDjDquPs\n  sibling_uuid: Xq8Z3JqSyuSI-WfI\n  child_uuid: ''\n  parent_uuid: NjvgaFbxjDjDquPs\n  doc_id: 76155221\n  level: 1\n  id: 76155221\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 创建型模式\n  uuid: Xq8Z3JqSyuSI-WfI\n  url: ''\n  prev_uuid: JrkuwvCs_WhsJYNf\n  sibling_uuid: eHPKkMsIpdNsNQAc\n  child_uuid: 27x6aBfQlsFoEcIe\n  parent_uuid: NjvgaFbxjDjDquPs\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 单例模式\n  uuid: 27x6aBfQlsFoEcIe\n  url: greg09\n  prev_uuid: Xq8Z3JqSyuSI-WfI\n  sibling_uuid: S7_MAWPxiUwGc_yG\n  child_uuid: ''\n  parent_uuid: Xq8Z3JqSyuSI-WfI\n  doc_id: 76157711\n  level: 2\n  id: 76157711\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 工厂模式\n  uuid: S7_MAWPxiUwGc_yG\n  url: yilldv\n  prev_uuid: 27x6aBfQlsFoEcIe\n  sibling_uuid: Fz4UUe9sootwkJLN\n  child_uuid: ''\n  parent_uuid: Xq8Z3JqSyuSI-WfI\n  doc_id: 76157741\n  level: 2\n  id: 76157741\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 抽象工厂模式\n  uuid: Fz4UUe9sootwkJLN\n  url: lb85cd\n  prev_uuid: S7_MAWPxiUwGc_yG\n  sibling_uuid: WqigBLqy73MyrYGy\n  child_uuid: ''\n  parent_uuid: Xq8Z3JqSyuSI-WfI\n  doc_id: 76157793\n  level: 2\n  id: 76157793\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 建造者模式\n  uuid: WqigBLqy73MyrYGy\n  url: um62o3\n  prev_uuid: Fz4UUe9sootwkJLN\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: Xq8Z3JqSyuSI-WfI\n  doc_id: 76157841\n  level: 2\n  id: 76157841\n  open_window: 0\n  visible: 0\n- type: TITLE\n  title: 结构型模式\n  uuid: eHPKkMsIpdNsNQAc\n  url: ''\n  prev_uuid: Xq8Z3JqSyuSI-WfI\n  sibling_uuid: TKjNLxzsEvV-8OQ3\n  child_uuid: 4EnmycRcgTwdexqd\n  parent_uuid: NjvgaFbxjDjDquPs\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 代理模式\n  uuid: 4EnmycRcgTwdexqd\n  url: emgn4g\n  prev_uuid: eHPKkMsIpdNsNQAc\n  sibling_uuid: n2uHzl_zHrRDMw9b\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76157876\n  level: 2\n  id: 76157876\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 享元模式\n  uuid: n2uHzl_zHrRDMw9b\n  url: mvrd51\n  prev_uuid: 4EnmycRcgTwdexqd\n  sibling_uuid: 2IchTHraJITPZqEK\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76157912\n  level: 2\n  id: 76157912\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 适配器模式\n  uuid: 2IchTHraJITPZqEK\n  url: amee0r\n  prev_uuid: n2uHzl_zHrRDMw9b\n  sibling_uuid: r8zuIkYzgg-459k6\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76157968\n  level: 2\n  id: 76157968\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 装饰者模式\n  uuid: r8zuIkYzgg-459k6\n  url: wze6cu\n  prev_uuid: 2IchTHraJITPZqEK\n  sibling_uuid: DuNhBRIiXKK43Um3\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76157988\n  level: 2\n  id: 76157988\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 外观模式\n  uuid: DuNhBRIiXKK43Um3\n  url: staee7\n  prev_uuid: r8zuIkYzgg-459k6\n  sibling_uuid: mhEwDrx0vl1iJZPc\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76158039\n  level: 2\n  id: 76158039\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 组合模式\n  uuid: mhEwDrx0vl1iJZPc\n  url: agqniz\n  prev_uuid: DuNhBRIiXKK43Um3\n  sibling_uuid: XkuptE3GdOIrxGB7\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76158077\n  level: 2\n  id: 76158077\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 桥接模式\n  uuid: XkuptE3GdOIrxGB7\n  url: yk1n51\n  prev_uuid: mhEwDrx0vl1iJZPc\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76158107\n  level: 2\n  id: 76158107\n  open_window: 0\n  visible: 0\n- type: TITLE\n  title: 行为型模式\n  uuid: TKjNLxzsEvV-8OQ3\n  url: ''\n  prev_uuid: eHPKkMsIpdNsNQAc\n  sibling_uuid: v09XKwozBY05xZwo\n  child_uuid: mU7tiw4Lxo1QeZ2M\n  parent_uuid: NjvgaFbxjDjDquPs\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 发布-订阅模式\n  uuid: mU7tiw4Lxo1QeZ2M\n  url: pdlrcu\n  prev_uuid: TKjNLxzsEvV-8OQ3\n  sibling_uuid: D0GpxbjsBVVy9wMd\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158148\n  level: 2\n  id: 76158148\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 策略模式\n  uuid: D0GpxbjsBVVy9wMd\n  url: rm1d8m\n  prev_uuid: mU7tiw4Lxo1QeZ2M\n  sibling_uuid: LqATOvJNtJkCK6Rf\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158179\n  level: 2\n  id: 76158179\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 状态模式\n  uuid: LqATOvJNtJkCK6Rf\n  url: psug0t\n  prev_uuid: D0GpxbjsBVVy9wMd\n  sibling_uuid: B2ht6lKH9UrXGIzd\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158219\n  level: 2\n  id: 76158219\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 模版方法模式：咖啡厅制作咖啡\n  uuid: B2ht6lKH9UrXGIzd\n  url: vtvg1m\n  prev_uuid: LqATOvJNtJkCK6Rf\n  sibling_uuid: zmQm5ECyq6leF2PJ\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158262\n  level: 2\n  id: 76158262\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 迭代器模式：银行的点钞机\n  uuid: zmQm5ECyq6leF2PJ\n  url: grf92w\n  prev_uuid: B2ht6lKH9UrXGIzd\n  sibling_uuid: PoBek3VT-clw6YJQ\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158339\n  level: 2\n  id: 76158339\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 命令模式：江湖通缉令\n  uuid: PoBek3VT-clw6YJQ\n  url: ro2iu8\n  prev_uuid: zmQm5ECyq6leF2PJ\n  sibling_uuid: DBxd87bCzenGMWZM\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158383\n  level: 2\n  id: 76158383\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 职责链模式：领导，我想请个假\n  uuid: DBxd87bCzenGMWZM\n  url: foznxz\n  prev_uuid: PoBek3VT-clw6YJQ\n  sibling_uuid: qmPtYgpm0KNR2Idp\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158417\n  level: 2\n  id: 76158417\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 中介者模式：找媒人介绍对象\n  uuid: qmPtYgpm0KNR2Idp\n  url: ogglev\n  prev_uuid: DBxd87bCzenGMWZM\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158479\n  level: 2\n  id: 76158479\n  open_window: 0\n  visible: 0\n- type: TITLE\n  title: 其他模式\n  uuid: v09XKwozBY05xZwo\n  url: ''\n  prev_uuid: TKjNLxzsEvV-8OQ3\n  sibling_uuid: ''\n  child_uuid: 4dVV00R_mZE1DrwK\n  parent_uuid: NjvgaFbxjDjDquPs\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: MVC、MVP、MVVM\n  uuid: 4dVV00R_mZE1DrwK\n  url: fsq7zk\n  prev_uuid: v09XKwozBY05xZwo\n  sibling_uuid: 4r6hmhgqPGZM0f-V\n  child_uuid: ''\n  parent_uuid: v09XKwozBY05xZwo\n  doc_id: 76158563\n  level: 2\n  id: 76158563\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 模块模式\n  uuid: 4r6hmhgqPGZM0f-V\n  url: iuz8cq\n  prev_uuid: 4dVV00R_mZE1DrwK\n  sibling_uuid: 3Tl5Ezys8fWumdtI\n  child_uuid: ''\n  parent_uuid: v09XKwozBY05xZwo\n  doc_id: 76158605\n  level: 2\n  id: 76158605\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 链模式\n  uuid: 3Tl5Ezys8fWumdtI\n  url: dd1zkg\n  prev_uuid: 4r6hmhgqPGZM0f-V\n  sibling_uuid: 5HZMFXgHcKbHDbAm\n  child_uuid: ''\n  parent_uuid: v09XKwozBY05xZwo\n  doc_id: 76158637\n  level: 2\n  id: 76158637\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 中间件\n  uuid: 5HZMFXgHcKbHDbAm\n  url: ckmwol\n  prev_uuid: 3Tl5Ezys8fWumdtI\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: v09XKwozBY05xZwo\n  doc_id: 76158659\n  level: 2\n  id: 76158659\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: NodeJS\n  uuid: EVQTfJhAXBsdI9RS\n  url: kvz3ia\n  prev_uuid: NjvgaFbxjDjDquPs\n  sibling_uuid: sETeEocX3KoAjN4C\n  child_uuid: KuyWvW7e-Iqza8tB\n  parent_uuid: ''\n  doc_id: 72212317\n  level: 0\n  id: 72212317\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: koa\n  uuid: KuyWvW7e-Iqza8tB\n  url: uh8e2o\n  prev_uuid: EVQTfJhAXBsdI9RS\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: EVQTfJhAXBsdI9RS\n  doc_id: 76189255\n  level: 1\n  id: 76189255\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 前端前沿技术\n  uuid: sETeEocX3KoAjN4C\n  url: ''\n  prev_uuid: EVQTfJhAXBsdI9RS\n  sibling_uuid: T2m_bXwyhIIt4efV\n  child_uuid: Rmo1yN_IvtmUw-Jw\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 2022年哪些前端技术点会火？\n  uuid: Rmo1yN_IvtmUw-Jw\n  url: dx03eg\n  prev_uuid: sETeEocX3KoAjN4C\n  sibling_uuid: M9hz7-1Xb17n1xJH\n  child_uuid: ''\n  parent_uuid: sETeEocX3KoAjN4C\n  doc_id: 72212106\n  level: 1\n  id: 72212106\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 关于2022前端趋势总结的总结\n  uuid: M9hz7-1Xb17n1xJH\n  url: bvq3i9\n  prev_uuid: Rmo1yN_IvtmUw-Jw\n  sibling_uuid: 5j76c3Np6YlU5BK5\n  child_uuid: ''\n  parent_uuid: sETeEocX3KoAjN4C\n  doc_id: 72212105\n  level: 1\n  id: 72212105\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Vue3.2 更新内容\n  uuid: 5j76c3Np6YlU5BK5\n  url: ia89dn\n  prev_uuid: M9hz7-1Xb17n1xJH\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: sETeEocX3KoAjN4C\n  doc_id: 72212098\n  level: 1\n  id: 72212098\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 精选笔记\n  uuid: T2m_bXwyhIIt4efV\n  url: ''\n  prev_uuid: sETeEocX3KoAjN4C\n  sibling_uuid: ''\n  child_uuid: qAH5c79MrPTnrzC2\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: Html 精选\n  uuid: qAH5c79MrPTnrzC2\n  url: tdmwtw\n  prev_uuid: T2m_bXwyhIIt4efV\n  sibling_uuid: O8A1TxI5Yrt4OrdY\n  child_uuid: ''\n  parent_uuid: T2m_bXwyhIIt4efV\n  doc_id: 72212275\n  level: 1\n  id: 72212275\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Css 精选\n  uuid: O8A1TxI5Yrt4OrdY\n  url: tf1yfg\n  prev_uuid: qAH5c79MrPTnrzC2\n  sibling_uuid: jTwW11V9HcT_Yd9G\n  child_uuid: ''\n  parent_uuid: T2m_bXwyhIIt4efV\n  doc_id: 72212272\n  level: 1\n  id: 72212272\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: JavaScript 精选\n  uuid: jTwW11V9HcT_Yd9G\n  url: ofgykz\n  prev_uuid: O8A1TxI5Yrt4OrdY\n  sibling_uuid: k6oWUdlMoIZTpbLG\n  child_uuid: ''\n  parent_uuid: T2m_bXwyhIIt4efV\n  doc_id: 72212277\n  level: 1\n  id: 72212277\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 计算机网络精选\n  uuid: k6oWUdlMoIZTpbLG\n  url: qg8cut\n  prev_uuid: jTwW11V9HcT_Yd9G\n  sibling_uuid: tJXjV-LZN2IsR4s0\n  child_uuid: ''\n  parent_uuid: T2m_bXwyhIIt4efV\n  doc_id: 72212279\n  level: 1\n  id: 72212279\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 操作系统精选\n  uuid: tJXjV-LZN2IsR4s0\n  url: tqxxpv\n  prev_uuid: k6oWUdlMoIZTpbLG\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: T2m_bXwyhIIt4efV\n  doc_id: 72212270\n  level: 1\n  id: 72212270\n  open_window: 0\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 237,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-19T17:42:04.537Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "updated_at": "2023-11-19T17:42:05.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-22T20:13:30.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/mxunh7",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 979935569,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}