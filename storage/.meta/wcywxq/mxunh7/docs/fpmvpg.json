{
  "id": 88490090,
  "slug": "fpmvpg",
  "title": "http 请求的 method",
  "description": "各个 http 版本所支持的 methodGETPOSTHEADPUTDELETEPATCHOPTIONSCONNECTTRACEhttp/1.0✅✅✅❌❌❌❌❌❌http/1.1✅✅✅✅✅✅✅✅✅http 各个 method 介绍GETHTTP GET 方法请求指定的资源。使用 GET 的请...",
  "cover": "",
  "user_id": 732231,
  "book_id": 26225124,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"Bo66Q\"><span class=\"ne-text\">各个 http 版本所支持的 method</span></h2><table id=\"JwLz3\" class=\"ne-table\" style=\"width: 938px\"><tbody><tr style=\"height: 63px\"><td width=\"93\"><p id=\"ue72c6bcc\" class=\"ne-p\"><span class=\"ne-text\"></span></p></td><td width=\"93\"><p id=\"u7b50cfcc\" class=\"ne-p\"><a href=\"#SCoN1\" data-href=\"#SCoN1\" class=\"ne-link\"><span class=\"ne-text\">GET</span></a></p></td><td width=\"93\"><p id=\"ua4f4466e\" class=\"ne-p\"><a href=\"#fpM3o\" data-href=\"#fpM3o\" class=\"ne-link\"><span class=\"ne-text\">POST</span></a></p></td><td width=\"93\"><p id=\"u83408db3\" class=\"ne-p\"><a href=\"#GKUxY\" data-href=\"#GKUxY\" class=\"ne-link\"><span class=\"ne-text\">HEAD</span></a></p></td><td width=\"93\"><p id=\"u6c212fa1\" class=\"ne-p\"><a href=\"#QX6KZ\" data-href=\"#QX6KZ\" class=\"ne-link\"><span class=\"ne-text\">PUT</span></a></p></td><td width=\"93\"><p id=\"u087d3ef7\" class=\"ne-p\"><a href=\"#QonXS\" data-href=\"#QonXS\" class=\"ne-link\"><span class=\"ne-text\">DELETE</span></a></p></td><td width=\"93\"><p id=\"u4410132d\" class=\"ne-p\"><a href=\"#pRanL\" data-href=\"#pRanL\" class=\"ne-link\"><span class=\"ne-text\">PATCH</span></a></p></td><td width=\"93\"><p id=\"udb688636\" class=\"ne-p\"><a href=\"#Wby7B\" data-href=\"#Wby7B\" class=\"ne-link\"><span class=\"ne-text\">OPTIONS</span></a></p></td><td width=\"93\"><p id=\"ubd8a93be\" class=\"ne-p\"><a href=\"#XzBQK\" data-href=\"#XzBQK\" class=\"ne-link\"><span class=\"ne-text\">CONNECT</span></a></p></td><td width=\"101\"><p id=\"u9270fc20\" class=\"ne-p\"><a href=\"#qDU4y\" data-href=\"#qDU4y\" class=\"ne-link\"><span class=\"ne-text\">TRACE</span></a></p></td></tr><tr style=\"height: 33px\"><td width=\"93\"><p id=\"uc8baa09a\" class=\"ne-p\"><span class=\"ne-text\">http/1.0</span></p></td><td width=\"93\"><p id=\"ubf6d2c46\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"ueb231fb8\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"u3300aa7e\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"uc121befd\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"93\"><p id=\"u568b0cdc\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"93\"><p id=\"uf7552758\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"93\"><p id=\"u06bdb1f6\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"93\"><p id=\"u9e550d59\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"101\"><p id=\"u8bba0d0d\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td></tr><tr style=\"height: 33px\"><td width=\"93\"><p id=\"u242f64d7\" class=\"ne-p\"><span class=\"ne-text\">http/1.1</span></p></td><td width=\"93\"><p id=\"u7d3e2b62\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"uae12f5f3\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"u37c75949\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"u613189ef\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"uaaa3fb56\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"u20d834f2\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"udece13f9\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"ue75fcea3\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"101\"><p id=\"ubdc24fea\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td></tr></tbody></table><h2 id=\"cKrGY\"><span class=\"ne-text\">http 各个 method 介绍</span></h2><h3 id=\"SCoN1\"><span class=\"ne-text\">GET</span></h3><p id=\"u144ecc2a\" class=\"ne-p\"><span class=\"ne-text\">HTTP GET 方法请求指定的资源。使用 GET 的请求应该只用于获取数据。</span></p><h3 id=\"fpM3o\"><span class=\"ne-text\">POST</span></h3><p id=\"u94667901\" class=\"ne-p\"><span class=\"ne-text\">HTTP POST 方法 发送数据给服务器。请求主体的类型由 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Content-Type</span></a><span class=\"ne-text\"> 首部指定。</span></p><p id=\"u98e5bd61\" class=\"ne-p\"><span class=\"ne-text\">PUT 和</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">POST</span></a><span class=\"ne-text\">方法的区别是，PUT 方法是幂等的：连续调用一次或者多次的效果相同（无副作用）。连续调用同一个 POST 可能会带来额外的影响，比如多次提交订单。</span></p><p id=\"u7fe1dbe0\" class=\"ne-p\"><span class=\"ne-text\">一个</span><span class=\"ne-text\"> </span><span class=\"ne-text\">POST</span><span class=\"ne-text\"> </span><span class=\"ne-text\">请求通常是通过</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/en-US/docs/Learn/Forms\" data-href=\"https://developer.mozilla.org/en-US/docs/Learn/Forms\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">HTML 表单</span></a><span class=\"ne-text\">发送，并返回服务器的修改结果。在这种情况下，content type 是通过在</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">&lt;form&gt;</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">元素中设置正确的</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form#attr-enctype\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form#attr-enctype\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">enctype</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">属性，或是在</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">&lt;input&gt;</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">和</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/button\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/button\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">&lt;button&gt;</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">元素中设置</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-formenctype\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-formenctype\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">formenctype</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">属性来选择的</span><span class=\"ne-text\">:</span></p><ul class=\"ne-ul\"><li id=\"u416a2982\"><span class=\"ne-text\">application/</span><span class=\"ne-text\">x-www-form-urlencoded</span><span class=\"ne-text\">: 数据被编码成以</span><span class=\"ne-text\"> </span><span class=\"ne-text\">'&amp;'</span><span class=\"ne-text\"> </span><span class=\"ne-text\">分隔的键 - 值对，同时以</span><span class=\"ne-text\"> </span><span class=\"ne-text\">'='</span><span class=\"ne-text\"> </span><span class=\"ne-text\">分隔键和值。非字母或数字的字符会被</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/percent-encoding\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/percent-encoding\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">percent-encoding</span></a><span class=\"ne-text\">: 这也就是为什么这种类型不支持二进制数据 (应使用</span><span class=\"ne-text\"> </span><span class=\"ne-text\">multipart/form-data</span><span class=\"ne-text\"> </span><span class=\"ne-text\">代替).</span></li><li id=\"uf54c493b\"><span class=\"ne-text\">multipart/form-data</span></li><li id=\"ue88b1990\"><span class=\"ne-text\">text/plain</span></li></ul><p id=\"u2bb4546d\" class=\"ne-p\"><span class=\"ne-text\">当 POST 请求是通过除 HTML 表单之外的方式发送时，例如使用</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">XMLHttpRequest</span></a><span class=\"ne-text\">, 那么请求主体可以是任何类型。按 HTTP 1.1 规范中描述，POST 为了以统一的方法来涵盖以下功能：</span></p><ul class=\"ne-ul\"><li id=\"u55611163\"><span class=\"ne-text\">注释已有的资源</span></li><li id=\"u72045431\"><span class=\"ne-text\">在公告板，新闻组，邮件列表或类似的文章组中发布消息;</span></li><li id=\"u236e2ea2\"><span class=\"ne-text\">通过注册新增用户;</span></li><li id=\"u9f296a87\"><span class=\"ne-text\">向数据处理程序提供一批数据，例如提交一个表单;</span></li><li id=\"u589fc215\"><span class=\"ne-text\">通过追加操作，扩展数据库数据。</span></li></ul><h4 id=\"To9Mk\"><span class=\"ne-text\">例子</span></h4><p id=\"ud013dc25\" class=\"ne-p\"><span class=\"ne-text\">使用默认的 application/x-www-form-urlencoded 做为 content type 的简单表单：</span></p><pre data-language=\"latex\" id=\"ELc1w\" class=\"ne-codeblock language-latex\">POST / HTTP/1.1\nHost: foo.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 13\n\nsay=Hi&amp;to=Mom</pre><p id=\"u559c1f18\" class=\"ne-p\"><span class=\"ne-text\">使用 multipart/form-data 作为 content type 的表单：</span></p><pre data-language=\"plain\" id=\"Bsq4W\" class=\"ne-codeblock language-plain\">POST /test.html HTTP/1.1\nHost: example.org\nContent-Type: multipart/form-data;boundary=&quot;boundary&quot;\n\n--boundary\nContent-Disposition: form-data; name=&quot;field1&quot;\n\nvalue1\n--boundary\nContent-Disposition: form-data; name=&quot;field2&quot;; filename=&quot;example.txt&quot;\n\nvalue2</pre><h3 id=\"GKUxY\"><span class=\"ne-text\">HEAD</span></h3><p id=\"udbb501b3\" class=\"ne-p\"><span class=\"ne-text\">HEAD 几乎与 GET 相同，但没有响应正文。</span></p><p id=\"ua3f3a213\" class=\"ne-p\"><span class=\"ne-text\">换句话说，如果 GET /users 返回用户列表，那么 HEAD /users 将发出相同的请求，但不会返回用户列表。</span></p><p id=\"ue904f69d\" class=\"ne-p\"><span class=\"ne-text\">HEAD 请求对于在实际发出 GET 请求之前检查 GET 请求将返回的内容很有用——比如在下载大文件或响应正文之前。</span></p><div data-type=\"tips\" class=\"ne-alert\"><p id=\"ub2c60042\" class=\"ne-p\"><span class=\"ne-text\">HTTP HEAD 方法请求资源的头部信息，并且这些头部与 HTTP </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">GET</span></a><span class=\"ne-text\"> 方法请求时返回的一致。该请求方法的一个使用场景是在下载一个大文件前先获取其大小再决定是否要下载，以此可以节约带宽资源。</span></p><p id=\"u6552048d\" class=\"ne-p\"><span class=\"ne-text\">HEAD</span><span class=\"ne-text\"> </span><span class=\"ne-text\">方法的响应不应包含响应正文。即使包含了正文也必须忽略掉. 虽然描述正文信息的</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Entity_header\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Entity_header\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">entity headers</span></a><span class=\"ne-text\">, 例如</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Length\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Length\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Content-Length</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">可能会包含在响应中，但它们并不是用来描述</span><span class=\"ne-text\"> </span><span class=\"ne-text\">HEAD</span><span class=\"ne-text\"> </span><span class=\"ne-text\">响应本身的，而是用来描述同样情况下的</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">GET</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">请求应该返回的响应。</span></p><p id=\"u5e08ad31\" class=\"ne-p\"><span class=\"ne-text\">如果 HEAD 请求的结果显示在上一次 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">GET</span></a><span class=\"ne-text\"> 请求后缓存的资源已经过期了，即使没有发出</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">GET</span></a><span class=\"ne-text\">请求，缓存也会失效</span></p></div><h4 id=\"fmoX9\"><span class=\"ne-text\">例子</span></h4><pre data-language=\"latex\" id=\"ImIjE\" class=\"ne-codeblock language-latex\">HEAD /index.html</pre><h3 id=\"QX6KZ\"><span class=\"ne-text\">PUT</span></h3><p id=\"u557b41d6\" class=\"ne-p\"><span class=\"ne-text\">HTTP PUT 请求方法使用请求中的负载创建或者替换目标资源。</span></p><p id=\"u5afdf114\" class=\"ne-p\"><span class=\"ne-text\">PUT 与 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">POST</span></a><span class=\"ne-text\"> 方法的区别在于，PUT 方法是幂等的：调用一次与连续调用多次是等价的（即没有副作用），而连续调用多次 POST 方法可能会有副作用，比如将一个订单重复提交多次。</span></p><h4 id=\"FFmPo\"><span class=\"ne-text\">例子</span></h4><h5 id=\"XNFtl\"><span class=\"ne-text\">请求</span></h5><pre data-language=\"latex\" id=\"ulG0Z\" class=\"ne-codeblock language-latex\">PUT /new.html HTTP/1.1\nHost: example.com\nContent-type: text/html\nContent-length: 16\n\n&lt;p&gt;New File&lt;/p&gt;</pre><h5 id=\"DT2jH\"><span class=\"ne-text\">响应</span></h5><p id=\"u0e22b343\" class=\"ne-p\"><span class=\"ne-text\">如果目标资源不存在，并且 PUT 方法成功创建了一份，那么源头服务器必须返回</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/201\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/201\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">201</span></a><span class=\"ne-text\"> (Created) 来通知客户端资源已创建。</span></p><pre data-language=\"latex\" id=\"HGgMr\" class=\"ne-codeblock language-latex\">HTTP/1.1 201 Created\nContent-Location: /new.html</pre><p id=\"ue6662e5e\" class=\"ne-p\"><span class=\"ne-text\">如果目标资源已经存在，并且依照请求中封装的表现形式成功进行了更新，那么，源头服务器必须返回</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">200</span></a><span class=\"ne-text\"> (OK) 或者</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">204</span></a><span class=\"ne-text\"> (No Content) 来表示请求的成功完成。</span></p><pre data-language=\"latex\" id=\"jDNJl\" class=\"ne-codeblock language-latex\">HTTP/1.1 204 No Content\nContent-Location: /existing.html</pre><h3 id=\"QonXS\"><span class=\"ne-text\">DELETE</span></h3><p id=\"u8e4cbbac\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">DELETE 方法删除指定的资源。</span></p><h4 id=\"aye5L\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">例子</span></h4><h5 id=\"doXt2\"><span class=\"ne-text\">请求</span></h5><pre data-language=\"plain\" id=\"flxOZ\" class=\"ne-codeblock language-plain\">DELETE /file.html HTTP/1.1</pre><h5 id=\"EnXAy\"><span class=\"ne-text\">响应</span></h5><ul class=\"ne-ul\"><li id=\"u28f79892\"><span class=\"ne-text\">如果 DELETE 方法成功执行，那么可能会有以下几种状态码：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uac78191a\"><span class=\"ne-text\">状态码</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/202\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/202\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">202</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">(</span><span class=\"ne-text\">Accepted</span><span class=\"ne-text\">) 表示请求的操作可能会成功执行，但是尚未开始执行。</span></li><li id=\"uda20b3cf\"><span class=\"ne-text\">状态码</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">204</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">(</span><span class=\"ne-text\">No Content</span><span class=\"ne-text\">) 表示操作已执行，但是无进一步的相关信息。</span></li><li id=\"u4e2a95b8\"><span class=\"ne-text\">状态码 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">200</span></a><span class=\"ne-text\"> (OK) 表示操作已执行，并且响应中提供了相关状态的描述信息。</span></li></ul></ul><pre data-language=\"html\" id=\"D62Lz\" class=\"ne-codeblock language-html\">HTTP/1.1 200 OK\nDate: Wed, 21 Oct 2015 07:28:00 GMT\n\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;File deleted.&lt;/h1&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</pre><h3 id=\"pRanL\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">PATCH</span></h3><p id=\"u1ff76231\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">PATCH 方法用于对资源应用部分修改。</span></p><div data-type=\"tips\" class=\"ne-alert\"><p id=\"ubd162fb4\" class=\"ne-p\"><span class=\"ne-text\">在 HTTP 协议中，请求方法 PATCH 用于对资源进行部分修改。</span></p><p id=\"u1bd451f4\" class=\"ne-p\"><span class=\"ne-text\">在 HTTP 协议中，</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/PUT\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/PUT\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">PUT</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">方法已经被用来表示对资源进行整体覆盖， 而</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">POST</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">方法则没有对标准的补丁格式的提供支持。不同于</span><span class=\"ne-text\"> </span><span class=\"ne-text\">PUT</span><span class=\"ne-text\"> </span><span class=\"ne-text\">方法，而与</span><span class=\"ne-text\"> </span><span class=\"ne-text\">POST</span><span class=\"ne-text\"> </span><span class=\"ne-text\">方法类似，</span><span class=\"ne-text\">PATCH</span><span class=\"ne-text\"> </span><span class=\"ne-text\">方法是非幂等的，这就意味着连续多个的相同请求会产生不同的效果。</span></p><p id=\"ub77cc28d\" class=\"ne-p\"><span class=\"ne-text\">要判断一台服务器是否支持</span><span class=\"ne-text\"> </span><span class=\"ne-text\">PATCH</span><span class=\"ne-text\"> </span><span class=\"ne-text\">方法，那么就看它是否将其添加到了响应首部</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Allow</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">或者</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Access-Control-Allow-Methods</span></a><span class=\"ne-text\">（在跨域访问的场合，CORS）的方法列表中 。</span></p><p id=\"u808b1cf1\" class=\"ne-p\"><span class=\"ne-text\">另外一个支持 PATCH 方法的隐含迹象是 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Accept-Patch\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Accept-Patch\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Accept-Patch</span></a><span class=\"ne-text\"> 首部的出现，这个首部明确了服务器端可以接受的补丁文件的格式。</span></p></div><h4 id=\"fzDyJ\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">例子</span></h4><h5 id=\"XUjMx\"><span class=\"ne-text\">请求</span></h5><pre data-language=\"latex\" id=\"Y33il\" class=\"ne-codeblock language-latex\">PATCH /file.txt HTTP/1.1\nHost: www.example.com\nContent-Type: application/example\nIf-Match: &quot;e0023aa4e&quot;\nContent-Length: 100\n\n[description of changes]</pre><h5 id=\"e4z7T\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">响应</span></h5><p id=\"ue5734f26\" class=\"ne-p\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">204</span></a><span class=\"ne-text\"> 状态码表示这是一个操作成功的响应，因为响应中不带有消息主体。</span></p><pre data-language=\"latex\" id=\"kYZf8\" class=\"ne-codeblock language-latex\">HTTP/1.1 204 No Content\nContent-Location: /file.txt\nETag: &quot;e0023aa4f&quot;</pre><h3 id=\"Wby7B\"><span class=\"ne-text\">OPTIONS</span></h3><p id=\"uc861e355\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">OPTIONS 方法描述了目标资源的通信选项。</span></p><div data-type=\"tips\" class=\"ne-alert\"><p id=\"ufbd5d9d6\" class=\"ne-p\"><span class=\"ne-text\">HTTP 的 OPTIONS 方法用于获取目的资源所支持的通信选项。客户端可以对特定的 URL 使用 OPTIONS 方法，也可以对整站（通过将 URL 设置为“*”）使用该方法。</span></p></div><h4 id=\"i4K2g\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">例子</span></h4><h5 id=\"z4voM\"><span class=\"ne-text\">检测服务器所支持的请求方法</span></h5><p id=\"ud1fa5957\" class=\"ne-p\"><span class=\"ne-text\">可以使用 OPTIONS 方法对服务器发起请求，以检测服务器支持哪些 HTTP 方法：</span></p><pre data-language=\"latex\" id=\"BwiWX\" class=\"ne-codeblock language-latex\">curl -X OPTIONS http://example.org -i</pre><p id=\"ube6656f0\" class=\"ne-p\"><span class=\"ne-text\">响应报文包含一个 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Allow</span></a><span class=\"ne-text\"> 首部字段，该字段的值表明了服务器支持的所有 HTTP 方法：</span></p><pre data-language=\"latex\" id=\"BA5jT\" class=\"ne-codeblock language-latex\">HTTP/1.1 200 OK\nAllow: OPTIONS, GET, HEAD, POST\nCache-Control: max-age=604800\nDate: Thu, 13 Oct 2016 11:45:00 GMT\nExpires: Thu, 20 Oct 2016 11:45:00 GMT\nServer: EOS (lax004/2813)\nx-ec-custom-error: 1\nContent-Length: 0</pre><h5 id=\"xmG9T\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">CORS 中的预检请求</span></h5><p id=\"ufa27b92b\" class=\"ne-p\"><span class=\"ne-text\">在 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">CORS</span></a><span class=\"ne-text\"> 中，可以使用 OPTIONS 方法发起一个预检请求，以检测实际请求是否可以被服务器所接受。预检请求报文中的 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Method\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Method\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Access-Control-Request-Method</span></a><span class=\"ne-text\"> 首部字段告知服务器实际请求所使用的 HTTP 方法；</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Headers\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Headers\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Access-Control-Request-Headers</span></a><span class=\"ne-text\"> 首部字段告知服务器实际请求所携带的自定义首部字段。服务器基于从预检请求获得的信息来判断，是否接受接下来的实际请求。</span></p><pre data-language=\"latex\" id=\"ZOigD\" class=\"ne-codeblock language-latex\">OPTIONS /resources/post-here/ HTTP/1.1\nHost: bar.other\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nConnection: keep-alive\nOrigin: http://foo.example\nAccess-Control-Request-Method: POST\nAccess-Control-Request-Headers: X-PINGOTHER, Content-Type</pre><p id=\"ue1a4bdd2\" class=\"ne-p\"><span class=\"ne-text\">服务器所返回的 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Access-Control-Allow-Methods</span></a><span class=\"ne-text\"> 首部字段将所有允许的请求方法告知客户端。该首部字段与 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Allow</span></a><span class=\"ne-text\"> 类似，但只能用于涉及到 CORS 的场景中。</span></p><pre data-language=\"latex\" id=\"ZCBtf\" class=\"ne-codeblock language-latex\">HTTP/1.1 200 OK\nDate: Mon, 01 Dec 2008 01:15:39 GMT\nServer: Apache/2.0.61 (Unix)\nAccess-Control-Allow-Origin: http://foo.example\nAccess-Control-Allow-Methods: POST, GET, OPTIONS\nAccess-Control-Allow-Headers: X-PINGOTHER, Content-Type\nAccess-Control-Max-Age: 86400\nVary: Accept-Encoding, Origin\nContent-Encoding: gzip\nContent-Length: 0\nKeep-Alive: timeout=2, max=100\nConnection: Keep-Alive\nContent-Type: text/plain</pre><h3 id=\"XzBQK\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">CONNECT</span></h3><p id=\"u5d51cc36\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">CONNECT 方法用于启动与请求资源的双向通信（隧道）。</span></p><div data-type=\"tips\" class=\"ne-alert\"><p id=\"u2310b6a9\" class=\"ne-p\"><span class=\"ne-text\">在 HTTP 协议中，CONNECT 方法可以开启一个客户端与所请求资源之间的双向沟通的通道。它可以用来创建隧道（tunnel）。</span></p><p id=\"u021b9c81\" class=\"ne-p\"><span class=\"ne-text\">例如，CONNECT 可以用来访问采用了 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/SSL\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/SSL\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">SSL</span></a><span class=\"ne-text\"> (</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/https\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/https\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">HTTPS</span></a><span class=\"ne-text\">) 协议的站点。客户端要求代理服务器将 TCP 连接作为通往目的主机隧道。之后该服务器会代替客户端与目的主机建立连接。连接建立好之后，代理服务器会面向客户端发送或接收 TCP 消息流。</span></p><p id=\"udebddbc5\" class=\"ne-p\"><span class=\"ne-text\">CONNECT 是一个应用范围为点到点的方法。</span></p></div><h4 id=\"tdJZp\"><span class=\"ne-text\">例子</span></h4><pre data-language=\"plain\" id=\"bRI7x\" class=\"ne-codeblock language-plain\">CONNECT server.example.com:80 HTTP/1.1\nHost: server.example.com:80\nProxy-Authorization: basic aGVsbG86d29ybGQ=</pre><h3 id=\"qDU4y\"><span class=\"ne-text\">TRACE</span></h3><p id=\"u1f9a6945\" class=\"ne-p\"><span class=\"ne-text\">HTTP TRACE 方法 实现沿通向目标资源的路径的消息环回（loop-back）测试 ，提供了一种实用的 debug 机制。</span></p><p id=\"ua2736b8b\" class=\"ne-p\"><span class=\"ne-text\">请求的最终接收者应当原样反射（reflect）它接收到的消息，除了以下字段部分，作为一个</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Content-Type</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">为</span><span class=\"ne-text\"> </span><span class=\"ne-text\">message/http</span><span class=\"ne-text\"> </span><span class=\"ne-text\">的 200（OK）响应的消息的主体（body）返回给客户端 。</span></p><p id=\"ua5c0b8e2\" class=\"ne-p\"><span class=\"ne-text\">最终接收者是指初始（origin）服务器，或者第一个接收到 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Max-Forwards\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Max-Forwards\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Max-Forwards</span></a><span class=\"ne-text\"> 值为 0 的请求的服务器。</span></p></div>",
  "body": "<a name=\"Bo66Q\"></a>\n## 各个 http 版本所支持的 method\n| <br /> | [GET](#SCoN1) | [POST](#fpM3o) | [HEAD](#GKUxY) | [PUT](#QX6KZ) | [DELETE](#QonXS) | [PATCH](#pRanL) | [OPTIONS](#Wby7B) | [CONNECT](#XzBQK) | [TRACE](#qDU4y) |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| http/1.0 | ✅ | ✅ | ✅ | ❌ | ❌ | ❌ | ❌ | ❌ | ❌ |\n| http/1.1 | ✅ | ✅ | ✅ | ✅ | ✅ | ✅ | ✅ | ✅ | ✅ |\n\n<a name=\"cKrGY\"></a>\n## http 各个 method 介绍\n<a name=\"SCoN1\"></a>\n### GET\nHTTP GET 方法请求指定的资源。使用 GET 的请求应该只用于获取数据。\n<a name=\"fpM3o\"></a>\n### POST\nHTTP POST 方法 发送数据给服务器。请求主体的类型由 [Content-Type](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type) 首部指定。<br />PUT 和[POST](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST)方法的区别是，PUT 方法是幂等的：连续调用一次或者多次的效果相同（无副作用）。连续调用同一个 POST 可能会带来额外的影响，比如多次提交订单。<br />一个 POST 请求通常是通过 [HTML 表单](https://developer.mozilla.org/en-US/docs/Learn/Forms)发送，并返回服务器的修改结果。在这种情况下，content type 是通过在 [<form>](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form) 元素中设置正确的 [enctype](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form#attr-enctype) 属性，或是在 [<input>](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input) 和 [<button>](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/button) 元素中设置 [formenctype](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-formenctype) 属性来选择的:\n\n- application/x-www-form-urlencoded: 数据被编码成以 '&' 分隔的键 - 值对，同时以 '=' 分隔键和值。非字母或数字的字符会被 [percent-encoding](https://developer.mozilla.org/zh-CN/docs/Glossary/percent-encoding): 这也就是为什么这种类型不支持二进制数据 (应使用 multipart/form-data 代替).\n- multipart/form-data\n- text/plain\n\n当 POST 请求是通过除 HTML 表单之外的方式发送时，例如使用 [XMLHttpRequest](https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest), 那么请求主体可以是任何类型。按 HTTP 1.1 规范中描述，POST 为了以统一的方法来涵盖以下功能：\n\n- 注释已有的资源\n- 在公告板，新闻组，邮件列表或类似的文章组中发布消息;\n- 通过注册新增用户;\n- 向数据处理程序提供一批数据，例如提交一个表单;\n- 通过追加操作，扩展数据库数据。\n<a name=\"To9Mk\"></a>\n#### 例子\n使用默认的 application/x-www-form-urlencoded 做为 content type 的简单表单：\n```latex\nPOST / HTTP/1.1\nHost: foo.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 13\n\nsay=Hi&to=Mom\n```\n使用 multipart/form-data 作为 content type 的表单：\n```\nPOST /test.html HTTP/1.1\nHost: example.org\nContent-Type: multipart/form-data;boundary=\"boundary\"\n\n--boundary\nContent-Disposition: form-data; name=\"field1\"\n\nvalue1\n--boundary\nContent-Disposition: form-data; name=\"field2\"; filename=\"example.txt\"\n\nvalue2\n```\n<a name=\"GKUxY\"></a>\n### HEAD\nHEAD 几乎与 GET 相同，但没有响应正文。<br />换句话说，如果 GET /users 返回用户列表，那么 HEAD /users 将发出相同的请求，但不会返回用户列表。<br />HEAD 请求对于在实际发出 GET 请求之前检查 GET 请求将返回的内容很有用——比如在下载大文件或响应正文之前。\n:::tips\nHTTP HEAD 方法请求资源的头部信息，并且这些头部与 HTTP [GET](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET) 方法请求时返回的一致。该请求方法的一个使用场景是在下载一个大文件前先获取其大小再决定是否要下载，以此可以节约带宽资源。<br />HEAD 方法的响应不应包含响应正文。即使包含了正文也必须忽略掉. 虽然描述正文信息的 [entity headers](https://developer.mozilla.org/zh-CN/docs/Glossary/Entity_header), 例如 [Content-Length](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Length) 可能会包含在响应中，但它们并不是用来描述 HEAD 响应本身的，而是用来描述同样情况下的 [GET](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET) 请求应该返回的响应。<br />如果 HEAD 请求的结果显示在上一次 [GET](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET) 请求后缓存的资源已经过期了，即使没有发出[GET](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET)请求，缓存也会失效\n:::\n<a name=\"fmoX9\"></a>\n#### 例子\n```latex\nHEAD /index.html\n```\n<a name=\"QX6KZ\"></a>\n### PUT\nHTTP PUT 请求方法使用请求中的负载创建或者替换目标资源。<br />PUT 与 [POST](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST) 方法的区别在于，PUT 方法是幂等的：调用一次与连续调用多次是等价的（即没有副作用），而连续调用多次 POST 方法可能会有副作用，比如将一个订单重复提交多次。\n<a name=\"FFmPo\"></a>\n#### 例子\n<a name=\"XNFtl\"></a>\n##### 请求\n```latex\nPUT /new.html HTTP/1.1\nHost: example.com\nContent-type: text/html\nContent-length: 16\n\n<p>New File</p>\n```\n<a name=\"DT2jH\"></a>\n##### 响应\n如果目标资源不存在，并且 PUT 方法成功创建了一份，那么源头服务器必须返回[201](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/201) (Created) 来通知客户端资源已创建。\n```latex\nHTTP/1.1 201 Created\nContent-Location: /new.html\n```\n如果目标资源已经存在，并且依照请求中封装的表现形式成功进行了更新，那么，源头服务器必须返回[200](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200) (OK) 或者[204](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204) (No Content) 来表示请求的成功完成。\n```latex\nHTTP/1.1 204 No Content\nContent-Location: /existing.html\n```\n<a name=\"QonXS\"></a>\n### DELETE\nDELETE 方法删除指定的资源。\n<a name=\"aye5L\"></a>\n#### 例子\n<a name=\"doXt2\"></a>\n##### 请求\n```\nDELETE /file.html HTTP/1.1\n```\n<a name=\"EnXAy\"></a>\n##### 响应\n\n- 如果 DELETE 方法成功执行，那么可能会有以下几种状态码：\n   - 状态码 [202](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/202) (Accepted) 表示请求的操作可能会成功执行，但是尚未开始执行。\n   - 状态码 [204](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204) (No Content) 表示操作已执行，但是无进一步的相关信息。\n   - 状态码 [200](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200) (OK) 表示操作已执行，并且响应中提供了相关状态的描述信息。\n```html\nHTTP/1.1 200 OK\nDate: Wed, 21 Oct 2015 07:28:00 GMT\n\n<html>\n  <body>\n    <h1>File deleted.</h1>\n  </body>\n</html>\n```\n<a name=\"pRanL\"></a>\n### PATCH\nPATCH 方法用于对资源应用部分修改。\n:::tips\n在 HTTP 协议中，请求方法 PATCH 用于对资源进行部分修改。<br />在 HTTP 协议中， [PUT](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/PUT) 方法已经被用来表示对资源进行整体覆盖， 而 [POST](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST) 方法则没有对标准的补丁格式的提供支持。不同于 PUT 方法，而与 POST 方法类似，PATCH 方法是非幂等的，这就意味着连续多个的相同请求会产生不同的效果。<br />要判断一台服务器是否支持 PATCH 方法，那么就看它是否将其添加到了响应首部 [Allow](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow) 或者 [Access-Control-Allow-Methods](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods)（在跨域访问的场合，CORS）的方法列表中 。<br />另外一个支持 PATCH 方法的隐含迹象是 [Accept-Patch](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Accept-Patch) 首部的出现，这个首部明确了服务器端可以接受的补丁文件的格式。\n:::\n<a name=\"fzDyJ\"></a>\n#### 例子\n<a name=\"XUjMx\"></a>\n##### 请求\n```latex\nPATCH /file.txt HTTP/1.1\nHost: www.example.com\nContent-Type: application/example\nIf-Match: \"e0023aa4e\"\nContent-Length: 100\n\n[description of changes]\n```\n<a name=\"e4z7T\"></a>\n##### 响应\n[204](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204) 状态码表示这是一个操作成功的响应，因为响应中不带有消息主体。\n```latex\nHTTP/1.1 204 No Content\nContent-Location: /file.txt\nETag: \"e0023aa4f\"\n```\n<a name=\"Wby7B\"></a>\n### OPTIONS\nOPTIONS 方法描述了目标资源的通信选项。\n:::tips\nHTTP 的 OPTIONS 方法用于获取目的资源所支持的通信选项。客户端可以对特定的 URL 使用 OPTIONS 方法，也可以对整站（通过将 URL 设置为“*”）使用该方法。\n:::\n<a name=\"i4K2g\"></a>\n#### 例子\n<a name=\"z4voM\"></a>\n##### 检测服务器所支持的请求方法\n可以使用 OPTIONS 方法对服务器发起请求，以检测服务器支持哪些 HTTP 方法：\n```latex\ncurl -X OPTIONS http://example.org -i\n```\n响应报文包含一个 [Allow](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow) 首部字段，该字段的值表明了服务器支持的所有 HTTP 方法：\n```latex\nHTTP/1.1 200 OK\nAllow: OPTIONS, GET, HEAD, POST\nCache-Control: max-age=604800\nDate: Thu, 13 Oct 2016 11:45:00 GMT\nExpires: Thu, 20 Oct 2016 11:45:00 GMT\nServer: EOS (lax004/2813)\nx-ec-custom-error: 1\nContent-Length: 0\n```\n<a name=\"xmG9T\"></a>\n##### CORS 中的预检请求\n在 [CORS](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS) 中，可以使用 OPTIONS 方法发起一个预检请求，以检测实际请求是否可以被服务器所接受。预检请求报文中的 [Access-Control-Request-Method](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Method) 首部字段告知服务器实际请求所使用的 HTTP 方法；[Access-Control-Request-Headers](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Headers) 首部字段告知服务器实际请求所携带的自定义首部字段。服务器基于从预检请求获得的信息来判断，是否接受接下来的实际请求。\n```latex\nOPTIONS /resources/post-here/ HTTP/1.1\nHost: bar.other\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nConnection: keep-alive\nOrigin: http://foo.example\nAccess-Control-Request-Method: POST\nAccess-Control-Request-Headers: X-PINGOTHER, Content-Type\n```\n服务器所返回的 [Access-Control-Allow-Methods](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods) 首部字段将所有允许的请求方法告知客户端。该首部字段与 [Allow](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow) 类似，但只能用于涉及到 CORS 的场景中。\n```latex\nHTTP/1.1 200 OK\nDate: Mon, 01 Dec 2008 01:15:39 GMT\nServer: Apache/2.0.61 (Unix)\nAccess-Control-Allow-Origin: http://foo.example\nAccess-Control-Allow-Methods: POST, GET, OPTIONS\nAccess-Control-Allow-Headers: X-PINGOTHER, Content-Type\nAccess-Control-Max-Age: 86400\nVary: Accept-Encoding, Origin\nContent-Encoding: gzip\nContent-Length: 0\nKeep-Alive: timeout=2, max=100\nConnection: Keep-Alive\nContent-Type: text/plain\n```\n<a name=\"XzBQK\"></a>\n### CONNECT\nCONNECT 方法用于启动与请求资源的双向通信（隧道）。\n:::tips\n在 HTTP 协议中，CONNECT 方法可以开启一个客户端与所请求资源之间的双向沟通的通道。它可以用来创建隧道（tunnel）。<br />例如，CONNECT 可以用来访问采用了 [SSL](https://developer.mozilla.org/zh-CN/docs/Glossary/SSL) ([HTTPS](https://developer.mozilla.org/zh-CN/docs/Glossary/https)) 协议的站点。客户端要求代理服务器将 TCP 连接作为通往目的主机隧道。之后该服务器会代替客户端与目的主机建立连接。连接建立好之后，代理服务器会面向客户端发送或接收 TCP 消息流。<br />CONNECT 是一个应用范围为点到点的方法。\n:::\n<a name=\"tdJZp\"></a>\n#### 例子\n```\nCONNECT server.example.com:80 HTTP/1.1\nHost: server.example.com:80\nProxy-Authorization: basic aGVsbG86d29ybGQ=\n```\n<a name=\"qDU4y\"></a>\n### TRACE\nHTTP TRACE 方法 实现沿通向目标资源的路径的消息环回（loop-back）测试 ，提供了一种实用的 debug 机制。<br />请求的最终接收者应当原样反射（reflect）它接收到的消息，除了以下字段部分，作为一个[Content-Type](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type) 为 message/http 的 200（OK）响应的消息的主体（body）返回给客户端 。<br />最终接收者是指初始（origin）服务器，或者第一个接收到 [Max-Forwards](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Max-Forwards) 值为 0 的请求的服务器。\n",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"Bo66Q\"><span class=\"ne-text\">各个 http 版本所支持的 method</span></h2><table id=\"JwLz3\" class=\"ne-table\" style=\"width: 938px\"><tbody><tr style=\"height: 63px\"><td width=\"93\"><p id=\"ue72c6bcc\" class=\"ne-p\"><span class=\"ne-text\"></span></p></td><td width=\"93\"><p id=\"u7b50cfcc\" class=\"ne-p\"><a href=\"#SCoN1\" data-href=\"#SCoN1\" class=\"ne-link\"><span class=\"ne-text\">GET</span></a></p></td><td width=\"93\"><p id=\"ua4f4466e\" class=\"ne-p\"><a href=\"#fpM3o\" data-href=\"#fpM3o\" class=\"ne-link\"><span class=\"ne-text\">POST</span></a></p></td><td width=\"93\"><p id=\"u83408db3\" class=\"ne-p\"><a href=\"#GKUxY\" data-href=\"#GKUxY\" class=\"ne-link\"><span class=\"ne-text\">HEAD</span></a></p></td><td width=\"93\"><p id=\"u6c212fa1\" class=\"ne-p\"><a href=\"#QX6KZ\" data-href=\"#QX6KZ\" class=\"ne-link\"><span class=\"ne-text\">PUT</span></a></p></td><td width=\"93\"><p id=\"u087d3ef7\" class=\"ne-p\"><a href=\"#QonXS\" data-href=\"#QonXS\" class=\"ne-link\"><span class=\"ne-text\">DELETE</span></a></p></td><td width=\"93\"><p id=\"u4410132d\" class=\"ne-p\"><a href=\"#pRanL\" data-href=\"#pRanL\" class=\"ne-link\"><span class=\"ne-text\">PATCH</span></a></p></td><td width=\"93\"><p id=\"udb688636\" class=\"ne-p\"><a href=\"#Wby7B\" data-href=\"#Wby7B\" class=\"ne-link\"><span class=\"ne-text\">OPTIONS</span></a></p></td><td width=\"93\"><p id=\"ubd8a93be\" class=\"ne-p\"><a href=\"#XzBQK\" data-href=\"#XzBQK\" class=\"ne-link\"><span class=\"ne-text\">CONNECT</span></a></p></td><td width=\"101\"><p id=\"u9270fc20\" class=\"ne-p\"><a href=\"#qDU4y\" data-href=\"#qDU4y\" class=\"ne-link\"><span class=\"ne-text\">TRACE</span></a></p></td></tr><tr style=\"height: 33px\"><td width=\"93\"><p id=\"uc8baa09a\" class=\"ne-p\"><span class=\"ne-text\">http/1.0</span></p></td><td width=\"93\"><p id=\"ubf6d2c46\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"ueb231fb8\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"u3300aa7e\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"uc121befd\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"93\"><p id=\"u568b0cdc\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"93\"><p id=\"uf7552758\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"93\"><p id=\"u06bdb1f6\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"93\"><p id=\"u9e550d59\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"101\"><p id=\"u8bba0d0d\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td></tr><tr style=\"height: 33px\"><td width=\"93\"><p id=\"u242f64d7\" class=\"ne-p\"><span class=\"ne-text\">http/1.1</span></p></td><td width=\"93\"><p id=\"u7d3e2b62\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"uae12f5f3\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"u37c75949\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"u613189ef\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"uaaa3fb56\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"u20d834f2\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"udece13f9\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"93\"><p id=\"ue75fcea3\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"101\"><p id=\"ubdc24fea\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td></tr></tbody></table><h2 id=\"cKrGY\"><span class=\"ne-text\">http 各个 method 介绍</span></h2><h3 id=\"SCoN1\"><span class=\"ne-text\">GET</span></h3><p id=\"u144ecc2a\" class=\"ne-p\"><span class=\"ne-text\">HTTP GET 方法请求指定的资源。使用 GET 的请求应该只用于获取数据。</span></p><h3 id=\"fpM3o\"><span class=\"ne-text\">POST</span></h3><p id=\"u94667901\" class=\"ne-p\"><span class=\"ne-text\">HTTP POST 方法 发送数据给服务器。请求主体的类型由 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Content-Type</span></a><span class=\"ne-text\"> 首部指定。</span></p><p id=\"u98e5bd61\" class=\"ne-p\"><span class=\"ne-text\">PUT 和</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">POST</span></a><span class=\"ne-text\">方法的区别是，PUT 方法是幂等的：连续调用一次或者多次的效果相同（无副作用）。连续调用同一个 POST 可能会带来额外的影响，比如多次提交订单。</span></p><p id=\"u7fe1dbe0\" class=\"ne-p\"><span class=\"ne-text\">一个</span><span class=\"ne-text\"> </span><span class=\"ne-text\">POST</span><span class=\"ne-text\"> </span><span class=\"ne-text\">请求通常是通过</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/en-US/docs/Learn/Forms\" data-href=\"https://developer.mozilla.org/en-US/docs/Learn/Forms\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">HTML 表单</span></a><span class=\"ne-text\">发送，并返回服务器的修改结果。在这种情况下，content type 是通过在</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">&lt;form&gt;</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">元素中设置正确的</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form#attr-enctype\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form#attr-enctype\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">enctype</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">属性，或是在</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">&lt;input&gt;</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">和</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/button\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/button\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">&lt;button&gt;</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">元素中设置</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-formenctype\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-formenctype\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">formenctype</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">属性来选择的</span><span class=\"ne-text\">:</span></p><ul class=\"ne-ul\"><li id=\"u416a2982\"><span class=\"ne-text\">application/</span><span class=\"ne-text\">x-www-form-urlencoded</span><span class=\"ne-text\">: 数据被编码成以</span><span class=\"ne-text\"> </span><span class=\"ne-text\">'&amp;'</span><span class=\"ne-text\"> </span><span class=\"ne-text\">分隔的键 - 值对，同时以</span><span class=\"ne-text\"> </span><span class=\"ne-text\">'='</span><span class=\"ne-text\"> </span><span class=\"ne-text\">分隔键和值。非字母或数字的字符会被</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/percent-encoding\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/percent-encoding\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">percent-encoding</span></a><span class=\"ne-text\">: 这也就是为什么这种类型不支持二进制数据 (应使用</span><span class=\"ne-text\"> </span><span class=\"ne-text\">multipart/form-data</span><span class=\"ne-text\"> </span><span class=\"ne-text\">代替).</span></li><li id=\"uf54c493b\"><span class=\"ne-text\">multipart/form-data</span></li><li id=\"ue88b1990\"><span class=\"ne-text\">text/plain</span></li></ul><p id=\"u2bb4546d\" class=\"ne-p\"><span class=\"ne-text\">当 POST 请求是通过除 HTML 表单之外的方式发送时，例如使用</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">XMLHttpRequest</span></a><span class=\"ne-text\">, 那么请求主体可以是任何类型。按 HTTP 1.1 规范中描述，POST 为了以统一的方法来涵盖以下功能：</span></p><ul class=\"ne-ul\"><li id=\"u55611163\"><span class=\"ne-text\">注释已有的资源</span></li><li id=\"u72045431\"><span class=\"ne-text\">在公告板，新闻组，邮件列表或类似的文章组中发布消息;</span></li><li id=\"u236e2ea2\"><span class=\"ne-text\">通过注册新增用户;</span></li><li id=\"u9f296a87\"><span class=\"ne-text\">向数据处理程序提供一批数据，例如提交一个表单;</span></li><li id=\"u589fc215\"><span class=\"ne-text\">通过追加操作，扩展数据库数据。</span></li></ul><h4 id=\"To9Mk\"><span class=\"ne-text\">例子</span></h4><p id=\"ud013dc25\" class=\"ne-p\"><span class=\"ne-text\">使用默认的 application/x-www-form-urlencoded 做为 content type 的简单表单：</span></p><pre data-language=\"latex\" id=\"ELc1w\" class=\"ne-codeblock language-latex\">POST / HTTP/1.1\nHost: foo.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 13\n\nsay=Hi&amp;to=Mom</pre><p id=\"u559c1f18\" class=\"ne-p\"><span class=\"ne-text\">使用 multipart/form-data 作为 content type 的表单：</span></p><pre data-language=\"plain\" id=\"Bsq4W\" class=\"ne-codeblock language-plain\">POST /test.html HTTP/1.1\nHost: example.org\nContent-Type: multipart/form-data;boundary=&quot;boundary&quot;\n\n--boundary\nContent-Disposition: form-data; name=&quot;field1&quot;\n\nvalue1\n--boundary\nContent-Disposition: form-data; name=&quot;field2&quot;; filename=&quot;example.txt&quot;\n\nvalue2</pre><h3 id=\"GKUxY\"><span class=\"ne-text\">HEAD</span></h3><p id=\"udbb501b3\" class=\"ne-p\"><span class=\"ne-text\">HEAD 几乎与 GET 相同，但没有响应正文。</span></p><p id=\"ua3f3a213\" class=\"ne-p\"><span class=\"ne-text\">换句话说，如果 GET /users 返回用户列表，那么 HEAD /users 将发出相同的请求，但不会返回用户列表。</span></p><p id=\"ue904f69d\" class=\"ne-p\"><span class=\"ne-text\">HEAD 请求对于在实际发出 GET 请求之前检查 GET 请求将返回的内容很有用——比如在下载大文件或响应正文之前。</span></p><div data-type=\"tips\" class=\"ne-alert\"><p id=\"ub2c60042\" class=\"ne-p\"><span class=\"ne-text\">HTTP HEAD 方法请求资源的头部信息，并且这些头部与 HTTP </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">GET</span></a><span class=\"ne-text\"> 方法请求时返回的一致。该请求方法的一个使用场景是在下载一个大文件前先获取其大小再决定是否要下载，以此可以节约带宽资源。</span></p><p id=\"u6552048d\" class=\"ne-p\"><span class=\"ne-text\">HEAD</span><span class=\"ne-text\"> </span><span class=\"ne-text\">方法的响应不应包含响应正文。即使包含了正文也必须忽略掉. 虽然描述正文信息的</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Entity_header\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Entity_header\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">entity headers</span></a><span class=\"ne-text\">, 例如</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Length\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Length\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Content-Length</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">可能会包含在响应中，但它们并不是用来描述</span><span class=\"ne-text\"> </span><span class=\"ne-text\">HEAD</span><span class=\"ne-text\"> </span><span class=\"ne-text\">响应本身的，而是用来描述同样情况下的</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">GET</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">请求应该返回的响应。</span></p><p id=\"u5e08ad31\" class=\"ne-p\"><span class=\"ne-text\">如果 HEAD 请求的结果显示在上一次 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">GET</span></a><span class=\"ne-text\"> 请求后缓存的资源已经过期了，即使没有发出</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">GET</span></a><span class=\"ne-text\">请求，缓存也会失效</span></p></div><h4 id=\"fmoX9\"><span class=\"ne-text\">例子</span></h4><pre data-language=\"latex\" id=\"ImIjE\" class=\"ne-codeblock language-latex\">HEAD /index.html</pre><h3 id=\"QX6KZ\"><span class=\"ne-text\">PUT</span></h3><p id=\"u557b41d6\" class=\"ne-p\"><span class=\"ne-text\">HTTP PUT 请求方法使用请求中的负载创建或者替换目标资源。</span></p><p id=\"u5afdf114\" class=\"ne-p\"><span class=\"ne-text\">PUT 与 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">POST</span></a><span class=\"ne-text\"> 方法的区别在于，PUT 方法是幂等的：调用一次与连续调用多次是等价的（即没有副作用），而连续调用多次 POST 方法可能会有副作用，比如将一个订单重复提交多次。</span></p><h4 id=\"FFmPo\"><span class=\"ne-text\">例子</span></h4><h5 id=\"XNFtl\"><span class=\"ne-text\">请求</span></h5><pre data-language=\"latex\" id=\"ulG0Z\" class=\"ne-codeblock language-latex\">PUT /new.html HTTP/1.1\nHost: example.com\nContent-type: text/html\nContent-length: 16\n\n&lt;p&gt;New File&lt;/p&gt;</pre><h5 id=\"DT2jH\"><span class=\"ne-text\">响应</span></h5><p id=\"u0e22b343\" class=\"ne-p\"><span class=\"ne-text\">如果目标资源不存在，并且 PUT 方法成功创建了一份，那么源头服务器必须返回</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/201\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/201\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">201</span></a><span class=\"ne-text\"> (Created) 来通知客户端资源已创建。</span></p><pre data-language=\"latex\" id=\"HGgMr\" class=\"ne-codeblock language-latex\">HTTP/1.1 201 Created\nContent-Location: /new.html</pre><p id=\"ue6662e5e\" class=\"ne-p\"><span class=\"ne-text\">如果目标资源已经存在，并且依照请求中封装的表现形式成功进行了更新，那么，源头服务器必须返回</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">200</span></a><span class=\"ne-text\"> (OK) 或者</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">204</span></a><span class=\"ne-text\"> (No Content) 来表示请求的成功完成。</span></p><pre data-language=\"latex\" id=\"jDNJl\" class=\"ne-codeblock language-latex\">HTTP/1.1 204 No Content\nContent-Location: /existing.html</pre><h3 id=\"QonXS\"><span class=\"ne-text\">DELETE</span></h3><p id=\"u8e4cbbac\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">DELETE 方法删除指定的资源。</span></p><h4 id=\"aye5L\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">例子</span></h4><h5 id=\"doXt2\"><span class=\"ne-text\">请求</span></h5><pre data-language=\"plain\" id=\"flxOZ\" class=\"ne-codeblock language-plain\">DELETE /file.html HTTP/1.1</pre><h5 id=\"EnXAy\"><span class=\"ne-text\">响应</span></h5><ul class=\"ne-ul\"><li id=\"u28f79892\"><span class=\"ne-text\">如果 DELETE 方法成功执行，那么可能会有以下几种状态码：</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"uac78191a\"><span class=\"ne-text\">状态码</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/202\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/202\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">202</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">(</span><span class=\"ne-text\">Accepted</span><span class=\"ne-text\">) 表示请求的操作可能会成功执行，但是尚未开始执行。</span></li><li id=\"uda20b3cf\"><span class=\"ne-text\">状态码</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">204</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">(</span><span class=\"ne-text\">No Content</span><span class=\"ne-text\">) 表示操作已执行，但是无进一步的相关信息。</span></li><li id=\"u4e2a95b8\"><span class=\"ne-text\">状态码 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">200</span></a><span class=\"ne-text\"> (OK) 表示操作已执行，并且响应中提供了相关状态的描述信息。</span></li></ul></ul><pre data-language=\"html\" id=\"D62Lz\" class=\"ne-codeblock language-html\">HTTP/1.1 200 OK\nDate: Wed, 21 Oct 2015 07:28:00 GMT\n\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;File deleted.&lt;/h1&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</pre><h3 id=\"pRanL\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">PATCH</span></h3><p id=\"u1ff76231\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">PATCH 方法用于对资源应用部分修改。</span></p><div data-type=\"tips\" class=\"ne-alert\"><p id=\"ubd162fb4\" class=\"ne-p\"><span class=\"ne-text\">在 HTTP 协议中，请求方法 PATCH 用于对资源进行部分修改。</span></p><p id=\"u1bd451f4\" class=\"ne-p\"><span class=\"ne-text\">在 HTTP 协议中，</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/PUT\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/PUT\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">PUT</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">方法已经被用来表示对资源进行整体覆盖， 而</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">POST</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">方法则没有对标准的补丁格式的提供支持。不同于</span><span class=\"ne-text\"> </span><span class=\"ne-text\">PUT</span><span class=\"ne-text\"> </span><span class=\"ne-text\">方法，而与</span><span class=\"ne-text\"> </span><span class=\"ne-text\">POST</span><span class=\"ne-text\"> </span><span class=\"ne-text\">方法类似，</span><span class=\"ne-text\">PATCH</span><span class=\"ne-text\"> </span><span class=\"ne-text\">方法是非幂等的，这就意味着连续多个的相同请求会产生不同的效果。</span></p><p id=\"ub77cc28d\" class=\"ne-p\"><span class=\"ne-text\">要判断一台服务器是否支持</span><span class=\"ne-text\"> </span><span class=\"ne-text\">PATCH</span><span class=\"ne-text\"> </span><span class=\"ne-text\">方法，那么就看它是否将其添加到了响应首部</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Allow</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">或者</span><span class=\"ne-text\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Access-Control-Allow-Methods</span></a><span class=\"ne-text\">（在跨域访问的场合，CORS）的方法列表中 。</span></p><p id=\"u808b1cf1\" class=\"ne-p\"><span class=\"ne-text\">另外一个支持 PATCH 方法的隐含迹象是 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Accept-Patch\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Accept-Patch\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Accept-Patch</span></a><span class=\"ne-text\"> 首部的出现，这个首部明确了服务器端可以接受的补丁文件的格式。</span></p></div><h4 id=\"fzDyJ\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">例子</span></h4><h5 id=\"XUjMx\"><span class=\"ne-text\">请求</span></h5><pre data-language=\"latex\" id=\"Y33il\" class=\"ne-codeblock language-latex\">PATCH /file.txt HTTP/1.1\nHost: www.example.com\nContent-Type: application/example\nIf-Match: &quot;e0023aa4e&quot;\nContent-Length: 100\n\n[description of changes]</pre><h5 id=\"e4z7T\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">响应</span></h5><p id=\"ue5734f26\" class=\"ne-p\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">204</span></a><span class=\"ne-text\"> 状态码表示这是一个操作成功的响应，因为响应中不带有消息主体。</span></p><pre data-language=\"latex\" id=\"kYZf8\" class=\"ne-codeblock language-latex\">HTTP/1.1 204 No Content\nContent-Location: /file.txt\nETag: &quot;e0023aa4f&quot;</pre><h3 id=\"Wby7B\"><span class=\"ne-text\">OPTIONS</span></h3><p id=\"uc861e355\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">OPTIONS 方法描述了目标资源的通信选项。</span></p><div data-type=\"tips\" class=\"ne-alert\"><p id=\"ufbd5d9d6\" class=\"ne-p\"><span class=\"ne-text\">HTTP 的 OPTIONS 方法用于获取目的资源所支持的通信选项。客户端可以对特定的 URL 使用 OPTIONS 方法，也可以对整站（通过将 URL 设置为“*”）使用该方法。</span></p></div><h4 id=\"i4K2g\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">例子</span></h4><h5 id=\"z4voM\"><span class=\"ne-text\">检测服务器所支持的请求方法</span></h5><p id=\"ud1fa5957\" class=\"ne-p\"><span class=\"ne-text\">可以使用 OPTIONS 方法对服务器发起请求，以检测服务器支持哪些 HTTP 方法：</span></p><pre data-language=\"latex\" id=\"BwiWX\" class=\"ne-codeblock language-latex\">curl -X OPTIONS http://example.org -i</pre><p id=\"ube6656f0\" class=\"ne-p\"><span class=\"ne-text\">响应报文包含一个 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Allow</span></a><span class=\"ne-text\"> 首部字段，该字段的值表明了服务器支持的所有 HTTP 方法：</span></p><pre data-language=\"latex\" id=\"BA5jT\" class=\"ne-codeblock language-latex\">HTTP/1.1 200 OK\nAllow: OPTIONS, GET, HEAD, POST\nCache-Control: max-age=604800\nDate: Thu, 13 Oct 2016 11:45:00 GMT\nExpires: Thu, 20 Oct 2016 11:45:00 GMT\nServer: EOS (lax004/2813)\nx-ec-custom-error: 1\nContent-Length: 0</pre><h5 id=\"xmG9T\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">CORS 中的预检请求</span></h5><p id=\"ufa27b92b\" class=\"ne-p\"><span class=\"ne-text\">在 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">CORS</span></a><span class=\"ne-text\"> 中，可以使用 OPTIONS 方法发起一个预检请求，以检测实际请求是否可以被服务器所接受。预检请求报文中的 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Method\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Method\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Access-Control-Request-Method</span></a><span class=\"ne-text\"> 首部字段告知服务器实际请求所使用的 HTTP 方法；</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Headers\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Headers\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Access-Control-Request-Headers</span></a><span class=\"ne-text\"> 首部字段告知服务器实际请求所携带的自定义首部字段。服务器基于从预检请求获得的信息来判断，是否接受接下来的实际请求。</span></p><pre data-language=\"latex\" id=\"ZOigD\" class=\"ne-codeblock language-latex\">OPTIONS /resources/post-here/ HTTP/1.1\nHost: bar.other\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nConnection: keep-alive\nOrigin: http://foo.example\nAccess-Control-Request-Method: POST\nAccess-Control-Request-Headers: X-PINGOTHER, Content-Type</pre><p id=\"ue1a4bdd2\" class=\"ne-p\"><span class=\"ne-text\">服务器所返回的 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Access-Control-Allow-Methods</span></a><span class=\"ne-text\"> 首部字段将所有允许的请求方法告知客户端。该首部字段与 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Allow</span></a><span class=\"ne-text\"> 类似，但只能用于涉及到 CORS 的场景中。</span></p><pre data-language=\"latex\" id=\"ZCBtf\" class=\"ne-codeblock language-latex\">HTTP/1.1 200 OK\nDate: Mon, 01 Dec 2008 01:15:39 GMT\nServer: Apache/2.0.61 (Unix)\nAccess-Control-Allow-Origin: http://foo.example\nAccess-Control-Allow-Methods: POST, GET, OPTIONS\nAccess-Control-Allow-Headers: X-PINGOTHER, Content-Type\nAccess-Control-Max-Age: 86400\nVary: Accept-Encoding, Origin\nContent-Encoding: gzip\nContent-Length: 0\nKeep-Alive: timeout=2, max=100\nConnection: Keep-Alive\nContent-Type: text/plain</pre><h3 id=\"XzBQK\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">CONNECT</span></h3><p id=\"u5d51cc36\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">CONNECT 方法用于启动与请求资源的双向通信（隧道）。</span></p><div data-type=\"tips\" class=\"ne-alert\"><p id=\"u2310b6a9\" class=\"ne-p\"><span class=\"ne-text\">在 HTTP 协议中，CONNECT 方法可以开启一个客户端与所请求资源之间的双向沟通的通道。它可以用来创建隧道（tunnel）。</span></p><p id=\"u021b9c81\" class=\"ne-p\"><span class=\"ne-text\">例如，CONNECT 可以用来访问采用了 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/SSL\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/SSL\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">SSL</span></a><span class=\"ne-text\"> (</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/https\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/https\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">HTTPS</span></a><span class=\"ne-text\">) 协议的站点。客户端要求代理服务器将 TCP 连接作为通往目的主机隧道。之后该服务器会代替客户端与目的主机建立连接。连接建立好之后，代理服务器会面向客户端发送或接收 TCP 消息流。</span></p><p id=\"udebddbc5\" class=\"ne-p\"><span class=\"ne-text\">CONNECT 是一个应用范围为点到点的方法。</span></p></div><h4 id=\"tdJZp\"><span class=\"ne-text\">例子</span></h4><pre data-language=\"plain\" id=\"bRI7x\" class=\"ne-codeblock language-plain\">CONNECT server.example.com:80 HTTP/1.1\nHost: server.example.com:80\nProxy-Authorization: basic aGVsbG86d29ybGQ=</pre><h3 id=\"qDU4y\"><span class=\"ne-text\">TRACE</span></h3><p id=\"u1f9a6945\" class=\"ne-p\"><span class=\"ne-text\">HTTP TRACE 方法 实现沿通向目标资源的路径的消息环回（loop-back）测试 ，提供了一种实用的 debug 机制。</span></p><p id=\"ua2736b8b\" class=\"ne-p\"><span class=\"ne-text\">请求的最终接收者应当原样反射（reflect）它接收到的消息，除了以下字段部分，作为一个</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Content-Type</span></a><span class=\"ne-text\"> </span><span class=\"ne-text\">为</span><span class=\"ne-text\"> </span><span class=\"ne-text\">message/http</span><span class=\"ne-text\"> </span><span class=\"ne-text\">的 200（OK）响应的消息的主体（body）返回给客户端 。</span></p><p id=\"ua5c0b8e2\" class=\"ne-p\"><span class=\"ne-text\">最终接收者是指初始（origin）服务器，或者第一个接收到 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Max-Forwards\" data-href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Max-Forwards\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Max-Forwards</span></a><span class=\"ne-text\"> 值为 0 的请求的服务器。</span></p></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"paragraphSpacing\" content=\"relax\" /><h2 data-lake-id=\"Bo66Q\" id=\"Bo66Q\"><span data-lake-id=\"udd8c3ad8\" id=\"udd8c3ad8\">各个 http 版本所支持的 method</span></h2><table data-lake-id=\"JwLz3\" id=\"JwLz3\" margin=\"true\" width-mode=\"contain\" class=\"lake-table\" style=\"width: 938px\"><colgroup><col width=\"93\"><col width=\"93\"><col width=\"93\"><col width=\"93\"><col width=\"93\"><col width=\"93\"><col width=\"93\"><col width=\"93\"><col width=\"93\"><col width=\"101\"></colgroup><tbody><tr data-lake-id=\"u82422ca0\" id=\"u82422ca0\" style=\"height: 63px\"><td data-lake-id=\"u1f3906e9\" id=\"u1f3906e9\"><p data-lake-id=\"ue72c6bcc\" id=\"ue72c6bcc\"><span data-lake-id=\"uf73ad207\" id=\"uf73ad207\">​</span><br></p></td><td data-lake-id=\"uf16fe04d\" id=\"uf16fe04d\"><p data-lake-id=\"u7b50cfcc\" id=\"u7b50cfcc\"><a href=\"#SCoN1\" data-lake-id=\"u93566947\" id=\"u93566947\"><span data-lake-id=\"ub4d48df9\" id=\"ub4d48df9\">GET</span></a></p></td><td data-lake-id=\"uec0452ce\" id=\"uec0452ce\"><p data-lake-id=\"ua4f4466e\" id=\"ua4f4466e\"><a href=\"#fpM3o\" data-lake-id=\"u156e19b7\" id=\"u156e19b7\"><span data-lake-id=\"ud3112a78\" id=\"ud3112a78\">POST</span></a></p></td><td data-lake-id=\"ued130928\" id=\"ued130928\"><p data-lake-id=\"u83408db3\" id=\"u83408db3\"><a href=\"#GKUxY\" data-lake-id=\"ue4063b98\" id=\"ue4063b98\"><span data-lake-id=\"u38de469f\" id=\"u38de469f\">HEAD</span></a></p></td><td data-lake-id=\"u664516aa\" id=\"u664516aa\"><p data-lake-id=\"u6c212fa1\" id=\"u6c212fa1\"><a href=\"#QX6KZ\" data-lake-id=\"u33f6dac0\" id=\"u33f6dac0\"><span data-lake-id=\"u8b716ad4\" id=\"u8b716ad4\">PUT</span></a></p></td><td data-lake-id=\"ucba9aa4d\" id=\"ucba9aa4d\"><p data-lake-id=\"u087d3ef7\" id=\"u087d3ef7\"><a href=\"#QonXS\" data-lake-id=\"ud04e0b6f\" id=\"ud04e0b6f\"><span data-lake-id=\"uccdfa072\" id=\"uccdfa072\">DELETE</span></a></p></td><td data-lake-id=\"u27a92dd8\" id=\"u27a92dd8\"><p data-lake-id=\"u4410132d\" id=\"u4410132d\"><a href=\"#pRanL\" data-lake-id=\"u67abd3ee\" id=\"u67abd3ee\"><span data-lake-id=\"u35f47234\" id=\"u35f47234\">PATCH</span></a></p></td><td data-lake-id=\"u7a7dc115\" id=\"u7a7dc115\"><p data-lake-id=\"udb688636\" id=\"udb688636\"><a href=\"#Wby7B\" data-lake-id=\"u9b5b6eeb\" id=\"u9b5b6eeb\"><span data-lake-id=\"u75951508\" id=\"u75951508\">OPTIONS</span></a></p></td><td data-lake-id=\"u9aa3824d\" id=\"u9aa3824d\"><p data-lake-id=\"ubd8a93be\" id=\"ubd8a93be\"><a href=\"#XzBQK\" data-lake-id=\"uea0afd76\" id=\"uea0afd76\"><span data-lake-id=\"u3b336121\" id=\"u3b336121\">CONNECT</span></a></p></td><td data-lake-id=\"u0cc80dac\" id=\"u0cc80dac\"><p data-lake-id=\"u9270fc20\" id=\"u9270fc20\"><a href=\"#qDU4y\" data-lake-id=\"u2e844486\" id=\"u2e844486\"><span data-lake-id=\"u3b16322d\" id=\"u3b16322d\">TRACE</span></a></p></td></tr><tr data-lake-id=\"u797a3292\" id=\"u797a3292\"><td data-lake-id=\"u3284b6ec\" id=\"u3284b6ec\"><p data-lake-id=\"uc8baa09a\" id=\"uc8baa09a\"><span data-lake-id=\"ue91b6556\" id=\"ue91b6556\">http/1.0</span></p></td><td data-lake-id=\"uafe20209\" id=\"uafe20209\"><p data-lake-id=\"ubf6d2c46\" id=\"ubf6d2c46\"><span data-lake-id=\"u2ae4c360\" id=\"u2ae4c360\">✅</span></p></td><td data-lake-id=\"ud5763b61\" id=\"ud5763b61\"><p data-lake-id=\"ueb231fb8\" id=\"ueb231fb8\"><span data-lake-id=\"u68651bc3\" id=\"u68651bc3\">✅</span></p></td><td data-lake-id=\"u9e2d3a85\" id=\"u9e2d3a85\"><p data-lake-id=\"u3300aa7e\" id=\"u3300aa7e\"><span data-lake-id=\"u40824fdb\" id=\"u40824fdb\">✅</span></p></td><td data-lake-id=\"u559e2fe9\" id=\"u559e2fe9\"><p data-lake-id=\"uc121befd\" id=\"uc121befd\"><span data-lake-id=\"ube6696e4\" id=\"ube6696e4\">❌</span></p></td><td data-lake-id=\"ufd357a36\" id=\"ufd357a36\"><p data-lake-id=\"u568b0cdc\" id=\"u568b0cdc\"><span data-lake-id=\"u76beb84f\" id=\"u76beb84f\">❌</span></p></td><td data-lake-id=\"u492940cc\" id=\"u492940cc\"><p data-lake-id=\"uf7552758\" id=\"uf7552758\"><span data-lake-id=\"ue1e0b86e\" id=\"ue1e0b86e\">❌</span></p></td><td data-lake-id=\"u05cb10c2\" id=\"u05cb10c2\"><p data-lake-id=\"u06bdb1f6\" id=\"u06bdb1f6\"><span data-lake-id=\"u40c63269\" id=\"u40c63269\">❌</span></p></td><td data-lake-id=\"ubf93328b\" id=\"ubf93328b\"><p data-lake-id=\"u9e550d59\" id=\"u9e550d59\"><span data-lake-id=\"ua19b0ead\" id=\"ua19b0ead\">❌</span></p></td><td data-lake-id=\"ucf624adf\" id=\"ucf624adf\"><p data-lake-id=\"u8bba0d0d\" id=\"u8bba0d0d\"><span data-lake-id=\"u45bdf870\" id=\"u45bdf870\">❌</span></p></td></tr><tr data-lake-id=\"u367a7bb1\" id=\"u367a7bb1\"><td data-lake-id=\"u91c57957\" id=\"u91c57957\"><p data-lake-id=\"u242f64d7\" id=\"u242f64d7\"><span data-lake-id=\"u7a11fda2\" id=\"u7a11fda2\">http/1.1</span></p></td><td data-lake-id=\"uab8d1311\" id=\"uab8d1311\"><p data-lake-id=\"u7d3e2b62\" id=\"u7d3e2b62\"><span data-lake-id=\"u087707bd\" id=\"u087707bd\">✅</span></p></td><td data-lake-id=\"u29f0bab4\" id=\"u29f0bab4\"><p data-lake-id=\"uae12f5f3\" id=\"uae12f5f3\"><span data-lake-id=\"u615f916d\" id=\"u615f916d\">✅</span></p></td><td data-lake-id=\"ub9fe977d\" id=\"ub9fe977d\"><p data-lake-id=\"u37c75949\" id=\"u37c75949\"><span data-lake-id=\"ufe2a9233\" id=\"ufe2a9233\">✅</span></p></td><td data-lake-id=\"u3aac7146\" id=\"u3aac7146\"><p data-lake-id=\"u613189ef\" id=\"u613189ef\"><span data-lake-id=\"u338ea017\" id=\"u338ea017\">✅</span></p></td><td data-lake-id=\"uf61f355e\" id=\"uf61f355e\"><p data-lake-id=\"uaaa3fb56\" id=\"uaaa3fb56\"><span data-lake-id=\"uacc2042a\" id=\"uacc2042a\">✅</span></p></td><td data-lake-id=\"u39e75c99\" id=\"u39e75c99\"><p data-lake-id=\"u20d834f2\" id=\"u20d834f2\"><span data-lake-id=\"u91b6c8d3\" id=\"u91b6c8d3\">✅</span></p></td><td data-lake-id=\"u87a12d40\" id=\"u87a12d40\"><p data-lake-id=\"udece13f9\" id=\"udece13f9\"><span data-lake-id=\"u8d3f4cb5\" id=\"u8d3f4cb5\">✅</span></p></td><td data-lake-id=\"u9f5b6880\" id=\"u9f5b6880\"><p data-lake-id=\"ue75fcea3\" id=\"ue75fcea3\"><span data-lake-id=\"uc8fd1e8e\" id=\"uc8fd1e8e\">✅</span></p></td><td data-lake-id=\"u7bcd894e\" id=\"u7bcd894e\"><p data-lake-id=\"ubdc24fea\" id=\"ubdc24fea\"><span data-lake-id=\"u412cc9da\" id=\"u412cc9da\">✅</span></p></td></tr></tbody></table><h2 data-lake-id=\"cKrGY\" id=\"cKrGY\"><span data-lake-id=\"u3e469f73\" id=\"u3e469f73\">http 各个 method 介绍</span></h2><h3 data-lake-id=\"SCoN1\" id=\"SCoN1\" collapsed=\"true\"><span data-lake-id=\"ucb364a68\" id=\"ucb364a68\">GET</span></h3><p data-lake-id=\"u144ecc2a\" id=\"u144ecc2a\"><span data-lake-id=\"u27b64f19\" id=\"u27b64f19\">HTTP GET 方法请求指定的资源。使用 GET 的请求应该只用于获取数据。</span></p><h3 data-lake-id=\"fpM3o\" id=\"fpM3o\" collapsed=\"true\"><span data-lake-id=\"u5a0088f8\" id=\"u5a0088f8\">POST</span></h3><p data-lake-id=\"u94667901\" id=\"u94667901\"><span data-lake-id=\"uffb0a44d\" id=\"uffb0a44d\">HTTP POST 方法 发送数据给服务器。请求主体的类型由 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type\" target=\"_blank\" data-lake-id=\"u3aec351b\" id=\"u3aec351b\"><span data-lake-id=\"u473f6924\" id=\"u473f6924\">Content-Type</span></a><span data-lake-id=\"ua479aaa6\" id=\"ua479aaa6\"> 首部指定。</span></p><p data-lake-id=\"u98e5bd61\" id=\"u98e5bd61\"><span data-lake-id=\"u84dc2798\" id=\"u84dc2798\">PUT 和</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" target=\"_blank\" data-lake-id=\"u92ea794e\" id=\"u92ea794e\"><span data-lake-id=\"ub2d4ded6\" id=\"ub2d4ded6\">POST</span></a><span data-lake-id=\"uf87077c1\" id=\"uf87077c1\">方法的区别是，PUT 方法是幂等的：连续调用一次或者多次的效果相同（无副作用）。连续调用同一个 POST 可能会带来额外的影响，比如多次提交订单。</span></p><p data-lake-id=\"u7fe1dbe0\" id=\"u7fe1dbe0\"><span data-lake-id=\"u7dff0dc3\" id=\"u7dff0dc3\">一个</span><span data-lake-id=\"u7cceff0b\" id=\"u7cceff0b\"> </span><span data-lake-id=\"u7221ee93\" id=\"u7221ee93\">POST</span><span data-lake-id=\"u91bfc3a2\" id=\"u91bfc3a2\"> </span><span data-lake-id=\"u8421ada0\" id=\"u8421ada0\">请求通常是通过</span><span data-lake-id=\"ub76748e6\" id=\"ub76748e6\"> </span><a href=\"https://developer.mozilla.org/en-US/docs/Learn/Forms\" target=\"_blank\" data-lake-id=\"ue7704ed2\" id=\"ue7704ed2\"><span data-lake-id=\"u3a318b86\" id=\"u3a318b86\">HTML 表单</span></a><span data-lake-id=\"ua3b873bb\" id=\"ua3b873bb\">发送，并返回服务器的修改结果。在这种情况下，content type 是通过在</span><span data-lake-id=\"ubf2fe6af\" id=\"ubf2fe6af\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form\" target=\"_blank\" data-lake-id=\"u57bf7817\" id=\"u57bf7817\"><span data-lake-id=\"uab6e5c4a\" id=\"uab6e5c4a\">&lt;form&gt;</span></a><span data-lake-id=\"u60f6d713\" id=\"u60f6d713\"> </span><span data-lake-id=\"ua605ba98\" id=\"ua605ba98\">元素中设置正确的</span><span data-lake-id=\"u7393832c\" id=\"u7393832c\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form#attr-enctype\" target=\"_blank\" data-lake-id=\"u76aa1e21\" id=\"u76aa1e21\"><span data-lake-id=\"u53cb009c\" id=\"u53cb009c\">enctype</span></a><span data-lake-id=\"u791a17a0\" id=\"u791a17a0\"> </span><span data-lake-id=\"u3ed69741\" id=\"u3ed69741\">属性，或是在</span><span data-lake-id=\"u14463410\" id=\"u14463410\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input\" target=\"_blank\" data-lake-id=\"u53bfaf5b\" id=\"u53bfaf5b\"><span data-lake-id=\"ue3aa74fb\" id=\"ue3aa74fb\">&lt;input&gt;</span></a><span data-lake-id=\"u9e78efd8\" id=\"u9e78efd8\"> </span><span data-lake-id=\"u6e835b1a\" id=\"u6e835b1a\">和</span><span data-lake-id=\"u5744663f\" id=\"u5744663f\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/button\" target=\"_blank\" data-lake-id=\"uc7efb2d8\" id=\"uc7efb2d8\"><span data-lake-id=\"u08a0d165\" id=\"u08a0d165\">&lt;button&gt;</span></a><span data-lake-id=\"ue573c4f0\" id=\"ue573c4f0\"> </span><span data-lake-id=\"u9c7534f7\" id=\"u9c7534f7\">元素中设置</span><span data-lake-id=\"ubf30feed\" id=\"ubf30feed\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-formenctype\" target=\"_blank\" data-lake-id=\"ud5caf538\" id=\"ud5caf538\"><span data-lake-id=\"u81af3fb6\" id=\"u81af3fb6\">formenctype</span></a><span data-lake-id=\"uafc8610e\" id=\"uafc8610e\"> </span><span data-lake-id=\"ud39d29f4\" id=\"ud39d29f4\">属性来选择的</span><span data-lake-id=\"u642024e0\" id=\"u642024e0\">:</span></p><ul list=\"u3d2f9709\"><li fid=\"u358b373f\" data-lake-id=\"u416a2982\" id=\"u416a2982\"><span data-lake-id=\"u961e8646\" id=\"u961e8646\">application/</span><span data-lake-id=\"u614f9143\" id=\"u614f9143\">x-www-form-urlencoded</span><span data-lake-id=\"u94761629\" id=\"u94761629\">: 数据被编码成以</span><span data-lake-id=\"u733a5769\" id=\"u733a5769\"> </span><span data-lake-id=\"u47ae9450\" id=\"u47ae9450\">'&amp;'</span><span data-lake-id=\"ucee359f8\" id=\"ucee359f8\"> </span><span data-lake-id=\"ucc92c917\" id=\"ucc92c917\">分隔的键 - 值对，同时以</span><span data-lake-id=\"ue730e3fb\" id=\"ue730e3fb\"> </span><span data-lake-id=\"u05f898b9\" id=\"u05f898b9\">'='</span><span data-lake-id=\"ub347f7f9\" id=\"ub347f7f9\"> </span><span data-lake-id=\"u0e1f280d\" id=\"u0e1f280d\">分隔键和值。非字母或数字的字符会被</span><span data-lake-id=\"u808372b2\" id=\"u808372b2\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/percent-encoding\" target=\"_blank\" data-lake-id=\"u21d46ba3\" id=\"u21d46ba3\"><span data-lake-id=\"u4d848a08\" id=\"u4d848a08\">percent-encoding</span></a><span data-lake-id=\"ue2407819\" id=\"ue2407819\">: 这也就是为什么这种类型不支持二进制数据 (应使用</span><span data-lake-id=\"u817c8e16\" id=\"u817c8e16\"> </span><span data-lake-id=\"u18460520\" id=\"u18460520\">multipart/form-data</span><span data-lake-id=\"u79f9030c\" id=\"u79f9030c\"> </span><span data-lake-id=\"u0c5d1ae5\" id=\"u0c5d1ae5\">代替).</span></li><li fid=\"u358b373f\" data-lake-id=\"uf54c493b\" id=\"uf54c493b\"><span data-lake-id=\"uc84ca810\" id=\"uc84ca810\">multipart/form-data</span></li><li fid=\"u358b373f\" data-lake-id=\"ue88b1990\" id=\"ue88b1990\"><span data-lake-id=\"u4ccceaec\" id=\"u4ccceaec\">text/plain</span></li></ul><p data-lake-id=\"u2bb4546d\" id=\"u2bb4546d\"><span data-lake-id=\"u1510f03a\" id=\"u1510f03a\">当 POST 请求是通过除 HTML 表单之外的方式发送时，例如使用</span><span data-lake-id=\"u759fe59c\" id=\"u759fe59c\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest\" target=\"_blank\" data-lake-id=\"u252be445\" id=\"u252be445\"><span data-lake-id=\"u8f9d1064\" id=\"u8f9d1064\">XMLHttpRequest</span></a><span data-lake-id=\"udb641f2e\" id=\"udb641f2e\">, 那么请求主体可以是任何类型。按 HTTP 1.1 规范中描述，POST 为了以统一的方法来涵盖以下功能：</span></p><ul list=\"uab8b256d\"><li fid=\"u1fab67fd\" data-lake-id=\"u55611163\" id=\"u55611163\"><span data-lake-id=\"u86150d7c\" id=\"u86150d7c\">注释已有的资源</span></li><li fid=\"u1fab67fd\" data-lake-id=\"u72045431\" id=\"u72045431\"><span data-lake-id=\"u6a268c43\" id=\"u6a268c43\">在公告板，新闻组，邮件列表或类似的文章组中发布消息;</span></li><li fid=\"u1fab67fd\" data-lake-id=\"u236e2ea2\" id=\"u236e2ea2\"><span data-lake-id=\"uad1df87e\" id=\"uad1df87e\">通过注册新增用户;</span></li><li fid=\"u1fab67fd\" data-lake-id=\"u9f296a87\" id=\"u9f296a87\"><span data-lake-id=\"uc6acb615\" id=\"uc6acb615\">向数据处理程序提供一批数据，例如提交一个表单;</span></li><li fid=\"u1fab67fd\" data-lake-id=\"u589fc215\" id=\"u589fc215\"><span data-lake-id=\"u2c5399c8\" id=\"u2c5399c8\">通过追加操作，扩展数据库数据。</span></li></ul><h4 data-lake-id=\"To9Mk\" id=\"To9Mk\"><span data-lake-id=\"u07e3a37a\" id=\"u07e3a37a\">例子</span></h4><p data-lake-id=\"ud013dc25\" id=\"ud013dc25\"><span data-lake-id=\"u13815d50\" id=\"u13815d50\">使用默认的 application/x-www-form-urlencoded 做为 content type 的简单表单：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22latex%22%2C%22code%22%3A%22POST%20%2F%20HTTP%2F1.1%5CnHost%3A%20foo.com%5CnContent-Type%3A%20application%2Fx-www-form-urlencoded%5CnContent-Length%3A%2013%5Cn%5Cnsay%3DHi%26to%3DMom%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ELc1w%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u559c1f18\" id=\"u559c1f18\"><span data-lake-id=\"u1f89d782\" id=\"u1f89d782\">使用 multipart/form-data 作为 content type 的表单：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22POST%20%2Ftest.html%20HTTP%2F1.1%5CnHost%3A%20example.org%5CnContent-Type%3A%20multipart%2Fform-data%3Bboundary%3D%5C%22boundary%5C%22%5Cn%5Cn--boundary%5CnContent-Disposition%3A%20form-data%3B%20name%3D%5C%22field1%5C%22%5Cn%5Cnvalue1%5Cn--boundary%5CnContent-Disposition%3A%20form-data%3B%20name%3D%5C%22field2%5C%22%3B%20filename%3D%5C%22example.txt%5C%22%5Cn%5Cnvalue2%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Bsq4W%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"GKUxY\" id=\"GKUxY\" collapsed=\"true\"><span data-lake-id=\"uce456857\" id=\"uce456857\">HEAD</span></h3><p data-lake-id=\"udbb501b3\" id=\"udbb501b3\"><span data-lake-id=\"u19ed4974\" id=\"u19ed4974\">HEAD 几乎与 GET 相同，但没有响应正文。</span></p><p data-lake-id=\"ua3f3a213\" id=\"ua3f3a213\"><span data-lake-id=\"uf2f29390\" id=\"uf2f29390\">换句话说，如果 GET /users 返回用户列表，那么 HEAD /users 将发出相同的请求，但不会返回用户列表。</span></p><p data-lake-id=\"ue904f69d\" id=\"ue904f69d\"><span data-lake-id=\"u0cda03e0\" id=\"u0cda03e0\">HEAD 请求对于在实际发出 GET 请求之前检查 GET 请求将返回的内容很有用——比如在下载大文件或响应正文之前。</span></p><blockquote data-lake-id=\"u1dd34b68\" id=\"u1dd34b68\" class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"ub2c60042\" id=\"ub2c60042\"><span data-lake-id=\"u90833b16\" id=\"u90833b16\">HTTP HEAD 方法请求资源的头部信息，并且这些头部与 HTTP </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" target=\"_blank\" data-lake-id=\"u0bcc95f8\" id=\"u0bcc95f8\"><span data-lake-id=\"ucadd02ad\" id=\"ucadd02ad\">GET</span></a><span data-lake-id=\"u061f39a4\" id=\"u061f39a4\"> 方法请求时返回的一致。该请求方法的一个使用场景是在下载一个大文件前先获取其大小再决定是否要下载，以此可以节约带宽资源。</span></p><p data-lake-id=\"u6552048d\" id=\"u6552048d\"><span data-lake-id=\"ud77d79fb\" id=\"ud77d79fb\">HEAD</span><span data-lake-id=\"uf3679d2a\" id=\"uf3679d2a\"> </span><span data-lake-id=\"u53f7397a\" id=\"u53f7397a\">方法的响应不应包含响应正文。即使包含了正文也必须忽略掉. 虽然描述正文信息的</span><span data-lake-id=\"u4ff354f3\" id=\"u4ff354f3\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Entity_header\" target=\"_blank\" data-lake-id=\"u6976a604\" id=\"u6976a604\"><span data-lake-id=\"uce72cfb8\" id=\"uce72cfb8\">entity headers</span></a><span data-lake-id=\"uc932c74e\" id=\"uc932c74e\">, 例如</span><span data-lake-id=\"u75ec75dd\" id=\"u75ec75dd\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Length\" target=\"_blank\" data-lake-id=\"u7b083bec\" id=\"u7b083bec\"><span data-lake-id=\"u74a4d0e7\" id=\"u74a4d0e7\">Content-Length</span></a><span data-lake-id=\"u307f430f\" id=\"u307f430f\"> </span><span data-lake-id=\"u6b4156b7\" id=\"u6b4156b7\">可能会包含在响应中，但它们并不是用来描述</span><span data-lake-id=\"uced74e6e\" id=\"uced74e6e\"> </span><span data-lake-id=\"u6e8e00d0\" id=\"u6e8e00d0\">HEAD</span><span data-lake-id=\"u0c0a68bf\" id=\"u0c0a68bf\"> </span><span data-lake-id=\"uf69bc855\" id=\"uf69bc855\">响应本身的，而是用来描述同样情况下的</span><span data-lake-id=\"u5dd99c0f\" id=\"u5dd99c0f\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" target=\"_blank\" data-lake-id=\"u851a1830\" id=\"u851a1830\"><span data-lake-id=\"uccb3d593\" id=\"uccb3d593\">GET</span></a><span data-lake-id=\"u579b9f0f\" id=\"u579b9f0f\"> </span><span data-lake-id=\"u89d64f1f\" id=\"u89d64f1f\">请求应该返回的响应。</span></p><p data-lake-id=\"u5e08ad31\" id=\"u5e08ad31\"><span data-lake-id=\"u8da92ce2\" id=\"u8da92ce2\">如果 HEAD 请求的结果显示在上一次 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" target=\"_blank\" data-lake-id=\"u43c01d41\" id=\"u43c01d41\"><span data-lake-id=\"u5eda9a88\" id=\"u5eda9a88\">GET</span></a><span data-lake-id=\"u9d9f6852\" id=\"u9d9f6852\"> 请求后缓存的资源已经过期了，即使没有发出</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/GET\" target=\"_blank\" data-lake-id=\"u3639aea6\" id=\"u3639aea6\"><span data-lake-id=\"uafe3031d\" id=\"uafe3031d\">GET</span></a><span data-lake-id=\"u193791da\" id=\"u193791da\">请求，缓存也会失效</span></p></blockquote><h4 data-lake-id=\"fmoX9\" id=\"fmoX9\"><span data-lake-id=\"uc9cf7d91\" id=\"uc9cf7d91\">例子</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22latex%22%2C%22code%22%3A%22HEAD%20%2Findex.html%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ImIjE%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"QX6KZ\" id=\"QX6KZ\" collapsed=\"true\"><span data-lake-id=\"u9d86ad74\" id=\"u9d86ad74\">PUT</span></h3><p data-lake-id=\"u557b41d6\" id=\"u557b41d6\"><span data-lake-id=\"ub86bfb4d\" id=\"ub86bfb4d\">HTTP PUT 请求方法使用请求中的负载创建或者替换目标资源。</span></p><p data-lake-id=\"u5afdf114\" id=\"u5afdf114\"><span data-lake-id=\"u7980e489\" id=\"u7980e489\">PUT 与 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" target=\"_blank\" data-lake-id=\"u9f1e3ad7\" id=\"u9f1e3ad7\"><span data-lake-id=\"u7fdfc1bf\" id=\"u7fdfc1bf\">POST</span></a><span data-lake-id=\"ua69af8c4\" id=\"ua69af8c4\"> 方法的区别在于，PUT 方法是幂等的：调用一次与连续调用多次是等价的（即没有副作用），而连续调用多次 POST 方法可能会有副作用，比如将一个订单重复提交多次。</span></p><h4 data-lake-id=\"FFmPo\" id=\"FFmPo\"><span data-lake-id=\"u18512b50\" id=\"u18512b50\">例子</span></h4><h5 data-lake-id=\"XNFtl\" id=\"XNFtl\"><span data-lake-id=\"u77d212c0\" id=\"u77d212c0\">请求</span></h5><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22latex%22%2C%22code%22%3A%22PUT%20%2Fnew.html%20HTTP%2F1.1%5CnHost%3A%20example.com%5CnContent-type%3A%20text%2Fhtml%5CnContent-length%3A%2016%5Cn%5Cn%3Cp%3ENew%20File%3C%2Fp%3E%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ulG0Z%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h5 data-lake-id=\"DT2jH\" id=\"DT2jH\"><span data-lake-id=\"u34a729ae\" id=\"u34a729ae\">响应</span></h5><p data-lake-id=\"u0e22b343\" id=\"u0e22b343\"><span data-lake-id=\"u389d66c2\" id=\"u389d66c2\">如果目标资源不存在，并且 PUT 方法成功创建了一份，那么源头服务器必须返回</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/201\" target=\"_blank\" data-lake-id=\"u422384fa\" id=\"u422384fa\"><span data-lake-id=\"u4ae0df69\" id=\"u4ae0df69\">201</span></a><span data-lake-id=\"u1f5745f5\" id=\"u1f5745f5\"> (Created) 来通知客户端资源已创建。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22latex%22%2C%22code%22%3A%22HTTP%2F1.1%20201%20Created%5CnContent-Location%3A%20%2Fnew.html%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22HGgMr%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ue6662e5e\" id=\"ue6662e5e\"><span data-lake-id=\"ua6b31ef2\" id=\"ua6b31ef2\">如果目标资源已经存在，并且依照请求中封装的表现形式成功进行了更新，那么，源头服务器必须返回</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200\" target=\"_blank\" data-lake-id=\"uea529d72\" id=\"uea529d72\"><span data-lake-id=\"ub603edb3\" id=\"ub603edb3\">200</span></a><span data-lake-id=\"u59eb7518\" id=\"u59eb7518\"> (OK) 或者</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" target=\"_blank\" data-lake-id=\"u38d6928d\" id=\"u38d6928d\"><span data-lake-id=\"u961609c7\" id=\"u961609c7\">204</span></a><span data-lake-id=\"u54d70499\" id=\"u54d70499\"> (No Content) 来表示请求的成功完成。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22latex%22%2C%22code%22%3A%22HTTP%2F1.1%20204%20No%20Content%5CnContent-Location%3A%20%2Fexisting.html%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22jDNJl%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"QonXS\" id=\"QonXS\" collapsed=\"true\"><span data-lake-id=\"u727fed5d\" id=\"u727fed5d\">DELETE</span></h3><p data-lake-id=\"u8e4cbbac\" id=\"u8e4cbbac\"><span data-lake-id=\"u3e6e8b44\" id=\"u3e6e8b44\" style=\"color: rgb(0, 0, 0)\">DELETE 方法删除指定的资源。</span></p><h4 data-lake-id=\"aye5L\" id=\"aye5L\"><span data-lake-id=\"uaf2420b2\" id=\"uaf2420b2\" style=\"color: rgb(0, 0, 0)\">例子</span></h4><h5 data-lake-id=\"doXt2\" id=\"doXt2\"><span data-lake-id=\"u3292f572\" id=\"u3292f572\">请求</span></h5><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22DELETE%20%2Ffile.html%20HTTP%2F1.1%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22flxOZ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h5 data-lake-id=\"EnXAy\" id=\"EnXAy\"><span data-lake-id=\"ua78766bc\" id=\"ua78766bc\">响应</span></h5><ul list=\"u48bb7d65\"><li fid=\"u76912524\" data-lake-id=\"u28f79892\" id=\"u28f79892\"><span data-lake-id=\"udbc9f77c\" id=\"udbc9f77c\">如果 DELETE 方法成功执行，那么可能会有以下几种状态码：</span></li></ul><ul list=\"u48bb7d65\" data-lake-indent=\"1\"><li fid=\"u76912524\" data-lake-id=\"uac78191a\" id=\"uac78191a\"><span data-lake-id=\"ub4883c54\" id=\"ub4883c54\">状态码</span><span data-lake-id=\"u14848f7a\" id=\"u14848f7a\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/202\" target=\"_blank\" data-lake-id=\"ueb1d1bb2\" id=\"ueb1d1bb2\"><span data-lake-id=\"udb01cec2\" id=\"udb01cec2\">202</span></a><span data-lake-id=\"ub218acf0\" id=\"ub218acf0\"> </span><span data-lake-id=\"uda64316f\" id=\"uda64316f\">(</span><span data-lake-id=\"u9d3aa82d\" id=\"u9d3aa82d\">Accepted</span><span data-lake-id=\"ua8402a54\" id=\"ua8402a54\">) 表示请求的操作可能会成功执行，但是尚未开始执行。</span></li><li fid=\"u76912524\" data-lake-id=\"uda20b3cf\" id=\"uda20b3cf\"><span data-lake-id=\"u51117200\" id=\"u51117200\">状态码</span><span data-lake-id=\"u4f9b55d2\" id=\"u4f9b55d2\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" target=\"_blank\" data-lake-id=\"u43765900\" id=\"u43765900\"><span data-lake-id=\"uac534900\" id=\"uac534900\">204</span></a><span data-lake-id=\"uf094964a\" id=\"uf094964a\"> </span><span data-lake-id=\"uc7182ac4\" id=\"uc7182ac4\">(</span><span data-lake-id=\"u64124eb4\" id=\"u64124eb4\">No Content</span><span data-lake-id=\"ue5dfc7a8\" id=\"ue5dfc7a8\">) 表示操作已执行，但是无进一步的相关信息。</span></li><li fid=\"u76912524\" data-lake-id=\"u4e2a95b8\" id=\"u4e2a95b8\"><span data-lake-id=\"uc380dfa7\" id=\"uc380dfa7\">状态码 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/200\" target=\"_blank\" data-lake-id=\"u8f30819c\" id=\"u8f30819c\"><span data-lake-id=\"uf06e4374\" id=\"uf06e4374\">200</span></a><span data-lake-id=\"u76c175ee\" id=\"u76c175ee\"> (OK) 表示操作已执行，并且响应中提供了相关状态的描述信息。</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22HTTP%2F1.1%20200%20OK%5CnDate%3A%20Wed%2C%2021%20Oct%202015%2007%3A28%3A00%20GMT%5Cn%5Cn%3Chtml%3E%5Cn%20%20%3Cbody%3E%5Cn%20%20%20%20%3Ch1%3EFile%20deleted.%3C%2Fh1%3E%5Cn%20%20%3C%2Fbody%3E%5Cn%3C%2Fhtml%3E%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22D62Lz%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"pRanL\" id=\"pRanL\" collapsed=\"true\"><span data-lake-id=\"ud7648b7e\" id=\"ud7648b7e\" style=\"color: rgb(0, 0, 0)\">PATCH</span></h3><p data-lake-id=\"u1ff76231\" id=\"u1ff76231\"><span data-lake-id=\"ua8a8dd1b\" id=\"ua8a8dd1b\" style=\"color: rgb(0, 0, 0)\">PATCH 方法用于对资源应用部分修改。</span></p><blockquote data-lake-id=\"u4da5e472\" id=\"u4da5e472\" class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"ubd162fb4\" id=\"ubd162fb4\"><span data-lake-id=\"ucde3283a\" id=\"ucde3283a\">在 HTTP 协议中，请求方法 PATCH 用于对资源进行部分修改。</span></p><p data-lake-id=\"u1bd451f4\" id=\"u1bd451f4\"><span data-lake-id=\"ua1ef9073\" id=\"ua1ef9073\">在 HTTP 协议中，</span><span data-lake-id=\"u9a37b203\" id=\"u9a37b203\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/PUT\" target=\"_blank\" data-lake-id=\"u276ce964\" id=\"u276ce964\"><span data-lake-id=\"u2959dc71\" id=\"u2959dc71\">PUT</span></a><span data-lake-id=\"u7d4b6a46\" id=\"u7d4b6a46\"> </span><span data-lake-id=\"ua8d5a499\" id=\"ua8d5a499\">方法已经被用来表示对资源进行整体覆盖， 而</span><span data-lake-id=\"u84558c1d\" id=\"u84558c1d\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST\" target=\"_blank\" data-lake-id=\"u1b07dac3\" id=\"u1b07dac3\"><span data-lake-id=\"ue52ae77c\" id=\"ue52ae77c\">POST</span></a><span data-lake-id=\"u210968b3\" id=\"u210968b3\"> </span><span data-lake-id=\"u4db5ed6d\" id=\"u4db5ed6d\">方法则没有对标准的补丁格式的提供支持。不同于</span><span data-lake-id=\"ub5447133\" id=\"ub5447133\"> </span><span data-lake-id=\"u73560702\" id=\"u73560702\">PUT</span><span data-lake-id=\"u08e690e6\" id=\"u08e690e6\"> </span><span data-lake-id=\"u3b2267bd\" id=\"u3b2267bd\">方法，而与</span><span data-lake-id=\"uadfda3a5\" id=\"uadfda3a5\"> </span><span data-lake-id=\"udaa107e6\" id=\"udaa107e6\">POST</span><span data-lake-id=\"uf62dae0e\" id=\"uf62dae0e\"> </span><span data-lake-id=\"u71112424\" id=\"u71112424\">方法类似，</span><span data-lake-id=\"u04df9318\" id=\"u04df9318\">PATCH</span><span data-lake-id=\"u3dcd8a9c\" id=\"u3dcd8a9c\"> </span><span data-lake-id=\"u57522d0e\" id=\"u57522d0e\">方法是非幂等的，这就意味着连续多个的相同请求会产生不同的效果。</span></p><p data-lake-id=\"ub77cc28d\" id=\"ub77cc28d\"><span data-lake-id=\"u5034fcda\" id=\"u5034fcda\">要判断一台服务器是否支持</span><span data-lake-id=\"ub8255067\" id=\"ub8255067\"> </span><span data-lake-id=\"u5a385c05\" id=\"u5a385c05\">PATCH</span><span data-lake-id=\"u7ae7eb5d\" id=\"u7ae7eb5d\"> </span><span data-lake-id=\"u170f559e\" id=\"u170f559e\">方法，那么就看它是否将其添加到了响应首部</span><span data-lake-id=\"u18503190\" id=\"u18503190\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" target=\"_blank\" data-lake-id=\"u11018e24\" id=\"u11018e24\"><span data-lake-id=\"u2e177e12\" id=\"u2e177e12\">Allow</span></a><span data-lake-id=\"u6bef3ab7\" id=\"u6bef3ab7\"> </span><span data-lake-id=\"ua9a2e9c8\" id=\"ua9a2e9c8\">或者</span><span data-lake-id=\"u7102c8e9\" id=\"u7102c8e9\"> </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods\" target=\"_blank\" data-lake-id=\"u49326fc1\" id=\"u49326fc1\"><span data-lake-id=\"u85a69b6b\" id=\"u85a69b6b\">Access-Control-Allow-Methods</span></a><span data-lake-id=\"u8e7aa117\" id=\"u8e7aa117\">（在跨域访问的场合，CORS）的方法列表中 。</span></p><p data-lake-id=\"u808b1cf1\" id=\"u808b1cf1\"><span data-lake-id=\"ud62fcb94\" id=\"ud62fcb94\">另外一个支持 PATCH 方法的隐含迹象是 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Accept-Patch\" target=\"_blank\" data-lake-id=\"ua6e389fc\" id=\"ua6e389fc\"><span data-lake-id=\"uf47cf521\" id=\"uf47cf521\">Accept-Patch</span></a><span data-lake-id=\"u3ba09e40\" id=\"u3ba09e40\"> 首部的出现，这个首部明确了服务器端可以接受的补丁文件的格式。</span></p></blockquote><h4 data-lake-id=\"fzDyJ\" id=\"fzDyJ\"><span data-lake-id=\"uadbefcc5\" id=\"uadbefcc5\" style=\"color: rgb(0, 0, 0)\">例子</span></h4><h5 data-lake-id=\"XUjMx\" id=\"XUjMx\"><span data-lake-id=\"ue05f3d7c\" id=\"ue05f3d7c\">请求</span></h5><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22latex%22%2C%22code%22%3A%22PATCH%20%2Ffile.txt%20HTTP%2F1.1%5CnHost%3A%20www.example.com%5CnContent-Type%3A%20application%2Fexample%5CnIf-Match%3A%20%5C%22e0023aa4e%5C%22%5CnContent-Length%3A%20100%5Cn%5Cn%5Bdescription%20of%20changes%5D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Y33il%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h5 data-lake-id=\"e4z7T\" id=\"e4z7T\"><span data-lake-id=\"u29b188d7\" id=\"u29b188d7\" style=\"color: rgb(0, 0, 0)\">响应</span></h5><p data-lake-id=\"ue5734f26\" id=\"ue5734f26\"><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/204\" target=\"_blank\" data-lake-id=\"u4981fb9b\" id=\"u4981fb9b\"><span data-lake-id=\"u2fc0e8b3\" id=\"u2fc0e8b3\">204</span></a><span data-lake-id=\"ue6a53ee8\" id=\"ue6a53ee8\"> 状态码表示这是一个操作成功的响应，因为响应中不带有消息主体。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22latex%22%2C%22code%22%3A%22HTTP%2F1.1%20204%20No%20Content%5CnContent-Location%3A%20%2Ffile.txt%5CnETag%3A%20%5C%22e0023aa4f%5C%22%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22kYZf8%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"Wby7B\" id=\"Wby7B\" collapsed=\"true\"><span data-lake-id=\"u76fe6977\" id=\"u76fe6977\">OPTIONS</span></h3><p data-lake-id=\"uc861e355\" id=\"uc861e355\"><span data-lake-id=\"uf2704afd\" id=\"uf2704afd\" style=\"color: rgb(0, 0, 0)\">OPTIONS 方法描述了目标资源的通信选项。</span></p><blockquote data-lake-id=\"u23ca83a1\" id=\"u23ca83a1\" class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"ufbd5d9d6\" id=\"ufbd5d9d6\"><span data-lake-id=\"ubcc25679\" id=\"ubcc25679\">HTTP 的 OPTIONS 方法用于获取目的资源所支持的通信选项。客户端可以对特定的 URL 使用 OPTIONS 方法，也可以对整站（通过将 URL 设置为“*”）使用该方法。</span></p></blockquote><h4 data-lake-id=\"i4K2g\" id=\"i4K2g\"><span data-lake-id=\"u8693b10e\" id=\"u8693b10e\" style=\"color: rgb(0, 0, 0)\">例子</span></h4><h5 data-lake-id=\"z4voM\" id=\"z4voM\"><span data-lake-id=\"u54ac8084\" id=\"u54ac8084\">检测服务器所支持的请求方法</span></h5><p data-lake-id=\"ud1fa5957\" id=\"ud1fa5957\"><span data-lake-id=\"u1ddc4edf\" id=\"u1ddc4edf\">可以使用 OPTIONS 方法对服务器发起请求，以检测服务器支持哪些 HTTP 方法：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22latex%22%2C%22code%22%3A%22curl%20-X%20OPTIONS%20http%3A%2F%2Fexample.org%20-i%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22BwiWX%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ube6656f0\" id=\"ube6656f0\"><span data-lake-id=\"u6dc36c72\" id=\"u6dc36c72\">响应报文包含一个 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" target=\"_blank\" data-lake-id=\"u66d7ee85\" id=\"u66d7ee85\"><span data-lake-id=\"ua9f49f4a\" id=\"ua9f49f4a\">Allow</span></a><span data-lake-id=\"u5cb9c912\" id=\"u5cb9c912\"> 首部字段，该字段的值表明了服务器支持的所有 HTTP 方法：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22latex%22%2C%22code%22%3A%22HTTP%2F1.1%20200%20OK%5CnAllow%3A%20OPTIONS%2C%20GET%2C%20HEAD%2C%20POST%5CnCache-Control%3A%20max-age%3D604800%5CnDate%3A%20Thu%2C%2013%20Oct%202016%2011%3A45%3A00%20GMT%5CnExpires%3A%20Thu%2C%2020%20Oct%202016%2011%3A45%3A00%20GMT%5CnServer%3A%20EOS%20(lax004%2F2813)%5Cnx-ec-custom-error%3A%201%5CnContent-Length%3A%200%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22BA5jT%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h5 data-lake-id=\"xmG9T\" id=\"xmG9T\"><span data-lake-id=\"u3cad7974\" id=\"u3cad7974\" style=\"color: rgb(0, 0, 0)\">CORS 中的预检请求</span></h5><p data-lake-id=\"ufa27b92b\" id=\"ufa27b92b\"><span data-lake-id=\"u02fb7bc1\" id=\"u02fb7bc1\">在 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS\" target=\"_blank\" data-lake-id=\"u4e250536\" id=\"u4e250536\"><span data-lake-id=\"ue37bcd3b\" id=\"ue37bcd3b\">CORS</span></a><span data-lake-id=\"u7b9a931c\" id=\"u7b9a931c\"> 中，可以使用 OPTIONS 方法发起一个预检请求，以检测实际请求是否可以被服务器所接受。预检请求报文中的 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Method\" target=\"_blank\" data-lake-id=\"ud4df5891\" id=\"ud4df5891\"><span data-lake-id=\"u6272273c\" id=\"u6272273c\">Access-Control-Request-Method</span></a><span data-lake-id=\"uea8e4451\" id=\"uea8e4451\"> 首部字段告知服务器实际请求所使用的 HTTP 方法；</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Request-Headers\" target=\"_blank\" data-lake-id=\"u9f6336b6\" id=\"u9f6336b6\"><span data-lake-id=\"u03cf93d3\" id=\"u03cf93d3\">Access-Control-Request-Headers</span></a><span data-lake-id=\"uc6f9c84f\" id=\"uc6f9c84f\"> 首部字段告知服务器实际请求所携带的自定义首部字段。服务器基于从预检请求获得的信息来判断，是否接受接下来的实际请求。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22latex%22%2C%22code%22%3A%22OPTIONS%20%2Fresources%2Fpost-here%2F%20HTTP%2F1.1%5CnHost%3A%20bar.other%5CnAccept%3A%20text%2Fhtml%2Capplication%2Fxhtml%2Bxml%2Capplication%2Fxml%3Bq%3D0.9%2C*%2F*%3Bq%3D0.8%5CnAccept-Language%3A%20en-us%2Cen%3Bq%3D0.5%5CnAccept-Encoding%3A%20gzip%2Cdeflate%5CnAccept-Charset%3A%20ISO-8859-1%2Cutf-8%3Bq%3D0.7%2C*%3Bq%3D0.7%5CnConnection%3A%20keep-alive%5CnOrigin%3A%20http%3A%2F%2Ffoo.example%5CnAccess-Control-Request-Method%3A%20POST%5CnAccess-Control-Request-Headers%3A%20X-PINGOTHER%2C%20Content-Type%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ZOigD%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ue1a4bdd2\" id=\"ue1a4bdd2\"><span data-lake-id=\"u4216a7f0\" id=\"u4216a7f0\">服务器所返回的 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Methods\" target=\"_blank\" data-lake-id=\"u38d921e1\" id=\"u38d921e1\"><span data-lake-id=\"uaff9045d\" id=\"uaff9045d\">Access-Control-Allow-Methods</span></a><span data-lake-id=\"u0ebfd58d\" id=\"u0ebfd58d\"> 首部字段将所有允许的请求方法告知客户端。该首部字段与 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Allow\" target=\"_blank\" data-lake-id=\"ue7632671\" id=\"ue7632671\"><span data-lake-id=\"u1566a70a\" id=\"u1566a70a\">Allow</span></a><span data-lake-id=\"ucc213eea\" id=\"ucc213eea\"> 类似，但只能用于涉及到 CORS 的场景中。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22latex%22%2C%22code%22%3A%22HTTP%2F1.1%20200%20OK%5CnDate%3A%20Mon%2C%2001%20Dec%202008%2001%3A15%3A39%20GMT%5CnServer%3A%20Apache%2F2.0.61%20(Unix)%5CnAccess-Control-Allow-Origin%3A%20http%3A%2F%2Ffoo.example%5CnAccess-Control-Allow-Methods%3A%20POST%2C%20GET%2C%20OPTIONS%5CnAccess-Control-Allow-Headers%3A%20X-PINGOTHER%2C%20Content-Type%5CnAccess-Control-Max-Age%3A%2086400%5CnVary%3A%20Accept-Encoding%2C%20Origin%5CnContent-Encoding%3A%20gzip%5CnContent-Length%3A%200%5CnKeep-Alive%3A%20timeout%3D2%2C%20max%3D100%5CnConnection%3A%20Keep-Alive%5CnContent-Type%3A%20text%2Fplain%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ZCBtf%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"XzBQK\" id=\"XzBQK\" collapsed=\"true\"><span data-lake-id=\"u03946dd8\" id=\"u03946dd8\" style=\"color: rgb(0, 0, 0)\">CONNECT</span></h3><p data-lake-id=\"u5d51cc36\" id=\"u5d51cc36\"><span data-lake-id=\"u5fa43ba3\" id=\"u5fa43ba3\" style=\"color: rgb(0, 0, 0)\">CONNECT 方法用于启动与请求资源的双向通信（隧道）。</span></p><blockquote data-lake-id=\"ufb8da5fb\" id=\"ufb8da5fb\" class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"u2310b6a9\" id=\"u2310b6a9\"><span data-lake-id=\"ub33c8fa1\" id=\"ub33c8fa1\">在 HTTP 协议中，CONNECT 方法可以开启一个客户端与所请求资源之间的双向沟通的通道。它可以用来创建隧道（tunnel）。</span></p><p data-lake-id=\"u021b9c81\" id=\"u021b9c81\"><span data-lake-id=\"u46613c5f\" id=\"u46613c5f\">例如，CONNECT 可以用来访问采用了 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/SSL\" target=\"_blank\" data-lake-id=\"ua853083a\" id=\"ua853083a\"><span data-lake-id=\"uaa9b8845\" id=\"uaa9b8845\">SSL</span></a><span data-lake-id=\"u425d5444\" id=\"u425d5444\"> (</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/https\" target=\"_blank\" data-lake-id=\"u9bb2b8e2\" id=\"u9bb2b8e2\"><span data-lake-id=\"u1731f37c\" id=\"u1731f37c\">HTTPS</span></a><span data-lake-id=\"u663da462\" id=\"u663da462\">) 协议的站点。客户端要求代理服务器将 TCP 连接作为通往目的主机隧道。之后该服务器会代替客户端与目的主机建立连接。连接建立好之后，代理服务器会面向客户端发送或接收 TCP 消息流。</span></p><p data-lake-id=\"udebddbc5\" id=\"udebddbc5\"><span data-lake-id=\"u6bcf34dd\" id=\"u6bcf34dd\">CONNECT 是一个应用范围为点到点的方法。</span></p></blockquote><h4 data-lake-id=\"tdJZp\" id=\"tdJZp\"><span data-lake-id=\"uef91eb5e\" id=\"uef91eb5e\">例子</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22CONNECT%20server.example.com%3A80%20HTTP%2F1.1%5CnHost%3A%20server.example.com%3A80%5CnProxy-Authorization%3A%20basic%20aGVsbG86d29ybGQ%3D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22bRI7x%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"qDU4y\" id=\"qDU4y\" collapsed=\"true\"><span data-lake-id=\"ua37be89e\" id=\"ua37be89e\">TRACE</span></h3><p data-lake-id=\"u1f9a6945\" id=\"u1f9a6945\"><span data-lake-id=\"ufd7ca68f\" id=\"ufd7ca68f\">HTTP TRACE 方法 实现沿通向目标资源的路径的消息环回（loop-back）测试 ，提供了一种实用的 debug 机制。</span></p><p data-lake-id=\"ua2736b8b\" id=\"ua2736b8b\"><span data-lake-id=\"u64d025f2\" id=\"u64d025f2\">请求的最终接收者应当原样反射（reflect）它接收到的消息，除了以下字段部分，作为一个</span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type\" target=\"_blank\" data-lake-id=\"u2076416b\" id=\"u2076416b\"><span data-lake-id=\"ua4f9b8d6\" id=\"ua4f9b8d6\">Content-Type</span></a><span data-lake-id=\"u462c1fa3\" id=\"u462c1fa3\"> </span><span data-lake-id=\"ue6d3f5a3\" id=\"ue6d3f5a3\">为</span><span data-lake-id=\"uf6cb0679\" id=\"uf6cb0679\"> </span><span data-lake-id=\"u2c3562b7\" id=\"u2c3562b7\">message/http</span><span data-lake-id=\"u2caf3a48\" id=\"u2caf3a48\"> </span><span data-lake-id=\"u888839f9\" id=\"u888839f9\">的 200（OK）响应的消息的主体（body）返回给客户端 。</span></p><p data-lake-id=\"ua5c0b8e2\" id=\"ua5c0b8e2\"><span data-lake-id=\"u45d6c2c4\" id=\"u45d6c2c4\">最终接收者是指初始（origin）服务器，或者第一个接收到 </span><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Max-Forwards\" target=\"_blank\" data-lake-id=\"u06e6a544\" id=\"u06e6a544\"><span data-lake-id=\"u3114ed29\" id=\"u3114ed29\">Max-Forwards</span></a><span data-lake-id=\"u0d88d585\" id=\"u0d88d585\"> 值为 0 的请求的服务器。</span></p>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 2308,
  "created_at": "2022-08-04T03:06:54.000Z",
  "updated_at": "2022-08-04T03:42:16.000Z",
  "content_updated_at": "2022-08-04T03:42:16.000Z",
  "published_at": "2022-08-04T03:42:16.000Z",
  "first_published_at": "2022-08-04T03:11:39.850Z",
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "toc_yml": "- type: META\n  count: 266\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 372566485\n  published: true\n  max_level: 3\n  last_updated_at: 2023-11-19T17:42:04.477Z\n  version_id: 372566559\n- type: TITLE\n  title: Html\n  uuid: SGxU5CjqNEcbiuCZ\n  url: ''\n  prev_uuid: ''\n  sibling_uuid: zGMd5d7cJrlxTWC4\n  child_uuid: mg4resPTI5OX8qJv\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: DOM 和 BOM\n  uuid: mg4resPTI5OX8qJv\n  url: wi8m4d\n  prev_uuid: SGxU5CjqNEcbiuCZ\n  sibling_uuid: 0QwKgmDym3ugd0Sy\n  child_uuid: ''\n  parent_uuid: SGxU5CjqNEcbiuCZ\n  doc_id: 72212235\n  level: 1\n  id: 72212235\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 行内元素、块元素、空元素\n  uuid: 0QwKgmDym3ugd0Sy\n  url: iiw9gy\n  prev_uuid: mg4resPTI5OX8qJv\n  sibling_uuid: pSprvwAkoJCOsbn4\n  child_uuid: ''\n  parent_uuid: SGxU5CjqNEcbiuCZ\n  doc_id: 72212238\n  level: 1\n  id: 72212238\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: web worker\n  uuid: pSprvwAkoJCOsbn4\n  url: orgrng\n  prev_uuid: 0QwKgmDym3ugd0Sy\n  sibling_uuid: M9_OGyccVAlBlvhk\n  child_uuid: ''\n  parent_uuid: SGxU5CjqNEcbiuCZ\n  doc_id: 72212240\n  level: 1\n  id: 72212240\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: html5 离线储存相关问题\n  uuid: M9_OGyccVAlBlvhk\n  url: lefokp\n  prev_uuid: pSprvwAkoJCOsbn4\n  sibling_uuid: YJKrEyielhl4Nuav\n  child_uuid: ''\n  parent_uuid: SGxU5CjqNEcbiuCZ\n  doc_id: 72212243\n  level: 1\n  id: 72212243\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: html5 拖拽 api\n  uuid: YJKrEyielhl4Nuav\n  url: lfb4ol\n  prev_uuid: M9_OGyccVAlBlvhk\n  sibling_uuid: yh3hn6VjMiW-J-D0\n  child_uuid: ''\n  parent_uuid: SGxU5CjqNEcbiuCZ\n  doc_id: 72212244\n  level: 1\n  id: 72212244\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: <script>标签\n  uuid: yh3hn6VjMiW-J-D0\n  url: qtgnxp\n  prev_uuid: YJKrEyielhl4Nuav\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: SGxU5CjqNEcbiuCZ\n  doc_id: 72212241\n  level: 1\n  id: 72212241\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: CSS\n  uuid: zGMd5d7cJrlxTWC4\n  url: ''\n  prev_uuid: SGxU5CjqNEcbiuCZ\n  sibling_uuid: qhr80Kgya8JXe694\n  child_uuid: 0DPnkW0dsw8oLLr1\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 盒模型\n  uuid: 0DPnkW0dsw8oLLr1\n  url: cthggr\n  prev_uuid: zGMd5d7cJrlxTWC4\n  sibling_uuid: vip2qlmBz5ieS09L\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212182\n  level: 1\n  id: 72212182\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: CSS 选择器优先级\n  uuid: vip2qlmBz5ieS09L\n  url: ho82xg\n  prev_uuid: 0DPnkW0dsw8oLLr1\n  sibling_uuid: aKI0hRvFJqqxjonJ\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212058\n  level: 1\n  id: 72212058\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: CSS 中可继承和不可继承的元素\n  uuid: aKI0hRvFJqqxjonJ\n  url: wfdzgn\n  prev_uuid: vip2qlmBz5ieS09L\n  sibling_uuid: mTH7crgTT4xe8CWt\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 76189714\n  level: 1\n  id: 76189714\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: CSS3的新特性\n  uuid: mTH7crgTT4xe8CWt\n  url: ag74vy\n  prev_uuid: aKI0hRvFJqqxjonJ\n  sibling_uuid: ZnPd4wAZb2_hK2P9\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 76189695\n  level: 1\n  id: 76189695\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 重排(回流) reflow 和重绘 repaint\n  uuid: ZnPd4wAZb2_hK2P9\n  url: vm3nkg\n  prev_uuid: mTH7crgTT4xe8CWt\n  sibling_uuid: rWlv7dJ62sVgcOEs\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212190\n  level: 1\n  id: 72212190\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: bfc 块级格式化上下文\n  uuid: rWlv7dJ62sVgcOEs\n  url: px9dg8\n  prev_uuid: ZnPd4wAZb2_hK2P9\n  sibling_uuid: tuDf776mK4wcCPyG\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212187\n  level: 1\n  id: 72212187\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: flex 相关内容\n  uuid: tuDf776mK4wcCPyG\n  url: kwodx6\n  prev_uuid: rWlv7dJ62sVgcOEs\n  sibling_uuid: yUgkQgmvFErkPa3s\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212060\n  level: 1\n  id: 72212060\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 常见的 css 布局单位\n  uuid: yUgkQgmvFErkPa3s\n  url: hxcsv4\n  prev_uuid: tuDf776mK4wcCPyG\n  sibling_uuid: aVEVYdIPl8W6T6Xi\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 76176536\n  level: 1\n  id: 76176536\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 隐藏元素的方法有哪些\n  uuid: aVEVYdIPl8W6T6Xi\n  url: zgnzmd\n  prev_uuid: yUgkQgmvFErkPa3s\n  sibling_uuid: YtmH8avhvYJB9UyF\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 76166645\n  level: 1\n  id: 76166645\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 布局相关\n  uuid: YtmH8avhvYJB9UyF\n  url: krwdmg\n  prev_uuid: aVEVYdIPl8W6T6Xi\n  sibling_uuid: CrSjsBkXMs-MCWSW\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212185\n  level: 1\n  id: 72212185\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: position\n  uuid: CrSjsBkXMs-MCWSW\n  url: cy8e47\n  prev_uuid: YtmH8avhvYJB9UyF\n  sibling_uuid: GDsMyqZGAxiud0tu\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 76179418\n  level: 1\n  id: 76179418\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: line-height 继承\n  uuid: GDsMyqZGAxiud0tu\n  url: ov3l3t\n  prev_uuid: CrSjsBkXMs-MCWSW\n  sibling_uuid: 8IbRucskyeohIYm9\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212191\n  level: 1\n  id: 72212191\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: transition 和 animation 的区别\n  uuid: 8IbRucskyeohIYm9\n  url: dxfgvc\n  prev_uuid: GDsMyqZGAxiud0tu\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: zGMd5d7cJrlxTWC4\n  doc_id: 72212248\n  level: 1\n  id: 72212248\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: JavaScript\n  uuid: qhr80Kgya8JXe694\n  url: ''\n  prev_uuid: zGMd5d7cJrlxTWC4\n  sibling_uuid: OvNosf5MpHIChAgK\n  child_uuid: 90tldmEuBBJgWC3T\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 事件相关\n  uuid: 90tldmEuBBJgWC3T\n  url: nt0p86\n  prev_uuid: qhr80Kgya8JXe694\n  sibling_uuid: xIU5xQr1JMCVH5cA\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 74888813\n  level: 1\n  id: 74888813\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: this 指向\n  uuid: xIU5xQr1JMCVH5cA\n  url: gg150b\n  prev_uuid: 90tldmEuBBJgWC3T\n  sibling_uuid: 6Ar0J-_X29oI3wTB\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 75890758\n  level: 1\n  id: 75890758\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 什么是 JavaScript 中的包装类型？\n  uuid: 6Ar0J-_X29oI3wTB\n  url: wzg6fe\n  prev_uuid: xIU5xQr1JMCVH5cA\n  sibling_uuid: Qa3xCtxz7N6SItvm\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212229\n  level: 1\n  id: 72212229\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 判断数据类型的方式\n  uuid: Qa3xCtxz7N6SItvm\n  url: sbc1s5\n  prev_uuid: 6Ar0J-_X29oI3wTB\n  sibling_uuid: YAfKsOzxyHtggeH_\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212065\n  level: 1\n  id: 72212065\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简述 0.1 + 0.2 !== 0.3 的原因\n  uuid: YAfKsOzxyHtggeH_\n  url: tbg0o2\n  prev_uuid: Qa3xCtxz7N6SItvm\n  sibling_uuid: auBZlGsXZ8oosiPU\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212193\n  level: 1\n  id: 72212193\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 内存和垃圾回收\n  uuid: auBZlGsXZ8oosiPU\n  url: ppt4fu\n  prev_uuid: YAfKsOzxyHtggeH_\n  sibling_uuid: 8PafJn7x0wmhigct\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212089\n  level: 1\n  id: 72212089\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: weakMap 和 weakSet\n  uuid: 8PafJn7x0wmhigct\n  url: gc9gp1\n  prev_uuid: auBZlGsXZ8oosiPU\n  sibling_uuid: WIf4vWi3HiZT-jbp\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212075\n  level: 1\n  id: 72212075\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 原型和原型链\n  uuid: WIf4vWi3HiZT-jbp\n  url: bwqx2g\n  prev_uuid: 8PafJn7x0wmhigct\n  sibling_uuid: VGXlQVKMm6owjMaV\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212063\n  level: 1\n  id: 72212063\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现继承的几种方式\n  uuid: VGXlQVKMm6owjMaV\n  url: ka9kuf\n  prev_uuid: WIf4vWi3HiZT-jbp\n  sibling_uuid: qDFgKZBKSFUKwgRw\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212064\n  level: 1\n  id: 72212064\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 跨域相关问题\n  uuid: qDFgKZBKSFUKwgRw\n  url: iqsxnp\n  prev_uuid: VGXlQVKMm6owjMaV\n  sibling_uuid: L68hwb7H_RxeZdQZ\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212080\n  level: 1\n  id: 72212080\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: AMD、CMD、UMD、CJS、ESM\n  uuid: L68hwb7H_RxeZdQZ\n  url: qthk0m\n  prev_uuid: qDFgKZBKSFUKwgRw\n  sibling_uuid: t54jiUmDgvh-8Dna\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212318\n  level: 1\n  id: 72212318\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: symbol\n  uuid: t54jiUmDgvh-8Dna\n  url: qi5rpw\n  prev_uuid: L68hwb7H_RxeZdQZ\n  sibling_uuid: FATize3JPlnxF85T\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212253\n  level: 1\n  id: 72212253\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: var、let 和 const\n  uuid: FATize3JPlnxF85T\n  url: licxpw\n  prev_uuid: t54jiUmDgvh-8Dna\n  sibling_uuid: 4ca5vn6xM_z6AK2O\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212068\n  level: 1\n  id: 72212068\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: for...in 和 for...of 的区别\n  uuid: 4ca5vn6xM_z6AK2O\n  url: bqhdyg\n  prev_uuid: FATize3JPlnxF85T\n  sibling_uuid: xsV0pLh6zFA5xtb5\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212231\n  level: 1\n  id: 72212231\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: for await ... of\n  uuid: xsV0pLh6zFA5xtb5\n  url: hcf3l8\n  prev_uuid: 4ca5vn6xM_z6AK2O\n  sibling_uuid: _BNsSFR706yxUItc\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 81931436\n  level: 1\n  id: 81931436\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 异步编程的实现方式\n  uuid: _BNsSFR706yxUItc\n  url: np50n2\n  prev_uuid: xsV0pLh6zFA5xtb5\n  sibling_uuid: la7KQjlbl3MUU77q\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212144\n  level: 1\n  id: 72212144\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: promise\n  uuid: la7KQjlbl3MUU77q\n  url: vc6k8l\n  prev_uuid: _BNsSFR706yxUItc\n  sibling_uuid: VuY72bKRcz1OB186\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212247\n  level: 1\n  id: 72212247\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: generator 和 async\n  uuid: VuY72bKRcz1OB186\n  url: ga86yq\n  prev_uuid: la7KQjlbl3MUU77q\n  sibling_uuid: 8vUmcmux3iz5MIpD\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212086\n  level: 1\n  id: 72212086\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: proxy 和 reflect\n  uuid: 8vUmcmux3iz5MIpD\n  url: in6cx4\n  prev_uuid: VuY72bKRcz1OB186\n  sibling_uuid: c47dSKFFfqVoM6Py\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212102\n  level: 1\n  id: 72212102\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: JavaScript 模块化\n  uuid: c47dSKFFfqVoM6Py\n  url: cakiwz\n  prev_uuid: 8vUmcmux3iz5MIpD\n  sibling_uuid: MAfl3GuGUP59jy4n\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212084\n  level: 1\n  id: 72212084\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: new 和 Object.create\n  uuid: MAfl3GuGUP59jy4n\n  url: gyo93k\n  prev_uuid: c47dSKFFfqVoM6Py\n  sibling_uuid: Je23tJi-nQnJPq9r\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212066\n  level: 1\n  id: 72212066\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 闭包\n  uuid: Je23tJi-nQnJPq9r\n  url: lfs5gz\n  prev_uuid: MAfl3GuGUP59jy4n\n  sibling_uuid: _fhtToBbga9ohrYS\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212077\n  level: 1\n  id: 72212077\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 事件源\n  uuid: _fhtToBbga9ohrYS\n  url: gt06mk\n  prev_uuid: Je23tJi-nQnJPq9r\n  sibling_uuid: U5MgBMWzTsB1RYDu\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212088\n  level: 1\n  id: 72212088\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ajax、jsonp、fetch\n  uuid: U5MgBMWzTsB1RYDu\n  url: irz8zx\n  prev_uuid: _fhtToBbga9ohrYS\n  sibling_uuid: bZdDm2XJBJD0pj9w\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212076\n  level: 1\n  id: 72212076\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: preload、prefetch、preconnect 以及 dns-prefetch\n  uuid: bZdDm2XJBJD0pj9w\n  url: fvfmxc\n  prev_uuid: U5MgBMWzTsB1RYDu\n  sibling_uuid: MW2JSrYEi0wxSNq3\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212183\n  level: 1\n  id: 72212183\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 正则表达式\n  uuid: MW2JSrYEi0wxSNq3\n  url: cw2t02\n  prev_uuid: bZdDm2XJBJD0pj9w\n  sibling_uuid: S00dNihJnQ2cS5Vm\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212027\n  level: 1\n  id: 72212027\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 常见的位运算符有哪些, 其计算规则是什么\n  uuid: S00dNihJnQ2cS5Vm\n  url: iz1yst\n  prev_uuid: MW2JSrYEi0wxSNq3\n  sibling_uuid: 2wcsFBtYfQic5eiX\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212227\n  level: 1\n  id: 72212227\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Unicode、UTF-8、UTF-16、UTF-32有什么区别\n  uuid: 2wcsFBtYfQic5eiX\n  url: es6bst\n  prev_uuid: S00dNihJnQ2cS5Vm\n  sibling_uuid: gbTtC2RHHJkC7-3a\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212226\n  level: 1\n  id: 72212226\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: escape、encodeURI、encodeURIComponent 的区别\n  uuid: gbTtC2RHHJkC7-3a\n  url: kbmg21\n  prev_uuid: 2wcsFBtYfQic5eiX\n  sibling_uuid: MObHc4irNOQbHvIR\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212232\n  level: 1\n  id: 72212232\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 为什么 proxy 不能被 polyfill\n  uuid: MObHc4irNOQbHvIR\n  url: hduwrh\n  prev_uuid: gbTtC2RHHJkC7-3a\n  sibling_uuid: jkZPHqL1CpgItML8\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212145\n  level: 1\n  id: 72212145\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 观察者模式和发布订阅模式的对比\n  uuid: jkZPHqL1CpgItML8\n  url: aywgrn\n  prev_uuid: MObHc4irNOQbHvIR\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: qhr80Kgya8JXe694\n  doc_id: 72212180\n  level: 1\n  id: 72212180\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 计算机网络\n  uuid: OvNosf5MpHIChAgK\n  url: ''\n  prev_uuid: qhr80Kgya8JXe694\n  sibling_uuid: yZ8pnWcSAgj7NDG4\n  child_uuid: qubg071rD6LP4TBM\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: tcp 三次握手四次挥手\n  uuid: qubg071rD6LP4TBM\n  url: yuqbh0\n  prev_uuid: OvNosf5MpHIChAgK\n  sibling_uuid: pA-xEh0trbi9z6_g\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212095\n  level: 1\n  id: 72212095\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: http 协议和 https 协议\n  uuid: pA-xEh0trbi9z6_g\n  url: zm62x4\n  prev_uuid: qubg071rD6LP4TBM\n  sibling_uuid: y_o_p-E2Tzle62mJ\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212085\n  level: 1\n  id: 72212085\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 浏览器缓存\n  uuid: y_o_p-E2Tzle62mJ\n  url: boce40\n  prev_uuid: pA-xEh0trbi9z6_g\n  sibling_uuid: ZQYAdT9uiq69c3iA\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212079\n  level: 1\n  id: 72212079\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: http 请求的 method\n  uuid: ZQYAdT9uiq69c3iA\n  url: fpmvpg\n  prev_uuid: y_o_p-E2Tzle62mJ\n  sibling_uuid: HgR76Gj7y9kNTaYe\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 88490090\n  level: 1\n  id: 88490090\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: get 和 post 的区别\n  uuid: HgR76Gj7y9kNTaYe\n  url: nk4fw8\n  prev_uuid: ZQYAdT9uiq69c3iA\n  sibling_uuid: PoOSFrO1TLcXG4PY\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212130\n  level: 1\n  id: 72212130\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: cookie、session、localStorage和sessionStorage\n  uuid: PoOSFrO1TLcXG4PY\n  url: bk9qnc\n  prev_uuid: HgR76Gj7y9kNTaYe\n  sibling_uuid: hhsYEiBi4CZOy9Ch\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 81366952\n  level: 1\n  id: 81366952\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: jwt\n  uuid: hhsYEiBi4CZOy9Ch\n  url: bl6emu\n  prev_uuid: PoOSFrO1TLcXG4PY\n  sibling_uuid: fJfHmbBBr_GxAcan\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 81941261\n  level: 1\n  id: 81941261\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 常见的 http 状态码\n  uuid: fJfHmbBBr_GxAcan\n  url: imp49b\n  prev_uuid: hhsYEiBi4CZOy9Ch\n  sibling_uuid: zgVX7fTpDl2L9-6c\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212093\n  level: 1\n  id: 72212093\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: lru 缓存机制\n  uuid: zgVX7fTpDl2L9-6c\n  url: gn5mcc\n  prev_uuid: fJfHmbBBr_GxAcan\n  sibling_uuid: JD3qXMjL2VUr4-BG\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 81944011\n  level: 1\n  id: 81944011\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: dns 协议\n  uuid: JD3qXMjL2VUr4-BG\n  url: dg4tg1\n  prev_uuid: zgVX7fTpDl2L9-6c\n  sibling_uuid: qhoie0g9LgYGDoNx\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212129\n  level: 1\n  id: 72212129\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: webSocket 协议\n  uuid: qhoie0g9LgYGDoNx\n  url: fzwma6\n  prev_uuid: JD3qXMjL2VUr4-BG\n  sibling_uuid: Z74gvBr6M7cblG3L\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212082\n  level: 1\n  id: 72212082\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: udp 协议\n  uuid: Z74gvBr6M7cblG3L\n  url: bcw1ix\n  prev_uuid: qhoie0g9LgYGDoNx\n  sibling_uuid: ZBAYX-mmHJMSbNVE\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212245\n  level: 1\n  id: 72212245\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 前端安全\n  uuid: ZBAYX-mmHJMSbNVE\n  url: ae6e6m\n  prev_uuid: Z74gvBr6M7cblG3L\n  sibling_uuid: 46cFvee2l7mbrO25\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212081\n  level: 1\n  id: 72212081\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 从 url 输入到页面渲染整个过程\n  uuid: 46cFvee2l7mbrO25\n  url: xq8v88\n  prev_uuid: ZBAYX-mmHJMSbNVE\n  sibling_uuid: 0kA-zwowKG0pX0PW\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212083\n  level: 1\n  id: 72212083\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: http 请求方法的 options 方法的作用\n  uuid: 0kA-zwowKG0pX0PW\n  url: sg1n3n\n  prev_uuid: 46cFvee2l7mbrO25\n  sibling_uuid: Jw389HdGLryB0kOx\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212141\n  level: 1\n  id: 72212141\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: tls/ssl 中为什么一定要用三个随机数，来生成会话密钥？\n  uuid: Jw389HdGLryB0kOx\n  url: gcggsc\n  prev_uuid: 0kA-zwowKG0pX0PW\n  sibling_uuid: pakLg61uoUeNvIdr\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212132\n  level: 1\n  id: 72212132\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ssl 连接断开后如何恢复\n  uuid: pakLg61uoUeNvIdr\n  url: nzhppv\n  prev_uuid: Jw389HdGLryB0kOx\n  sibling_uuid: JpyBYsq-UVyD8CUJ\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212133\n  level: 1\n  id: 72212133\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: rsa 算法的安全性保障\n  uuid: JpyBYsq-UVyD8CUJ\n  url: am614q\n  prev_uuid: pakLg61uoUeNvIdr\n  sibling_uuid: tOZ4EaNrn_pQcc61\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212131\n  level: 1\n  id: 72212131\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: dns 为什么使用 udp 协议作为传输层协议\n  uuid: tOZ4EaNrn_pQcc61\n  url: vxqwd7\n  prev_uuid: JpyBYsq-UVyD8CUJ\n  sibling_uuid: TxInBprdnCiNVH3Q\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212135\n  level: 1\n  id: 72212135\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: cdn 服务\n  uuid: TxInBprdnCiNVH3Q\n  url: yo63o7\n  prev_uuid: tOZ4EaNrn_pQcc61\n  sibling_uuid: Nib9sks0CPJxeqmk\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212136\n  level: 1\n  id: 72212136\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 正向代理和反向代理\n  uuid: Nib9sks0CPJxeqmk\n  url: ikn00f\n  prev_uuid: TxInBprdnCiNVH3Q\n  sibling_uuid: AfxQwTWEwbMgjd4o\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212134\n  level: 1\n  id: 72212134\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 负载平衡的两种实现方式\n  uuid: AfxQwTWEwbMgjd4o\n  url: kh4w6x\n  prev_uuid: Nib9sks0CPJxeqmk\n  sibling_uuid: TnQes05_sAmm18E2\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212138\n  level: 1\n  id: 72212138\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 即时通讯的实现，短轮询、长轮询、SSE 和 WebSocket 间的区别\n  uuid: TnQes05_sAmm18E2\n  url: rsxa0f\n  prev_uuid: AfxQwTWEwbMgjd4o\n  sibling_uuid: Qi2IZ6HU4mYUaoGj\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212139\n  level: 1\n  id: 72212139\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 如何实现多个网站之间共享登陆状态\n  uuid: Qi2IZ6HU4mYUaoGj\n  url: kc3lut\n  prev_uuid: TnQes05_sAmm18E2\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: OvNosf5MpHIChAgK\n  doc_id: 72212142\n  level: 1\n  id: 72212142\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 框架\n  uuid: yZ8pnWcSAgj7NDG4\n  url: ''\n  prev_uuid: OvNosf5MpHIChAgK\n  sibling_uuid: 9P2eq3K9ULR0af5X\n  child_uuid: 8RK2le4DpAEY0Xhs\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: MVVM、MVC、MVP 的区别\n  uuid: 8RK2le4DpAEY0Xhs\n  url: nnwww9\n  prev_uuid: yZ8pnWcSAgj7NDG4\n  sibling_uuid: 3B-5QM6whAr8xbJa\n  child_uuid: ''\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: 72212201\n  level: 1\n  id: 72212201\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: template 和 jsx 的区别\n  uuid: 3B-5QM6whAr8xbJa\n  url: ki7zks\n  prev_uuid: 8RK2le4DpAEY0Xhs\n  sibling_uuid: DkeXEgTb0ATztbj5\n  child_uuid: ''\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: 72212199\n  level: 1\n  id: 72212199\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue 和 react 的对比\n  uuid: DkeXEgTb0ATztbj5\n  url: nm61qs\n  prev_uuid: 3B-5QM6whAr8xbJa\n  sibling_uuid: myf4AFewp6Q9j0jB\n  child_uuid: ''\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: 72212222\n  level: 1\n  id: 72212222\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 虚拟 dom\n  uuid: myf4AFewp6Q9j0jB\n  url: hmvf8u\n  prev_uuid: DkeXEgTb0ATztbj5\n  sibling_uuid: 6fj1Su82FQx4B9RA\n  child_uuid: ''\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: 72212052\n  level: 1\n  id: 72212052\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: diff 算法\n  uuid: 6fj1Su82FQx4B9RA\n  url: op7dg1\n  prev_uuid: myf4AFewp6Q9j0jB\n  sibling_uuid: KZOzseU257YUuz3Z\n  child_uuid: nsUtw5_Fy4zD43hj\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: 72212178\n  level: 1\n  id: 72212178\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue diff 算法\n  uuid: nsUtw5_Fy4zD43hj\n  url: diavmt\n  prev_uuid: 6fj1Su82FQx4B9RA\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 6fj1Su82FQx4B9RA\n  doc_id: 81946293\n  level: 2\n  id: 81946293\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue 和 react 中的 key\n  uuid: KZOzseU257YUuz3Z\n  url: ycltzx\n  prev_uuid: 6fj1Su82FQx4B9RA\n  sibling_uuid: tWIf-VANuEIzO79L\n  child_uuid: ''\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: 72212037\n  level: 1\n  id: 72212037\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: Vue\n  uuid: tWIf-VANuEIzO79L\n  url: ''\n  prev_uuid: KZOzseU257YUuz3Z\n  sibling_uuid: TDqDjUraeNpGcmKR\n  child_uuid: Z40f-xGca713sBpr\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: TITLE\n  title: Vue v2\n  uuid: Z40f-xGca713sBpr\n  url: ''\n  prev_uuid: tWIf-VANuEIzO79L\n  sibling_uuid: Qq1JPp61C_co9sXM\n  child_uuid: 0b7XOg1-9GQSIskY\n  parent_uuid: tWIf-VANuEIzO79L\n  doc_id: ''\n  level: 2\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 模版编译原理\n  uuid: 0b7XOg1-9GQSIskY\n  url: fyz5q4\n  prev_uuid: Z40f-xGca713sBpr\n  sibling_uuid: hz8t5ak_IXT2gXfW\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212041\n  level: 3\n  id: 72212041\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue2 数据响应式原理\n  uuid: hz8t5ak_IXT2gXfW\n  url: uh28xg\n  prev_uuid: 0b7XOg1-9GQSIskY\n  sibling_uuid: _bf1hn5-uZNg51Ke\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212115\n  level: 3\n  id: 72212115\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 生命周期相关问题\n  uuid: _bf1hn5-uZNg51Ke\n  url: oagu14\n  prev_uuid: hz8t5ak_IXT2gXfW\n  sibling_uuid: ivG3tDP22jM4J7ts\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212110\n  level: 3\n  id: 72212110\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 渲染方式\n  uuid: ivG3tDP22jM4J7ts\n  url: woi8l3\n  prev_uuid: _bf1hn5-uZNg51Ke\n  sibling_uuid: LKipxSOtArQIraVN\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212032\n  level: 3\n  id: 72212032\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 事件绑定原理\n  uuid: LKipxSOtArQIraVN\n  url: yl9mmz\n  prev_uuid: ivG3tDP22jM4J7ts\n  sibling_uuid: 01R9Nnisca_sLRRp\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212039\n  level: 3\n  id: 72212039\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 组件缓存(keep-alive)\n  uuid: 01R9Nnisca_sLRRp\n  url: wqgptk\n  prev_uuid: LKipxSOtArQIraVN\n  sibling_uuid: 20DpKtgxdFH0O-ix\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212045\n  level: 3\n  id: 72212045\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue 组件通信方式\n  uuid: 20DpKtgxdFH0O-ix\n  url: xxds30\n  prev_uuid: 01R9Nnisca_sLRRp\n  sibling_uuid: 6wj8C6XOZFvKx1QA\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 77460672\n  level: 3\n  id: 77460672\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: nextTick 相关问题\n  uuid: 6wj8C6XOZFvKx1QA\n  url: ggyg1d\n  prev_uuid: 20DpKtgxdFH0O-ix\n  sibling_uuid: xORSK62Sn5964_kc\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212042\n  level: 3\n  id: 72212042\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 组件中 data 为什么是一个函数\n  uuid: xORSK62Sn5964_kc\n  url: kwsg4m\n  prev_uuid: 6wj8C6XOZFvKx1QA\n  sibling_uuid: CWb6bsasGDnvMM-U\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212109\n  level: 3\n  id: 72212109\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: computed 相关问题\n  uuid: CWb6bsasGDnvMM-U\n  url: zq4s02\n  prev_uuid: xORSK62Sn5964_kc\n  sibling_uuid: K939tqfx_BW5lRDQ\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212116\n  level: 3\n  id: 72212116\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 服务端渲染 ssr\n  uuid: K939tqfx_BW5lRDQ\n  url: pw3v8v\n  prev_uuid: CWb6bsasGDnvMM-U\n  sibling_uuid: 6kQ_DqRf_zluG2z9\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212043\n  level: 3\n  id: 72212043\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue.use 具体的功能\n  uuid: 6kQ_DqRf_zluG2z9\n  url: bvokpn\n  prev_uuid: K939tqfx_BW5lRDQ\n  sibling_uuid: YzuZXyy9c_kaJu9c\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212046\n  level: 3\n  id: 72212046\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 单页应用与多页应用的区别\n  uuid: YzuZXyy9c_kaJu9c\n  url: pshmo2\n  prev_uuid: 6kQ_DqRf_zluG2z9\n  sibling_uuid: jso948tO58555KH-\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212224\n  level: 3\n  id: 72212224\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: assets 和 static 的区别\n  uuid: jso948tO58555KH-\n  url: yyhf0u\n  prev_uuid: YzuZXyy9c_kaJu9c\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: Z40f-xGca713sBpr\n  doc_id: 72212225\n  level: 3\n  id: 72212225\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: Vue v3\n  uuid: Qq1JPp61C_co9sXM\n  url: ''\n  prev_uuid: Z40f-xGca713sBpr\n  sibling_uuid: NDstnhh3QXikKrZa\n  child_uuid: s2KSqDo2LUDykK1r\n  parent_uuid: tWIf-VANuEIzO79L\n  doc_id: ''\n  level: 2\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: vue3 优化的关键点\n  uuid: s2KSqDo2LUDykK1r\n  url: vcur5h\n  prev_uuid: Qq1JPp61C_co9sXM\n  sibling_uuid: bK2zh7wDgnCOjGdb\n  child_uuid: ''\n  parent_uuid: Qq1JPp61C_co9sXM\n  doc_id: 72212029\n  level: 3\n  id: 72212029\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue3 数据响应式原理\n  uuid: bK2zh7wDgnCOjGdb\n  url: ghc5e2\n  prev_uuid: s2KSqDo2LUDykK1r\n  sibling_uuid: uCtRLhVps5ghz54g\n  child_uuid: ''\n  parent_uuid: Qq1JPp61C_co9sXM\n  doc_id: 72212036\n  level: 3\n  id: 72212036\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue3 新特性\n  uuid: uCtRLhVps5ghz54g\n  url: cmegik\n  prev_uuid: bK2zh7wDgnCOjGdb\n  sibling_uuid: TJgKi8_C6fiOd5dJ\n  child_uuid: ''\n  parent_uuid: Qq1JPp61C_co9sXM\n  doc_id: 81946525\n  level: 3\n  id: 81946525\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue3 生命周期\n  uuid: TJgKi8_C6fiOd5dJ\n  url: gwzgib\n  prev_uuid: uCtRLhVps5ghz54g\n  sibling_uuid: horvlR4VG0faCelq\n  child_uuid: ''\n  parent_uuid: Qq1JPp61C_co9sXM\n  doc_id: 72212114\n  level: 3\n  id: 72212114\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue3 api 的变化\n  uuid: horvlR4VG0faCelq\n  url: cgy1qw\n  prev_uuid: TJgKi8_C6fiOd5dJ\n  sibling_uuid: T4jbFsZR0B-ev_pi\n  child_uuid: ''\n  parent_uuid: Qq1JPp61C_co9sXM\n  doc_id: 72212096\n  level: 3\n  id: 72212096\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: composition API 与 react hook 区别\n  uuid: T4jbFsZR0B-ev_pi\n  url: kdnt9x\n  prev_uuid: horvlR4VG0faCelq\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: Qq1JPp61C_co9sXM\n  doc_id: 72212223\n  level: 3\n  id: 72212223\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: Vue Router\n  uuid: NDstnhh3QXikKrZa\n  url: ''\n  prev_uuid: Qq1JPp61C_co9sXM\n  sibling_uuid: OAPGa_yYZYTt0hO-\n  child_uuid: 4O6Acxrj4Z6ILMq7\n  parent_uuid: tWIf-VANuEIzO79L\n  doc_id: ''\n  level: 2\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现原理\n  uuid: 4O6Acxrj4Z6ILMq7\n  url: bgudpr\n  prev_uuid: NDstnhh3QXikKrZa\n  sibling_uuid: 3NsmXDCnBZguoYRa\n  child_uuid: ''\n  parent_uuid: NDstnhh3QXikKrZa\n  doc_id: 72212195\n  level: 3\n  id: 72212195\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 钩子函数和执行顺序\n  uuid: 3NsmXDCnBZguoYRa\n  url: ugd6ob\n  prev_uuid: 4O6Acxrj4Z6ILMq7\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: NDstnhh3QXikKrZa\n  doc_id: 72212111\n  level: 3\n  id: 72212111\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Vuex\n  uuid: OAPGa_yYZYTt0hO-\n  url: co230y\n  prev_uuid: NDstnhh3QXikKrZa\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: tWIf-VANuEIzO79L\n  doc_id: 72212048\n  level: 2\n  id: 72212048\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: React\n  uuid: TDqDjUraeNpGcmKR\n  url: ''\n  prev_uuid: tWIf-VANuEIzO79L\n  sibling_uuid: ''\n  child_uuid: TzgntU7-pdLEQIEy\n  parent_uuid: yZ8pnWcSAgj7NDG4\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: props.children 和 React.Children 的区别\n  uuid: TzgntU7-pdLEQIEy\n  url: glhczw\n  prev_uuid: TDqDjUraeNpGcmKR\n  sibling_uuid: a5LfIfk4TICUM-se\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212221\n  level: 2\n  id: 72212221\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 生命周期\n  uuid: a5LfIfk4TICUM-se\n  url: ttmkd1\n  prev_uuid: TzgntU7-pdLEQIEy\n  sibling_uuid: Xl4JcMfM03VwU1Hb\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212054\n  level: 2\n  id: 72212054\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 事件相关问题\n  uuid: Xl4JcMfM03VwU1Hb\n  url: ed4qqb\n  prev_uuid: a5LfIfk4TICUM-se\n  sibling_uuid: CepfhgK9OC8dVV7r\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212050\n  level: 2\n  id: 72212050\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: react hooks 相关问题\n  uuid: CepfhgK9OC8dVV7r\n  url: gq900o\n  prev_uuid: Xl4JcMfM03VwU1Hb\n  sibling_uuid: ubGrfyb3NqJ_Lkqn\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212057\n  level: 2\n  id: 72212057\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: setState 相关问题\n  uuid: ubGrfyb3NqJ_Lkqn\n  url: pwqm3y\n  prev_uuid: CepfhgK9OC8dVV7r\n  sibling_uuid: 4pm440hNri1XmMGQ\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212205\n  level: 2\n  id: 72212205\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: props 相关问题\n  uuid: 4pm440hNri1XmMGQ\n  url: aopf74\n  prev_uuid: ubGrfyb3NqJ_Lkqn\n  sibling_uuid: FKTcfv0hyyXraJmD\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212215\n  level: 2\n  id: 72212215\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: context 相关问题\n  uuid: FKTcfv0hyyXraJmD\n  url: biktsf\n  prev_uuid: 4pm440hNri1XmMGQ\n  sibling_uuid: Y0S-6wqJKj2EF9W2\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212210\n  level: 2\n  id: 72212210\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 高阶组件\n  uuid: Y0S-6wqJKj2EF9W2\n  url: si40mg\n  prev_uuid: FKTcfv0hyyXraJmD\n  sibling_uuid: 7NqebQUMdfbQX_co\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212094\n  level: 2\n  id: 72212094\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: react fiber\n  uuid: 7NqebQUMdfbQX_co\n  url: fheyn3\n  prev_uuid: Y0S-6wqJKj2EF9W2\n  sibling_uuid: Z3dClfuPaIaWVJrc\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212055\n  level: 2\n  id: 72212055\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: react 新版本特性\n  uuid: Z3dClfuPaIaWVJrc\n  url: yr6q8p\n  prev_uuid: 7NqebQUMdfbQX_co\n  sibling_uuid: '-FVw4r0aOtQdA3mR'\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212125\n  level: 2\n  id: 72212125\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: React Router\n  uuid: '-FVw4r0aOtQdA3mR'\n  url: ''\n  prev_uuid: Z3dClfuPaIaWVJrc\n  sibling_uuid: fMyaiZHW0XSEI8sS\n  child_uuid: mVIvxzgV48RK5_Q4\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: ''\n  level: 2\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现原理\n  uuid: mVIvxzgV48RK5_Q4\n  url: wethcy\n  prev_uuid: '-FVw4r0aOtQdA3mR'\n  sibling_uuid: Bl1_fHvLILZsHBbF\n  child_uuid: ''\n  parent_uuid: '-FVw4r0aOtQdA3mR'\n  doc_id: 72212218\n  level: 3\n  id: 72212218\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Link 和 a 标签的区别\n  uuid: Bl1_fHvLILZsHBbF\n  url: wm4ok4\n  prev_uuid: mVIvxzgV48RK5_Q4\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: '-FVw4r0aOtQdA3mR'\n  doc_id: 72212179\n  level: 3\n  id: 72212179\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: React 数据管理\n  uuid: fMyaiZHW0XSEI8sS\n  url: ''\n  prev_uuid: '-FVw4r0aOtQdA3mR'\n  sibling_uuid: OeMWtixpAD2-KWzt\n  child_uuid: 59KZOAY7cpzzjK2t\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: ''\n  level: 2\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: redux\n  uuid: 59KZOAY7cpzzjK2t\n  url: lv63wa\n  prev_uuid: fMyaiZHW0XSEI8sS\n  sibling_uuid: 04W_NxYoVNi2nw_9\n  child_uuid: ''\n  parent_uuid: fMyaiZHW0XSEI8sS\n  doc_id: 72212124\n  level: 3\n  id: 72212124\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: mobx\n  uuid: 04W_NxYoVNi2nw_9\n  url: dyi5bf\n  prev_uuid: 59KZOAY7cpzzjK2t\n  sibling_uuid: _vbvvkBStDB0r4jY\n  child_uuid: ''\n  parent_uuid: fMyaiZHW0XSEI8sS\n  doc_id: 72212126\n  level: 3\n  id: 72212126\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: redux 和 mobx 对比\n  uuid: _vbvvkBStDB0r4jY\n  url: elg7s5\n  prev_uuid: 04W_NxYoVNi2nw_9\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: fMyaiZHW0XSEI8sS\n  doc_id: 72212127\n  level: 3\n  id: 72212127\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 服务端渲染 ssr\n  uuid: OeMWtixpAD2-KWzt\n  url: egaslg\n  prev_uuid: fMyaiZHW0XSEI8sS\n  sibling_uuid: MTc53b0X3W8cyi_3\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212219\n  level: 2\n  id: 72212219\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 哪些方法会触发 react 重渲染\n  uuid: MTc53b0X3W8cyi_3\n  url: qy4smk\n  prev_uuid: OeMWtixpAD2-KWzt\n  sibling_uuid: b7IhhfJU6La1DgRE\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212216\n  level: 2\n  id: 72212216\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 创建组件的几种方式\n  uuid: b7IhhfJU6La1DgRE\n  url: vg2cmd\n  prev_uuid: MTc53b0X3W8cyi_3\n  sibling_uuid: lhmlu-BvI_ms0sSC\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212175\n  level: 2\n  id: 72212175\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 组件通信的方式\n  uuid: lhmlu-BvI_ms0sSC\n  url: moqmzb\n  prev_uuid: b7IhhfJU6La1DgRE\n  sibling_uuid: amb-PuSjhZwSxODn\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212118\n  level: 2\n  id: 72212118\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Component 和 PureComponent 的区别\n  uuid: amb-PuSjhZwSxODn\n  url: ypfivt\n  prev_uuid: lhmlu-BvI_ms0sSC\n  sibling_uuid: BNAX1KhSgOp0v6r4\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212207\n  level: 2\n  id: 72212207\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 函数式编程的理解\n  uuid: BNAX1KhSgOp0v6r4\n  url: tqdy3a\n  prev_uuid: amb-PuSjhZwSxODn\n  sibling_uuid: 5pVccocS1pnwxzh2\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212194\n  level: 2\n  id: 72212194\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 有状态组件和无状态组件的理解及使用场景\n  uuid: 5pVccocS1pnwxzh2\n  url: gbrvz9\n  prev_uuid: BNAX1KhSgOp0v6r4\n  sibling_uuid: wtp8Bo-2_zSNLXbR\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212203\n  level: 2\n  id: 72212203\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Fragment 的理解和使用场景\n  uuid: wtp8Bo-2_zSNLXbR\n  url: dasmdx\n  prev_uuid: 5pVccocS1pnwxzh2\n  sibling_uuid: hYTp24IWi4pAhbqG\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212214\n  level: 2\n  id: 72212214\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 受控组件和非受控组件\n  uuid: hYTp24IWi4pAhbqG\n  url: bgt6ta\n  prev_uuid: wtp8Bo-2_zSNLXbR\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: TDqDjUraeNpGcmKR\n  doc_id: 72212208\n  level: 2\n  id: 72212208\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 构建工具\n  uuid: 9P2eq3K9ULR0af5X\n  url: ''\n  prev_uuid: yZ8pnWcSAgj7NDG4\n  sibling_uuid: _ib2ffJOMJ90FuD0\n  child_uuid: KkWBlMnn8vKsvI2E\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: TITLE\n  title: Webpack\n  uuid: KkWBlMnn8vKsvI2E\n  url: ''\n  prev_uuid: 9P2eq3K9ULR0af5X\n  sibling_uuid: PA5M4tEq9BGEMtO9\n  child_uuid: 3HGKlhysP-vEQXiM\n  parent_uuid: 9P2eq3K9ULR0af5X\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: webpack 概念\n  uuid: 3HGKlhysP-vEQXiM\n  url: gkdarc\n  prev_uuid: KkWBlMnn8vKsvI2E\n  sibling_uuid: Ci_c8WtimOb3m1kJ\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212169\n  level: 2\n  id: 72212169\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: webpack 中的 module 是什么\n  uuid: Ci_c8WtimOb3m1kJ\n  url: qyb5qk\n  prev_uuid: 3HGKlhysP-vEQXiM\n  sibling_uuid: gLWNNobChGyBvcJT\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212266\n  level: 2\n  id: 72212266\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 模块打包原理\n  uuid: gLWNNobChGyBvcJT\n  url: iohxdb\n  prev_uuid: Ci_c8WtimOb3m1kJ\n  sibling_uuid: YwCVADfU_XBsG0WO\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212160\n  level: 2\n  id: 72212160\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 打包构建流程\n  uuid: YwCVADfU_XBsG0WO\n  url: eshey5\n  prev_uuid: gLWNNobChGyBvcJT\n  sibling_uuid: EBqwwnL3J1wUmOlh\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212151\n  level: 2\n  id: 72212151\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 热更新原理\n  uuid: EBqwwnL3J1wUmOlh\n  url: yse9bt\n  prev_uuid: YwCVADfU_XBsG0WO\n  sibling_uuid: lwF1dFLq1rG9MdQU\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212165\n  level: 2\n  id: 72212165\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: chunk 和 bundle 的区别\n  uuid: lwF1dFLq1rG9MdQU\n  url: hg8h4r\n  prev_uuid: EBqwwnL3J1wUmOlh\n  sibling_uuid: o9ye0yiAxvwwA4jE\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212153\n  level: 2\n  id: 72212153\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: fullhash、chunkhash 和 contenthash 的区别\n  uuid: o9ye0yiAxvwwA4jE\n  url: puabgz\n  prev_uuid: lwF1dFLq1rG9MdQU\n  sibling_uuid: OxdvFHcLzVG6YfBc\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212173\n  level: 2\n  id: 72212173\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: loader 和 plugin\n  uuid: OxdvFHcLzVG6YfBc\n  url: hl39v0\n  prev_uuid: o9ye0yiAxvwwA4jE\n  sibling_uuid: nER_RrE8K11hpa78\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212157\n  level: 2\n  id: 72212157\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: babel\n  uuid: nER_RrE8K11hpa78\n  url: nny1iy\n  prev_uuid: OxdvFHcLzVG6YfBc\n  sibling_uuid: 8mmMPlYkLyNfpEq9\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212170\n  level: 2\n  id: 72212170\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: sourceMap\n  uuid: 8mmMPlYkLyNfpEq9\n  url: dtf17x\n  prev_uuid: nER_RrE8K11hpa78\n  sibling_uuid: M7r8XoDGrg6cNKlE\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212156\n  level: 2\n  id: 72212156\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 代码分割的本质\n  uuid: M7r8XoDGrg6cNKlE\n  url: pdp2uz\n  prev_uuid: 8mmMPlYkLyNfpEq9\n  sibling_uuid: Qs47BJts9deBE55f\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212163\n  level: 2\n  id: 72212163\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: npm 打包注意点\n  uuid: Qs47BJts9deBE55f\n  url: uhgsm9\n  prev_uuid: M7r8XoDGrg6cNKlE\n  sibling_uuid: 02dCOY3aMQkTKtr5\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212150\n  level: 2\n  id: 72212150\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 构建工具和打包工具的区别\n  uuid: 02dCOY3aMQkTKtr5\n  url: goy7xw\n  prev_uuid: Qs47BJts9deBE55f\n  sibling_uuid: HWLaGOPI5cyGuMSs\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212255\n  level: 2\n  id: 72212255\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: webpack 与 其他构建工具的异同\n  uuid: HWLaGOPI5cyGuMSs\n  url: wh1m7t\n  prev_uuid: 02dCOY3aMQkTKtr5\n  sibling_uuid: gpqfvEQbvGr-oYDM\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212154\n  level: 2\n  id: 72212154\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: webpack 5 和 webpack 4 的区别\n  uuid: gpqfvEQbvGr-oYDM\n  url: gwyegl\n  prev_uuid: HWLaGOPI5cyGuMSs\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: KkWBlMnn8vKsvI2E\n  doc_id: 72212197\n  level: 2\n  id: 72212197\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: rollup\n  uuid: PA5M4tEq9BGEMtO9\n  url: ''\n  prev_uuid: KkWBlMnn8vKsvI2E\n  sibling_uuid: cc50VGYB9StWj9iE\n  child_uuid: rfwXExGVTXBKDdM2\n  parent_uuid: 9P2eq3K9ULR0af5X\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: rollup 概念\n  uuid: rfwXExGVTXBKDdM2\n  url: xx4xp9\n  prev_uuid: PA5M4tEq9BGEMtO9\n  sibling_uuid: IApizKSiwn87t7KS\n  child_uuid: ''\n  parent_uuid: PA5M4tEq9BGEMtO9\n  doc_id: 76721509\n  level: 2\n  id: 76721509\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: rollup 常用插件\n  uuid: IApizKSiwn87t7KS\n  url: kggg6d\n  prev_uuid: rfwXExGVTXBKDdM2\n  sibling_uuid: 0ak8GBSDIkitvTUZ\n  child_uuid: ''\n  parent_uuid: PA5M4tEq9BGEMtO9\n  doc_id: 76721975\n  level: 2\n  id: 76721975\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: rollup 优缺点\n  uuid: 0ak8GBSDIkitvTUZ\n  url: gugo43\n  prev_uuid: IApizKSiwn87t7KS\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: PA5M4tEq9BGEMtO9\n  doc_id: 76722698\n  level: 2\n  id: 76722698\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: Vite\n  uuid: cc50VGYB9StWj9iE\n  url: ''\n  prev_uuid: PA5M4tEq9BGEMtO9\n  sibling_uuid: ''\n  child_uuid: QzOULjlE0M-dX3XY\n  parent_uuid: 9P2eq3K9ULR0af5X\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: ESM 、 esbuild、rollup\n  uuid: QzOULjlE0M-dX3XY\n  url: zbte28\n  prev_uuid: cc50VGYB9StWj9iE\n  sibling_uuid: 2b9lJDrKP6nHewez\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212267\n  level: 2\n  id: 72212267\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vite 的实现原理\n  uuid: 2b9lJDrKP6nHewez\n  url: qa0ptd\n  prev_uuid: QzOULjlE0M-dX3XY\n  sibling_uuid: j9nVKLx68XcKSS5v\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212250\n  level: 2\n  id: 72212250\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vite 的热更新原理\n  uuid: j9nVKLx68XcKSS5v\n  url: de75ab\n  prev_uuid: 2b9lJDrKP6nHewez\n  sibling_uuid: F_ygXseqm2S2JzwI\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212258\n  level: 2\n  id: 72212258\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vite 的构建速度快的原因\n  uuid: F_ygXseqm2S2JzwI\n  url: on0xtf\n  prev_uuid: j9nVKLx68XcKSS5v\n  sibling_uuid: T4SDnSe1k7y_7x3W\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212171\n  level: 2\n  id: 72212171\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vite 的优缺点\n  uuid: T4SDnSe1k7y_7x3W\n  url: xqi8st\n  prev_uuid: F_ygXseqm2S2JzwI\n  sibling_uuid: iKoQ0EmfPV_t8bnB\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212257\n  level: 2\n  id: 72212257\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vite 生产环境使用了 rollup，是否能在生产环境使用 esm\n  uuid: iKoQ0EmfPV_t8bnB\n  url: wfsv84\n  prev_uuid: T4SDnSe1k7y_7x3W\n  sibling_uuid: w6EvBA84BcVw35TD\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212256\n  level: 2\n  id: 72212256\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vite 如何兼容非 commonjs 模块\n  uuid: w6EvBA84BcVw35TD\n  url: hpfp18\n  prev_uuid: iKoQ0EmfPV_t8bnB\n  sibling_uuid: NuVIodhn60MXc8rH\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212261\n  level: 2\n  id: 72212261\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 组件嵌套层级过深，是否会影响 vite 速度\n  uuid: NuVIodhn60MXc8rH\n  url: gw29gz\n  prev_uuid: w6EvBA84BcVw35TD\n  sibling_uuid: uo8BVC-6HYu_8QcI\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212260\n  level: 2\n  id: 72212260\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易 vite 实现\n  uuid: uo8BVC-6HYu_8QcI\n  url: oop1cx\n  prev_uuid: NuVIodhn60MXc8rH\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: cc50VGYB9StWj9iE\n  doc_id: 72212265\n  level: 2\n  id: 72212265\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 性能优化\n  uuid: _ib2ffJOMJ90FuD0\n  url: ''\n  prev_uuid: 9P2eq3K9ULR0af5X\n  sibling_uuid: 9BBksIvNcFzfWLRd\n  child_uuid: kZWKWb1BdUt9h_Ua\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 前端项目性能指标\n  uuid: kZWKWb1BdUt9h_Ua\n  url: fv22gd\n  prev_uuid: _ib2ffJOMJ90FuD0\n  sibling_uuid: WMCvfSADqHqcTJXw\n  child_uuid: ''\n  parent_uuid: _ib2ffJOMJ90FuD0\n  doc_id: 72212177\n  level: 1\n  id: 72212177\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 优化 webpack 的构建速度\n  uuid: WMCvfSADqHqcTJXw\n  url: aft935\n  prev_uuid: kZWKWb1BdUt9h_Ua\n  sibling_uuid: 1ctvLIEro_Mh0xK-\n  child_uuid: ''\n  parent_uuid: _ib2ffJOMJ90FuD0\n  doc_id: 72212166\n  level: 1\n  id: 72212166\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 前端性能优化\n  uuid: 1ctvLIEro_Mh0xK-\n  url: tcfotb\n  prev_uuid: WMCvfSADqHqcTJXw\n  sibling_uuid: _eck6_rsRKfOJVvr\n  child_uuid: ''\n  parent_uuid: _ib2ffJOMJ90FuD0\n  doc_id: 72212146\n  level: 1\n  id: 72212146\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: vue2 性能优化\n  uuid: _eck6_rsRKfOJVvr\n  url: rkov84\n  prev_uuid: 1ctvLIEro_Mh0xK-\n  sibling_uuid: YZvWK7y4PMXszEwE\n  child_uuid: ''\n  parent_uuid: _ib2ffJOMJ90FuD0\n  doc_id: 72212123\n  level: 1\n  id: 72212123\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: react 性能优化\n  uuid: YZvWK7y4PMXszEwE\n  url: qf0cik\n  prev_uuid: _eck6_rsRKfOJVvr\n  sibling_uuid: '-vVIPSz4Z6P_s7e9'\n  child_uuid: ''\n  parent_uuid: _ib2ffJOMJ90FuD0\n  doc_id: 72212121\n  level: 1\n  id: 72212121\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 服务端性能优化 cdn、ssr\n  uuid: '-vVIPSz4Z6P_s7e9'\n  url: sg5qwg\n  prev_uuid: YZvWK7y4PMXszEwE\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: _ib2ffJOMJ90FuD0\n  doc_id: 72212202\n  level: 1\n  id: 72212202\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 包管理\n  uuid: 9BBksIvNcFzfWLRd\n  url: ''\n  prev_uuid: _ib2ffJOMJ90FuD0\n  sibling_uuid: kkdXxj_7f1anXGc6\n  child_uuid: Hf2631LtoAoZ4z-W\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: Monorepo\n  uuid: Hf2631LtoAoZ4z-W\n  url: xgnw24\n  prev_uuid: 9BBksIvNcFzfWLRd\n  sibling_uuid: 41gDqpiyNdq269Lp\n  child_uuid: ''\n  parent_uuid: 9BBksIvNcFzfWLRd\n  doc_id: 72212268\n  level: 1\n  id: 72212268\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: npm、yarn、pnpm\n  uuid: 41gDqpiyNdq269Lp\n  url: nvbtiy\n  prev_uuid: Hf2631LtoAoZ4z-W\n  sibling_uuid: ZxzFHpuyOFknxwqY\n  child_uuid: ''\n  parent_uuid: 9BBksIvNcFzfWLRd\n  doc_id: 72212269\n  level: 1\n  id: 72212269\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: verdaccio\n  uuid: ZxzFHpuyOFknxwqY\n  url: yms8mi\n  prev_uuid: 41gDqpiyNdq269Lp\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 9BBksIvNcFzfWLRd\n  doc_id: 76725286\n  level: 1\n  id: 76725286\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: TypeScript\n  uuid: kkdXxj_7f1anXGc6\n  url: ''\n  prev_uuid: 9BBksIvNcFzfWLRd\n  sibling_uuid: wtEzbVO2d1PioEzt\n  child_uuid: oXvKPuEdNzldyAga\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 什么是 TypeScript\n  uuid: oXvKPuEdNzldyAga\n  url: ycg3n9\n  prev_uuid: kkdXxj_7f1anXGc6\n  sibling_uuid: nIgWerTolUPcvwbs\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212313\n  level: 1\n  id: 72212313\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中常用内置工具类型有哪些\n  uuid: nIgWerTolUPcvwbs\n  url: ba7and\n  prev_uuid: oXvKPuEdNzldyAga\n  sibling_uuid: cKo1ehuC2Ezv_LkG\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 75214600\n  level: 1\n  id: 75214600\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中类型保护\n  uuid: cKo1ehuC2Ezv_LkG\n  url: cqgawt\n  prev_uuid: nIgWerTolUPcvwbs\n  sibling_uuid: 9WWFtyTsyXQ8444b\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 75214621\n  level: 1\n  id: 75214621\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 的模块加载机制\n  uuid: 9WWFtyTsyXQ8444b\n  url: ug5vit\n  prev_uuid: cKo1ehuC2Ezv_LkG\n  sibling_uuid: uyRC7gMPBD6WflDI\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212315\n  level: 1\n  id: 72212315\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中的访问修饰符\n  uuid: uyRC7gMPBD6WflDI\n  url: ku85bk\n  prev_uuid: 9WWFtyTsyXQ8444b\n  sibling_uuid: GVJiiBTgyp1nxuIJ\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212284\n  level: 1\n  id: 72212284\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 关键字间的区别\n  uuid: GVJiiBTgyp1nxuIJ\n  url: sagma3\n  prev_uuid: uyRC7gMPBD6WflDI\n  sibling_uuid: a7efyzFrZWkkYm_s\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212308\n  level: 1\n  id: 72212308\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中 enum 类型转 type\n  uuid: a7efyzFrZWkkYm_s\n  url: gehkyv\n  prev_uuid: GVJiiBTgyp1nxuIJ\n  sibling_uuid: '-BM8soj2CmjTa135'\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 75323990\n  level: 1\n  id: 75323990\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中枚举和常量枚举(const枚举)的区别\n  uuid: '-BM8soj2CmjTa135'\n  url: oznghr\n  prev_uuid: a7efyzFrZWkkYm_s\n  sibling_uuid: YPyFfjPr_NzLvDP3\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212282\n  level: 1\n  id: 72212282\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中的 interface 可以给 Function/Array/Class 做声明么\n  uuid: YPyFfjPr_NzLvDP3\n  url: ona7hl\n  prev_uuid: '-BM8soj2CmjTa135'\n  sibling_uuid: 49oDbGS0njKPDYjI\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212286\n  level: 1\n  id: 72212286\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中的 this 和 js 中的 this 有什么差异\n  uuid: 49oDbGS0njKPDYjI\n  url: eb4bg0\n  prev_uuid: YPyFfjPr_NzLvDP3\n  sibling_uuid: GsAFhvyPAqtOwB6m\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212288\n  level: 1\n  id: 72212288\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: ts 中如何枚举联合类型的 key\n  uuid: GsAFhvyPAqtOwB6m\n  url: ly5v3x\n  prev_uuid: 49oDbGS0njKPDYjI\n  sibling_uuid: CNWh84n78nKW-JK8\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212289\n  level: 1\n  id: 72212289\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中 ?.、??、!.、_、** 等符号的含义\n  uuid: CNWh84n78nKW-JK8\n  url: lyezty\n  prev_uuid: GsAFhvyPAqtOwB6m\n  sibling_uuid: iqwPMQndJB_eNuct\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212291\n  level: 1\n  id: 72212291\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中的 this 和 js 中的 this 有什么差异\n  uuid: iqwPMQndJB_eNuct\n  url: ld83ko\n  prev_uuid: CNWh84n78nKW-JK8\n  sibling_uuid: oKAWJxKVLy8BxvQy\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212314\n  level: 1\n  id: 72212314\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 什么是抗变、双变、协变和逆变\n  uuid: oKAWJxKVLy8BxvQy\n  url: ttipbo\n  prev_uuid: iqwPMQndJB_eNuct\n  sibling_uuid: bqK3b3uPMHw4gfuI\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212293\n  level: 1\n  id: 72212293\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 中同名的 interface 或者同名的 interface 和 class 可以合并么\n  uuid: bqK3b3uPMHw4gfuI\n  url: vwk8ta\n  prev_uuid: oKAWJxKVLy8BxvQy\n  sibling_uuid: KPQ1D_KkpP1Og_rA\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212294\n  level: 1\n  id: 72212294\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 如何使 ts 项目引入并识别编译为 js 的 npm 库包\n  uuid: KPQ1D_KkpP1Og_rA\n  url: wprnb4\n  prev_uuid: bqK3b3uPMHw4gfuI\n  sibling_uuid: QYmnWc4XN-1SsH6y\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212295\n  level: 1\n  id: 72212295\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 如何自动生成库包的声明文件\n  uuid: QYmnWc4XN-1SsH6y\n  url: qthgtd\n  prev_uuid: KPQ1D_KkpP1Og_rA\n  sibling_uuid: NF_E4aerReEqE3W0\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212297\n  level: 1\n  id: 72212297\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 什么是泛型\n  uuid: NF_E4aerReEqE3W0\n  url: uaxegb\n  prev_uuid: QYmnWc4XN-1SsH6y\n  sibling_uuid: RzXzd38jikHanZPF\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212298\n  level: 1\n  id: 72212298\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: '-?、-readonly 的含义是什么'\n  uuid: RzXzd38jikHanZPF\n  url: vwkgu7\n  prev_uuid: NF_E4aerReEqE3W0\n  sibling_uuid: Ew56s2fseHbfjMcO\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212301\n  level: 1\n  id: 72212301\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: ts 是基于结构类型兼容的\n  uuid: Ew56s2fseHbfjMcO\n  url: hct7os\n  prev_uuid: RzXzd38jikHanZPF\n  sibling_uuid: 6WmcslXNXxUHs9J5\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212304\n  level: 1\n  id: 72212304\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: const 断言\n  uuid: 6WmcslXNXxUHs9J5\n  url: xgt0bn\n  prev_uuid: Ew56s2fseHbfjMcO\n  sibling_uuid: SmKRuWqpkdAgtE3g\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212305\n  level: 1\n  id: 72212305\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 如何在 window 扩展类型\n  uuid: SmKRuWqpkdAgtE3g\n  url: lnqu18\n  prev_uuid: 6WmcslXNXxUHs9J5\n  sibling_uuid: e-hbAenE5NXBqgWo\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212309\n  level: 1\n  id: 72212309\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 复杂类型推导内容\n  uuid: e-hbAenE5NXBqgWo\n  url: bvhrsb\n  prev_uuid: SmKRuWqpkdAgtE3g\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: kkdXxj_7f1anXGc6\n  doc_id: 72212310\n  level: 1\n  id: 72212310\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 小程序\n  uuid: wtEzbVO2d1PioEzt\n  url: ''\n  prev_uuid: kkdXxj_7f1anXGc6\n  sibling_uuid: NjvgaFbxjDjDquPs\n  child_uuid: FLsungh0dT3ok_0a\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 小程序相关文件类型\n  uuid: FLsungh0dT3ok_0a\n  url: rugmeb\n  prev_uuid: wtEzbVO2d1PioEzt\n  sibling_uuid: mg4IRxHSo-LSctGx\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77463281\n  level: 1\n  id: 77463281\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序的优缺点\n  uuid: mg4IRxHSo-LSctGx\n  url: itwfg1\n  prev_uuid: FLsungh0dT3ok_0a\n  sibling_uuid: VLFzOMdd3wS3G3n8\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77456810\n  level: 1\n  id: 77456810\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序原理\n  uuid: VLFzOMdd3wS3G3n8\n  url: df386q\n  prev_uuid: mg4IRxHSo-LSctGx\n  sibling_uuid: iXXVOfAVEFFLUGLp\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77456951\n  level: 1\n  id: 77456951\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序的双向绑定与 vue 的异同\n  uuid: iXXVOfAVEFFLUGLp\n  url: pfeofq\n  prev_uuid: VLFzOMdd3wS3G3n8\n  sibling_uuid: Tg-jnrLu4reCBSx5\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77456254\n  level: 1\n  id: 77456254\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序尺寸单位 rpx\n  uuid: Tg-jnrLu4reCBSx5\n  url: dt36ib\n  prev_uuid: iXXVOfAVEFFLUGLp\n  sibling_uuid: zsf5ihjINsJtmdB7\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77462972\n  level: 1\n  id: 77462972\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序页面间传递数据的方法\n  uuid: zsf5ihjINsJtmdB7\n  url: lgfegn\n  prev_uuid: Tg-jnrLu4reCBSx5\n  sibling_uuid: pmT_DNWp1Kj3pNLh\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77463586\n  level: 1\n  id: 77463586\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序的生命周期函数\n  uuid: pmT_DNWp1Kj3pNLh\n  url: gnn51p\n  prev_uuid: zsf5ihjINsJtmdB7\n  sibling_uuid: Uhe3MJlkMOSgK0Rg\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77463729\n  level: 1\n  id: 77463729\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序中页面跳转的几种方式\n  uuid: Uhe3MJlkMOSgK0Rg\n  url: lgdk49\n  prev_uuid: pmT_DNWp1Kj3pNLh\n  sibling_uuid: 6A1qVz1XNaVyhfOk\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77456427\n  level: 1\n  id: 77456427\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: h5 跳转小程序的几种方式\n  uuid: 6A1qVz1XNaVyhfOk\n  url: uxfa80\n  prev_uuid: Uhe3MJlkMOSgK0Rg\n  sibling_uuid: ew7M9iTrzvOJfXaH\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77457654\n  level: 1\n  id: 77457654\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序中如何实现下拉刷新\n  uuid: ew7M9iTrzvOJfXaH\n  url: qk3yad\n  prev_uuid: 6A1qVz1XNaVyhfOk\n  sibling_uuid: 2Y1B8CPyL3LkgcKl\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77457211\n  level: 1\n  id: 77457211\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序中 bindtap 和 catchtap 的区别\n  uuid: 2Y1B8CPyL3LkgcKl\n  url: vtacoq\n  prev_uuid: ew7M9iTrzvOJfXaH\n  sibling_uuid: 9RPkwJ0bDYesKq0y\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77457391\n  level: 1\n  id: 77457391\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序关联微信公众号如何确定用户的唯一性\n  uuid: 9RPkwJ0bDYesKq0y\n  url: zy41fo\n  prev_uuid: 2Y1B8CPyL3LkgcKl\n  sibling_uuid: gKieZkqAn8bSEFC8\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77457485\n  level: 1\n  id: 77457485\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序登陆\n  uuid: gKieZkqAn8bSEFC8\n  url: ykzhe6\n  prev_uuid: 9RPkwJ0bDYesKq0y\n  sibling_uuid: RcTwzJ7rg9upyTN_\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77461717\n  level: 1\n  id: 77461717\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序授权获取用户信息流程\n  uuid: RcTwzJ7rg9upyTN_\n  url: yid7ry\n  prev_uuid: gKieZkqAn8bSEFC8\n  sibling_uuid: 8TCMQK_DARltEJe-\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77463054\n  level: 1\n  id: 77463054\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 小程序性能优化\n  uuid: 8TCMQK_DARltEJe-\n  url: rm2ldf\n  prev_uuid: RcTwzJ7rg9upyTN_\n  sibling_uuid: oJtRGAclpkJwEuI8\n  child_uuid: ''\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: 77463131\n  level: 1\n  id: 77463131\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 其他\n  uuid: oJtRGAclpkJwEuI8\n  url: ''\n  prev_uuid: 8TCMQK_DARltEJe-\n  sibling_uuid: ''\n  child_uuid: gNjUOGAJS5Dc3hG8\n  parent_uuid: wtEzbVO2d1PioEzt\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 开发过程中的问题\n  uuid: gNjUOGAJS5Dc3hG8\n  url: kifv58\n  prev_uuid: oJtRGAclpkJwEuI8\n  sibling_uuid: nNiRI9qkLPlOVLR_\n  child_uuid: ''\n  parent_uuid: oJtRGAclpkJwEuI8\n  doc_id: 75215602\n  level: 2\n  id: 75215602\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 文档\n  uuid: nNiRI9qkLPlOVLR_\n  url: fyibny\n  prev_uuid: gNjUOGAJS5Dc3hG8\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: oJtRGAclpkJwEuI8\n  doc_id: 76180642\n  level: 2\n  id: 76180642\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 设计模式\n  uuid: NjvgaFbxjDjDquPs\n  url: ''\n  prev_uuid: wtEzbVO2d1PioEzt\n  sibling_uuid: EVQTfJhAXBsdI9RS\n  child_uuid: JrkuwvCs_WhsJYNf\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 面向对象的三大特征和六大原则\n  uuid: JrkuwvCs_WhsJYNf\n  url: ucwzqf\n  prev_uuid: NjvgaFbxjDjDquPs\n  sibling_uuid: Xq8Z3JqSyuSI-WfI\n  child_uuid: ''\n  parent_uuid: NjvgaFbxjDjDquPs\n  doc_id: 76155221\n  level: 1\n  id: 76155221\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 创建型模式\n  uuid: Xq8Z3JqSyuSI-WfI\n  url: ''\n  prev_uuid: JrkuwvCs_WhsJYNf\n  sibling_uuid: eHPKkMsIpdNsNQAc\n  child_uuid: 27x6aBfQlsFoEcIe\n  parent_uuid: NjvgaFbxjDjDquPs\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 单例模式\n  uuid: 27x6aBfQlsFoEcIe\n  url: greg09\n  prev_uuid: Xq8Z3JqSyuSI-WfI\n  sibling_uuid: S7_MAWPxiUwGc_yG\n  child_uuid: ''\n  parent_uuid: Xq8Z3JqSyuSI-WfI\n  doc_id: 76157711\n  level: 2\n  id: 76157711\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 工厂模式\n  uuid: S7_MAWPxiUwGc_yG\n  url: yilldv\n  prev_uuid: 27x6aBfQlsFoEcIe\n  sibling_uuid: Fz4UUe9sootwkJLN\n  child_uuid: ''\n  parent_uuid: Xq8Z3JqSyuSI-WfI\n  doc_id: 76157741\n  level: 2\n  id: 76157741\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 抽象工厂模式\n  uuid: Fz4UUe9sootwkJLN\n  url: lb85cd\n  prev_uuid: S7_MAWPxiUwGc_yG\n  sibling_uuid: WqigBLqy73MyrYGy\n  child_uuid: ''\n  parent_uuid: Xq8Z3JqSyuSI-WfI\n  doc_id: 76157793\n  level: 2\n  id: 76157793\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 建造者模式\n  uuid: WqigBLqy73MyrYGy\n  url: um62o3\n  prev_uuid: Fz4UUe9sootwkJLN\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: Xq8Z3JqSyuSI-WfI\n  doc_id: 76157841\n  level: 2\n  id: 76157841\n  open_window: 0\n  visible: 0\n- type: TITLE\n  title: 结构型模式\n  uuid: eHPKkMsIpdNsNQAc\n  url: ''\n  prev_uuid: Xq8Z3JqSyuSI-WfI\n  sibling_uuid: TKjNLxzsEvV-8OQ3\n  child_uuid: 4EnmycRcgTwdexqd\n  parent_uuid: NjvgaFbxjDjDquPs\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 代理模式\n  uuid: 4EnmycRcgTwdexqd\n  url: emgn4g\n  prev_uuid: eHPKkMsIpdNsNQAc\n  sibling_uuid: n2uHzl_zHrRDMw9b\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76157876\n  level: 2\n  id: 76157876\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 享元模式\n  uuid: n2uHzl_zHrRDMw9b\n  url: mvrd51\n  prev_uuid: 4EnmycRcgTwdexqd\n  sibling_uuid: 2IchTHraJITPZqEK\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76157912\n  level: 2\n  id: 76157912\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 适配器模式\n  uuid: 2IchTHraJITPZqEK\n  url: amee0r\n  prev_uuid: n2uHzl_zHrRDMw9b\n  sibling_uuid: r8zuIkYzgg-459k6\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76157968\n  level: 2\n  id: 76157968\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 装饰者模式\n  uuid: r8zuIkYzgg-459k6\n  url: wze6cu\n  prev_uuid: 2IchTHraJITPZqEK\n  sibling_uuid: DuNhBRIiXKK43Um3\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76157988\n  level: 2\n  id: 76157988\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 外观模式\n  uuid: DuNhBRIiXKK43Um3\n  url: staee7\n  prev_uuid: r8zuIkYzgg-459k6\n  sibling_uuid: mhEwDrx0vl1iJZPc\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76158039\n  level: 2\n  id: 76158039\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 组合模式\n  uuid: mhEwDrx0vl1iJZPc\n  url: agqniz\n  prev_uuid: DuNhBRIiXKK43Um3\n  sibling_uuid: XkuptE3GdOIrxGB7\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76158077\n  level: 2\n  id: 76158077\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 桥接模式\n  uuid: XkuptE3GdOIrxGB7\n  url: yk1n51\n  prev_uuid: mhEwDrx0vl1iJZPc\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: eHPKkMsIpdNsNQAc\n  doc_id: 76158107\n  level: 2\n  id: 76158107\n  open_window: 0\n  visible: 0\n- type: TITLE\n  title: 行为型模式\n  uuid: TKjNLxzsEvV-8OQ3\n  url: ''\n  prev_uuid: eHPKkMsIpdNsNQAc\n  sibling_uuid: v09XKwozBY05xZwo\n  child_uuid: mU7tiw4Lxo1QeZ2M\n  parent_uuid: NjvgaFbxjDjDquPs\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 发布-订阅模式\n  uuid: mU7tiw4Lxo1QeZ2M\n  url: pdlrcu\n  prev_uuid: TKjNLxzsEvV-8OQ3\n  sibling_uuid: D0GpxbjsBVVy9wMd\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158148\n  level: 2\n  id: 76158148\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 策略模式\n  uuid: D0GpxbjsBVVy9wMd\n  url: rm1d8m\n  prev_uuid: mU7tiw4Lxo1QeZ2M\n  sibling_uuid: LqATOvJNtJkCK6Rf\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158179\n  level: 2\n  id: 76158179\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 状态模式\n  uuid: LqATOvJNtJkCK6Rf\n  url: psug0t\n  prev_uuid: D0GpxbjsBVVy9wMd\n  sibling_uuid: B2ht6lKH9UrXGIzd\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158219\n  level: 2\n  id: 76158219\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 模版方法模式：咖啡厅制作咖啡\n  uuid: B2ht6lKH9UrXGIzd\n  url: vtvg1m\n  prev_uuid: LqATOvJNtJkCK6Rf\n  sibling_uuid: zmQm5ECyq6leF2PJ\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158262\n  level: 2\n  id: 76158262\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 迭代器模式：银行的点钞机\n  uuid: zmQm5ECyq6leF2PJ\n  url: grf92w\n  prev_uuid: B2ht6lKH9UrXGIzd\n  sibling_uuid: PoBek3VT-clw6YJQ\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158339\n  level: 2\n  id: 76158339\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 命令模式：江湖通缉令\n  uuid: PoBek3VT-clw6YJQ\n  url: ro2iu8\n  prev_uuid: zmQm5ECyq6leF2PJ\n  sibling_uuid: DBxd87bCzenGMWZM\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158383\n  level: 2\n  id: 76158383\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 职责链模式：领导，我想请个假\n  uuid: DBxd87bCzenGMWZM\n  url: foznxz\n  prev_uuid: PoBek3VT-clw6YJQ\n  sibling_uuid: qmPtYgpm0KNR2Idp\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158417\n  level: 2\n  id: 76158417\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 中介者模式：找媒人介绍对象\n  uuid: qmPtYgpm0KNR2Idp\n  url: ogglev\n  prev_uuid: DBxd87bCzenGMWZM\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: TKjNLxzsEvV-8OQ3\n  doc_id: 76158479\n  level: 2\n  id: 76158479\n  open_window: 0\n  visible: 0\n- type: TITLE\n  title: 其他模式\n  uuid: v09XKwozBY05xZwo\n  url: ''\n  prev_uuid: TKjNLxzsEvV-8OQ3\n  sibling_uuid: ''\n  child_uuid: 4dVV00R_mZE1DrwK\n  parent_uuid: NjvgaFbxjDjDquPs\n  doc_id: ''\n  level: 1\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: MVC、MVP、MVVM\n  uuid: 4dVV00R_mZE1DrwK\n  url: fsq7zk\n  prev_uuid: v09XKwozBY05xZwo\n  sibling_uuid: 4r6hmhgqPGZM0f-V\n  child_uuid: ''\n  parent_uuid: v09XKwozBY05xZwo\n  doc_id: 76158563\n  level: 2\n  id: 76158563\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 模块模式\n  uuid: 4r6hmhgqPGZM0f-V\n  url: iuz8cq\n  prev_uuid: 4dVV00R_mZE1DrwK\n  sibling_uuid: 3Tl5Ezys8fWumdtI\n  child_uuid: ''\n  parent_uuid: v09XKwozBY05xZwo\n  doc_id: 76158605\n  level: 2\n  id: 76158605\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 链模式\n  uuid: 3Tl5Ezys8fWumdtI\n  url: dd1zkg\n  prev_uuid: 4r6hmhgqPGZM0f-V\n  sibling_uuid: 5HZMFXgHcKbHDbAm\n  child_uuid: ''\n  parent_uuid: v09XKwozBY05xZwo\n  doc_id: 76158637\n  level: 2\n  id: 76158637\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 中间件\n  uuid: 5HZMFXgHcKbHDbAm\n  url: ckmwol\n  prev_uuid: 3Tl5Ezys8fWumdtI\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: v09XKwozBY05xZwo\n  doc_id: 76158659\n  level: 2\n  id: 76158659\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: NodeJS\n  uuid: EVQTfJhAXBsdI9RS\n  url: kvz3ia\n  prev_uuid: NjvgaFbxjDjDquPs\n  sibling_uuid: sETeEocX3KoAjN4C\n  child_uuid: KuyWvW7e-Iqza8tB\n  parent_uuid: ''\n  doc_id: 72212317\n  level: 0\n  id: 72212317\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: koa\n  uuid: KuyWvW7e-Iqza8tB\n  url: uh8e2o\n  prev_uuid: EVQTfJhAXBsdI9RS\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: EVQTfJhAXBsdI9RS\n  doc_id: 76189255\n  level: 1\n  id: 76189255\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 前端前沿技术\n  uuid: sETeEocX3KoAjN4C\n  url: ''\n  prev_uuid: EVQTfJhAXBsdI9RS\n  sibling_uuid: T2m_bXwyhIIt4efV\n  child_uuid: Rmo1yN_IvtmUw-Jw\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 2022年哪些前端技术点会火？\n  uuid: Rmo1yN_IvtmUw-Jw\n  url: dx03eg\n  prev_uuid: sETeEocX3KoAjN4C\n  sibling_uuid: M9hz7-1Xb17n1xJH\n  child_uuid: ''\n  parent_uuid: sETeEocX3KoAjN4C\n  doc_id: 72212106\n  level: 1\n  id: 72212106\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 关于2022前端趋势总结的总结\n  uuid: M9hz7-1Xb17n1xJH\n  url: bvq3i9\n  prev_uuid: Rmo1yN_IvtmUw-Jw\n  sibling_uuid: 5j76c3Np6YlU5BK5\n  child_uuid: ''\n  parent_uuid: sETeEocX3KoAjN4C\n  doc_id: 72212105\n  level: 1\n  id: 72212105\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Vue3.2 更新内容\n  uuid: 5j76c3Np6YlU5BK5\n  url: ia89dn\n  prev_uuid: M9hz7-1Xb17n1xJH\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: sETeEocX3KoAjN4C\n  doc_id: 72212098\n  level: 1\n  id: 72212098\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 精选笔记\n  uuid: T2m_bXwyhIIt4efV\n  url: ''\n  prev_uuid: sETeEocX3KoAjN4C\n  sibling_uuid: ''\n  child_uuid: qAH5c79MrPTnrzC2\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: Html 精选\n  uuid: qAH5c79MrPTnrzC2\n  url: tdmwtw\n  prev_uuid: T2m_bXwyhIIt4efV\n  sibling_uuid: O8A1TxI5Yrt4OrdY\n  child_uuid: ''\n  parent_uuid: T2m_bXwyhIIt4efV\n  doc_id: 72212275\n  level: 1\n  id: 72212275\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Css 精选\n  uuid: O8A1TxI5Yrt4OrdY\n  url: tf1yfg\n  prev_uuid: qAH5c79MrPTnrzC2\n  sibling_uuid: jTwW11V9HcT_Yd9G\n  child_uuid: ''\n  parent_uuid: T2m_bXwyhIIt4efV\n  doc_id: 72212272\n  level: 1\n  id: 72212272\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: JavaScript 精选\n  uuid: jTwW11V9HcT_Yd9G\n  url: ofgykz\n  prev_uuid: O8A1TxI5Yrt4OrdY\n  sibling_uuid: k6oWUdlMoIZTpbLG\n  child_uuid: ''\n  parent_uuid: T2m_bXwyhIIt4efV\n  doc_id: 72212277\n  level: 1\n  id: 72212277\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 计算机网络精选\n  uuid: k6oWUdlMoIZTpbLG\n  url: qg8cut\n  prev_uuid: jTwW11V9HcT_Yd9G\n  sibling_uuid: tJXjV-LZN2IsR4s0\n  child_uuid: ''\n  parent_uuid: T2m_bXwyhIIt4efV\n  doc_id: 72212279\n  level: 1\n  id: 72212279\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 操作系统精选\n  uuid: tJXjV-LZN2IsR4s0\n  url: tqxxpv\n  prev_uuid: k6oWUdlMoIZTpbLG\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: T2m_bXwyhIIt4efV\n  doc_id: 72212270\n  level: 1\n  id: 72212270\n  open_window: 0\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 237,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-19T17:42:04.537Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "updated_at": "2023-11-19T17:42:05.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-22T20:13:30.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/mxunh7",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 1145931763,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}