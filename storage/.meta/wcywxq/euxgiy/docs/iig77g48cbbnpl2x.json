{
  "id": 146790035,
  "slug": "iig77g48cbbnpl2x",
  "title": "typescrirpt 装饰器",
  "description": "v4.x// Method decorator function myMethodDecorator(target: any, propertyKey: string, descriptor: PropertyDescriptor) {   console.log(\"Method decora...",
  "cover": "",
  "user_id": 732231,
  "book_id": 44205378,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"KlIR4\"><span class=\"ne-text\">v4.x</span></h2><pre data-language=\"typescript\" id=\"FmcOB\" class=\"ne-codeblock language-typescript\"><code>// Method decorator\nfunction myMethodDecorator(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n  console.log(&quot;Method decorator called&quot;);\n  console.log(&quot;Target class:&quot;, target);\n  console.log(&quot;Method name:&quot;, propertyKey);\n  console.log(&quot;Method descriptor:&quot;, descriptor);\n\n  // Modify method behavior example\n  const originalMethod = descriptor.value;\n  descriptor.value = function (...args: any[]) {\n    console.log(&quot;Method arguments:&quot;, args);\n    const result = originalMethod.apply(this, args);\n    console.log(&quot;Method result:&quot;, result);\n    return result;\n  };\n}\n\nclass MyClass {\n  @myMethodDecorator\n  myMethod(param1: number, param2: string): string {\n    return `Parameter 1: ${param1}, Parameter 2: ${param2}`;\n  }\n}\n\n// Create class instance and call the decorated method\nconst instance = new MyClass();\nconst result = instance.myMethod(42, &quot;Hello&quot;);\nconsole.log(result);</code></pre><h2 id=\"HyWM9\"><span class=\"ne-text\">v5.x</span></h2><pre data-language=\"typescript\" id=\"AW6aZ\" class=\"ne-codeblock language-typescript\"><code>function logger(value: any, { kind, name }: ClassMethodDecoratorContext) {\n  if (kind === &quot;method&quot;) {\n    return function (...args: any[]) {\n      return value.call(this, ...args)\n    }\n  }\n  return value\n}\n\nclass MyClass {\n  @logger\n  print (message: string, a: string, b: string) {\n    console.log('message: ', message, a, b)\n  }\n}\n\nconst a = new MyClass()\n\na.print('aaaaaaa', 'b', 'c')</code></pre><p id=\"uf3628810\" class=\"ne-p\"><br></p></div>",
  "body": "<a name=\"KlIR4\"></a>\n## v4.x\n```typescript\n// Method decorator\nfunction myMethodDecorator(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n  console.log(\"Method decorator called\");\n  console.log(\"Target class:\", target);\n  console.log(\"Method name:\", propertyKey);\n  console.log(\"Method descriptor:\", descriptor);\n\n  // Modify method behavior example\n  const originalMethod = descriptor.value;\n  descriptor.value = function (...args: any[]) {\n    console.log(\"Method arguments:\", args);\n    const result = originalMethod.apply(this, args);\n    console.log(\"Method result:\", result);\n    return result;\n  };\n}\n\nclass MyClass {\n  @myMethodDecorator\n  myMethod(param1: number, param2: string): string {\n    return `Parameter 1: ${param1}, Parameter 2: ${param2}`;\n  }\n}\n\n// Create class instance and call the decorated method\nconst instance = new MyClass();\nconst result = instance.myMethod(42, \"Hello\");\nconsole.log(result);\n```\n<a name=\"HyWM9\"></a>\n## v5.x\n```typescript\nfunction logger(value: any, { kind, name }: ClassMethodDecoratorContext) {\n  if (kind === \"method\") {\n    return function (...args: any[]) {\n      return value.call(this, ...args)\n    }\n  }\n  return value\n}\n\nclass MyClass {\n  @logger\n  print (message: string, a: string, b: string) {\n    console.log('message: ', message, a, b)\n  }\n}\n\nconst a = new MyClass()\n\na.print('aaaaaaa', 'b', 'c')\n```\n\n",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"KlIR4\"><span class=\"ne-text\">v4.x</span></h2><pre data-language=\"typescript\" id=\"FmcOB\" class=\"ne-codeblock language-typescript\"><code>// Method decorator\nfunction myMethodDecorator(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n  console.log(&quot;Method decorator called&quot;);\n  console.log(&quot;Target class:&quot;, target);\n  console.log(&quot;Method name:&quot;, propertyKey);\n  console.log(&quot;Method descriptor:&quot;, descriptor);\n\n  // Modify method behavior example\n  const originalMethod = descriptor.value;\n  descriptor.value = function (...args: any[]) {\n    console.log(&quot;Method arguments:&quot;, args);\n    const result = originalMethod.apply(this, args);\n    console.log(&quot;Method result:&quot;, result);\n    return result;\n  };\n}\n\nclass MyClass {\n  @myMethodDecorator\n  myMethod(param1: number, param2: string): string {\n    return `Parameter 1: ${param1}, Parameter 2: ${param2}`;\n  }\n}\n\n// Create class instance and call the decorated method\nconst instance = new MyClass();\nconst result = instance.myMethod(42, &quot;Hello&quot;);\nconsole.log(result);</code></pre><h2 id=\"HyWM9\"><span class=\"ne-text\">v5.x</span></h2><pre data-language=\"typescript\" id=\"AW6aZ\" class=\"ne-codeblock language-typescript\"><code>function logger(value: any, { kind, name }: ClassMethodDecoratorContext) {\n  if (kind === &quot;method&quot;) {\n    return function (...args: any[]) {\n      return value.call(this, ...args)\n    }\n  }\n  return value\n}\n\nclass MyClass {\n  @logger\n  print (message: string, a: string, b: string) {\n    console.log('message: ', message, a, b)\n  }\n}\n\nconst a = new MyClass()\n\na.print('aaaaaaa', 'b', 'c')</code></pre><p id=\"uf3628810\" class=\"ne-p\"><br></p></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"typography\" content=\"classic\" /><h2 data-lake-id=\"KlIR4\" id=\"KlIR4\"><span data-lake-id=\"u85051a0c\" id=\"u85051a0c\">v4.x</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22typescript%22%2C%22code%22%3A%22%2F%2F%20Method%20decorator%5Cnfunction%20myMethodDecorator(target%3A%20any%2C%20propertyKey%3A%20string%2C%20descriptor%3A%20PropertyDescriptor)%20%7B%5Cn%20%20console.log(%5C%22Method%20decorator%20called%5C%22)%3B%5Cn%20%20console.log(%5C%22Target%20class%3A%5C%22%2C%20target)%3B%5Cn%20%20console.log(%5C%22Method%20name%3A%5C%22%2C%20propertyKey)%3B%5Cn%20%20console.log(%5C%22Method%20descriptor%3A%5C%22%2C%20descriptor)%3B%5Cn%5Cn%20%20%2F%2F%20Modify%20method%20behavior%20example%5Cn%20%20const%20originalMethod%20%3D%20descriptor.value%3B%5Cn%20%20descriptor.value%20%3D%20function%20(...args%3A%20any%5B%5D)%20%7B%5Cn%20%20%20%20console.log(%5C%22Method%20arguments%3A%5C%22%2C%20args)%3B%5Cn%20%20%20%20const%20result%20%3D%20originalMethod.apply(this%2C%20args)%3B%5Cn%20%20%20%20console.log(%5C%22Method%20result%3A%5C%22%2C%20result)%3B%5Cn%20%20%20%20return%20result%3B%5Cn%20%20%7D%3B%5Cn%7D%5Cn%5Cnclass%20MyClass%20%7B%5Cn%20%20%40myMethodDecorator%5Cn%20%20myMethod(param1%3A%20number%2C%20param2%3A%20string)%3A%20string%20%7B%5Cn%20%20%20%20return%20%60Parameter%201%3A%20%24%7Bparam1%7D%2C%20Parameter%202%3A%20%24%7Bparam2%7D%60%3B%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn%2F%2F%20Create%20class%20instance%20and%20call%20the%20decorated%20method%5Cnconst%20instance%20%3D%20new%20MyClass()%3B%5Cnconst%20result%20%3D%20instance.myMethod(42%2C%20%5C%22Hello%5C%22)%3B%5Cnconsole.log(result)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22FmcOB%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"HyWM9\" id=\"HyWM9\"><span data-lake-id=\"uad5d5aa9\" id=\"uad5d5aa9\">v5.x</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22typescript%22%2C%22code%22%3A%22function%20logger(value%3A%20any%2C%20%7B%20kind%2C%20name%20%7D%3A%20ClassMethodDecoratorContext)%20%7B%5Cn%20%20if%20(kind%20%3D%3D%3D%20%5C%22method%5C%22)%20%7B%5Cn%20%20%20%20return%20function%20(...args%3A%20any%5B%5D)%20%7B%5Cn%20%20%20%20%20%20return%20value.call(this%2C%20...args)%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20return%20value%5Cn%7D%5Cn%5Cnclass%20MyClass%20%7B%5Cn%20%20%40logger%5Cn%20%20print%20(message%3A%20string%2C%20a%3A%20string%2C%20b%3A%20string)%20%7B%5Cn%20%20%20%20console.log('message%3A%20'%2C%20message%2C%20a%2C%20b)%5Cn%20%20%7D%5Cn%7D%5Cn%5Cnconst%20a%20%3D%20new%20MyClass()%5Cn%5Cna.print('aaaaaaa'%2C%20'b'%2C%20'c')%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22AW6aZ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"uf3628810\" id=\"uf3628810\"><br></p>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 148,
  "created_at": "2023-11-13T09:12:35.000Z",
  "updated_at": "2023-11-13T09:13:06.000Z",
  "content_updated_at": "2023-11-13T09:13:06.000Z",
  "published_at": "2023-11-13T09:13:06.000Z",
  "first_published_at": "2023-11-13T09:12:34.952Z",
  "book": {
    "id": 44205378,
    "type": "Book",
    "slug": "euxgiy",
    "name": "碎片化内容 fragmentation",
    "user_id": 732231,
    "description": "记录碎片化的知识，每周做一次整理，每月做一次复盘",
    "toc_yml": "- type: META\n  count: 4\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 370934453\n  published: true\n  max_level: 0\n  last_updated_at: 2023-11-14T10:14:24.375Z\n  version_id: 370934502\n- type: DOC\n  title: typescrirpt 装饰器\n  uuid: QTMp6Kf11tG7OQd6\n  url: iig77g48cbbnpl2x\n  prev_uuid: ''\n  sibling_uuid: XnzqFLBUeAXrazLq\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 146790035\n  level: 0\n  id: 146790035\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: vscode debug 配置\n  uuid: XnzqFLBUeAXrazLq\n  url: kkkdxxhl1tgpogsf\n  prev_uuid: QTMp6Kf11tG7OQd6\n  sibling_uuid: slUIXTfyIPSf11if\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 146791177\n  level: 0\n  id: 146791177\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: package.json 版本号前缀介绍\n  uuid: slUIXTfyIPSf11if\n  url: yb8f8vco0xtnhrqk\n  prev_uuid: XnzqFLBUeAXrazLq\n  sibling_uuid: bn-T3-NEjet9t2GG\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 146791457\n  level: 0\n  id: 146791457\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: type-coverage\n  uuid: bn-T3-NEjet9t2GG\n  url: lo37xirhvqrp1is1\n  prev_uuid: slUIXTfyIPSf11if\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: ''\n  doc_id: 146925143\n  level: 0\n  id: 146925143\n  open_window: 1\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 4,
    "likes_count": 0,
    "watches_count": 0,
    "content_updated_at": "2023-11-14T10:14:27.286Z",
    "created_at": "2023-11-13T08:55:17.000Z",
    "updated_at": "2023-11-14T10:14:27.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-23T19:11:28.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/euxgiy",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-23T19:11:28.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 2112732943,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-23T19:11:28.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}