{
  "id": 77021666,
  "slug": "athu4p",
  "title": "文本中识别敏感词、表情包、链接、数字、字母并高亮",
  "description": "// 匹配等级，从左向右依次降低 var levels = [\"link\", \"emoji\", \"joke\", \"numberalphabet\"]; // 对应规则下的正则，样式和渲染内容 var rulesMap = {   link: {     tag: \"a\",     regex: ...",
  "cover": "",
  "user_id": 732231,
  "book_id": 27818302,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "",
  "body": "```javascript\n// 匹配等级，从左向右依次降低\nvar levels = [\"link\", \"emoji\", \"joke\", \"numberalphabet\"];\n// 对应规则下的正则，样式和渲染内容\nvar rulesMap = {\n  link: {\n    tag: \"a\",\n    regex: /(((ht|f)tps?):\\/\\/)+[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&:;/~+#-]*[\\w@?^=%&;/~+#-])?/,\n    regexAttribute: \"gi\",\n    attr: {\n      target: \"_blank\",\n      href: content => content\n    }\n  },\n  emoji: {\n    tag: \"img\",\n    regex: /\\[.*?\\]/,\n    regexAttribute: \"g\",\n    single: true,\n    attr: {\n      style: \"width: 25px; height: 25px\",\n      src: content => content || \"\",\n      alt: \"\"\n    }\n  },\n  joke: {\n    tag: \"span\",\n    regex: \"\",\n    regexAttribute: \"g\",\n    attr: {\n      style: \"color: #ff0; background-color: #f00\"\n    }\n  },\n  numberalphabet: {\n    tag: \"span\",\n    regex: /[a-zA-Z0-9]/,\n    regexAttribute: \"g\",\n    attr: {\n      style: \"color: #ff0; background-color: #f00\"\n    }\n  }\n};\n\nfunction isFunction(val) {\n  return Object.prototype.toString.call(val) === \"[object Function]\";\n}\n\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === \"[object Object]\";\n}\n\nfunction isArray(val) {\n  return Object.prototype.toString.call(val) === \"[object Array]\";\n}\n\nfunction isString(val) {\n  return Object.prototype.toString.call(val) === \"[object String]\";\n}\n\n/**\n * 生成标签内容\n * @param {*} type\n * @param {*} content\n */\nfunction renderHtmlTag(type, content) {\n  var { tag, single, attr } = rulesMap[type];\n  var attributesArr = Object.entries(attr).map(([key, value]) => {\n    if (isFunction(value)) {\n      return `${key}=\"${value()}\"`;\n    } else {\n      return `${key}=\"${value}\"`;\n    }\n  });\n\n  return single ? `<${tag} ${attributesArr.join(\" \")} />` : `<${tag} ${attributesArr.join(\" \")}>${content}</${tag}>`;\n}\n\n/**\n * @function\n * @description 获取高亮内容\n * @param content 内容\n * @param jokeMatchWords 敏感词数组\n */\nfunction getHighlight(content = [], jokeMatchWords) {\n  var renderArray = [content];\n  // 敏感词去重 + 排序\n  var noRepeatJokeMatchWords = Array.from(new Set(jokeMatchWords)).sort((a, b) => b.length - a.length);\n  // 生成正确匹配规则下的带有类型的正则匹配规则\n  var regExpArrWithType = getFlatRegExpArr(levels, noRepeatJokeMatchWords);\n  // 根据匹配规则生成对应匹配到的内容\n  regExpArrWithType.forEach(({ type, regExp }) => {\n    renderArray = recursiveSplitContent(type, regExp, renderArray);\n  });\n  var renderHtml = this.renderHtmlByJudgeType(renderArray, \"\");\n\n  return renderHtml;\n}\n\n/**\n * 根据类型将 html 结构进行拼接\n * @param {*} renderContent\n * @param {*} htmlString\n */\nfunction renderHtmlByJudgeType(renderContent, htmlString) {\n  if (isArray(renderContent)) {\n    renderContent.forEach(item => {\n      htmlString += renderHtmlByJudgeType(item, \"\");\n    });\n  } else if (isObject(renderContent)) {\n    var { type, content } = renderContent;\n    htmlString += renderHtmlTag(type, content);\n  } else if (isString(renderContent)) {\n    htmlString += renderContent;\n  }\n  return htmlString;\n}\n\n/**\n * 递归分割内容\n * @param {*} type\n * @param {*} regExp\n * @param {*} renderContent\n */\nfunction recursiveSplitContent(type, regExp, renderContent) {\n  if (isArray(renderContent)) {\n    renderContent = renderContent.map(item => recursiveSplitContent(type, regExp, item));\n  } else if (isString(renderContent)) {\n    var findWords = renderContent.match(regExp);\n    if (findWords) {\n      // findWords 去重\n      findWords = Array.from(new Set(findWords));\n      var nextRoundContentArray = [];\n      findWords.forEach(word => {\n        if (nextRoundContentArray.length) {\n          nextRoundContentArray = nextRoundContentArray.map(item => recursiveSplitContent(type, word, item));\n        } else {\n          var currentSplitArray = renderContent.split(word);\n          currentSplitArray.forEach((item, index) => {\n            if (index !== 0) {\n              nextRoundContentArray.push({ type, content: word });\n            }\n            nextRoundContentArray.push(item);\n          });\n        }\n      });\n      renderContent = nextRoundContentArray;\n    }\n  }\n  return renderContent;\n}\n\n/**\n * 扁平化后的一维带有类型的正则匹配数组\n * @param {*} levels\n * @param {*} jokeMatchWords\n */\nfunction getFlatRegExpArr(levels, jokeMatchWords) {\n  var arr = levels.map(level => ({ type: level, regExp: getRegExpRoundJokeArr(level, jokeMatchWords) }));\n  return arr\n    .map(({ type, regExp }) => {\n      return regExp.map(item => ({ type, regExp: item }));\n    })\n    .flat(Infinity);\n}\n\n/**\n * 生成包含敏感词的匹配规则数组\n * @param {*} type\n * @param {*} jokeMatchWords\n */\nfunction getRegExpRoundJokeArr(type, jokeMatchWords) {\n  var { regex, regexAttribute } = rulesMap[type],\n    regExpArray = [];\n  if (type === \"joke\") {\n    jokeMatchWords.forEach(word => {\n      regExpArray.push(new RegExp(word, regexAttribute));\n    });\n  } else {\n    regExpArray.push(new RegExp(regex, regexAttribute));\n  }\n  return regExpArray;\n}\n\n// ========== 测试 ==========\nvar jokeMatchWords = [\"共产党\", \"习近平\", \"习近平的1\", \"嘻嘻\", \"哈哈\", \"色情\"];\nvar text = \"https://www.google.com共产党的内容有习近平1231真的习近平https://www.google.com3你妹的习近平的1234sd2情['沮丧']的https://www.baidu.com图片4124色情的人还有aab色bccdd嘻嘻和span>哈哈哈https://www.google.com\";\ndocument.querySelector(\"#highlight\").innerHTML = getHighlight(text, jokeMatchWords);\n```\n",
  "body_html": "<!doctype html><pre data-lang=\"javascript\"><code>// 匹配等级，从左向右依次降低\nvar levels = [&quot;link&quot;, &quot;emoji&quot;, &quot;joke&quot;, &quot;numberalphabet&quot;];\n// 对应规则下的正则，样式和渲染内容\nvar rulesMap = {\n  link: {\n    tag: &quot;a&quot;,\n    regex: /(((ht|f)tps?):\\/\\/)+[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:;/~+#-]*[\\w@?^=%&amp;;/~+#-])?/,\n    regexAttribute: &quot;gi&quot;,\n    attr: {\n      target: &quot;_blank&quot;,\n      href: content =&gt; content\n    }\n  },\n  emoji: {\n    tag: &quot;img&quot;,\n    regex: /\\[.*?\\]/,\n    regexAttribute: &quot;g&quot;,\n    single: true,\n    attr: {\n      style: &quot;width: 25px; height: 25px&quot;,\n      src: content =&gt; content || &quot;&quot;,\n      alt: &quot;&quot;\n    }\n  },\n  joke: {\n    tag: &quot;span&quot;,\n    regex: &quot;&quot;,\n    regexAttribute: &quot;g&quot;,\n    attr: {\n      style: &quot;color: #ff0; background-color: #f00&quot;\n    }\n  },\n  numberalphabet: {\n    tag: &quot;span&quot;,\n    regex: /[a-zA-Z0-9]/,\n    regexAttribute: &quot;g&quot;,\n    attr: {\n      style: &quot;color: #ff0; background-color: #f00&quot;\n    }\n  }\n};\n\nfunction isFunction(val) {\n  return Object.prototype.toString.call(val) === &quot;[object Function]&quot;;\n}\n\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === &quot;[object Object]&quot;;\n}\n\nfunction isArray(val) {\n  return Object.prototype.toString.call(val) === &quot;[object Array]&quot;;\n}\n\nfunction isString(val) {\n  return Object.prototype.toString.call(val) === &quot;[object String]&quot;;\n}\n\n/**\n * 生成标签内容\n * @param {*} type\n * @param {*} content\n */\nfunction renderHtmlTag(type, content) {\n  var { tag, single, attr } = rulesMap[type];\n  var attributesArr = Object.entries(attr).map(([key, value]) =&gt; {\n    if (isFunction(value)) {\n      return `${key}=&quot;${value()}&quot;`;\n    } else {\n      return `${key}=&quot;${value}&quot;`;\n    }\n  });\n\n  return single ? `&lt;${tag} ${attributesArr.join(&quot; &quot;)} /&gt;` : `&lt;${tag} ${attributesArr.join(&quot; &quot;)}&gt;${content}&lt;/${tag}&gt;`;\n}\n\n/**\n * @function\n * @description 获取高亮内容\n * @param content 内容\n * @param jokeMatchWords 敏感词数组\n */\nfunction getHighlight(content = [], jokeMatchWords) {\n  var renderArray = [content];\n  // 敏感词去重 + 排序\n  var noRepeatJokeMatchWords = Array.from(new Set(jokeMatchWords)).sort((a, b) =&gt; b.length - a.length);\n  // 生成正确匹配规则下的带有类型的正则匹配规则\n  var regExpArrWithType = getFlatRegExpArr(levels, noRepeatJokeMatchWords);\n  // 根据匹配规则生成对应匹配到的内容\n  regExpArrWithType.forEach(({ type, regExp }) =&gt; {\n    renderArray = recursiveSplitContent(type, regExp, renderArray);\n  });\n  var renderHtml = this.renderHtmlByJudgeType(renderArray, &quot;&quot;);\n\n  return renderHtml;\n}\n\n/**\n * 根据类型将 html 结构进行拼接\n * @param {*} renderContent\n * @param {*} htmlString\n */\nfunction renderHtmlByJudgeType(renderContent, htmlString) {\n  if (isArray(renderContent)) {\n    renderContent.forEach(item =&gt; {\n      htmlString += renderHtmlByJudgeType(item, &quot;&quot;);\n    });\n  } else if (isObject(renderContent)) {\n    var { type, content } = renderContent;\n    htmlString += renderHtmlTag(type, content);\n  } else if (isString(renderContent)) {\n    htmlString += renderContent;\n  }\n  return htmlString;\n}\n\n/**\n * 递归分割内容\n * @param {*} type\n * @param {*} regExp\n * @param {*} renderContent\n */\nfunction recursiveSplitContent(type, regExp, renderContent) {\n  if (isArray(renderContent)) {\n    renderContent = renderContent.map(item =&gt; recursiveSplitContent(type, regExp, item));\n  } else if (isString(renderContent)) {\n    var findWords = renderContent.match(regExp);\n    if (findWords) {\n      // findWords 去重\n      findWords = Array.from(new Set(findWords));\n      var nextRoundContentArray = [];\n      findWords.forEach(word =&gt; {\n        if (nextRoundContentArray.length) {\n          nextRoundContentArray = nextRoundContentArray.map(item =&gt; recursiveSplitContent(type, word, item));\n        } else {\n          var currentSplitArray = renderContent.split(word);\n          currentSplitArray.forEach((item, index) =&gt; {\n            if (index !== 0) {\n              nextRoundContentArray.push({ type, content: word });\n            }\n            nextRoundContentArray.push(item);\n          });\n        }\n      });\n      renderContent = nextRoundContentArray;\n    }\n  }\n  return renderContent;\n}\n\n/**\n * 扁平化后的一维带有类型的正则匹配数组\n * @param {*} levels\n * @param {*} jokeMatchWords\n */\nfunction getFlatRegExpArr(levels, jokeMatchWords) {\n  var arr = levels.map(level =&gt; ({ type: level, regExp: getRegExpRoundJokeArr(level, jokeMatchWords) }));\n  return arr\n    .map(({ type, regExp }) =&gt; {\n      return regExp.map(item =&gt; ({ type, regExp: item }));\n    })\n    .flat(Infinity);\n}\n\n/**\n * 生成包含敏感词的匹配规则数组\n * @param {*} type\n * @param {*} jokeMatchWords\n */\nfunction getRegExpRoundJokeArr(type, jokeMatchWords) {\n  var { regex, regexAttribute } = rulesMap[type],\n    regExpArray = [];\n  if (type === &quot;joke&quot;) {\n    jokeMatchWords.forEach(word =&gt; {\n      regExpArray.push(new RegExp(word, regexAttribute));\n    });\n  } else {\n    regExpArray.push(new RegExp(regex, regexAttribute));\n  }\n  return regExpArray;\n}\n\n// ========== 测试 ==========\nvar jokeMatchWords = [&quot;共产党&quot;, &quot;习近平&quot;, &quot;习近平的1&quot;, &quot;嘻嘻&quot;, &quot;哈哈&quot;, &quot;色情&quot;];\nvar text = &quot;https://www.google.com共产党的内容有习近平1231真的习近平https://www.google.com3你妹的习近平的1234sd2情['沮丧']的https://www.baidu.com图片4124色情的人还有aab色bccdd嘻嘻和span&gt;哈哈哈https://www.google.com&quot;;\ndocument.querySelector(&quot;#highlight&quot;).innerHTML = getHighlight(text, jokeMatchWords);</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E5%8C%B9%E9%85%8D%E7%AD%89%E7%BA%A7%EF%BC%8C%E4%BB%8E%E5%B7%A6%E5%90%91%E5%8F%B3%E4%BE%9D%E6%AC%A1%E9%99%8D%E4%BD%8E%5Cnvar%20levels%20%3D%20%5B%5C%22link%5C%22%2C%20%5C%22emoji%5C%22%2C%20%5C%22joke%5C%22%2C%20%5C%22numberalphabet%5C%22%5D%3B%5Cn%2F%2F%20%E5%AF%B9%E5%BA%94%E8%A7%84%E5%88%99%E4%B8%8B%E7%9A%84%E6%AD%A3%E5%88%99%EF%BC%8C%E6%A0%B7%E5%BC%8F%E5%92%8C%E6%B8%B2%E6%9F%93%E5%86%85%E5%AE%B9%5Cnvar%20rulesMap%20%3D%20%7B%5Cn%20%20link%3A%20%7B%5Cn%20%20%20%20tag%3A%20%5C%22a%5C%22%2C%5Cn%20%20%20%20regex%3A%20%2F(((ht%7Cf)tps%3F)%3A%5C%5C%2F%5C%5C%2F)%2B%5B%5C%5Cw-%5D%2B(%5C%5C.%5B%5C%5Cw-%5D%2B)%2B(%5B%5C%5Cw.%2C%40%3F%5E%3D%25%26%3A%3B%2F~%2B%23-%5D*%5B%5C%5Cw%40%3F%5E%3D%25%26%3B%2F~%2B%23-%5D)%3F%2F%2C%5Cn%20%20%20%20regexAttribute%3A%20%5C%22gi%5C%22%2C%5Cn%20%20%20%20attr%3A%20%7B%5Cn%20%20%20%20%20%20target%3A%20%5C%22_blank%5C%22%2C%5Cn%20%20%20%20%20%20href%3A%20content%20%3D%3E%20content%5Cn%20%20%20%20%7D%5Cn%20%20%7D%2C%5Cn%20%20emoji%3A%20%7B%5Cn%20%20%20%20tag%3A%20%5C%22img%5C%22%2C%5Cn%20%20%20%20regex%3A%20%2F%5C%5C%5B.*%3F%5C%5C%5D%2F%2C%5Cn%20%20%20%20regexAttribute%3A%20%5C%22g%5C%22%2C%5Cn%20%20%20%20single%3A%20true%2C%5Cn%20%20%20%20attr%3A%20%7B%5Cn%20%20%20%20%20%20style%3A%20%5C%22width%3A%2025px%3B%20height%3A%2025px%5C%22%2C%5Cn%20%20%20%20%20%20src%3A%20content%20%3D%3E%20content%20%7C%7C%20%5C%22%5C%22%2C%5Cn%20%20%20%20%20%20alt%3A%20%5C%22%5C%22%5Cn%20%20%20%20%7D%5Cn%20%20%7D%2C%5Cn%20%20joke%3A%20%7B%5Cn%20%20%20%20tag%3A%20%5C%22span%5C%22%2C%5Cn%20%20%20%20regex%3A%20%5C%22%5C%22%2C%5Cn%20%20%20%20regexAttribute%3A%20%5C%22g%5C%22%2C%5Cn%20%20%20%20attr%3A%20%7B%5Cn%20%20%20%20%20%20style%3A%20%5C%22color%3A%20%23ff0%3B%20background-color%3A%20%23f00%5C%22%5Cn%20%20%20%20%7D%5Cn%20%20%7D%2C%5Cn%20%20numberalphabet%3A%20%7B%5Cn%20%20%20%20tag%3A%20%5C%22span%5C%22%2C%5Cn%20%20%20%20regex%3A%20%2F%5Ba-zA-Z0-9%5D%2F%2C%5Cn%20%20%20%20regexAttribute%3A%20%5C%22g%5C%22%2C%5Cn%20%20%20%20attr%3A%20%7B%5Cn%20%20%20%20%20%20style%3A%20%5C%22color%3A%20%23ff0%3B%20background-color%3A%20%23f00%5C%22%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%3B%5Cn%5Cnfunction%20isFunction(val)%20%7B%5Cn%20%20return%20Object.prototype.toString.call(val)%20%3D%3D%3D%20%5C%22%5Bobject%20Function%5D%5C%22%3B%5Cn%7D%5Cn%5Cnfunction%20isObject(val)%20%7B%5Cn%20%20return%20Object.prototype.toString.call(val)%20%3D%3D%3D%20%5C%22%5Bobject%20Object%5D%5C%22%3B%5Cn%7D%5Cn%5Cnfunction%20isArray(val)%20%7B%5Cn%20%20return%20Object.prototype.toString.call(val)%20%3D%3D%3D%20%5C%22%5Bobject%20Array%5D%5C%22%3B%5Cn%7D%5Cn%5Cnfunction%20isString(val)%20%7B%5Cn%20%20return%20Object.prototype.toString.call(val)%20%3D%3D%3D%20%5C%22%5Bobject%20String%5D%5C%22%3B%5Cn%7D%5Cn%5Cn%2F**%5Cn%20*%20%E7%94%9F%E6%88%90%E6%A0%87%E7%AD%BE%E5%86%85%E5%AE%B9%5Cn%20*%20%40param%20%7B*%7D%20type%5Cn%20*%20%40param%20%7B*%7D%20content%5Cn%20*%2F%5Cnfunction%20renderHtmlTag(type%2C%20content)%20%7B%5Cn%20%20var%20%7B%20tag%2C%20single%2C%20attr%20%7D%20%3D%20rulesMap%5Btype%5D%3B%5Cn%20%20var%20attributesArr%20%3D%20Object.entries(attr).map((%5Bkey%2C%20value%5D)%20%3D%3E%20%7B%5Cn%20%20%20%20if%20(isFunction(value))%20%7B%5Cn%20%20%20%20%20%20return%20%60%24%7Bkey%7D%3D%5C%22%24%7Bvalue()%7D%5C%22%60%3B%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20return%20%60%24%7Bkey%7D%3D%5C%22%24%7Bvalue%7D%5C%22%60%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D)%3B%5Cn%5Cn%20%20return%20single%20%3F%20%60%3C%24%7Btag%7D%20%24%7BattributesArr.join(%5C%22%20%5C%22)%7D%20%2F%3E%60%20%3A%20%60%3C%24%7Btag%7D%20%24%7BattributesArr.join(%5C%22%20%5C%22)%7D%3E%24%7Bcontent%7D%3C%2F%24%7Btag%7D%3E%60%3B%5Cn%7D%5Cn%5Cn%2F**%5Cn%20*%20%40function%5Cn%20*%20%40description%20%E8%8E%B7%E5%8F%96%E9%AB%98%E4%BA%AE%E5%86%85%E5%AE%B9%5Cn%20*%20%40param%20content%20%E5%86%85%E5%AE%B9%5Cn%20*%20%40param%20jokeMatchWords%20%E6%95%8F%E6%84%9F%E8%AF%8D%E6%95%B0%E7%BB%84%5Cn%20*%2F%5Cnfunction%20getHighlight(content%20%3D%20%5B%5D%2C%20jokeMatchWords)%20%7B%5Cn%20%20var%20renderArray%20%3D%20%5Bcontent%5D%3B%5Cn%20%20%2F%2F%20%E6%95%8F%E6%84%9F%E8%AF%8D%E5%8E%BB%E9%87%8D%20%2B%20%E6%8E%92%E5%BA%8F%5Cn%20%20var%20noRepeatJokeMatchWords%20%3D%20Array.from(new%20Set(jokeMatchWords)).sort((a%2C%20b)%20%3D%3E%20b.length%20-%20a.length)%3B%5Cn%20%20%2F%2F%20%E7%94%9F%E6%88%90%E6%AD%A3%E7%A1%AE%E5%8C%B9%E9%85%8D%E8%A7%84%E5%88%99%E4%B8%8B%E7%9A%84%E5%B8%A6%E6%9C%89%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D%E8%A7%84%E5%88%99%5Cn%20%20var%20regExpArrWithType%20%3D%20getFlatRegExpArr(levels%2C%20noRepeatJokeMatchWords)%3B%5Cn%20%20%2F%2F%20%E6%A0%B9%E6%8D%AE%E5%8C%B9%E9%85%8D%E8%A7%84%E5%88%99%E7%94%9F%E6%88%90%E5%AF%B9%E5%BA%94%E5%8C%B9%E9%85%8D%E5%88%B0%E7%9A%84%E5%86%85%E5%AE%B9%5Cn%20%20regExpArrWithType.forEach((%7B%20type%2C%20regExp%20%7D)%20%3D%3E%20%7B%5Cn%20%20%20%20renderArray%20%3D%20recursiveSplitContent(type%2C%20regExp%2C%20renderArray)%3B%5Cn%20%20%7D)%3B%5Cn%20%20var%20renderHtml%20%3D%20this.renderHtmlByJudgeType(renderArray%2C%20%5C%22%5C%22)%3B%5Cn%5Cn%20%20return%20renderHtml%3B%5Cn%7D%5Cn%5Cn%2F**%5Cn%20*%20%E6%A0%B9%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%B0%86%20html%20%E7%BB%93%E6%9E%84%E8%BF%9B%E8%A1%8C%E6%8B%BC%E6%8E%A5%5Cn%20*%20%40param%20%7B*%7D%20renderContent%5Cn%20*%20%40param%20%7B*%7D%20htmlString%5Cn%20*%2F%5Cnfunction%20renderHtmlByJudgeType(renderContent%2C%20htmlString)%20%7B%5Cn%20%20if%20(isArray(renderContent))%20%7B%5Cn%20%20%20%20renderContent.forEach(item%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20htmlString%20%2B%3D%20renderHtmlByJudgeType(item%2C%20%5C%22%5C%22)%3B%5Cn%20%20%20%20%7D)%3B%5Cn%20%20%7D%20else%20if%20(isObject(renderContent))%20%7B%5Cn%20%20%20%20var%20%7B%20type%2C%20content%20%7D%20%3D%20renderContent%3B%5Cn%20%20%20%20htmlString%20%2B%3D%20renderHtmlTag(type%2C%20content)%3B%5Cn%20%20%7D%20else%20if%20(isString(renderContent))%20%7B%5Cn%20%20%20%20htmlString%20%2B%3D%20renderContent%3B%5Cn%20%20%7D%5Cn%20%20return%20htmlString%3B%5Cn%7D%5Cn%5Cn%2F**%5Cn%20*%20%E9%80%92%E5%BD%92%E5%88%86%E5%89%B2%E5%86%85%E5%AE%B9%5Cn%20*%20%40param%20%7B*%7D%20type%5Cn%20*%20%40param%20%7B*%7D%20regExp%5Cn%20*%20%40param%20%7B*%7D%20renderContent%5Cn%20*%2F%5Cnfunction%20recursiveSplitContent(type%2C%20regExp%2C%20renderContent)%20%7B%5Cn%20%20if%20(isArray(renderContent))%20%7B%5Cn%20%20%20%20renderContent%20%3D%20renderContent.map(item%20%3D%3E%20recursiveSplitContent(type%2C%20regExp%2C%20item))%3B%5Cn%20%20%7D%20else%20if%20(isString(renderContent))%20%7B%5Cn%20%20%20%20var%20findWords%20%3D%20renderContent.match(regExp)%3B%5Cn%20%20%20%20if%20(findWords)%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20findWords%20%E5%8E%BB%E9%87%8D%5Cn%20%20%20%20%20%20findWords%20%3D%20Array.from(new%20Set(findWords))%3B%5Cn%20%20%20%20%20%20var%20nextRoundContentArray%20%3D%20%5B%5D%3B%5Cn%20%20%20%20%20%20findWords.forEach(word%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(nextRoundContentArray.length)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20nextRoundContentArray%20%3D%20nextRoundContentArray.map(item%20%3D%3E%20recursiveSplitContent(type%2C%20word%2C%20item))%3B%5Cn%20%20%20%20%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20var%20currentSplitArray%20%3D%20renderContent.split(word)%3B%5Cn%20%20%20%20%20%20%20%20%20%20currentSplitArray.forEach((item%2C%20index)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(index%20!%3D%3D%200)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20nextRoundContentArray.push(%7B%20type%2C%20content%3A%20word%20%7D)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20nextRoundContentArray.push(item)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20renderContent%20%3D%20nextRoundContentArray%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20return%20renderContent%3B%5Cn%7D%5Cn%5Cn%2F**%5Cn%20*%20%E6%89%81%E5%B9%B3%E5%8C%96%E5%90%8E%E7%9A%84%E4%B8%80%E7%BB%B4%E5%B8%A6%E6%9C%89%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D%E6%95%B0%E7%BB%84%5Cn%20*%20%40param%20%7B*%7D%20levels%5Cn%20*%20%40param%20%7B*%7D%20jokeMatchWords%5Cn%20*%2F%5Cnfunction%20getFlatRegExpArr(levels%2C%20jokeMatchWords)%20%7B%5Cn%20%20var%20arr%20%3D%20levels.map(level%20%3D%3E%20(%7B%20type%3A%20level%2C%20regExp%3A%20getRegExpRoundJokeArr(level%2C%20jokeMatchWords)%20%7D))%3B%5Cn%20%20return%20arr%5Cn%20%20%20%20.map((%7B%20type%2C%20regExp%20%7D)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20return%20regExp.map(item%20%3D%3E%20(%7B%20type%2C%20regExp%3A%20item%20%7D))%3B%5Cn%20%20%20%20%7D)%5Cn%20%20%20%20.flat(Infinity)%3B%5Cn%7D%5Cn%5Cn%2F**%5Cn%20*%20%E7%94%9F%E6%88%90%E5%8C%85%E5%90%AB%E6%95%8F%E6%84%9F%E8%AF%8D%E7%9A%84%E5%8C%B9%E9%85%8D%E8%A7%84%E5%88%99%E6%95%B0%E7%BB%84%5Cn%20*%20%40param%20%7B*%7D%20type%5Cn%20*%20%40param%20%7B*%7D%20jokeMatchWords%5Cn%20*%2F%5Cnfunction%20getRegExpRoundJokeArr(type%2C%20jokeMatchWords)%20%7B%5Cn%20%20var%20%7B%20regex%2C%20regexAttribute%20%7D%20%3D%20rulesMap%5Btype%5D%2C%5Cn%20%20%20%20regExpArray%20%3D%20%5B%5D%3B%5Cn%20%20if%20(type%20%3D%3D%3D%20%5C%22joke%5C%22)%20%7B%5Cn%20%20%20%20jokeMatchWords.forEach(word%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20regExpArray.push(new%20RegExp(word%2C%20regexAttribute))%3B%5Cn%20%20%20%20%7D)%3B%5Cn%20%20%7D%20else%20%7B%5Cn%20%20%20%20regExpArray.push(new%20RegExp(regex%2C%20regexAttribute))%3B%5Cn%20%20%7D%5Cn%20%20return%20regExpArray%3B%5Cn%7D%5Cn%5Cn%2F%2F%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%E6%B5%8B%E8%AF%95%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%5Cnvar%20jokeMatchWords%20%3D%20%5B%5C%22%E5%85%B1%E4%BA%A7%E5%85%9A%5C%22%2C%20%5C%22%E4%B9%A0%E8%BF%91%E5%B9%B3%5C%22%2C%20%5C%22%E4%B9%A0%E8%BF%91%E5%B9%B3%E7%9A%841%5C%22%2C%20%5C%22%E5%98%BB%E5%98%BB%5C%22%2C%20%5C%22%E5%93%88%E5%93%88%5C%22%2C%20%5C%22%E8%89%B2%E6%83%85%5C%22%5D%3B%5Cnvar%20text%20%3D%20%5C%22https%3A%2F%2Fwww.google.com%E5%85%B1%E4%BA%A7%E5%85%9A%E7%9A%84%E5%86%85%E5%AE%B9%E6%9C%89%E4%B9%A0%E8%BF%91%E5%B9%B31231%E7%9C%9F%E7%9A%84%E4%B9%A0%E8%BF%91%E5%B9%B3https%3A%2F%2Fwww.google.com3%E4%BD%A0%E5%A6%B9%E7%9A%84%E4%B9%A0%E8%BF%91%E5%B9%B3%E7%9A%841234sd2%E6%83%85%5B'%E6%B2%AE%E4%B8%A7'%5D%E7%9A%84https%3A%2F%2Fwww.baidu.com%E5%9B%BE%E7%89%874124%E8%89%B2%E6%83%85%E7%9A%84%E4%BA%BA%E8%BF%98%E6%9C%89aab%E8%89%B2bccdd%E5%98%BB%E5%98%BB%E5%92%8Cspan%3E%E5%93%88%E5%93%88%E5%93%88https%3A%2F%2Fwww.google.com%5C%22%3B%5Cndocument.querySelector(%5C%22%23highlight%5C%22).innerHTML%20%3D%20getHighlight(text%2C%20jokeMatchWords)%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22WY9Te%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 730,
  "created_at": "2022-05-11T15:01:49.000Z",
  "updated_at": "2022-05-11T15:08:07.000Z",
  "content_updated_at": "2022-05-11T15:01:49.000Z",
  "published_at": "2022-05-11T15:01:49.000Z",
  "first_published_at": "2022-05-11T15:01:49.115Z",
  "book": {
    "id": 27818302,
    "type": "Book",
    "slug": "pgkpvh",
    "name": "前端面试知识梳理",
    "user_id": 732231,
    "description": "",
    "toc_yml": "- type: META\n  count: 74\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 203636985\n  published: true\n  max_level: 1\n  last_updated_at: 2022-05-11T15:02:51.310Z\n  version_id: 203637675\n- type: TITLE\n  title: 基础 api 实现\n  uuid: 8cOHMB0GUaMGEJAZ\n  url: ''\n  prev_uuid: ''\n  sibling_uuid: XzzPhY1bnt-jy6Uq\n  child_uuid: tkSYK-Ar5LWNbwCs\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现 es6 的 extends\n  uuid: tkSYK-Ar5LWNbwCs\n  url: vtqbgk\n  prev_uuid: 8cOHMB0GUaMGEJAZ\n  sibling_uuid: iZbjvIrZWQPncGf4\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021830\n  level: 1\n  id: 77021830\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 ajax\n  uuid: iZbjvIrZWQPncGf4\n  url: cq5ws4\n  prev_uuid: tkSYK-Ar5LWNbwCs\n  sibling_uuid: GQ98GFTcsA6oX5fu\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021696\n  level: 1\n  id: 77021696\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 call、apply、bind\n  uuid: GQ98GFTcsA6oX5fu\n  url: ybrsyw\n  prev_uuid: iZbjvIrZWQPncGf4\n  sibling_uuid: 8mxtq-HrdjGBfE1K\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021715\n  level: 1\n  id: 77021715\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 new 关键字\n  uuid: 8mxtq-HrdjGBfE1K\n  url: pldu2b\n  prev_uuid: GQ98GFTcsA6oX5fu\n  sibling_uuid: DTHsD8sppgSTGUG-\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021706\n  level: 1\n  id: 77021706\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 函数柯理化\n  uuid: DTHsD8sppgSTGUG-\n  url: yo9cx5\n  prev_uuid: 8mxtq-HrdjGBfE1K\n  sibling_uuid: TaRHTWpqD3Ef8QHU\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021634\n  level: 1\n  id: 77021634\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 浅拷贝和深拷贝\n  uuid: TaRHTWpqD3Ef8QHU\n  url: ufks1z\n  prev_uuid: DTHsD8sppgSTGUG-\n  sibling_uuid: 4Z30CA9ZXVdeKnnL\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021640\n  level: 1\n  id: 77021640\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 instanceof\n  uuid: 4Z30CA9ZXVdeKnnL\n  url: ba4wuo\n  prev_uuid: TaRHTWpqD3Ef8QHU\n  sibling_uuid: 2MBif8wnmvigRAxT\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021689\n  level: 1\n  id: 77021689\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 手动实现定时器\n  uuid: 2MBif8wnmvigRAxT\n  url: wf9bwg\n  prev_uuid: 4Z30CA9ZXVdeKnnL\n  sibling_uuid: 8f6jGaWidUBFSNN7\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021645\n  level: 1\n  id: 77021645\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: sleep 函数实现\n  uuid: 8f6jGaWidUBFSNN7\n  url: ngwrak\n  prev_uuid: 2MBif8wnmvigRAxT\n  sibling_uuid: lXeuN-kwl51AKTO0\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021787\n  level: 1\n  id: 77021787\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 JSON.stringify\n  uuid: lXeuN-kwl51AKTO0\n  url: mtoe2n\n  prev_uuid: 8f6jGaWidUBFSNN7\n  sibling_uuid: hVvT5-pJ5qVvYNrK\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021785\n  level: 1\n  id: 77021785\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: js 通用类型获取\n  uuid: hVvT5-pJ5qVvYNrK\n  url: tll6lm\n  prev_uuid: lXeuN-kwl51AKTO0\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021802\n  level: 1\n  id: 77021802\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 防抖和节流\n  uuid: XzzPhY1bnt-jy6Uq\n  url: ''\n  prev_uuid: 8cOHMB0GUaMGEJAZ\n  sibling_uuid: PkyQAjgp1TOfRd_2\n  child_uuid: AQvBtgwRPd2U2nSA\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 防抖\n  uuid: AQvBtgwRPd2U2nSA\n  url: enlngv\n  prev_uuid: XzzPhY1bnt-jy6Uq\n  sibling_uuid: nlhlSMjYGwG8o1jH\n  child_uuid: ''\n  parent_uuid: XzzPhY1bnt-jy6Uq\n  doc_id: 77021614\n  level: 1\n  id: 77021614\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 节流\n  uuid: nlhlSMjYGwG8o1jH\n  url: griz0t\n  prev_uuid: AQvBtgwRPd2U2nSA\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: XzzPhY1bnt-jy6Uq\n  doc_id: 77021626\n  level: 1\n  id: 77021626\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 数组相关\n  uuid: PkyQAjgp1TOfRd_2\n  url: ''\n  prev_uuid: XzzPhY1bnt-jy6Uq\n  sibling_uuid: 5NjAYoIgV-DfXemF\n  child_uuid: xTSsZIKFI9Di3LBH\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 数组转树\n  uuid: xTSsZIKFI9Di3LBH\n  url: bzgequ\n  prev_uuid: PkyQAjgp1TOfRd_2\n  sibling_uuid: Z_6uIAB9XA6raQPD\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021833\n  level: 1\n  id: 77021833\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 树转数组\n  uuid: Z_6uIAB9XA6raQPD\n  url: xycpzl\n  prev_uuid: xTSsZIKFI9Di3LBH\n  sibling_uuid: hoLauQ33F3aF2wq7\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021835\n  level: 1\n  id: 77021835\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组常用方法\n  uuid: hoLauQ33F3aF2wq7\n  url: owtewn\n  prev_uuid: Z_6uIAB9XA6raQPD\n  sibling_uuid: rvc_A-WMsWds7EBa\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021725\n  level: 1\n  id: 77021725\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组去重实现\n  uuid: rvc_A-WMsWds7EBa\n  url: gq2z9n\n  prev_uuid: hoLauQ33F3aF2wq7\n  sibling_uuid: NB4bY-etxMWq1YWS\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021623\n  level: 1\n  id: 77021623\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组扁平化实现\n  uuid: NB4bY-etxMWq1YWS\n  url: doeryg\n  prev_uuid: rvc_A-WMsWds7EBa\n  sibling_uuid: DBoiy0L7Hhm_Zrkf\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021607\n  level: 1\n  id: 77021607\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 类数组转换为数组\n  uuid: DBoiy0L7Hhm_Zrkf\n  url: csgagn\n  prev_uuid: NB4bY-etxMWq1YWS\n  sibling_uuid: E4WkD_rpaai_v3HK\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021754\n  level: 1\n  id: 77021754\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现数组乱序输出\n  uuid: E4WkD_rpaai_v3HK\n  url: xlrgnu\n  prev_uuid: DBoiy0L7Hhm_Zrkf\n  sibling_uuid: OkcuvyhOMA6N0ex4\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021731\n  level: 1\n  id: 77021731\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 查找二维数组的目标值\n  uuid: OkcuvyhOMA6N0ex4\n  url: tmw2ny\n  prev_uuid: E4WkD_rpaai_v3HK\n  sibling_uuid: F8K4-6VRqHrupctd\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021789\n  level: 1\n  id: 77021789\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 二维数组斜向打印\n  uuid: F8K4-6VRqHrupctd\n  url: aqw6my\n  prev_uuid: OkcuvyhOMA6N0ex4\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021780\n  level: 1\n  id: 77021780\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 字符串相关\n  uuid: 5NjAYoIgV-DfXemF\n  url: ''\n  prev_uuid: PkyQAjgp1TOfRd_2\n  sibling_uuid: Q34_kLhQ_uWoQw46\n  child_uuid: XNjX12HqmJBUHjy7\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现字符串的 repeat 方法\n  uuid: XNjX12HqmJBUHjy7\n  url: hxelqc\n  prev_uuid: 5NjAYoIgV-DfXemF\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 5NjAYoIgV-DfXemF\n  doc_id: 77021740\n  level: 1\n  id: 77021740\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: promise相关\n  uuid: Q34_kLhQ_uWoQw46\n  url: ''\n  prev_uuid: 5NjAYoIgV-DfXemF\n  sibling_uuid: aXqdYGJNJ1HlijwX\n  child_uuid: fuTj4su1VjBeHDO5\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现 Promise A+\n  uuid: fuTj4su1VjBeHDO5\n  url: fl6cgx\n  prev_uuid: Q34_kLhQ_uWoQw46\n  sibling_uuid: IOPLb2N42d3OZ0Zq\n  child_uuid: ''\n  parent_uuid: Q34_kLhQ_uWoQw46\n  doc_id: 77021620\n  level: 1\n  id: 77021620\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise  常用方法实现\n  uuid: IOPLb2N42d3OZ0Zq\n  url: vd2h4l\n  prev_uuid: fuTj4su1VjBeHDO5\n  sibling_uuid: vKLkkDq-XoJwsqMW\n  child_uuid: ''\n  parent_uuid: Q34_kLhQ_uWoQw46\n  doc_id: 77021632\n  level: 1\n  id: 77021632\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 并发控制\n  uuid: vKLkkDq-XoJwsqMW\n  url: gd3193\n  prev_uuid: IOPLb2N42d3OZ0Zq\n  sibling_uuid: rYJ2dherst1MyK0I\n  child_uuid: ''\n  parent_uuid: Q34_kLhQ_uWoQw46\n  doc_id: 77021662\n  level: 1\n  id: 77021662\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 缓存\n  uuid: rYJ2dherst1MyK0I\n  url: sgcusf\n  prev_uuid: vKLkkDq-XoJwsqMW\n  sibling_uuid: xZ5UrxtCjhBJxiXK\n  child_uuid: ''\n  parent_uuid: Q34_kLhQ_uWoQw46\n  doc_id: 77021679\n  level: 1\n  id: 77021679\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 异步串行输出\n  uuid: xZ5UrxtCjhBJxiXK\n  url: um4g6z\n  prev_uuid: rYJ2dherst1MyK0I\n  sibling_uuid: fZuICDZLsFJSo57b\n  child_uuid: ''\n  parent_uuid: Q34_kLhQ_uWoQw46\n  doc_id: 77021649\n  level: 1\n  id: 77021649\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 带并发的异步调度器 Scheduler\n  uuid: fZuICDZLsFJSo57b\n  url: kbkc8e\n  prev_uuid: xZ5UrxtCjhBJxiXK\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: Q34_kLhQ_uWoQw46\n  doc_id: 77021700\n  level: 1\n  id: 77021700\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 数据处理\n  uuid: aXqdYGJNJ1HlijwX\n  url: ''\n  prev_uuid: Q34_kLhQ_uWoQw46\n  sibling_uuid: oj23-2V9egz1L0Ic\n  child_uuid: SxxBIhY4HFEaNF8V\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 解析 url 参数对象\n  uuid: SxxBIhY4HFEaNF8V\n  url: rxw8qp\n  prev_uuid: aXqdYGJNJ1HlijwX\n  sibling_uuid: yiD9ldSpBGzQNQxQ\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021764\n  level: 1\n  id: 77021764\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现日期格式化函数\n  uuid: yiD9ldSpBGzQNQxQ\n  url: shzfyg\n  prev_uuid: SxxBIhY4HFEaNF8V\n  sibling_uuid: _3QVaw5COwwvCXZv\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021710\n  level: 1\n  id: 77021710\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 交换 a、b 的值，不使用临时变量\n  uuid: _3QVaw5COwwvCXZv\n  url: xw17tv\n  prev_uuid: yiD9ldSpBGzQNQxQ\n  sibling_uuid: Mq5fe2v7j2INDdvL\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021736\n  level: 1\n  id: 77021736\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 获取两个数之间的任意随机数\n  uuid: Mq5fe2v7j2INDdvL\n  url: vhngph\n  prev_uuid: _3QVaw5COwwvCXZv\n  sibling_uuid: 8Chl_bOMaALA1jhP\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021688\n  level: 1\n  id: 77021688\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 将数字千分位用逗号隔开\n  uuid: 8Chl_bOMaALA1jhP\n  url: vphpea\n  prev_uuid: Mq5fe2v7j2INDdvL\n  sibling_uuid: MLI7v9Et4dIn7XiV\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021743\n  level: 1\n  id: 77021743\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现非负大整数相加\n  uuid: MLI7v9Et4dIn7XiV\n  url: xlvd0g\n  prev_uuid: 8Chl_bOMaALA1jhP\n  sibling_uuid: mVWcb08QaDpa9PNH\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021748\n  level: 1\n  id: 77021748\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 判断对象是否存在循环引用\n  uuid: mVWcb08QaDpa9PNH\n  url: phqdmd\n  prev_uuid: MLI7v9Et4dIn7XiV\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021768\n  level: 1\n  id: 77021768\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 框架\n  uuid: oj23-2V9egz1L0Ic\n  url: ''\n  prev_uuid: aXqdYGJNJ1HlijwX\n  sibling_uuid: BTeDPodj0NU8fRW3\n  child_uuid: t5HRubL3aXPLNoG6\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 发布订阅模式\n  uuid: t5HRubL3aXPLNoG6\n  url: ezcdgo\n  prev_uuid: oj23-2V9egz1L0Ic\n  sibling_uuid: EqMT4jazWkuKJX1v\n  child_uuid: ''\n  parent_uuid: oj23-2V9egz1L0Ic\n  doc_id: 77021611\n  level: 1\n  id: 77021611\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 观察者模式\n  uuid: EqMT4jazWkuKJX1v\n  url: dwziom\n  prev_uuid: t5HRubL3aXPLNoG6\n  sibling_uuid: O5OEkYSpde-8we8V\n  child_uuid: ''\n  parent_uuid: oj23-2V9egz1L0Ic\n  doc_id: 77021795\n  level: 1\n  id: 77021795\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易版 vue2\n  uuid: O5OEkYSpde-8we8V\n  url: indxog\n  prev_uuid: EqMT4jazWkuKJX1v\n  sibling_uuid: XOQaAmtLM_gvM85t\n  child_uuid: ''\n  parent_uuid: oj23-2V9egz1L0Ic\n  doc_id: 77021636\n  level: 1\n  id: 77021636\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易版 vue3\n  uuid: XOQaAmtLM_gvM85t\n  url: an017i\n  prev_uuid: O5OEkYSpde-8we8V\n  sibling_uuid: ciSabdz5MTC1wbC7\n  child_uuid: ''\n  parent_uuid: oj23-2V9egz1L0Ic\n  doc_id: 77021804\n  level: 1\n  id: 77021804\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易版 vuex\n  uuid: ciSabdz5MTC1wbC7\n  url: myzomg\n  prev_uuid: XOQaAmtLM_gvM85t\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: oj23-2V9egz1L0Ic\n  doc_id: 77021704\n  level: 1\n  id: 77021704\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 应用场景\n  uuid: BTeDPodj0NU8fRW3\n  url: ''\n  prev_uuid: oj23-2V9egz1L0Ic\n  sibling_uuid: KKJ-BzUK3K9FxUJ2\n  child_uuid: U1oF7BfjBGNpWa79\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 通过调用 addRemote 实现 add\n  uuid: U1oF7BfjBGNpWa79\n  url: edff3s\n  prev_uuid: BTeDPodj0NU8fRW3\n  sibling_uuid: RMAn78BGFgyI8W6c\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021816\n  level: 1\n  id: 77021816\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 倒计时\n  uuid: RMAn78BGFgyI8W6c\n  url: uwleof\n  prev_uuid: U1oF7BfjBGNpWa79\n  sibling_uuid: aYlobR47xz0qHkhF\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021810\n  level: 1\n  id: 77021810\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 版本号比较\n  uuid: aYlobR47xz0qHkhF\n  url: cynvvd\n  prev_uuid: RMAn78BGFgyI8W6c\n  sibling_uuid: N0u_B_WnmtCeQwFI\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021792\n  level: 1\n  id: 77021792\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现简单路由\n  uuid: N0u_B_WnmtCeQwFI\n  url: zzc9k3\n  prev_uuid: aYlobR47xz0qHkhF\n  sibling_uuid: es8IUmiyOTWzwKa9\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021784\n  level: 1\n  id: 77021784\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 长列表虚拟滚动\n  uuid: es8IUmiyOTWzwKa9\n  url: wsmws7\n  prev_uuid: N0u_B_WnmtCeQwFI\n  sibling_uuid: yKn9f3BKX1S3tsyK\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021653\n  level: 1\n  id: 77021653\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 围圈报数问题\n  uuid: yKn9f3BKX1S3tsyK\n  url: gkoa19\n  prev_uuid: es8IUmiyOTWzwKa9\n  sibling_uuid: zmiKBP3HABO6Ig_9\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021761\n  level: 1\n  id: 77021761\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 查找文章中出现频率最高的词\n  uuid: zmiKBP3HABO6Ig_9\n  url: rln2y3\n  prev_uuid: yKn9f3BKX1S3tsyK\n  sibling_uuid: cDzdEkch3JypwTh2\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021772\n  level: 1\n  id: 77021772\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 每隔 1s 输出 1、2、3\n  uuid: cDzdEkch3JypwTh2\n  url: yg55el\n  prev_uuid: zmiKBP3HABO6Ig_9\n  sibling_uuid: II7sWIfm_eSWwKfq\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021821\n  level: 1\n  id: 77021821\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 循环打印红黄绿\n  uuid: II7sWIfm_eSWwKfq\n  url: wyhgfz\n  prev_uuid: cDzdEkch3JypwTh2\n  sibling_uuid: 0hKcnD9qnLeCTq4Q\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021776\n  level: 1\n  id: 77021776\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 封装一个异步加载图片的方法\n  uuid: 0hKcnD9qnLeCTq4Q\n  url: orxq0m\n  prev_uuid: II7sWIfm_eSWwKfq\n  sibling_uuid: b7lf8zlMeqorWGgi\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021825\n  level: 1\n  id: 77021825\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 mergePromise 函数\n  uuid: b7lf8zlMeqorWGgi\n  url: apqplp\n  prev_uuid: 0hKcnD9qnLeCTq4Q\n  sibling_uuid: EZZ2GBqZ-B1LUsam\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021819\n  level: 1\n  id: 77021819\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 图片加载数量限制\n  uuid: EZZ2GBqZ-B1LUsam\n  url: xz2gy5\n  prev_uuid: b7lf8zlMeqorWGgi\n  sibling_uuid: '-8N7uf1xcBmFXSQI'\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021664\n  level: 1\n  id: 77021664\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 文本中识别敏感词、表情包、链接、数字、字母并高亮\n  uuid: '-8N7uf1xcBmFXSQI'\n  url: athu4p\n  prev_uuid: EZZ2GBqZ-B1LUsam\n  sibling_uuid: F_Fz97LW3aSxLLnr\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021666\n  level: 1\n  id: 77021666\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 图片格式转换为 webp\n  uuid: F_Fz97LW3aSxLLnr\n  url: cwlftq\n  prev_uuid: '-8N7uf1xcBmFXSQI'\n  sibling_uuid: wfz5QMLK_eAEtlFz\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021647\n  level: 1\n  id: 77021647\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 计算对象占用的字节数\n  uuid: wfz5QMLK_eAEtlFz\n  url: gx1y1y\n  prev_uuid: F_Fz97LW3aSxLLnr\n  sibling_uuid: rKjJYSK4ytL18T9L\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021669\n  level: 1\n  id: 77021669\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 给 xhr 添加 hook，实现在各个阶段打印日志\n  uuid: rKjJYSK4ytL18T9L\n  url: dm9n4g\n  prev_uuid: wfz5QMLK_eAEtlFz\n  sibling_uuid: zZADZWaE-olCAOjQ\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021658\n  level: 1\n  id: 77021658\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 明信片问题\n  uuid: zZADZWaE-olCAOjQ\n  url: mnsw3z\n  prev_uuid: rKjJYSK4ytL18T9L\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021807\n  level: 1\n  id: 77021807\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 常用算法实现\n  uuid: KKJ-BzUK3K9FxUJ2\n  url: ''\n  prev_uuid: BTeDPodj0NU8fRW3\n  sibling_uuid: ''\n  child_uuid: z8xQMUujFU-0OTsg\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 二分查找\n  uuid: z8xQMUujFU-0OTsg\n  url: pywta0\n  prev_uuid: KKJ-BzUK3K9FxUJ2\n  sibling_uuid: _b3VVGX3aAQ_rvuS\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021798\n  level: 1\n  id: 77021798\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 排序\n  uuid: _b3VVGX3aAQ_rvuS\n  url: ivvld9\n  prev_uuid: z8xQMUujFU-0OTsg\n  sibling_uuid: eRQoWM79y_Mwbg2D\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021670\n  level: 1\n  id: 77021670\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 动态规划和贪心算法\n  uuid: eRQoWM79y_Mwbg2D\n  url: pyig7m\n  prev_uuid: _b3VVGX3aAQ_rvuS\n  sibling_uuid: tr1DuV5ACUbyp8j-\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021676\n  level: 1\n  id: 77021676\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 洗牌算法\n  uuid: tr1DuV5ACUbyp8j-\n  url: tohw0k\n  prev_uuid: eRQoWM79y_Mwbg2D\n  sibling_uuid: x9xEaoi_A59UZjS5\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021687\n  level: 1\n  id: 77021687\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: LRU(最少置换算法)\n  uuid: x9xEaoi_A59UZjS5\n  url: tmwgql\n  prev_uuid: tr1DuV5ACUbyp8j-\n  sibling_uuid: XsgMUe05eXycAX93\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021694\n  level: 1\n  id: 77021694\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 斐波那契数列\n  uuid: XsgMUe05eXycAX93\n  url: bq7f7e\n  prev_uuid: x9xEaoi_A59UZjS5\n  sibling_uuid: T0orOt1CWhzdAczU\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021683\n  level: 1\n  id: 77021683\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 大数相加\n  uuid: T0orOt1CWhzdAczU\n  url: ln6fpo\n  prev_uuid: XsgMUe05eXycAX93\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021693\n  level: 1\n  id: 77021693\n  open_window: 0\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 65,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-01-06T09:17:32.188Z",
    "created_at": "2022-05-11T14:43:59.000Z",
    "updated_at": "2023-11-11T18:10:33.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-22T20:13:30.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/pgkpvh",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 984848955,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}