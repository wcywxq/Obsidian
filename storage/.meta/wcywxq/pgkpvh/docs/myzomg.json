{
  "id": 77021704,
  "slug": "myzomg",
  "title": "简易版 vuex",
  "description": "store 注册let Vue  // Vue 插件必须要有 install 函数 export function install(_Vue) { \tVue = _Vue // 拿到 Vue 的构造器，存起来   // 通过 mixin 注入到每一个 vue 实例   Vue.mixin({ ...",
  "cover": "",
  "user_id": 732231,
  "book_id": 27818302,
  "last_editor_id": 732231,
  "format": "lake",
  "body_draft": "",
  "body": "<a name=\"q6cxH\"></a>\n## store 注册\n```javascript\nlet Vue\n\n// Vue 插件必须要有 install 函数\nexport function install(_Vue) {\n\tVue = _Vue // 拿到 Vue 的构造器，存起来\n  // 通过 mixin 注入到每一个 vue 实例\n  Vue.mixin({ beforeCreate: vuexInit })\n  \n  function vuexInit() {\n  \tconst options = this.$options\n    if (options.store) {\n    \tthis.$store = typeof options.store === 'function'\n      \t? options.store() : options.store\n    } else if (options.parent && options.parent.$store) {\n    \tthis.$store = options.parent.$store\n    }\n  }\n}\n```\n<a name=\"NDHYk\"></a>\n## store 的响应式\n```javascript\nexport class Store {\n  constructor(options = {}) {\n    const state = options.state;\n\n    resetStoreVM(this, state);\n\n    // 利用 getters 来收集衍生数据 computed\n\n    this.getters = {};\n\n    _.forEach(this.getters, (name, getterFn) => {\n      Object.defineProperty(this.getters, name, {\n        get: () => getterFn(this.state),\n      });\n    });\n\n    // 定义的行为，分别对应同步和异步行为处理'\n    this.mutations = {};\n    this.actions = {};\n\n    _.forEach(options.mutations, (name, mutation) => {\n      this.mutations[name] = (payload) => {\n        mutation(this.state, payload);\n      };\n    });\n\n    _.forEach(options.actions, (name, action) => {\n      this.actions[name] = (payload) => {\n        action(this, payload);\n      };\n    });\n\n    this._modules = new ModuleCollection(options);\n    installModule(this, this.state, [], this._modules.root);\n  }\n\n  get state() {\n    return this._vm._data.$$state;\n  }\n\n  commit(type, payload) {\n    this.mutations[type](payload);\n  }\n\n  dispatch(type, payload) {\n    this.actions[type](payload);\n  }\n}\n\nfunction resetStoreVM(store, state) {\n  // 因为 vue 实例的 data 是响应式的，因此可以利用这一点，实现 state 的响应式\n  store._vm = new Vue({\n    data: {\n      $$state: state,\n    },\n  });\n}\n\nfunction installModule(store, state, path, root) {\n  // getters\n  const getters = root._rawModule.getters;\n  if (getters) {\n    _.forEach(getters, (name, getterFn) => {\n      Object.defineProperty(store.getters, name, {\n        get: () => getterFn(root.state),\n      });\n    });\n  }\n\n  // mutations\n  const mutations = root._rawModule.mutations;\n  if (mutations) {\n    _.forEach(mutations, (name, mutation) => {\n      let _mutations = store.mutations[name] || (store.mutations[name] = []);\n      _mutations.push((payload) => {\n        mutation(root.state, payload);\n      });\n\n      store.mutations[name] = _mutations;\n    });\n  }\n\n  // actions\n  const actions = root._rawModule.actions;\n  if (actions) {\n    _.forEach(actions, (name, action) => {\n      let _actions = store.actions[name] || (store.actions[name] = []);\n      _actions.push((payload) => {\n        action(store, payload);\n      });\n\n      store.actions[name] = _actions;\n    });\n  }\n\n  // 递归\n  _.forEach(root._children, (name, childModule) => {\n    installModule(this, this.state, path.concat(name), childModule);\n  });\n}\n```\n<a name=\"JSDhH\"></a>\n## 多个 module 拆分\n```javascript\nclass Module {\n\tconstructor(rawModule) {\n  \tthis.state = rawModule || {}\n    this._rawModule = rawModule\n    this._children = {}\n  }\n  \n  getChild(key) {\n  \treturn this._children[key]\n  }\n  \n  addChild(key, module) {\n  \tthis._children[key] = module\n  }\n}\n\n// module-collection 用来收集 module\nclass ModuleCollection {\n\tconstructor(options = {}) {\n  \tthis.register([], options)\n  }\n  \n  register(path, rawModule) {\n  \tconst newModule = new Module(rawModule)\n    if (path.length === 0) {\n    \tthis.root = newModule\n    } else {\n    \tconst parent = path.slice(0, -1).reduce((module, key) => {\n      \treturn module.getChild(key)\n      }, this.root)\n      parent.addChild(path[path.length - 1], newModule)\n    }\n    \n    // 如果有 modules，开始递归注册\n    if (rawModule.modules) {\n    \t_.forEach(rawModule.modules, (key, rawChildModule) => {\n      \tthis.register(path.concat(key), rawChildModule)\n      })\n    }\n  }\n}\n```\n",
  "body_html": "<!doctype html><h2 id=\"q6cxH\"><span>store 注册</span></h2><pre data-lang=\"javascript\"><code>let Vue\n\n// Vue 插件必须要有 install 函数\nexport function install(_Vue) {\n\tVue = _Vue // 拿到 Vue 的构造器，存起来\n  // 通过 mixin 注入到每一个 vue 实例\n  Vue.mixin({ beforeCreate: vuexInit })\n  \n  function vuexInit() {\n  \tconst options = this.$options\n    if (options.store) {\n    \tthis.$store = typeof options.store === 'function'\n      \t? options.store() : options.store\n    } else if (options.parent &amp;&amp; options.parent.$store) {\n    \tthis.$store = options.parent.$store\n    }\n  }\n}</code></pre><h2 id=\"NDHYk\"><span>store 的响应式</span></h2><pre data-lang=\"javascript\"><code>export class Store {\n  constructor(options = {}) {\n    const state = options.state;\n\n    resetStoreVM(this, state);\n\n    // 利用 getters 来收集衍生数据 computed\n\n    this.getters = {};\n\n    _.forEach(this.getters, (name, getterFn) =&gt; {\n      Object.defineProperty(this.getters, name, {\n        get: () =&gt; getterFn(this.state),\n      });\n    });\n\n    // 定义的行为，分别对应同步和异步行为处理'\n    this.mutations = {};\n    this.actions = {};\n\n    _.forEach(options.mutations, (name, mutation) =&gt; {\n      this.mutations[name] = (payload) =&gt; {\n        mutation(this.state, payload);\n      };\n    });\n\n    _.forEach(options.actions, (name, action) =&gt; {\n      this.actions[name] = (payload) =&gt; {\n        action(this, payload);\n      };\n    });\n\n    this._modules = new ModuleCollection(options);\n    installModule(this, this.state, [], this._modules.root);\n  }\n\n  get state() {\n    return this._vm._data.$$state;\n  }\n\n  commit(type, payload) {\n    this.mutations[type](payload);\n  }\n\n  dispatch(type, payload) {\n    this.actions[type](payload);\n  }\n}\n\nfunction resetStoreVM(store, state) {\n  // 因为 vue 实例的 data 是响应式的，因此可以利用这一点，实现 state 的响应式\n  store._vm = new Vue({\n    data: {\n      $$state: state,\n    },\n  });\n}\n\nfunction installModule(store, state, path, root) {\n  // getters\n  const getters = root._rawModule.getters;\n  if (getters) {\n    _.forEach(getters, (name, getterFn) =&gt; {\n      Object.defineProperty(store.getters, name, {\n        get: () =&gt; getterFn(root.state),\n      });\n    });\n  }\n\n  // mutations\n  const mutations = root._rawModule.mutations;\n  if (mutations) {\n    _.forEach(mutations, (name, mutation) =&gt; {\n      let _mutations = store.mutations[name] || (store.mutations[name] = []);\n      _mutations.push((payload) =&gt; {\n        mutation(root.state, payload);\n      });\n\n      store.mutations[name] = _mutations;\n    });\n  }\n\n  // actions\n  const actions = root._rawModule.actions;\n  if (actions) {\n    _.forEach(actions, (name, action) =&gt; {\n      let _actions = store.actions[name] || (store.actions[name] = []);\n      _actions.push((payload) =&gt; {\n        action(store, payload);\n      });\n\n      store.actions[name] = _actions;\n    });\n  }\n\n  // 递归\n  _.forEach(root._children, (name, childModule) =&gt; {\n    installModule(this, this.state, path.concat(name), childModule);\n  });\n}</code></pre><h2 id=\"JSDhH\"><span>多个 module 拆分</span></h2><pre data-lang=\"javascript\"><code>class Module {\n\tconstructor(rawModule) {\n  \tthis.state = rawModule || {}\n    this._rawModule = rawModule\n    this._children = {}\n  }\n  \n  getChild(key) {\n  \treturn this._children[key]\n  }\n  \n  addChild(key, module) {\n  \tthis._children[key] = module\n  }\n}\n\n// module-collection 用来收集 module\nclass ModuleCollection {\n\tconstructor(options = {}) {\n  \tthis.register([], options)\n  }\n  \n  register(path, rawModule) {\n  \tconst newModule = new Module(rawModule)\n    if (path.length === 0) {\n    \tthis.root = newModule\n    } else {\n    \tconst parent = path.slice(0, -1).reduce((module, key) =&gt; {\n      \treturn module.getChild(key)\n      }, this.root)\n      parent.addChild(path[path.length - 1], newModule)\n    }\n    \n    // 如果有 modules，开始递归注册\n    if (rawModule.modules) {\n    \t_.forEach(rawModule.modules, (key, rawChildModule) =&gt; {\n      \tthis.register(path.concat(key), rawChildModule)\n      })\n    }\n  }\n}</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"q6cxH\" id=\"q6cxH\"><span data-lake-id=\"ua787fda6\" id=\"ua787fda6\">store 注册</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22let%20Vue%5Cn%5Cn%2F%2F%20Vue%20%E6%8F%92%E4%BB%B6%E5%BF%85%E9%A1%BB%E8%A6%81%E6%9C%89%20install%20%E5%87%BD%E6%95%B0%5Cnexport%20function%20install(_Vue)%20%7B%5Cn%5CtVue%20%3D%20_Vue%20%2F%2F%20%E6%8B%BF%E5%88%B0%20Vue%20%E7%9A%84%E6%9E%84%E9%80%A0%E5%99%A8%EF%BC%8C%E5%AD%98%E8%B5%B7%E6%9D%A5%5Cn%20%20%2F%2F%20%E9%80%9A%E8%BF%87%20mixin%20%E6%B3%A8%E5%85%A5%E5%88%B0%E6%AF%8F%E4%B8%80%E4%B8%AA%20vue%20%E5%AE%9E%E4%BE%8B%5Cn%20%20Vue.mixin(%7B%20beforeCreate%3A%20vuexInit%20%7D)%5Cn%20%20%5Cn%20%20function%20vuexInit()%20%7B%5Cn%20%20%5Ctconst%20options%20%3D%20this.%24options%5Cn%20%20%20%20if%20(options.store)%20%7B%5Cn%20%20%20%20%5Ctthis.%24store%20%3D%20typeof%20options.store%20%3D%3D%3D%20'function'%5Cn%20%20%20%20%20%20%5Ct%3F%20options.store()%20%3A%20options.store%5Cn%20%20%20%20%7D%20else%20if%20(options.parent%20%26%26%20options.parent.%24store)%20%7B%5Cn%20%20%20%20%5Ctthis.%24store%20%3D%20options.parent.%24store%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22ospyS%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"NDHYk\" id=\"NDHYk\"><span data-lake-id=\"u275f883b\" id=\"u275f883b\">store 的响应式</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22export%20class%20Store%20%7B%5Cn%20%20constructor(options%20%3D%20%7B%7D)%20%7B%5Cn%20%20%20%20const%20state%20%3D%20options.state%3B%5Cn%5Cn%20%20%20%20resetStoreVM(this%2C%20state)%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E5%88%A9%E7%94%A8%20getters%20%E6%9D%A5%E6%94%B6%E9%9B%86%E8%A1%8D%E7%94%9F%E6%95%B0%E6%8D%AE%20computed%5Cn%5Cn%20%20%20%20this.getters%20%3D%20%7B%7D%3B%5Cn%5Cn%20%20%20%20_.forEach(this.getters%2C%20(name%2C%20getterFn)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20Object.defineProperty(this.getters%2C%20name%2C%20%7B%5Cn%20%20%20%20%20%20%20%20get%3A%20()%20%3D%3E%20getterFn(this.state)%2C%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%7D)%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%E5%AE%9A%E4%B9%89%E7%9A%84%E8%A1%8C%E4%B8%BA%EF%BC%8C%E5%88%86%E5%88%AB%E5%AF%B9%E5%BA%94%E5%90%8C%E6%AD%A5%E5%92%8C%E5%BC%82%E6%AD%A5%E8%A1%8C%E4%B8%BA%E5%A4%84%E7%90%86'%5Cn%20%20%20%20this.mutations%20%3D%20%7B%7D%3B%5Cn%20%20%20%20this.actions%20%3D%20%7B%7D%3B%5Cn%5Cn%20%20%20%20_.forEach(options.mutations%2C%20(name%2C%20mutation)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20this.mutations%5Bname%5D%20%3D%20(payload)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20mutation(this.state%2C%20payload)%3B%5Cn%20%20%20%20%20%20%7D%3B%5Cn%20%20%20%20%7D)%3B%5Cn%5Cn%20%20%20%20_.forEach(options.actions%2C%20(name%2C%20action)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20this.actions%5Bname%5D%20%3D%20(payload)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20action(this%2C%20payload)%3B%5Cn%20%20%20%20%20%20%7D%3B%5Cn%20%20%20%20%7D)%3B%5Cn%5Cn%20%20%20%20this._modules%20%3D%20new%20ModuleCollection(options)%3B%5Cn%20%20%20%20installModule(this%2C%20this.state%2C%20%5B%5D%2C%20this._modules.root)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20get%20state()%20%7B%5Cn%20%20%20%20return%20this._vm._data.%24%24state%3B%5Cn%20%20%7D%5Cn%5Cn%20%20commit(type%2C%20payload)%20%7B%5Cn%20%20%20%20this.mutations%5Btype%5D(payload)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20dispatch(type%2C%20payload)%20%7B%5Cn%20%20%20%20this.actions%5Btype%5D(payload)%3B%5Cn%20%20%7D%5Cn%7D%5Cn%5Cnfunction%20resetStoreVM(store%2C%20state)%20%7B%5Cn%20%20%2F%2F%20%E5%9B%A0%E4%B8%BA%20vue%20%E5%AE%9E%E4%BE%8B%E7%9A%84%20data%20%E6%98%AF%E5%93%8D%E5%BA%94%E5%BC%8F%E7%9A%84%EF%BC%8C%E5%9B%A0%E6%AD%A4%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E8%BF%99%E4%B8%80%E7%82%B9%EF%BC%8C%E5%AE%9E%E7%8E%B0%20state%20%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%5Cn%20%20store._vm%20%3D%20new%20Vue(%7B%5Cn%20%20%20%20data%3A%20%7B%5Cn%20%20%20%20%20%20%24%24state%3A%20state%2C%5Cn%20%20%20%20%7D%2C%5Cn%20%20%7D)%3B%5Cn%7D%5Cn%5Cnfunction%20installModule(store%2C%20state%2C%20path%2C%20root)%20%7B%5Cn%20%20%2F%2F%20getters%5Cn%20%20const%20getters%20%3D%20root._rawModule.getters%3B%5Cn%20%20if%20(getters)%20%7B%5Cn%20%20%20%20_.forEach(getters%2C%20(name%2C%20getterFn)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20Object.defineProperty(store.getters%2C%20name%2C%20%7B%5Cn%20%20%20%20%20%20%20%20get%3A%20()%20%3D%3E%20getterFn(root.state)%2C%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%7D)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20%2F%2F%20mutations%5Cn%20%20const%20mutations%20%3D%20root._rawModule.mutations%3B%5Cn%20%20if%20(mutations)%20%7B%5Cn%20%20%20%20_.forEach(mutations%2C%20(name%2C%20mutation)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20let%20_mutations%20%3D%20store.mutations%5Bname%5D%20%7C%7C%20(store.mutations%5Bname%5D%20%3D%20%5B%5D)%3B%5Cn%20%20%20%20%20%20_mutations.push((payload)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20mutation(root.state%2C%20payload)%3B%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%5Cn%20%20%20%20%20%20store.mutations%5Bname%5D%20%3D%20_mutations%3B%5Cn%20%20%20%20%7D)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20%2F%2F%20actions%5Cn%20%20const%20actions%20%3D%20root._rawModule.actions%3B%5Cn%20%20if%20(actions)%20%7B%5Cn%20%20%20%20_.forEach(actions%2C%20(name%2C%20action)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20let%20_actions%20%3D%20store.actions%5Bname%5D%20%7C%7C%20(store.actions%5Bname%5D%20%3D%20%5B%5D)%3B%5Cn%20%20%20%20%20%20_actions.push((payload)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20action(store%2C%20payload)%3B%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%5Cn%20%20%20%20%20%20store.actions%5Bname%5D%20%3D%20_actions%3B%5Cn%20%20%20%20%7D)%3B%5Cn%20%20%7D%5Cn%5Cn%20%20%2F%2F%20%E9%80%92%E5%BD%92%5Cn%20%20_.forEach(root._children%2C%20(name%2C%20childModule)%20%3D%3E%20%7B%5Cn%20%20%20%20installModule(this%2C%20this.state%2C%20path.concat(name)%2C%20childModule)%3B%5Cn%20%20%7D)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22tWOXn%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"JSDhH\" id=\"JSDhH\"><span data-lake-id=\"u7e32a3e6\" id=\"u7e32a3e6\">多个 module 拆分</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22class%20Module%20%7B%5Cn%5Ctconstructor(rawModule)%20%7B%5Cn%20%20%5Ctthis.state%20%3D%20rawModule%20%7C%7C%20%7B%7D%5Cn%20%20%20%20this._rawModule%20%3D%20rawModule%5Cn%20%20%20%20this._children%20%3D%20%7B%7D%5Cn%20%20%7D%5Cn%20%20%5Cn%20%20getChild(key)%20%7B%5Cn%20%20%5Ctreturn%20this._children%5Bkey%5D%5Cn%20%20%7D%5Cn%20%20%5Cn%20%20addChild(key%2C%20module)%20%7B%5Cn%20%20%5Ctthis._children%5Bkey%5D%20%3D%20module%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn%2F%2F%20module-collection%20%E7%94%A8%E6%9D%A5%E6%94%B6%E9%9B%86%20module%5Cnclass%20ModuleCollection%20%7B%5Cn%5Ctconstructor(options%20%3D%20%7B%7D)%20%7B%5Cn%20%20%5Ctthis.register(%5B%5D%2C%20options)%5Cn%20%20%7D%5Cn%20%20%5Cn%20%20register(path%2C%20rawModule)%20%7B%5Cn%20%20%5Ctconst%20newModule%20%3D%20new%20Module(rawModule)%5Cn%20%20%20%20if%20(path.length%20%3D%3D%3D%200)%20%7B%5Cn%20%20%20%20%5Ctthis.root%20%3D%20newModule%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%5Ctconst%20parent%20%3D%20path.slice(0%2C%20-1).reduce((module%2C%20key)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%5Ctreturn%20module.getChild(key)%5Cn%20%20%20%20%20%20%7D%2C%20this.root)%5Cn%20%20%20%20%20%20parent.addChild(path%5Bpath.length%20-%201%5D%2C%20newModule)%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%5Cn%20%20%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E6%9C%89%20modules%EF%BC%8C%E5%BC%80%E5%A7%8B%E9%80%92%E5%BD%92%E6%B3%A8%E5%86%8C%5Cn%20%20%20%20if%20(rawModule.modules)%20%7B%5Cn%20%20%20%20%5Ct_.forEach(rawModule.modules%2C%20(key%2C%20rawChildModule)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%5Ctthis.register(path.concat(key)%2C%20rawChildModule)%5Cn%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22rWt27%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "public": 0,
  "status": 1,
  "likes_count": 0,
  "read_count": 0,
  "hits": 0,
  "comments_count": 0,
  "word_count": 484,
  "created_at": "2022-05-11T15:02:06.000Z",
  "updated_at": "2022-05-11T15:08:06.000Z",
  "content_updated_at": "2022-05-11T15:02:06.000Z",
  "published_at": "2022-05-11T15:02:06.000Z",
  "first_published_at": "2022-05-11T15:02:06.357Z",
  "book": {
    "id": 27818302,
    "type": "Book",
    "slug": "pgkpvh",
    "name": "前端面试知识梳理",
    "user_id": 732231,
    "description": "",
    "toc_yml": "- type: META\n  count: 74\n  display_level: 1\n  tail_type: UPDATED_AT\n  base_version_id: 203636985\n  published: true\n  max_level: 1\n  last_updated_at: 2022-05-11T15:02:51.310Z\n  version_id: 203637675\n- type: TITLE\n  title: 基础 api 实现\n  uuid: 8cOHMB0GUaMGEJAZ\n  url: ''\n  prev_uuid: ''\n  sibling_uuid: XzzPhY1bnt-jy6Uq\n  child_uuid: tkSYK-Ar5LWNbwCs\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现 es6 的 extends\n  uuid: tkSYK-Ar5LWNbwCs\n  url: vtqbgk\n  prev_uuid: 8cOHMB0GUaMGEJAZ\n  sibling_uuid: iZbjvIrZWQPncGf4\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021830\n  level: 1\n  id: 77021830\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 ajax\n  uuid: iZbjvIrZWQPncGf4\n  url: cq5ws4\n  prev_uuid: tkSYK-Ar5LWNbwCs\n  sibling_uuid: GQ98GFTcsA6oX5fu\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021696\n  level: 1\n  id: 77021696\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 call、apply、bind\n  uuid: GQ98GFTcsA6oX5fu\n  url: ybrsyw\n  prev_uuid: iZbjvIrZWQPncGf4\n  sibling_uuid: 8mxtq-HrdjGBfE1K\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021715\n  level: 1\n  id: 77021715\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 new 关键字\n  uuid: 8mxtq-HrdjGBfE1K\n  url: pldu2b\n  prev_uuid: GQ98GFTcsA6oX5fu\n  sibling_uuid: DTHsD8sppgSTGUG-\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021706\n  level: 1\n  id: 77021706\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 函数柯理化\n  uuid: DTHsD8sppgSTGUG-\n  url: yo9cx5\n  prev_uuid: 8mxtq-HrdjGBfE1K\n  sibling_uuid: TaRHTWpqD3Ef8QHU\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021634\n  level: 1\n  id: 77021634\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 浅拷贝和深拷贝\n  uuid: TaRHTWpqD3Ef8QHU\n  url: ufks1z\n  prev_uuid: DTHsD8sppgSTGUG-\n  sibling_uuid: 4Z30CA9ZXVdeKnnL\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021640\n  level: 1\n  id: 77021640\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 instanceof\n  uuid: 4Z30CA9ZXVdeKnnL\n  url: ba4wuo\n  prev_uuid: TaRHTWpqD3Ef8QHU\n  sibling_uuid: 2MBif8wnmvigRAxT\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021689\n  level: 1\n  id: 77021689\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 手动实现定时器\n  uuid: 2MBif8wnmvigRAxT\n  url: wf9bwg\n  prev_uuid: 4Z30CA9ZXVdeKnnL\n  sibling_uuid: 8f6jGaWidUBFSNN7\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021645\n  level: 1\n  id: 77021645\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: sleep 函数实现\n  uuid: 8f6jGaWidUBFSNN7\n  url: ngwrak\n  prev_uuid: 2MBif8wnmvigRAxT\n  sibling_uuid: lXeuN-kwl51AKTO0\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021787\n  level: 1\n  id: 77021787\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 JSON.stringify\n  uuid: lXeuN-kwl51AKTO0\n  url: mtoe2n\n  prev_uuid: 8f6jGaWidUBFSNN7\n  sibling_uuid: hVvT5-pJ5qVvYNrK\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021785\n  level: 1\n  id: 77021785\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: js 通用类型获取\n  uuid: hVvT5-pJ5qVvYNrK\n  url: tll6lm\n  prev_uuid: lXeuN-kwl51AKTO0\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 8cOHMB0GUaMGEJAZ\n  doc_id: 77021802\n  level: 1\n  id: 77021802\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 防抖和节流\n  uuid: XzzPhY1bnt-jy6Uq\n  url: ''\n  prev_uuid: 8cOHMB0GUaMGEJAZ\n  sibling_uuid: PkyQAjgp1TOfRd_2\n  child_uuid: AQvBtgwRPd2U2nSA\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 防抖\n  uuid: AQvBtgwRPd2U2nSA\n  url: enlngv\n  prev_uuid: XzzPhY1bnt-jy6Uq\n  sibling_uuid: nlhlSMjYGwG8o1jH\n  child_uuid: ''\n  parent_uuid: XzzPhY1bnt-jy6Uq\n  doc_id: 77021614\n  level: 1\n  id: 77021614\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 节流\n  uuid: nlhlSMjYGwG8o1jH\n  url: griz0t\n  prev_uuid: AQvBtgwRPd2U2nSA\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: XzzPhY1bnt-jy6Uq\n  doc_id: 77021626\n  level: 1\n  id: 77021626\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 数组相关\n  uuid: PkyQAjgp1TOfRd_2\n  url: ''\n  prev_uuid: XzzPhY1bnt-jy6Uq\n  sibling_uuid: 5NjAYoIgV-DfXemF\n  child_uuid: xTSsZIKFI9Di3LBH\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 数组转树\n  uuid: xTSsZIKFI9Di3LBH\n  url: bzgequ\n  prev_uuid: PkyQAjgp1TOfRd_2\n  sibling_uuid: Z_6uIAB9XA6raQPD\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021833\n  level: 1\n  id: 77021833\n  open_window: 0\n  visible: 0\n- type: DOC\n  title: 树转数组\n  uuid: Z_6uIAB9XA6raQPD\n  url: xycpzl\n  prev_uuid: xTSsZIKFI9Di3LBH\n  sibling_uuid: hoLauQ33F3aF2wq7\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021835\n  level: 1\n  id: 77021835\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组常用方法\n  uuid: hoLauQ33F3aF2wq7\n  url: owtewn\n  prev_uuid: Z_6uIAB9XA6raQPD\n  sibling_uuid: rvc_A-WMsWds7EBa\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021725\n  level: 1\n  id: 77021725\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组去重实现\n  uuid: rvc_A-WMsWds7EBa\n  url: gq2z9n\n  prev_uuid: hoLauQ33F3aF2wq7\n  sibling_uuid: NB4bY-etxMWq1YWS\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021623\n  level: 1\n  id: 77021623\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 数组扁平化实现\n  uuid: NB4bY-etxMWq1YWS\n  url: doeryg\n  prev_uuid: rvc_A-WMsWds7EBa\n  sibling_uuid: DBoiy0L7Hhm_Zrkf\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021607\n  level: 1\n  id: 77021607\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 类数组转换为数组\n  uuid: DBoiy0L7Hhm_Zrkf\n  url: csgagn\n  prev_uuid: NB4bY-etxMWq1YWS\n  sibling_uuid: E4WkD_rpaai_v3HK\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021754\n  level: 1\n  id: 77021754\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现数组乱序输出\n  uuid: E4WkD_rpaai_v3HK\n  url: xlrgnu\n  prev_uuid: DBoiy0L7Hhm_Zrkf\n  sibling_uuid: OkcuvyhOMA6N0ex4\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021731\n  level: 1\n  id: 77021731\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 查找二维数组的目标值\n  uuid: OkcuvyhOMA6N0ex4\n  url: tmw2ny\n  prev_uuid: E4WkD_rpaai_v3HK\n  sibling_uuid: F8K4-6VRqHrupctd\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021789\n  level: 1\n  id: 77021789\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 二维数组斜向打印\n  uuid: F8K4-6VRqHrupctd\n  url: aqw6my\n  prev_uuid: OkcuvyhOMA6N0ex4\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: PkyQAjgp1TOfRd_2\n  doc_id: 77021780\n  level: 1\n  id: 77021780\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 字符串相关\n  uuid: 5NjAYoIgV-DfXemF\n  url: ''\n  prev_uuid: PkyQAjgp1TOfRd_2\n  sibling_uuid: Q34_kLhQ_uWoQw46\n  child_uuid: XNjX12HqmJBUHjy7\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现字符串的 repeat 方法\n  uuid: XNjX12HqmJBUHjy7\n  url: hxelqc\n  prev_uuid: 5NjAYoIgV-DfXemF\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: 5NjAYoIgV-DfXemF\n  doc_id: 77021740\n  level: 1\n  id: 77021740\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: promise相关\n  uuid: Q34_kLhQ_uWoQw46\n  url: ''\n  prev_uuid: 5NjAYoIgV-DfXemF\n  sibling_uuid: aXqdYGJNJ1HlijwX\n  child_uuid: fuTj4su1VjBeHDO5\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 实现 Promise A+\n  uuid: fuTj4su1VjBeHDO5\n  url: fl6cgx\n  prev_uuid: Q34_kLhQ_uWoQw46\n  sibling_uuid: IOPLb2N42d3OZ0Zq\n  child_uuid: ''\n  parent_uuid: Q34_kLhQ_uWoQw46\n  doc_id: 77021620\n  level: 1\n  id: 77021620\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise  常用方法实现\n  uuid: IOPLb2N42d3OZ0Zq\n  url: vd2h4l\n  prev_uuid: fuTj4su1VjBeHDO5\n  sibling_uuid: vKLkkDq-XoJwsqMW\n  child_uuid: ''\n  parent_uuid: Q34_kLhQ_uWoQw46\n  doc_id: 77021632\n  level: 1\n  id: 77021632\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 并发控制\n  uuid: vKLkkDq-XoJwsqMW\n  url: gd3193\n  prev_uuid: IOPLb2N42d3OZ0Zq\n  sibling_uuid: rYJ2dherst1MyK0I\n  child_uuid: ''\n  parent_uuid: Q34_kLhQ_uWoQw46\n  doc_id: 77021662\n  level: 1\n  id: 77021662\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 缓存\n  uuid: rYJ2dherst1MyK0I\n  url: sgcusf\n  prev_uuid: vKLkkDq-XoJwsqMW\n  sibling_uuid: xZ5UrxtCjhBJxiXK\n  child_uuid: ''\n  parent_uuid: Q34_kLhQ_uWoQw46\n  doc_id: 77021679\n  level: 1\n  id: 77021679\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 异步串行输出\n  uuid: xZ5UrxtCjhBJxiXK\n  url: um4g6z\n  prev_uuid: rYJ2dherst1MyK0I\n  sibling_uuid: fZuICDZLsFJSo57b\n  child_uuid: ''\n  parent_uuid: Q34_kLhQ_uWoQw46\n  doc_id: 77021649\n  level: 1\n  id: 77021649\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 带并发的异步调度器 Scheduler\n  uuid: fZuICDZLsFJSo57b\n  url: kbkc8e\n  prev_uuid: xZ5UrxtCjhBJxiXK\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: Q34_kLhQ_uWoQw46\n  doc_id: 77021700\n  level: 1\n  id: 77021700\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 数据处理\n  uuid: aXqdYGJNJ1HlijwX\n  url: ''\n  prev_uuid: Q34_kLhQ_uWoQw46\n  sibling_uuid: oj23-2V9egz1L0Ic\n  child_uuid: SxxBIhY4HFEaNF8V\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 解析 url 参数对象\n  uuid: SxxBIhY4HFEaNF8V\n  url: rxw8qp\n  prev_uuid: aXqdYGJNJ1HlijwX\n  sibling_uuid: yiD9ldSpBGzQNQxQ\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021764\n  level: 1\n  id: 77021764\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现日期格式化函数\n  uuid: yiD9ldSpBGzQNQxQ\n  url: shzfyg\n  prev_uuid: SxxBIhY4HFEaNF8V\n  sibling_uuid: _3QVaw5COwwvCXZv\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021710\n  level: 1\n  id: 77021710\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 交换 a、b 的值，不使用临时变量\n  uuid: _3QVaw5COwwvCXZv\n  url: xw17tv\n  prev_uuid: yiD9ldSpBGzQNQxQ\n  sibling_uuid: Mq5fe2v7j2INDdvL\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021736\n  level: 1\n  id: 77021736\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 获取两个数之间的任意随机数\n  uuid: Mq5fe2v7j2INDdvL\n  url: vhngph\n  prev_uuid: _3QVaw5COwwvCXZv\n  sibling_uuid: 8Chl_bOMaALA1jhP\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021688\n  level: 1\n  id: 77021688\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 将数字千分位用逗号隔开\n  uuid: 8Chl_bOMaALA1jhP\n  url: vphpea\n  prev_uuid: Mq5fe2v7j2INDdvL\n  sibling_uuid: MLI7v9Et4dIn7XiV\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021743\n  level: 1\n  id: 77021743\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现非负大整数相加\n  uuid: MLI7v9Et4dIn7XiV\n  url: xlvd0g\n  prev_uuid: 8Chl_bOMaALA1jhP\n  sibling_uuid: mVWcb08QaDpa9PNH\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021748\n  level: 1\n  id: 77021748\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 判断对象是否存在循环引用\n  uuid: mVWcb08QaDpa9PNH\n  url: phqdmd\n  prev_uuid: MLI7v9Et4dIn7XiV\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: aXqdYGJNJ1HlijwX\n  doc_id: 77021768\n  level: 1\n  id: 77021768\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 框架\n  uuid: oj23-2V9egz1L0Ic\n  url: ''\n  prev_uuid: aXqdYGJNJ1HlijwX\n  sibling_uuid: BTeDPodj0NU8fRW3\n  child_uuid: t5HRubL3aXPLNoG6\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 发布订阅模式\n  uuid: t5HRubL3aXPLNoG6\n  url: ezcdgo\n  prev_uuid: oj23-2V9egz1L0Ic\n  sibling_uuid: EqMT4jazWkuKJX1v\n  child_uuid: ''\n  parent_uuid: oj23-2V9egz1L0Ic\n  doc_id: 77021611\n  level: 1\n  id: 77021611\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 观察者模式\n  uuid: EqMT4jazWkuKJX1v\n  url: dwziom\n  prev_uuid: t5HRubL3aXPLNoG6\n  sibling_uuid: O5OEkYSpde-8we8V\n  child_uuid: ''\n  parent_uuid: oj23-2V9egz1L0Ic\n  doc_id: 77021795\n  level: 1\n  id: 77021795\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易版 vue2\n  uuid: O5OEkYSpde-8we8V\n  url: indxog\n  prev_uuid: EqMT4jazWkuKJX1v\n  sibling_uuid: XOQaAmtLM_gvM85t\n  child_uuid: ''\n  parent_uuid: oj23-2V9egz1L0Ic\n  doc_id: 77021636\n  level: 1\n  id: 77021636\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易版 vue3\n  uuid: XOQaAmtLM_gvM85t\n  url: an017i\n  prev_uuid: O5OEkYSpde-8we8V\n  sibling_uuid: ciSabdz5MTC1wbC7\n  child_uuid: ''\n  parent_uuid: oj23-2V9egz1L0Ic\n  doc_id: 77021804\n  level: 1\n  id: 77021804\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 简易版 vuex\n  uuid: ciSabdz5MTC1wbC7\n  url: myzomg\n  prev_uuid: XOQaAmtLM_gvM85t\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: oj23-2V9egz1L0Ic\n  doc_id: 77021704\n  level: 1\n  id: 77021704\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 应用场景\n  uuid: BTeDPodj0NU8fRW3\n  url: ''\n  prev_uuid: oj23-2V9egz1L0Ic\n  sibling_uuid: KKJ-BzUK3K9FxUJ2\n  child_uuid: U1oF7BfjBGNpWa79\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 通过调用 addRemote 实现 add\n  uuid: U1oF7BfjBGNpWa79\n  url: edff3s\n  prev_uuid: BTeDPodj0NU8fRW3\n  sibling_uuid: RMAn78BGFgyI8W6c\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021816\n  level: 1\n  id: 77021816\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 倒计时\n  uuid: RMAn78BGFgyI8W6c\n  url: uwleof\n  prev_uuid: U1oF7BfjBGNpWa79\n  sibling_uuid: aYlobR47xz0qHkhF\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021810\n  level: 1\n  id: 77021810\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 版本号比较\n  uuid: aYlobR47xz0qHkhF\n  url: cynvvd\n  prev_uuid: RMAn78BGFgyI8W6c\n  sibling_uuid: N0u_B_WnmtCeQwFI\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021792\n  level: 1\n  id: 77021792\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现简单路由\n  uuid: N0u_B_WnmtCeQwFI\n  url: zzc9k3\n  prev_uuid: aYlobR47xz0qHkhF\n  sibling_uuid: es8IUmiyOTWzwKa9\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021784\n  level: 1\n  id: 77021784\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 长列表虚拟滚动\n  uuid: es8IUmiyOTWzwKa9\n  url: wsmws7\n  prev_uuid: N0u_B_WnmtCeQwFI\n  sibling_uuid: yKn9f3BKX1S3tsyK\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021653\n  level: 1\n  id: 77021653\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 围圈报数问题\n  uuid: yKn9f3BKX1S3tsyK\n  url: gkoa19\n  prev_uuid: es8IUmiyOTWzwKa9\n  sibling_uuid: zmiKBP3HABO6Ig_9\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021761\n  level: 1\n  id: 77021761\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 查找文章中出现频率最高的词\n  uuid: zmiKBP3HABO6Ig_9\n  url: rln2y3\n  prev_uuid: yKn9f3BKX1S3tsyK\n  sibling_uuid: cDzdEkch3JypwTh2\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021772\n  level: 1\n  id: 77021772\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: Promise 每隔 1s 输出 1、2、3\n  uuid: cDzdEkch3JypwTh2\n  url: yg55el\n  prev_uuid: zmiKBP3HABO6Ig_9\n  sibling_uuid: II7sWIfm_eSWwKfq\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021821\n  level: 1\n  id: 77021821\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 循环打印红黄绿\n  uuid: II7sWIfm_eSWwKfq\n  url: wyhgfz\n  prev_uuid: cDzdEkch3JypwTh2\n  sibling_uuid: 0hKcnD9qnLeCTq4Q\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021776\n  level: 1\n  id: 77021776\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 封装一个异步加载图片的方法\n  uuid: 0hKcnD9qnLeCTq4Q\n  url: orxq0m\n  prev_uuid: II7sWIfm_eSWwKfq\n  sibling_uuid: b7lf8zlMeqorWGgi\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021825\n  level: 1\n  id: 77021825\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 实现 mergePromise 函数\n  uuid: b7lf8zlMeqorWGgi\n  url: apqplp\n  prev_uuid: 0hKcnD9qnLeCTq4Q\n  sibling_uuid: EZZ2GBqZ-B1LUsam\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021819\n  level: 1\n  id: 77021819\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 图片加载数量限制\n  uuid: EZZ2GBqZ-B1LUsam\n  url: xz2gy5\n  prev_uuid: b7lf8zlMeqorWGgi\n  sibling_uuid: '-8N7uf1xcBmFXSQI'\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021664\n  level: 1\n  id: 77021664\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 文本中识别敏感词、表情包、链接、数字、字母并高亮\n  uuid: '-8N7uf1xcBmFXSQI'\n  url: athu4p\n  prev_uuid: EZZ2GBqZ-B1LUsam\n  sibling_uuid: F_Fz97LW3aSxLLnr\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021666\n  level: 1\n  id: 77021666\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 图片格式转换为 webp\n  uuid: F_Fz97LW3aSxLLnr\n  url: cwlftq\n  prev_uuid: '-8N7uf1xcBmFXSQI'\n  sibling_uuid: wfz5QMLK_eAEtlFz\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021647\n  level: 1\n  id: 77021647\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 计算对象占用的字节数\n  uuid: wfz5QMLK_eAEtlFz\n  url: gx1y1y\n  prev_uuid: F_Fz97LW3aSxLLnr\n  sibling_uuid: rKjJYSK4ytL18T9L\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021669\n  level: 1\n  id: 77021669\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 给 xhr 添加 hook，实现在各个阶段打印日志\n  uuid: rKjJYSK4ytL18T9L\n  url: dm9n4g\n  prev_uuid: wfz5QMLK_eAEtlFz\n  sibling_uuid: zZADZWaE-olCAOjQ\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021658\n  level: 1\n  id: 77021658\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 明信片问题\n  uuid: zZADZWaE-olCAOjQ\n  url: mnsw3z\n  prev_uuid: rKjJYSK4ytL18T9L\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: BTeDPodj0NU8fRW3\n  doc_id: 77021807\n  level: 1\n  id: 77021807\n  open_window: 0\n  visible: 1\n- type: TITLE\n  title: 常用算法实现\n  uuid: KKJ-BzUK3K9FxUJ2\n  url: ''\n  prev_uuid: BTeDPodj0NU8fRW3\n  sibling_uuid: ''\n  child_uuid: z8xQMUujFU-0OTsg\n  parent_uuid: ''\n  doc_id: ''\n  level: 0\n  id: ''\n  open_window: 1\n  visible: 1\n- type: DOC\n  title: 二分查找\n  uuid: z8xQMUujFU-0OTsg\n  url: pywta0\n  prev_uuid: KKJ-BzUK3K9FxUJ2\n  sibling_uuid: _b3VVGX3aAQ_rvuS\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021798\n  level: 1\n  id: 77021798\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 排序\n  uuid: _b3VVGX3aAQ_rvuS\n  url: ivvld9\n  prev_uuid: z8xQMUujFU-0OTsg\n  sibling_uuid: eRQoWM79y_Mwbg2D\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021670\n  level: 1\n  id: 77021670\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 动态规划和贪心算法\n  uuid: eRQoWM79y_Mwbg2D\n  url: pyig7m\n  prev_uuid: _b3VVGX3aAQ_rvuS\n  sibling_uuid: tr1DuV5ACUbyp8j-\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021676\n  level: 1\n  id: 77021676\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 洗牌算法\n  uuid: tr1DuV5ACUbyp8j-\n  url: tohw0k\n  prev_uuid: eRQoWM79y_Mwbg2D\n  sibling_uuid: x9xEaoi_A59UZjS5\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021687\n  level: 1\n  id: 77021687\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: LRU(最少置换算法)\n  uuid: x9xEaoi_A59UZjS5\n  url: tmwgql\n  prev_uuid: tr1DuV5ACUbyp8j-\n  sibling_uuid: XsgMUe05eXycAX93\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021694\n  level: 1\n  id: 77021694\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 斐波那契数列\n  uuid: XsgMUe05eXycAX93\n  url: bq7f7e\n  prev_uuid: x9xEaoi_A59UZjS5\n  sibling_uuid: T0orOt1CWhzdAczU\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021683\n  level: 1\n  id: 77021683\n  open_window: 0\n  visible: 1\n- type: DOC\n  title: 大数相加\n  uuid: T0orOt1CWhzdAczU\n  url: ln6fpo\n  prev_uuid: XsgMUe05eXycAX93\n  sibling_uuid: ''\n  child_uuid: ''\n  parent_uuid: KKJ-BzUK3K9FxUJ2\n  doc_id: 77021693\n  level: 1\n  id: 77021693\n  open_window: 0\n  visible: 1\n",
    "creator_id": 732231,
    "public": 0,
    "items_count": 65,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-01-06T09:17:32.188Z",
    "created_at": "2022-05-11T14:43:59.000Z",
    "updated_at": "2023-11-11T18:10:33.000Z",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 21,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "public": 1,
      "description": null,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-22T20:13:30.000Z",
      "work_id": "",
      "_serializer": "v2.user"
    },
    "namespace": "wcywxq/pgkpvh",
    "_serializer": "v2.book"
  },
  "user": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "tags": [],
  "latest_version_id": 984849433,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 21,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "public": 1,
    "description": null,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-22T20:13:30.000Z",
    "work_id": "",
    "_serializer": "v2.user"
  },
  "_serializer": "v2.doc_detail"
}