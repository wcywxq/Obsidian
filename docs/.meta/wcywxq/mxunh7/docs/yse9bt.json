{
  "id": 72212165,
  "slug": "yse9bt",
  "title": "热更新原理",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "`webpack` 的热更新又叫做热替换、`hmr`。这个机制可以做到不用刷新浏览器就可以将新变更的模块替换掉旧的模块<br />`hmr` 的核心是**客户端从服务器拉取更新后的文件**，准确的说就是 `**chunk diff**`** ( **`**chunk**` 需要更新的部分**)**，实际上 `**wds**`**(无线分布式系统) **与浏览器之间维护了一个 `**websocket**`。当本地资源发生变化时，`wds` 会向浏览器推送更新，并**带上构建时的 hash**，让客户端与上一次资源进行对比。<br />客户端对比出差异后会向 `wds` 发起 `**ajax**` 请求，用来获取更改后的内容(文件列表、`hash`)，这样客户端就可以借助这些信息继续向 `wds` 发起 **jsonp 请求该 chunk 的增量更新**\n",
  "body_draft": "",
  "body_html": "<!doctype html><p data-lake-id=\"u7eff53a9\" style=\"text-indent: 2em;\"><code><span>webpack</span></code><span> 的热更新又叫做热替换、</span><code><span>hmr</span></code><span>。这个机制可以做到不用刷新浏览器就可以将新变更的模块替换掉旧的模块</span></p><p data-lake-id=\"u72467a8f\" style=\"text-indent: 2em;\"><code><span>hmr</span></code><span> 的核心是</span><strong><span>客户端从服务器拉取更新后的文件</span></strong><span>，准确的说就是 </span><code><strong><span>chunk diff</span></strong></code><strong><span> ( </span></strong><code><strong><span>chunk</span></strong></code><span> 需要更新的部分</span><strong><span>)</span></strong><span>，实际上 </span><code><strong><span>wds</span></strong></code><strong><span>(无线分布式系统) </span></strong><span>与浏览器之间维护了一个 </span><code><strong><span>websocket</span></strong></code><span>。当本地资源发生变化时，</span><code><span>wds</span></code><span> 会向浏览器推送更新，并</span><strong><span>带上构建时的 hash</span></strong><span>，让客户端与上一次资源进行对比。</span></p><p data-lake-id=\"u82e19cda\" style=\"text-indent: 2em;\"><span>客户端对比出差异后会向 </span><code><span>wds</span></code><span> 发起 </span><code><strong><span>ajax</span></strong></code><span> 请求，用来获取更改后的内容(文件列表、</span><code><span>hash</span></code><span>)，这样客户端就可以借助这些信息继续向 </span><code><span>wds</span></code><span> 发起 </span><strong><span>jsonp 请求该 chunk 的增量更新</span></strong></p>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><p data-lake-id=\"u7eff53a9\" id=\"u7eff53a9\" style=\"text-indent: 2em\"><code data-lake-id=\"ub6178c85\" id=\"ub6178c85\"><span data-lake-id=\"u56da7d9c\" id=\"u56da7d9c\">webpack</span></code><span data-lake-id=\"u2939e8eb\" id=\"u2939e8eb\"> 的热更新又叫做热替换、</span><code data-lake-id=\"ufe558804\" id=\"ufe558804\"><span data-lake-id=\"u4145b62b\" id=\"u4145b62b\">hmr</span></code><span data-lake-id=\"ud7f6e7bb\" id=\"ud7f6e7bb\">。这个机制可以做到不用刷新浏览器就可以将新变更的模块替换掉旧的模块</span></p><p data-lake-id=\"u72467a8f\" id=\"u72467a8f\" style=\"text-indent: 2em\"><code data-lake-id=\"u592d6880\" id=\"u592d6880\"><span data-lake-id=\"u36f2f2a5\" id=\"u36f2f2a5\">hmr</span></code><span data-lake-id=\"ud17d61c9\" id=\"ud17d61c9\"> 的核心是</span><strong><span data-lake-id=\"u834868a9\" id=\"u834868a9\">客户端从服务器拉取更新后的文件</span></strong><span data-lake-id=\"u6f340add\" id=\"u6f340add\">，准确的说就是 </span><code data-lake-id=\"u6d40ec2e\" id=\"u6d40ec2e\"><strong><span data-lake-id=\"ua68acaca\" id=\"ua68acaca\">chunk diff</span></strong></code><strong><span data-lake-id=\"u52ae332c\" id=\"u52ae332c\"> ( </span></strong><code data-lake-id=\"ub7a8f1f5\" id=\"ub7a8f1f5\"><strong><span data-lake-id=\"uad104990\" id=\"uad104990\">chunk</span></strong></code><span data-lake-id=\"ub24b813a\" id=\"ub24b813a\"> 需要更新的部分</span><strong><span data-lake-id=\"u573b224c\" id=\"u573b224c\">)</span></strong><span data-lake-id=\"u66d68a9c\" id=\"u66d68a9c\">，实际上 </span><code data-lake-id=\"u76d8a154\" id=\"u76d8a154\"><strong><span data-lake-id=\"u86247ef0\" id=\"u86247ef0\">wds</span></strong></code><strong><span data-lake-id=\"u6e4c897e\" id=\"u6e4c897e\">(无线分布式系统) </span></strong><span data-lake-id=\"u582d208b\" id=\"u582d208b\">与浏览器之间维护了一个 </span><code data-lake-id=\"u533bd9d1\" id=\"u533bd9d1\"><strong><span data-lake-id=\"ue3524651\" id=\"ue3524651\">websocket</span></strong></code><span data-lake-id=\"u6b44d4c8\" id=\"u6b44d4c8\">。当本地资源发生变化时，</span><code data-lake-id=\"uc1633224\" id=\"uc1633224\"><span data-lake-id=\"u4a42f7a4\" id=\"u4a42f7a4\">wds</span></code><span data-lake-id=\"u652d3e6b\" id=\"u652d3e6b\"> 会向浏览器推送更新，并</span><strong><span data-lake-id=\"u4e0d8aa2\" id=\"u4e0d8aa2\">带上构建时的 hash</span></strong><span data-lake-id=\"u5c7d61af\" id=\"u5c7d61af\">，让客户端与上一次资源进行对比。</span></p><p data-lake-id=\"u82e19cda\" id=\"u82e19cda\" style=\"text-indent: 2em\"><span data-lake-id=\"u2861f532\" id=\"u2861f532\">客户端对比出差异后会向 </span><code data-lake-id=\"u900e15b7\" id=\"u900e15b7\"><span data-lake-id=\"u99529200\" id=\"u99529200\">wds</span></code><span data-lake-id=\"ua9c6b0a0\" id=\"ua9c6b0a0\"> 发起 </span><code data-lake-id=\"u6b1d7458\" id=\"u6b1d7458\"><strong><span data-lake-id=\"u4635ec44\" id=\"u4635ec44\">ajax</span></strong></code><span data-lake-id=\"uececbdac\" id=\"uececbdac\"> 请求，用来获取更改后的内容(文件列表、</span><code data-lake-id=\"ub11b8511\" id=\"ub11b8511\"><span data-lake-id=\"u04cc7dba\" id=\"u04cc7dba\">hash</span></code><span data-lake-id=\"uc60f1e36\" id=\"uc60f1e36\">)，这样客户端就可以借助这些信息继续向 </span><code data-lake-id=\"u8bf55848\" id=\"u8bf55848\"><span data-lake-id=\"ua5499ef4\" id=\"ua5499ef4\">wds</span></code><span data-lake-id=\"u98006a10\" id=\"u98006a10\"> 发起 </span><strong><span data-lake-id=\"ue921d037\" id=\"ue921d037\">jsonp 请求该 chunk 的增量更新</span></strong></p>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:33:24.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:33:24.000Z",
  "updated_at": "2022-05-10T15:12:37.000Z",
  "published_at": "2022-04-04T11:33:24.000Z",
  "first_published_at": "2022-04-04T11:33:23.612Z",
  "word_count": 225,
  "cover": null,
  "description": "webpack 的热更新又叫做热替换、hmr。这个机制可以做到不用刷新浏览器就可以将新变更的模块替换掉旧的模块hmr 的核心是客户端从服务器拉取更新后的文件，准确的说就是 chunk diff ( chunk 需要更新的部分)，实际上 wds(无线分布式系统) 与浏览器之间维护了一个 webs...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}