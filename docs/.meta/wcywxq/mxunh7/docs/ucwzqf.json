{
  "id": 76155221,
  "slug": "ucwzqf",
  "title": "面向对象的三大特征和六大原则",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"XvLLM\"></a>\n## 三大特征\n- 封装\n- 继承\n- 多态\n<a name=\"KziG7\"></a>\n## 六大原则\n\n- 单一职责原则 (SRP)：对一个类(方法、对象)来说，应该仅有一个引起它变化的原因，也就是说：一个对象只做一件事\n- 开放封闭原则 (OCP)：一个模块在扩展性方面应该是开放的，而在更改性方面应该是封闭的，也就是对扩展开放，对修改封闭\n- 里式替换原则 (LSP)：使用接口时，我们必须确保子类能够替换父类所出现的任何地方，也就是说：父类接口必须确保所有子类都可以实现需求，而不是某一个子类\n- 依赖倒置原则 (DIP)：让高层模块不要依赖低层模块\n- 接口分离原则 (ISP)：强调每个类继承的接口一定要保证最少，不能继承无用的接口，保持接口隔离原则的前提是要先保证职责单一原则\n- 最少知识原则 (LKP)：一个对象应该对其他对象有最少的了解\n",
  "body_draft": "",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"XvLLM\"><span class=\"ne-text\">三大特征</span></h2><ul class=\"ne-ul\"><li id=\"ud53157bb\"><span class=\"ne-text\">封装</span></li><li id=\"u968202ca\"><span class=\"ne-text\">继承</span></li><li id=\"ue16d56a2\"><span class=\"ne-text\">多态</span></li></ul><h2 id=\"KziG7\"><span class=\"ne-text\">六大原则</span></h2><ul class=\"ne-ul\"><li id=\"u692ff4d5\"><span class=\"ne-text\">单一职责原则 (SRP)：对一个类(方法、对象)来说，应该仅有一个引起它变化的原因，也就是说：一个对象只做一件事</span></li><li id=\"u42ff02a5\"><span class=\"ne-text\">开放封闭原则 (OCP)：一个模块在扩展性方面应该是开放的，而在更改性方面应该是封闭的，也就是对扩展开放，对修改封闭</span></li><li id=\"ubcc8096b\"><span class=\"ne-text\">里式替换原则 (LSP)：使用接口时，我们必须确保子类能够替换父类所出现的任何地方，也就是说：父类接口必须确保所有子类都可以实现需求，而不是某一个子类</span></li><li id=\"u65b9a388\"><span class=\"ne-text\">依赖倒置原则 (DIP)：让高层模块不要依赖低层模块</span></li><li id=\"uc4606510\"><span class=\"ne-text\">接口分离原则 (ISP)：强调每个类继承的接口一定要保证最少，不能继承无用的接口，保持接口隔离原则的前提是要先保证职责单一原则</span></li><li id=\"u877ae180\"><span class=\"ne-text\">最少知识原则 (LKP)：一个对象应该对其他对象有最少的了解</span></li></ul></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"XvLLM\" id=\"XvLLM\"><span data-lake-id=\"u59cbf401\" id=\"u59cbf401\">三大特征</span></h2><ul list=\"u5c5e0b60\"><li fid=\"u0a3228cb\" data-lake-id=\"ud53157bb\" id=\"ud53157bb\"><span data-lake-id=\"u552f8e36\" id=\"u552f8e36\">封装</span></li><li fid=\"u0a3228cb\" data-lake-id=\"u968202ca\" id=\"u968202ca\"><span data-lake-id=\"u6aa91e42\" id=\"u6aa91e42\">继承</span></li><li fid=\"u0a3228cb\" data-lake-id=\"ue16d56a2\" id=\"ue16d56a2\"><span data-lake-id=\"u08449c21\" id=\"u08449c21\">多态</span></li></ul><h2 data-lake-id=\"KziG7\" id=\"KziG7\"><span data-lake-id=\"u4c983373\" id=\"u4c983373\">六大原则</span></h2><ul list=\"u476985d0\"><li fid=\"u8e348619\" data-lake-id=\"u692ff4d5\" id=\"u692ff4d5\"><span data-lake-id=\"ud6efa354\" id=\"ud6efa354\">单一职责原则 (SRP)：对一个类(方法、对象)来说，应该仅有一个引起它变化的原因，也就是说：一个对象只做一件事</span></li><li fid=\"u8e348619\" data-lake-id=\"u42ff02a5\" id=\"u42ff02a5\"><span data-lake-id=\"u572e3142\" id=\"u572e3142\">开放封闭原则 (OCP)：一个模块在扩展性方面应该是开放的，而在更改性方面应该是封闭的，也就是对扩展开放，对修改封闭</span></li><li fid=\"u8e348619\" data-lake-id=\"ubcc8096b\" id=\"ubcc8096b\"><span data-lake-id=\"u3e616b5d\" id=\"u3e616b5d\">里式替换原则 (LSP)：使用接口时，我们必须确保子类能够替换父类所出现的任何地方，也就是说：父类接口必须确保所有子类都可以实现需求，而不是某一个子类</span></li><li fid=\"u8e348619\" data-lake-id=\"u65b9a388\" id=\"u65b9a388\"><span data-lake-id=\"u9b5103fe\" id=\"u9b5103fe\">依赖倒置原则 (DIP)：让高层模块不要依赖低层模块</span></li><li fid=\"u8e348619\" data-lake-id=\"uc4606510\" id=\"uc4606510\"><span data-lake-id=\"u844098dc\" id=\"u844098dc\">接口分离原则 (ISP)：强调每个类继承的接口一定要保证最少，不能继承无用的接口，保持接口隔离原则的前提是要先保证职责单一原则</span></li><li fid=\"u8e348619\" data-lake-id=\"u877ae180\" id=\"u877ae180\"><span data-lake-id=\"u63592b2c\" id=\"u63592b2c\">最少知识原则 (LKP)：一个对象应该对其他对象有最少的了解</span></li></ul>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-05-05T07:27:17.000Z",
  "deleted_at": null,
  "created_at": "2022-05-05T07:16:13.000Z",
  "updated_at": "2022-05-05T07:27:17.000Z",
  "published_at": "2022-05-05T07:27:17.000Z",
  "first_published_at": "2022-05-05T07:17:15.675Z",
  "word_count": 292,
  "cover": null,
  "description": "三大特征封装继承多态六大原则单一职责原则 (SRP)：对一个类(方法、对象)来说，应该仅有一个引起它变化的原因，也就是说：一个对象只做一件事开放封闭原则 (OCP)：一个模块在扩展性方面应该是开放的，而在更改性方面应该是封闭的，也就是对扩展开放，对修改封闭里式替换原则 (LSP)：使用接口时，...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}