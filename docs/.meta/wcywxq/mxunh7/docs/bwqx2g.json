{
  "id": 72212063,
  "slug": "bwqx2g",
  "title": "原型和原型链",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"uEeAw\"></a>\n## 原型\n在 javaScript 中，我们使用构造函数新建一个对象，每个构造函数内部都有一个 prototype 属性值，该属性值是一个对象，该对象包含了可以被该构造函数的所有实例所共享的属性和方法\n\n当使用构造函数新建立一个对象后，在这个对象的内部将包含一个指针，这个指针会指向构造函数的 prototype 属性值，也就是这个对象的原型\n\n:::tips\njavaScript 原型的特点：javaScript 对象是通过 “引用” 的方式来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本，当我们修改原型的时候，与之相关的对象也将继承这一改变\n:::\n<a name=\"hL5Fw\"></a>\n## 原型链\n当访问一个对象的属性时，如果对象内部不存在这一属性，便会去它的原型对象寻找这个属性，由于这个原型对象也会有自己的原型，因此这样一直寻找下去，就形成了原型链\n:::tips\n**个人理解**：原型链 = 链表，this 就是链表当前指向的那个原型，call/apply/bind 用来改变链表的 next 指向\n:::\n<a name=\"yVC0m\"></a>\n## 关系图\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1646732589746-4462809c-9dd9-428c-a2c1-6ff3469d9b3e.png#clientId=u9a13d2af-5fa6-4&from=paste&height=263&id=u59099954&originHeight=525&originWidth=590&originalType=binary&ratio=1&size=33692&status=done&style=none&taskId=u86a85400-b384-418f-abb3-f375123cc99&width=295)\n:::info\n图中由相互关联的原型组成的链状结构就是原型链，也就是蓝色的线\n:::\n",
  "body_draft": "",
  "body_html": "<!doctype html><h2 id=\"uEeAw\"><span>原型</span></h2><p data-lake-id=\"u38dfe884\"><span>在 javaScript 中，我们使用构造函数新建一个对象，每个构造函数内部都有一个 prototype 属性值，该属性值是一个对象，该对象包含了可以被该构造函数的所有实例所共享的属性和方法</span></p><p data-lake-id=\"u6b81a52d\"><span>​</span><br /></p><p data-lake-id=\"u0ce514df\"><span>当使用构造函数新建立一个对象后，在这个对象的内部将包含一个指针，这个指针会指向构造函数的 prototype 属性值，也就是这个对象的原型</span></p><p data-lake-id=\"u208389ad\"><span>​</span><br /></p><blockquote class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"ufb329ae6\"><span>javaScript 原型的特点：javaScript 对象是通过 “引用” 的方式来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本，当我们修改原型的时候，与之相关的对象也将继承这一改变</span></p></blockquote><h2 id=\"hL5Fw\"><span>原型链</span></h2><p data-lake-id=\"u276b288c\"><span>当访问一个对象的属性时，如果对象内部不存在这一属性，便会去它的原型对象寻找这个属性，由于这个原型对象也会有自己的原型，因此这样一直寻找下去，就形成了原型链</span></p><blockquote class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"uf998d145\"><strong><span>个人理解</span></strong><span>：原型链 = 链表，this 就是链表当前指向的那个原型，call/apply/bind 用来改变链表的 next 指向</span></p></blockquote><h2 id=\"yVC0m\"><span>关系图</span></h2><p data-lake-id=\"ub5827874\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1646732589746-4462809c-9dd9-428c-a2c1-6ff3469d9b3e.png#clientId=u9a13d2af-5fa6-4&amp;from=paste&amp;height=263&amp;id=u59099954&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=525&amp;originWidth=590&amp;originalType=binary&amp;ratio=1&amp;size=33692&amp;status=done&amp;style=none&amp;taskId=u86a85400-b384-418f-abb3-f375123cc99&amp;width=295\" style=\"max-width: 600px; width: 295px;\" /></p><blockquote class=\"lake-alert lake-alert-info\"><p data-lake-id=\"u2022af7e\"><span>图中由相互关联的原型组成的链状结构就是原型链，也就是蓝色的线</span></p></blockquote>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"uEeAw\" id=\"uEeAw\"><span data-lake-id=\"ub96c0174\" id=\"ub96c0174\">原型</span></h2><p data-lake-id=\"u38dfe884\" id=\"u38dfe884\"><span data-lake-id=\"uc8e85f60\" id=\"uc8e85f60\">在 javaScript 中，我们使用构造函数新建一个对象，每个构造函数内部都有一个 prototype 属性值，该属性值是一个对象，该对象包含了可以被该构造函数的所有实例所共享的属性和方法</span></p><p data-lake-id=\"u6b81a52d\" id=\"u6b81a52d\"><span data-lake-id=\"u98f5511e\" id=\"u98f5511e\">​</span><br></p><p data-lake-id=\"u0ce514df\" id=\"u0ce514df\"><span data-lake-id=\"u449b885f\" id=\"u449b885f\">当使用构造函数新建立一个对象后，在这个对象的内部将包含一个指针，这个指针会指向构造函数的 prototype 属性值，也就是这个对象的原型</span></p><p data-lake-id=\"u208389ad\" id=\"u208389ad\"><span data-lake-id=\"u53c00eb7\" id=\"u53c00eb7\">​</span><br></p><blockquote data-lake-id=\"uc04f7281\" id=\"uc04f7281\" class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"ufb329ae6\" id=\"ufb329ae6\"><span data-lake-id=\"u21e80e3e\" id=\"u21e80e3e\">javaScript 原型的特点：javaScript 对象是通过 “引用” 的方式来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本，当我们修改原型的时候，与之相关的对象也将继承这一改变</span></p></blockquote><h2 data-lake-id=\"hL5Fw\" id=\"hL5Fw\"><span data-lake-id=\"uc36fb17d\" id=\"uc36fb17d\">原型链</span></h2><p data-lake-id=\"u276b288c\" id=\"u276b288c\"><span data-lake-id=\"u9cac8e26\" id=\"u9cac8e26\">当访问一个对象的属性时，如果对象内部不存在这一属性，便会去它的原型对象寻找这个属性，由于这个原型对象也会有自己的原型，因此这样一直寻找下去，就形成了原型链</span></p><blockquote data-lake-id=\"u1a57e6e6\" id=\"u1a57e6e6\" class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"uf998d145\" id=\"uf998d145\"><strong><span data-lake-id=\"u092ccecd\" id=\"u092ccecd\">个人理解</span></strong><span data-lake-id=\"u6e3625fc\" id=\"u6e3625fc\">：原型链 = 链表，this 就是链表当前指向的那个原型，call/apply/bind 用来改变链表的 next 指向</span></p></blockquote><h2 data-lake-id=\"yVC0m\" id=\"yVC0m\"><span data-lake-id=\"u6e6adab3\" id=\"u6e6adab3\">关系图</span></h2><p data-lake-id=\"ub5827874\" id=\"ub5827874\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1646732589746-4462809c-9dd9-428c-a2c1-6ff3469d9b3e.png%22%2C%22taskId%22%3A%22u86a85400-b384-418f-abb3-f375123cc99%22%2C%22clientId%22%3A%22u9a13d2af-5fa6-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A295%2C%22height%22%3A263%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A33692%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A590%2C%22originHeight%22%3A525%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22PROTOTYPE%20PERSON%20PERSON.PROTOTYPE%20(%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0)%20(%E5%AE%9E%E4%BE%8B%E5%8E%9F%E5%9E%8B)%20CONSTRUCTOR%20PROTO_%20PERSON%20PROTO%20PROTOTYPE%20OBJECT.PROTOTYPE%20OBJECT()%20PROTO%20CONSTRUCTOR%20NULL%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A225.3553%2C%22y%22%3A54.008408%2C%22width%22%3A79.53649999999999%2C%22height%22%3A14.296322000000004%2C%22text%22%3A%22PROTOTYPE%22%7D%2C%7B%22x%22%3A95.7504%2C%22y%22%3A92.138885%2C%22width%22%3A66.83991999999999%2C%22height%22%3A18.506569%2C%22text%22%3A%22PERSON%22%7D%2C%7B%22x%22%3A352.2927%2C%22y%22%3A92.4128%2C%22width%22%3A174.06900000000002%2C%22height%22%3A21.541934999999995%2C%22text%22%3A%22PERSON.PROTOTYPE%22%7D%2C%7B%22x%22%3A83.71632%2C%22y%22%3A116.76867%2C%22width%22%3A91.91483%2C%22height%22%3A21.35036000000001%2C%22text%22%3A%22(%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0)%22%7D%2C%7B%22x%22%3A391.05237%2C%22y%22%3A117.18867%2C%22width%22%3A102.37198000000001%2C%22height%22%3A20.503870000000006%2C%22text%22%3A%22(%E5%AE%9E%E4%BE%8B%E5%8E%9F%E5%9E%8B)%22%7D%2C%7B%22x%22%3A220.32532%2C%22y%22%3A161.02185%2C%22width%22%3A89.42688000000001%2C%22height%22%3A12.579880000000003%2C%22text%22%3A%22CONSTRUCTOR%22%7D%2C%7B%22x%22%3A233.32227%2C%22y%22%3A215.53581%2C%22width%22%3A48.65758999999997%2C%22height%22%3A13.77261999999999%2C%22text%22%3A%22PROTO_%22%7D%2C%7B%22x%22%3A96.33426%2C%22y%22%3A235.52638%2C%22width%22%3A55.16878%2C%22height%22%3A13.549360000000007%2C%22text%22%3A%22PERSON%22%7D%2C%7B%22x%22%3A492.04434%2C%22y%22%3A266.31903%2C%22width%22%3A47.992260000000044%2C%22height%22%3A14.57044000000002%2C%22text%22%3A%22PROTO%22%7D%2C%7B%22x%22%3A223.29616%2C%22y%22%3A311.42758%2C%22width%22%3A80.04878000000002%2C%22height%22%3A16.67795000000001%2C%22text%22%3A%22PROTOTYPE%22%7D%2C%7B%22x%22%3A351.90866%2C%22y%22%3A357.5059%2C%22width%22%3A171.63559000000004%2C%22height%22%3A27.57683000000003%2C%22text%22%3A%22OBJECT.PROTOTYPE%22%7D%2C%7B%22x%22%3A84.78599%2C%22y%22%3A359.5453%2C%22width%22%3A78.41488000000001%2C%22height%22%3A22.80907000000002%2C%22text%22%3A%22OBJECT()%22%7D%2C%7B%22x%22%3A492.73196%2C%22y%22%3A416.05777%2C%22width%22%3A46.85693999999995%2C%22height%22%3A13.294930000000022%2C%22text%22%3A%22PROTO%22%7D%2C%7B%22x%22%3A217.83232%2C%22y%22%3A419.33093%2C%22width%22%3A90.47410999999997%2C%22height%22%3A13.539639999999963%2C%22text%22%3A%22CONSTRUCTOR%22%7D%2C%7B%22x%22%3A444.8138%2C%22y%22%3A466.5631%2C%22width%22%3A29.71826999999996%2C%22height%22%3A13.30113%2C%22text%22%3A%22NULL%22%7D%5D%2C%22id%22%3A%22u59099954%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><blockquote data-lake-id=\"ucbfd726a\" id=\"ucbfd726a\" class=\"lake-alert lake-alert-info\"><p data-lake-id=\"u2022af7e\" id=\"u2022af7e\"><span data-lake-id=\"u09894fa4\" id=\"u09894fa4\">图中由相互关联的原型组成的链状结构就是原型链，也就是蓝色的线</span></p></blockquote>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:32:48.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:32:48.000Z",
  "updated_at": "2022-05-10T15:12:42.000Z",
  "published_at": "2022-04-04T11:32:48.000Z",
  "first_published_at": "2022-04-04T11:32:48.299Z",
  "word_count": 365,
  "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1646732589746-4462809c-9dd9-428c-a2c1-6ff3469d9b3e.png",
  "description": "原型在 javaScript 中，我们使用构造函数新建一个对象，每个构造函数内部都有一个 prototype 属性值，该属性值是一个对象，该对象包含了可以被该构造函数的所有实例所共享的属性和方法当使用构造函数新建立一个对象后，在这个对象的内部将包含一个指针，这个指针会指向构造函数的 proto...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}