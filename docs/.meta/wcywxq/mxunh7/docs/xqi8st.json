{
  "id": 72212257,
  "slug": "xqi8st",
  "title": "vite 的优缺点",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": ":::success\n**优点：**\n\n- 快速的冷启动: 采用 No Bundle 和 esbuild 预构建，速度远快于 Webpack\n- 高效的热更新：基于 ESM 实现，同时利用 HTTP 头来加速整个页面的重新加载，增加缓存策略\n- 真正的按需加载: 基于浏览器 ESM 的支持，实现真正的按需加载\n:::\n\n:::danger\n**缺点：**\n\n- 生产环境由于 esbuild 对 css 和代码分割不友好使用 Rollup 进行打包\n- 目前 Vite 还是使用的 es module 模块不能直接使用生产环境（兼容性问题）。默认情况下，无论是 dev 还是 build 都会直接打出 ESM 版本的代码包，这就要求客户浏览器需要有一个比较新的版本，这放在现在的国情下还是有点难度的。不过 Vite 同时提供了一些弥补的方法，使用 build.polyfillDynamicImport 配置项配合 @vitejs/plugin-legacy 打包出一个看起来兼容性比较好的版本。\n- 生产环境使用 rollup 打包会造成开发环境与生产环境的不一致。\n- 很多 第三方 sdk 没有产出 ems 格式的的代码，这个需要自己去做一些兼容。\n:::\n",
  "body_draft": "",
  "body_html": "<!doctype html><blockquote class=\"lake-alert lake-alert-success\"><p data-lake-id=\"u4a986192\"><strong><span>优点：</span></strong></p><ul><li><span>快速的冷启动: 采用 No Bundle 和 esbuild 预构建，速度远快于 Webpack</span></li><li><span>高效的热更新：基于 ESM 实现，同时利用 HTTP 头来加速整个页面的重新加载，增加缓存策略</span></li><li><span>真正的按需加载: 基于浏览器 ESM 的支持，实现真正的按需加载</span></li></ul></blockquote><p data-lake-id=\"uf938c37e\"><br /></p><blockquote class=\"lake-alert lake-alert-danger\"><p data-lake-id=\"u90445eea\"><strong><span>缺点：</span></strong></p><ul><li><span>生产环境由于 esbuild 对 css 和代码分割不友好使用 Rollup 进行打包</span></li><li><span>目前 Vite 还是使用的 es module 模块不能直接使用生产环境（兼容性问题）。默认情况下，无论是 dev 还是 build 都会直接打出 ESM 版本的代码包，这就要求客户浏览器需要有一个比较新的版本，这放在现在的国情下还是有点难度的。不过 Vite 同时提供了一些弥补的方法，使用 build.polyfillDynamicImport 配置项配合 @vitejs/plugin-legacy 打包出一个看起来兼容性比较好的版本。</span></li><li><span>生产环境使用 rollup 打包会造成开发环境与生产环境的不一致。</span></li><li><span>很多 第三方 sdk 没有产出 ems 格式的的代码，这个需要自己去做一些兼容。</span></li></ul></blockquote>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><blockquote data-lake-id=\"ud9891b76\" id=\"ud9891b76\" class=\"lake-alert lake-alert-success\"><p data-lake-id=\"u4a986192\" id=\"u4a986192\"><strong><span data-lake-id=\"u1eee5be3\" id=\"u1eee5be3\">优点：</span></strong></p><ul list=\"u14080470\"><li fid=\"ufe7f2314\" data-lake-id=\"uedf47ada\" id=\"uedf47ada\"><span data-lake-id=\"u5e0d155e\" id=\"u5e0d155e\">快速的冷启动: 采用 No Bundle 和 esbuild 预构建，速度远快于 Webpack</span></li><li fid=\"ufe7f2314\" data-lake-id=\"u69febbae\" id=\"u69febbae\"><span data-lake-id=\"u864de8f8\" id=\"u864de8f8\">高效的热更新：基于 ESM 实现，同时利用 HTTP 头来加速整个页面的重新加载，增加缓存策略</span></li><li fid=\"ufe7f2314\" data-lake-id=\"u2b4dfe16\" id=\"u2b4dfe16\"><span data-lake-id=\"u57170b87\" id=\"u57170b87\">真正的按需加载: 基于浏览器 ESM 的支持，实现真正的按需加载</span></li></ul></blockquote><p data-lake-id=\"uf938c37e\" id=\"uf938c37e\"><br></p><blockquote data-lake-id=\"u2f8c38e6\" id=\"u2f8c38e6\" class=\"lake-alert lake-alert-danger\"><p data-lake-id=\"u90445eea\" id=\"u90445eea\"><strong><span data-lake-id=\"ua9b7230f\" id=\"ua9b7230f\">缺点：</span></strong></p><ul list=\"u36bcafc9\"><li fid=\"ufce9aa6d\" data-lake-id=\"u305c6bf6\" id=\"u305c6bf6\"><span data-lake-id=\"u8e910975\" id=\"u8e910975\">生产环境由于 esbuild 对 css 和代码分割不友好使用 Rollup 进行打包</span></li><li fid=\"ufce9aa6d\" data-lake-id=\"u7d662d64\" id=\"u7d662d64\"><span data-lake-id=\"u497b8c8e\" id=\"u497b8c8e\">目前 Vite 还是使用的 es module 模块不能直接使用生产环境（兼容性问题）。默认情况下，无论是 dev 还是 build 都会直接打出 ESM 版本的代码包，这就要求客户浏览器需要有一个比较新的版本，这放在现在的国情下还是有点难度的。不过 Vite 同时提供了一些弥补的方法，使用 build.polyfillDynamicImport 配置项配合 @vitejs/plugin-legacy 打包出一个看起来兼容性比较好的版本。</span></li><li fid=\"ufce9aa6d\" data-lake-id=\"u5dfe5409\" id=\"u5dfe5409\"><span data-lake-id=\"ub6c2e192\" id=\"ub6c2e192\">生产环境使用 rollup 打包会造成开发环境与生产环境的不一致。</span></li><li fid=\"ufce9aa6d\" data-lake-id=\"ueee60dce\" id=\"ueee60dce\"><span data-lake-id=\"ue87fdc14\" id=\"ue87fdc14\">很多 第三方 sdk 没有产出 ems 格式的的代码，这个需要自己去做一些兼容。</span></li></ul></blockquote>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:33:53.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:33:53.000Z",
  "updated_at": "2022-05-10T15:12:33.000Z",
  "published_at": "2022-04-04T11:33:53.000Z",
  "first_published_at": "2022-04-04T11:33:52.906Z",
  "word_count": 313,
  "cover": null,
  "description": "优点：快速的冷启动: 采用 No Bundle 和 esbuild 预构建，速度远快于 Webpack高效的热更新：基于 ESM 实现，同时利用 HTTP 头来加速整个页面的重新加载，增加缓存策略真正的按需加载: 基于浏览器 ESM 的支持，实现真正的按需加载缺点：生产环境由于 esbuild...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}