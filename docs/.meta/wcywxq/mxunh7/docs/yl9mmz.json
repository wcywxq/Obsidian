{
  "id": 72212039,
  "slug": "yl9mmz",
  "title": "事件绑定原理",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"t79LH\"></a>\n## 原生事件\n通过 addEventListener 绑定给真实元素\n\n<a name=\"kiZc3\"></a>\n## 组件事件\n通过 vue 自定义的 $on 实现；在组件上使用原生事件，需要加 .native 修饰符(相当于父组件中把子组件当作普通的 html 标签, 然后加上原生事件)\n\non、emit 是基于发布订阅模式的, 维护一个事件中心, on 的时候将事件按名称存在事件中心里，即订阅者。然后 emit 将对应事件发布，去执行事件中心里对应的监听器。\n",
  "body_draft": "",
  "body_html": "<!doctype html><h2 id=\"t79LH\"><span>原生事件</span></h2><p data-lake-id=\"u1a42e98c\"><span>通过 addEventListener 绑定给真实元素</span></p><p data-lake-id=\"u92eba3b2\"><br /></p><h2 id=\"kiZc3\"><span>组件事件</span></h2><p data-lake-id=\"u50da99c8\"><span>通过 vue 自定义的 $on 实现；在组件上使用原生事件，需要加 </span><span class=\"lake-fontsize-12\" style=\"color: #444444;\">.native 修饰符(相当于父组件中把子组件当作普通的 html 标签, 然后加上原生事件)</span></p><p data-lake-id=\"udcb0024f\"><span class=\"lake-fontsize-12\" style=\"color: #444444;\">​</span><br /></p><p data-lake-id=\"u21ce5e81\"><span class=\"lake-fontsize-12\" style=\"color: #444444;\">on、emit 是基于发布订阅模式的, 维护一个事件中心, on 的时候将事件按名称存在事件中心里，即订阅者。然后 emit 将对应事件发布，去执行事件中心里对应的监听器。</span></p>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"t79LH\" id=\"t79LH\"><span data-lake-id=\"u5be711a9\" id=\"u5be711a9\">原生事件</span></h2><p data-lake-id=\"u1a42e98c\" id=\"u1a42e98c\"><span data-lake-id=\"uc7fb7992\" id=\"uc7fb7992\">通过 addEventListener 绑定给真实元素</span></p><p data-lake-id=\"u92eba3b2\" id=\"u92eba3b2\"><br></p><h2 data-lake-id=\"kiZc3\" id=\"kiZc3\"><span data-lake-id=\"u7d121bf5\" id=\"u7d121bf5\">组件事件</span></h2><p data-lake-id=\"u50da99c8\" id=\"u50da99c8\"><span data-lake-id=\"u9612d675\" id=\"u9612d675\">通过 vue 自定义的 $on 实现；在组件上使用原生事件，需要加 </span><span data-lake-id=\"udc6b5ddf\" id=\"udc6b5ddf\" class=\"lake-fontsize-12\" style=\"color: rgb(68, 68, 68)\">.native 修饰符(相当于父组件中把子组件当作普通的 html 标签, 然后加上原生事件)</span></p><p data-lake-id=\"udcb0024f\" id=\"udcb0024f\"><span data-lake-id=\"ue8d8c1e8\" id=\"ue8d8c1e8\" class=\"lake-fontsize-12\" style=\"color: rgb(68, 68, 68)\">​</span><br></p><p data-lake-id=\"u21ce5e81\" id=\"u21ce5e81\"><span data-lake-id=\"u0d96fbc1\" id=\"u0d96fbc1\" class=\"lake-fontsize-12\" style=\"color: rgb(68, 68, 68)\">on、emit 是基于发布订阅模式的, 维护一个事件中心, on 的时候将事件按名称存在事件中心里，即订阅者。然后 emit 将对应事件发布，去执行事件中心里对应的监听器。</span></p>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:32:40.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:32:40.000Z",
  "updated_at": "2022-05-10T15:12:43.000Z",
  "published_at": "2022-04-04T11:32:40.000Z",
  "first_published_at": "2022-04-04T11:32:39.986Z",
  "word_count": 149,
  "cover": null,
  "description": "原生事件通过 addEventListener 绑定给真实元素组件事件通过 vue 自定义的 $on 实现；在组件上使用原生事件，需要加 .native 修饰符(相当于父组件中把子组件当作普通的 html 标签, 然后加上原生事件)on、emit 是基于发布订阅模式的, 维护一个事件中心, o...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}