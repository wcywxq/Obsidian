{
  "id": 72212190,
  "slug": "vm3nkg",
  "title": "重排(回流) reflow 和重绘 repaint",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"zMvgK\"></a>\n## 概念\n<a name=\"pA18D\"></a>\n### 重排(回流)\n当渲染树中部分或者全部元素的尺寸、结构或者属性发生变化时，浏览器会重新渲染部分或者全部文档的过程就称为**回流**。\n\n**导致重排(回流)的操作**\n\n- 页面的首次渲染\n- 浏览器的窗口发生变化\n- 元素的内容发生变化\n- 元素的尺寸或者位置发生变化\n- 元素的字体大小发生变化\n- 激活 css 伪类\n- 查询某些属性或者调用某些方法\n- 添加或删除可见的 dom 元素\n\n在触发重排(回流)的时候，由于浏览器渲染页面是基于流式布局的，所以当触发回流时，会导致周围的 dom 元素重新排列，它的影响范围有两种：\n\n- 全局范围：从根节点开始，对整个渲染树进行重新布局\n- 局部范围：对渲染树的某部分或者一个渲染对象进行重新布局\n<a name=\"aWn8k\"></a>\n### 重绘\n当页面中某些元素的样式发生改变，但是不会影响其在文档流中的位置时，浏览器就会对元素进行重新绘制，这个过程就是**重绘**。<br />**导致重新绘的操作**\n\n- color、background 相关属性：background-color、background-image 等\n- outline 相关属性：outline-color、outline-width、text-decoration\n- border-radius、visibility、box-shadow\n:::warning\n注意：<br />触发回流时，一定会触发重绘，但是重绘不一定会触发回流\n:::\n<a name=\"Qolwn\"></a>\n## 避免回流与重绘的方式\n\n- 操作 dom 时，尽量在低层级的 dom 节点进行操作\n- 不要使用 table 布局，一个小的改动可能会使整个 table 重新布局\n- 使用 css 的表达式\n- 不要频繁操作元素的样式，对于静态页面，可以修改类名，而不是样式。(即样式几种改变、使用添加新样式类名)\n- 使用 absolute 或者 fixed，使元素脱离文档流，这样他们发生变化就不会影响其他元素\n- 避免频繁操作 dom，可以创建一个文档片段 documentFragment，在它上面应用所有 dom 操作，最后再把它添加到文档中\n- 开启 GPU 加速，利用 css 属性 transform、will-change 等\n- 将元素先设置 `display: none`，操作结束后再把它显示出来。因为在 display 属性为 none 的元素上进行的 dom 操作不会引发回流和重绘\n- 将 dom 的多个读操作(或者写操作)放在一起，而不是读写操作穿插着写。这得益于**浏览器渲染队列机制**\n\n\n\n浏览器会将所有的回流、重绘操作放在一个队列中，当队列中的操作到了一定的数量或者到了一定的时间间隔，浏览器就会对队列进行批处理。这样就会让多次的回流、重绘变成一次回流重绘\n",
  "body_draft": "",
  "body_html": "<!doctype html><h2 id=\"zMvgK\"><span>概念</span></h2><h3 id=\"pA18D\"><span>重排(回流)</span></h3><p data-lake-id=\"u9410ebcb\"><span>当渲染树中部分或者全部元素的尺寸、结构或者属性发生变化时，浏览器会重新渲染部分或者全部文档的过程就称为</span><strong><span>回流</span></strong><span>。</span></p><p data-lake-id=\"u671d632f\"><span>​</span><br /></p><p data-lake-id=\"u84d988b9\"><strong><span>导致重排(回流)的操作</span></strong></p><ul><li><span>页面的首次渲染</span></li><li><span>浏览器的窗口发生变化</span></li><li><span>元素的内容发生变化</span></li><li><span>元素的尺寸或者位置发生变化</span></li><li><span>元素的字体大小发生变化</span></li><li><span>激活 css 伪类</span></li><li><span>查询某些属性或者调用某些方法</span></li><li><span>添加或删除可见的 dom 元素</span></li></ul><p data-lake-id=\"u43368496\"><span>​</span><br /></p><p data-lake-id=\"ub77521de\"><span>在触发重排(回流)的时候，由于浏览器渲染页面是基于流式布局的，所以当触发回流时，会导致周围的 dom 元素重新排列，它的影响范围有两种：</span></p><ul><li><span>全局范围：从根节点开始，对整个渲染树进行重新布局</span></li><li><span>局部范围：对渲染树的某部分或者一个渲染对象进行重新布局</span></li></ul><h3 id=\"aWn8k\"><span>重绘</span></h3><p data-lake-id=\"uf04b3fb9\"><span>当页面中某些元素的样式发生改变，但是不会影响其在文档流中的位置时，浏览器就会对元素进行重新绘制，这个过程就是</span><strong><span>重绘</span></strong><span>。</span></p><p data-lake-id=\"u53f4c651\"><strong><span>导致重新绘的操作</span></strong></p><ul><li><span>color、background 相关属性：background-color、background-image 等</span></li><li><span>outline 相关属性：outline-color、outline-width、text-decoration</span></li><li><span>border-radius、visibility、box-shadow</span></li></ul><blockquote class=\"lake-alert lake-alert-warning\"><p data-lake-id=\"u0f9752f8\"><span>注意：</span></p><p data-lake-id=\"ufffd89fe\"><span>触发回流时，一定会触发重绘，但是重绘不一定会触发回流</span></p></blockquote><h2 id=\"Qolwn\"><span>避免回流与重绘的方式</span></h2><ul><li><span>操作 dom 时，尽量在低层级的 dom 节点进行操作</span></li><li><span>不要使用 table 布局，一个小的改动可能会使整个 table 重新布局</span></li><li><span>使用 css 的表达式</span></li><li><span>不要频繁操作元素的样式，对于静态页面，可以修改类名，而不是样式。(即样式几种改变、使用添加新样式类名)</span></li><li><span>使用 absolute 或者 fixed，使元素脱离文档流，这样他们发生变化就不会影响其他元素</span></li><li><span>避免频繁操作 dom，可以创建一个文档片段 documentFragment，在它上面应用所有 dom 操作，最后再把它添加到文档中</span></li><li><span>开启 GPU 加速，利用 css 属性 transform、will-change 等</span></li><li><span>将元素先设置 </span><code><span>display: none</span></code><span>，操作结束后再把它显示出来。因为在 display 属性为 none 的元素上进行的 dom 操作不会引发回流和重绘</span></li><li><span>将 dom 的多个读操作(或者写操作)放在一起，而不是读写操作穿插着写。这得益于</span><strong><span>浏览器渲染队列机制</span></strong></li></ul><p data-lake-id=\"ud7f7c1f4\"><strong><span>​</span></strong><br /></p><p data-lake-id=\"u5664070c\" style=\"text-indent: 2em;\"><span>浏览器会将所有的回流、重绘操作放在一个队列中，当队列中的操作到了一定的数量或者到了一定的时间间隔，浏览器就会对队列进行批处理。这样就会让多次的回流、重绘变成一次回流重绘</span></p>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"zMvgK\" id=\"zMvgK\"><span data-lake-id=\"u3d2d1d8c\" id=\"u3d2d1d8c\">概念</span></h2><h3 data-lake-id=\"pA18D\" id=\"pA18D\"><span data-lake-id=\"ud906b782\" id=\"ud906b782\">重排(回流)</span></h3><p data-lake-id=\"u9410ebcb\" id=\"u9410ebcb\"><span data-lake-id=\"uef6cb4fb\" id=\"uef6cb4fb\">当渲染树中部分或者全部元素的尺寸、结构或者属性发生变化时，浏览器会重新渲染部分或者全部文档的过程就称为</span><strong><span data-lake-id=\"u537c95e2\" id=\"u537c95e2\">回流</span></strong><span data-lake-id=\"u4fbfacdc\" id=\"u4fbfacdc\">。</span></p><p data-lake-id=\"u671d632f\" id=\"u671d632f\"><span data-lake-id=\"u11d3d622\" id=\"u11d3d622\">​</span><br></p><p data-lake-id=\"u84d988b9\" id=\"u84d988b9\"><strong><span data-lake-id=\"u9862fe55\" id=\"u9862fe55\">导致重排(回流)的操作</span></strong></p><ul list=\"ud633c34e\"><li fid=\"ubfa58543\" data-lake-id=\"ufd69a8f0\" id=\"ufd69a8f0\"><span data-lake-id=\"u307fed93\" id=\"u307fed93\">页面的首次渲染</span></li><li fid=\"ubfa58543\" data-lake-id=\"u4589f035\" id=\"u4589f035\"><span data-lake-id=\"uaa5a08ec\" id=\"uaa5a08ec\">浏览器的窗口发生变化</span></li><li fid=\"ubfa58543\" data-lake-id=\"u916e963a\" id=\"u916e963a\"><span data-lake-id=\"u7a3a2200\" id=\"u7a3a2200\">元素的内容发生变化</span></li><li fid=\"ubfa58543\" data-lake-id=\"u86a53861\" id=\"u86a53861\"><span data-lake-id=\"u6a0ed56b\" id=\"u6a0ed56b\">元素的尺寸或者位置发生变化</span></li><li fid=\"ubfa58543\" data-lake-id=\"u6e765ac7\" id=\"u6e765ac7\"><span data-lake-id=\"u259ae728\" id=\"u259ae728\">元素的字体大小发生变化</span></li><li fid=\"ubfa58543\" data-lake-id=\"uaf8c8844\" id=\"uaf8c8844\"><span data-lake-id=\"u2072fa47\" id=\"u2072fa47\">激活 css 伪类</span></li><li fid=\"ubfa58543\" data-lake-id=\"u0534ab97\" id=\"u0534ab97\"><span data-lake-id=\"u513a253c\" id=\"u513a253c\">查询某些属性或者调用某些方法</span></li><li fid=\"ubfa58543\" data-lake-id=\"u258ea8e0\" id=\"u258ea8e0\"><span data-lake-id=\"ufc3a6dde\" id=\"ufc3a6dde\">添加或删除可见的 dom 元素</span></li></ul><p data-lake-id=\"u43368496\" id=\"u43368496\"><span data-lake-id=\"u989d6511\" id=\"u989d6511\">​</span><br></p><p data-lake-id=\"ub77521de\" id=\"ub77521de\"><span data-lake-id=\"u0ac1edbd\" id=\"u0ac1edbd\">在触发重排(回流)的时候，由于浏览器渲染页面是基于流式布局的，所以当触发回流时，会导致周围的 dom 元素重新排列，它的影响范围有两种：</span></p><ul list=\"uf973312e\"><li fid=\"u2eae17e7\" data-lake-id=\"u77f6b3fb\" id=\"u77f6b3fb\"><span data-lake-id=\"u7bb0903d\" id=\"u7bb0903d\">全局范围：从根节点开始，对整个渲染树进行重新布局</span></li><li fid=\"u2eae17e7\" data-lake-id=\"u2376b6fa\" id=\"u2376b6fa\"><span data-lake-id=\"u84c372e5\" id=\"u84c372e5\">局部范围：对渲染树的某部分或者一个渲染对象进行重新布局</span></li></ul><h3 data-lake-id=\"aWn8k\" id=\"aWn8k\"><span data-lake-id=\"u79ef8858\" id=\"u79ef8858\">重绘</span></h3><p data-lake-id=\"uf04b3fb9\" id=\"uf04b3fb9\"><span data-lake-id=\"u751505f7\" id=\"u751505f7\">当页面中某些元素的样式发生改变，但是不会影响其在文档流中的位置时，浏览器就会对元素进行重新绘制，这个过程就是</span><strong><span data-lake-id=\"ue46e0998\" id=\"ue46e0998\">重绘</span></strong><span data-lake-id=\"u2986d2e7\" id=\"u2986d2e7\">。</span></p><p data-lake-id=\"u53f4c651\" id=\"u53f4c651\"><strong><span data-lake-id=\"ue3c0c7f6\" id=\"ue3c0c7f6\">导致重新绘的操作</span></strong></p><ul list=\"uae765044\"><li fid=\"ue3e0270c\" data-lake-id=\"uabfd77ca\" id=\"uabfd77ca\"><span data-lake-id=\"u9a0501b1\" id=\"u9a0501b1\">color、background 相关属性：background-color、background-image 等</span></li><li fid=\"ue3e0270c\" data-lake-id=\"udc2e1ba0\" id=\"udc2e1ba0\"><span data-lake-id=\"u813e31eb\" id=\"u813e31eb\">outline 相关属性：outline-color、outline-width、text-decoration</span></li><li fid=\"ue3e0270c\" data-lake-id=\"u546355f0\" id=\"u546355f0\"><span data-lake-id=\"u391181e7\" id=\"u391181e7\">border-radius、visibility、box-shadow</span></li></ul><blockquote data-lake-id=\"ua80f5c57\" id=\"ua80f5c57\" class=\"lake-alert lake-alert-warning\"><p data-lake-id=\"u0f9752f8\" id=\"u0f9752f8\"><span data-lake-id=\"u9f136652\" id=\"u9f136652\">注意：</span></p><p data-lake-id=\"ufffd89fe\" id=\"ufffd89fe\"><span data-lake-id=\"ucaee7650\" id=\"ucaee7650\">触发回流时，一定会触发重绘，但是重绘不一定会触发回流</span></p></blockquote><h2 data-lake-id=\"Qolwn\" id=\"Qolwn\"><span data-lake-id=\"ue1b86b03\" id=\"ue1b86b03\">避免回流与重绘的方式</span></h2><ul list=\"u5271027c\"><li fid=\"u7cd06e05\" data-lake-id=\"uff76fb00\" id=\"uff76fb00\"><span data-lake-id=\"ufd4eb1d4\" id=\"ufd4eb1d4\">操作 dom 时，尽量在低层级的 dom 节点进行操作</span></li><li fid=\"u7cd06e05\" data-lake-id=\"ua4e428b7\" id=\"ua4e428b7\"><span data-lake-id=\"u4a05019f\" id=\"u4a05019f\">不要使用 table 布局，一个小的改动可能会使整个 table 重新布局</span></li><li fid=\"u7cd06e05\" data-lake-id=\"ufe6129de\" id=\"ufe6129de\"><span data-lake-id=\"u0462c6e0\" id=\"u0462c6e0\">使用 css 的表达式</span></li><li fid=\"u7cd06e05\" data-lake-id=\"u13a84572\" id=\"u13a84572\"><span data-lake-id=\"u0fc6c654\" id=\"u0fc6c654\">不要频繁操作元素的样式，对于静态页面，可以修改类名，而不是样式。(即样式几种改变、使用添加新样式类名)</span></li><li fid=\"u7cd06e05\" data-lake-id=\"ubbf0361e\" id=\"ubbf0361e\"><span data-lake-id=\"ud15282f4\" id=\"ud15282f4\">使用 absolute 或者 fixed，使元素脱离文档流，这样他们发生变化就不会影响其他元素</span></li><li fid=\"u7cd06e05\" data-lake-id=\"u48ee4e39\" id=\"u48ee4e39\"><span data-lake-id=\"u1e969a2d\" id=\"u1e969a2d\">避免频繁操作 dom，可以创建一个文档片段 documentFragment，在它上面应用所有 dom 操作，最后再把它添加到文档中</span></li><li fid=\"u7cd06e05\" data-lake-id=\"u627951ab\" id=\"u627951ab\"><span data-lake-id=\"u7b76fff0\" id=\"u7b76fff0\">开启 GPU 加速，利用 css 属性 transform、will-change 等</span></li><li fid=\"u7cd06e05\" data-lake-id=\"u7908e830\" id=\"u7908e830\"><span data-lake-id=\"u4ac4fc0e\" id=\"u4ac4fc0e\">将元素先设置 </span><code data-lake-id=\"u2fa74230\" id=\"u2fa74230\"><span data-lake-id=\"ua8a93337\" id=\"ua8a93337\">display: none</span></code><span data-lake-id=\"u94029655\" id=\"u94029655\">，操作结束后再把它显示出来。因为在 display 属性为 none 的元素上进行的 dom 操作不会引发回流和重绘</span></li><li fid=\"u7cd06e05\" data-lake-id=\"u428ce9f7\" id=\"u428ce9f7\"><span data-lake-id=\"uce647961\" id=\"uce647961\">将 dom 的多个读操作(或者写操作)放在一起，而不是读写操作穿插着写。这得益于</span><strong><span data-lake-id=\"u46ceaf7b\" id=\"u46ceaf7b\">浏览器渲染队列机制</span></strong></li></ul><p data-lake-id=\"ud7f7c1f4\" id=\"ud7f7c1f4\"><strong><span data-lake-id=\"u25b52ce5\" id=\"u25b52ce5\">​</span></strong><br></p><p data-lake-id=\"u5664070c\" id=\"u5664070c\" style=\"text-indent: 2em\"><span data-lake-id=\"ufb4d9b20\" id=\"ufb4d9b20\">浏览器会将所有的回流、重绘操作放在一个队列中，当队列中的操作到了一定的数量或者到了一定的时间间隔，浏览器就会对队列进行批处理。这样就会让多次的回流、重绘变成一次回流重绘</span></p>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:33:31.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:33:31.000Z",
  "updated_at": "2022-05-10T15:12:36.000Z",
  "published_at": "2022-04-04T11:33:31.000Z",
  "first_published_at": "2022-04-04T11:33:31.399Z",
  "word_count": 773,
  "cover": null,
  "description": "概念重排(回流)当渲染树中部分或者全部元素的尺寸、结构或者属性发生变化时，浏览器会重新渲染部分或者全部文档的过程就称为回流。导致重排(回流)的操作页面的首次渲染浏览器的窗口发生变化元素的内容发生变化元素的尺寸或者位置发生变化元素的字体大小发生变化激活 css 伪类查询某些属性或者调用某些方法添...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}