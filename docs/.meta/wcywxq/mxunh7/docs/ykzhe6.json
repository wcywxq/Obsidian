{
  "id": 77461717,
  "slug": "ykzhe6",
  "title": "小程序登陆",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"afO2P\"></a>\n## 登陆流程\n登录流程是调 `wx.login` 获取 `code` 传给后台服务器获取微信用户唯一标识 `openid` 及本次登录的会话密钥（`session_key`）等）。拿到开发者服务器传回来的会话密钥（`session_key`）之后，前端要保存 `wx.setStorageSync('sessionKey', 'value')`<br />持久登录状态：`session` 信息存放在 `cookie` 中以请求头的方式带回给服务端，放到 `request.js` 里的 `wx.request` 的 `header` 里\n<a name=\"EWqSt\"></a>\n## UnionId 和 openId\n\n- UnionId：是一个用户对于同主体微信小程序 、公众号、APP 的标识，开发者需要在微信开放平台下绑定相同账号的主体，开发者可通过 UnionId，实现多个小程序、公众号、甚至 APP 之间的数据互通\n- openId：是一个用户对于一个小程序、公众号的标识，开发者可以通过这个标识识别出用户\n<a name=\"NaQBj\"></a>\n## 关键 api\n\n- wx.login：官方提供的登陆能力\n- wx.checkSession：校验用户当前的 session_key 是否有效\n- wx.authorize：提前向用户发起授权请求\n- wx.getUserInfo：获取用户基本信息\n<a name=\"BmESV\"></a>\n## 登陆流程设计\n<a name=\"AF1Zw\"></a>\n### 利用现有的登陆体系\n直接复用现有系统的登陆体系，只需要在小程序端设计用户名，密码/验证码页面，便可以简便的实现登陆，只需要保持良好的用户体验即可\n<a name=\"MHTIF\"></a>\n### 利用 OpenId 创建用户体系\nOpenId 是一个小程序对于一个用户的标识，利用这一点我们可以轻松的实现一套基于小程序的用户体系，值得一题的是这种用户体系对用户的打扰最低，可以实现**静默登陆**，具体步骤如下：\n\n- 小程序客户端通过 wx.login 获取 code\n- 传递 code 向服务端，服务端拿到 code 调用微信登陆凭证校验接口，微信服务器返回 openId 和会话密钥 session_key，此时开发者服务端便可以利用 openId 生成用户入库，再向小程序客户端返回自定义登陆态\n- 小程序客户端缓存(通过 storage) 自定义登陆态(token)，后续调用接口时携带该登陆态作为用户身份标识即可\n<a name=\"Kyq5g\"></a>\n### 利用 UnionId 创建用户体系\n如果想实现多个小程序、公众号，已有登陆的数据互通，可以通过获取到用户 `unionId` 的方式建立用户体系。因为 `unionId` 在同一开放平台下的所有应用都是相同的，通过 `unionId` 简历的用户体系即可实现全平台数据的互通，更方便的接入原有的功能，使用 `unionId` 的获取有以下两种方式：\n\n- 如果用户关注了某个相同主体公众号，或曾经在某个相同主题 App、公众号上进行过微信登陆授权，通过 wx.login 可以直接获取到 `unionId`\n- 结合 `wx.getUserInfo` 和 `<button open-type=\"getUserInfo\"></button>` 这两种方式引导用户主动授权，主动授权后通过返回的信息和服务端交互(这里有一步需要服务端解密数据的过程，很简单，微信提供了示例代码)即可拿到 `unionId` 建立用户体系，然后由服务端返回登陆态，本地记录即可实现登陆\n<a name=\"ONzeU\"></a>\n#### 微信提供的最佳实践\n\n- 调用 wx.login 获取 code，然后从微信后端换取到 session_key，用于解密 getUserInfo 返回的敏感数据\n- 使用 wx.getSetting 获取用户的授权情况\n   - 如果用户已经授权，直接调用 API wx.getUserInfo 获取用户最新的信息\n   - 用户未授权，在界面中显示一个按钮提示用户登入，当用户点击并授权后就获取到用户的最新信息\n- 获取到用户数据后可以进行展示或者发送给自己的后端\n:::warning\n\n- 需要获取 unionid 形式的登录体系，在以前（18年4月之前）是通过以下这种方式来实现，但后续微信做了调整（因为一进入小程序，主动弹起各种授权弹窗的这种形式，比较容易导致用户流失），调整为必须使用按钮引导用户主动授权的方式，这次调整对开发者影响较大，开发者需要注意遵守微信的规则，并及时和业务方沟通业务形式，不要存在侥幸心理，以防造成小程序不过审等情况\n\n`wx.login(获取code) ===> wx.getUserInfo(用户授权) ===> 获取 unionid`\n\n- 因为小程序不存在 `cookie` 的概念， 登录态必须缓存在本地，因此强烈建议为登录态设置过期时间\n- 值得一提的是如果需要支持风控安全校验，多平台登录等功能，可能需要加入一些公共参数，例如 `platform`，`channel`，`deviceParam` 等参数。在和服务端确定方案时，作为前端同学应该及时提出这些合理的建议，设计合理的系统。\n- `openid`, `unionid` 不要在接口中明文传输，这是一种危险的行为，同时也很不专业\n:::\n",
  "body_draft": "",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"afO2P\"><span class=\"ne-text\">登陆流程</span></h2><p id=\"u996249d8\" class=\"ne-p\"><span class=\"ne-text\">登录流程是调 </span><code class=\"ne-code\"><span class=\"ne-text\">wx.login</span></code><span class=\"ne-text\"> 获取 </span><code class=\"ne-code\"><span class=\"ne-text\">code</span></code><span class=\"ne-text\"> 传给后台服务器获取微信用户唯一标识 </span><code class=\"ne-code\"><span class=\"ne-text\">openid</span></code><span class=\"ne-text\"> 及本次登录的会话密钥（</span><code class=\"ne-code\"><span class=\"ne-text\">session_key</span></code><span class=\"ne-text\">）等）。拿到开发者服务器传回来的会话密钥（</span><code class=\"ne-code\"><span class=\"ne-text\">session_key</span></code><span class=\"ne-text\">）之后，前端要保存 </span><code class=\"ne-code\"><span class=\"ne-text\">wx.setStorageSync('sessionKey', 'value')</span></code></p><p id=\"uc5021152\" class=\"ne-p\"><span class=\"ne-text\">持久登录状态：</span><code class=\"ne-code\"><span class=\"ne-text\">session</span></code><span class=\"ne-text\"> 信息存放在 </span><code class=\"ne-code\"><span class=\"ne-text\">cookie</span></code><span class=\"ne-text\"> 中以请求头的方式带回给服务端，放到 </span><code class=\"ne-code\"><span class=\"ne-text\">request.js</span></code><span class=\"ne-text\"> 里的 </span><code class=\"ne-code\"><span class=\"ne-text\">wx.request</span></code><span class=\"ne-text\"> 的 </span><code class=\"ne-code\"><span class=\"ne-text\">header</span></code><span class=\"ne-text\"> 里</span></p><h2 id=\"EWqSt\"><span class=\"ne-text\">UnionId 和 openId</span></h2><ul class=\"ne-ul\"><li id=\"uf2d28730\"><span class=\"ne-text\">UnionId：是一个用户对于同主体微信小程序 、公众号、APP 的标识，开发者需要在微信开放平台下绑定相同账号的主体，开发者可通过 UnionId，实现多个小程序、公众号、甚至 APP 之间的数据互通</span></li><li id=\"ua3d59bf0\"><span class=\"ne-text\">openId：是一个用户对于一个小程序、公众号的标识，开发者可以通过这个标识识别出用户</span></li></ul><h2 id=\"NaQBj\"><span class=\"ne-text\">关键 api</span></h2><ul class=\"ne-ul\"><li id=\"ub2674a14\"><span class=\"ne-text\">wx.login：官方提供的登陆能力</span></li><li id=\"u0717497c\"><span class=\"ne-text\">wx.checkSession：校验用户当前的 session_key 是否有效</span></li><li id=\"ud412c408\"><span class=\"ne-text\">wx.authorize：提前向用户发起授权请求</span></li><li id=\"u9e9025c1\"><span class=\"ne-text\">wx.getUserInfo：获取用户基本信息</span></li></ul><h2 id=\"BmESV\"><span class=\"ne-text\">登陆流程设计</span></h2><h3 id=\"AF1Zw\"><span class=\"ne-text\">利用现有的登陆体系</span></h3><p id=\"ua3cb9308\" class=\"ne-p\"><span class=\"ne-text\">直接复用现有系统的登陆体系，只需要在小程序端设计用户名，密码/验证码页面，便可以简便的实现登陆，只需要保持良好的用户体验即可</span></p><h3 id=\"MHTIF\"><span class=\"ne-text\">利用 OpenId 创建用户体系</span></h3><p id=\"u86faed0c\" class=\"ne-p\"><span class=\"ne-text\">OpenId 是一个小程序对于一个用户的标识，利用这一点我们可以轻松的实现一套基于小程序的用户体系，值得一题的是这种用户体系对用户的打扰最低，可以实现</span><strong><span class=\"ne-text\">静默登陆</span></strong><span class=\"ne-text\">，具体步骤如下：</span></p><ul class=\"ne-ul\"><li id=\"u3f4b6b2b\"><span class=\"ne-text\">小程序客户端通过 wx.login 获取 code</span></li><li id=\"u2691471c\"><span class=\"ne-text\">传递 code 向服务端，服务端拿到 code 调用微信登陆凭证校验接口，微信服务器返回 openId 和会话密钥 session_key，此时开发者服务端便可以利用 openId 生成用户入库，再向小程序客户端返回自定义登陆态</span></li><li id=\"u88f00497\"><span class=\"ne-text\">小程序客户端缓存(通过 storage) 自定义登陆态(token)，后续调用接口时携带该登陆态作为用户身份标识即可</span></li></ul><h3 id=\"Kyq5g\"><span class=\"ne-text\">利用 UnionId 创建用户体系</span></h3><p id=\"u58b3486c\" class=\"ne-p\"><span class=\"ne-text\">如果想实现多个小程序、公众号，已有登陆的数据互通，可以通过获取到用户 </span><code class=\"ne-code\"><span class=\"ne-text\">unionId</span></code><span class=\"ne-text\"> 的方式建立用户体系。因为 </span><code class=\"ne-code\"><span class=\"ne-text\">unionId</span></code><span class=\"ne-text\"> 在同一开放平台下的所有应用都是相同的，通过 </span><code class=\"ne-code\"><span class=\"ne-text\">unionId</span></code><span class=\"ne-text\"> 简历的用户体系即可实现全平台数据的互通，更方便的接入原有的功能，使用 </span><code class=\"ne-code\"><span class=\"ne-text\">unionId</span></code><span class=\"ne-text\"> 的获取有以下两种方式：</span></p><ul class=\"ne-ul\"><li id=\"ud8926aab\"><span class=\"ne-text\">如果用户关注了某个相同主体公众号，或曾经在某个相同主题 App、公众号上进行过微信登陆授权，通过 wx.login 可以直接获取到 </span><code class=\"ne-code\"><span class=\"ne-text\">unionId</span></code></li><li id=\"uc52eee0f\"><span class=\"ne-text\">结合 </span><code class=\"ne-code\"><span class=\"ne-text\">wx.getUserInfo</span></code><span class=\"ne-text\"> 和 </span><code class=\"ne-code\"><span class=\"ne-text\">&lt;button open-type=&quot;getUserInfo&quot;&gt;&lt;/button&gt;</span></code><span class=\"ne-text\"> 这两种方式引导用户主动授权，主动授权后通过返回的信息和服务端交互(这里有一步需要服务端解密数据的过程，很简单，微信提供了示例代码)即可拿到 </span><code class=\"ne-code\"><span class=\"ne-text\">unionId</span></code><span class=\"ne-text\"> 建立用户体系，然后由服务端返回登陆态，本地记录即可实现登陆</span></li></ul><h4 id=\"ONzeU\"><span class=\"ne-text\">微信提供的最佳实践</span></h4><ul class=\"ne-ul\"><li id=\"u4cce8141\"><span class=\"ne-text\">调用 wx.login 获取 code，然后从微信后端换取到 session_key，用于解密 getUserInfo 返回的敏感数据</span></li><li id=\"u8b57243f\"><span class=\"ne-text\">使用 wx.getSetting 获取用户的授权情况</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"u35f8cc35\"><span class=\"ne-text\">如果用户已经授权，直接调用 API wx.getUserInfo 获取用户最新的信息</span></li><li id=\"ue0ea8b5c\"><span class=\"ne-text\">用户未授权，在界面中显示一个按钮提示用户登入，当用户点击并授权后就获取到用户的最新信息</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"ucfc3a3b1\"><span class=\"ne-text\">获取到用户数据后可以进行展示或者发送给自己的后端</span></li></ul><div data-type=\"warning\" class=\"ne-alert\"><ul class=\"ne-ul\"><li id=\"ub9290a4a\"><span class=\"ne-text\">需要获取 unionid 形式的登录体系，在以前（18年4月之前）是通过以下这种方式来实现，但后续微信做了调整（因为一进入小程序，主动弹起各种授权弹窗的这种形式，比较容易导致用户流失），调整为必须使用按钮引导用户主动授权的方式，这次调整对开发者影响较大，开发者需要注意遵守微信的规则，并及时和业务方沟通业务形式，不要存在侥幸心理，以防造成小程序不过审等情况</span></li></ul><p id=\"ueeac0b39\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">wx.login(获取code) ===&gt; wx.getUserInfo(用户授权) ===&gt; 获取 unionid</span></code></p><ul class=\"ne-ul\"><li id=\"u0a1358b9\"><span class=\"ne-text\">因为小程序不存在 </span><code class=\"ne-code\"><span class=\"ne-text\">cookie</span></code><span class=\"ne-text\"> 的概念， 登录态必须缓存在本地，因此强烈建议为登录态设置过期时间</span></li><li id=\"ubc6cc455\"><span class=\"ne-text\">值得一提的是如果需要支持风控安全校验，多平台登录等功能，可能需要加入一些公共参数，例如 </span><code class=\"ne-code\"><span class=\"ne-text\">platform</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">channel</span></code><span class=\"ne-text\">，</span><code class=\"ne-code\"><span class=\"ne-text\">deviceParam</span></code><span class=\"ne-text\"> 等参数。在和服务端确定方案时，作为前端同学应该及时提出这些合理的建议，设计合理的系统。</span></li><li id=\"u3def75ca\"><code class=\"ne-code\"><span class=\"ne-text\">openid</span></code><span class=\"ne-text\">, </span><code class=\"ne-code\"><span class=\"ne-text\">unionid</span></code><span class=\"ne-text\"> 不要在接口中明文传输，这是一种危险的行为，同时也很不专业</span></li></ul></div></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"paragraphSpacing\" content=\"relax\" /><h2 data-lake-id=\"afO2P\" id=\"afO2P\"><span data-lake-id=\"u722c5a7f\" id=\"u722c5a7f\">登陆流程</span></h2><p data-lake-id=\"u996249d8\" id=\"u996249d8\"><span data-lake-id=\"u3684265f\" id=\"u3684265f\">登录流程是调 </span><code data-lake-id=\"uadccae09\" id=\"uadccae09\"><span data-lake-id=\"ub14c219f\" id=\"ub14c219f\">wx.login</span></code><span data-lake-id=\"ub1611ebf\" id=\"ub1611ebf\"> 获取 </span><code data-lake-id=\"u3e7e8112\" id=\"u3e7e8112\"><span data-lake-id=\"u78d8db94\" id=\"u78d8db94\">code</span></code><span data-lake-id=\"u91c07dbc\" id=\"u91c07dbc\"> 传给后台服务器获取微信用户唯一标识 </span><code data-lake-id=\"ufc798a1f\" id=\"ufc798a1f\"><span data-lake-id=\"u697c59e6\" id=\"u697c59e6\">openid</span></code><span data-lake-id=\"u78842811\" id=\"u78842811\"> 及本次登录的会话密钥（</span><code data-lake-id=\"ubbfd90d4\" id=\"ubbfd90d4\"><span data-lake-id=\"ue8b7ce49\" id=\"ue8b7ce49\">session_key</span></code><span data-lake-id=\"ua5794731\" id=\"ua5794731\">）等）。拿到开发者服务器传回来的会话密钥（</span><code data-lake-id=\"u6a460021\" id=\"u6a460021\"><span data-lake-id=\"u85246144\" id=\"u85246144\">session_key</span></code><span data-lake-id=\"ufb14dfd7\" id=\"ufb14dfd7\">）之后，前端要保存 </span><code data-lake-id=\"u1c82984f\" id=\"u1c82984f\"><span data-lake-id=\"u2ecdacab\" id=\"u2ecdacab\">wx.setStorageSync('sessionKey', 'value')</span></code></p><p data-lake-id=\"uc5021152\" id=\"uc5021152\"><span data-lake-id=\"u077d5f49\" id=\"u077d5f49\">持久登录状态：</span><code data-lake-id=\"u0b35df18\" id=\"u0b35df18\"><span data-lake-id=\"uaad5c8bd\" id=\"uaad5c8bd\">session</span></code><span data-lake-id=\"u83537ff7\" id=\"u83537ff7\"> 信息存放在 </span><code data-lake-id=\"ue3cd87ba\" id=\"ue3cd87ba\"><span data-lake-id=\"ub1f4a199\" id=\"ub1f4a199\">cookie</span></code><span data-lake-id=\"u9bf55971\" id=\"u9bf55971\"> 中以请求头的方式带回给服务端，放到 </span><code data-lake-id=\"u2d71060b\" id=\"u2d71060b\"><span data-lake-id=\"u99eb4059\" id=\"u99eb4059\">request.js</span></code><span data-lake-id=\"u79983b8c\" id=\"u79983b8c\"> 里的 </span><code data-lake-id=\"ubbeddf32\" id=\"ubbeddf32\"><span data-lake-id=\"ubde5120a\" id=\"ubde5120a\">wx.request</span></code><span data-lake-id=\"u83e9639a\" id=\"u83e9639a\"> 的 </span><code data-lake-id=\"u981a6743\" id=\"u981a6743\"><span data-lake-id=\"ud8192560\" id=\"ud8192560\">header</span></code><span data-lake-id=\"u8ef2ee2e\" id=\"u8ef2ee2e\"> 里</span></p><h2 data-lake-id=\"EWqSt\" id=\"EWqSt\"><span data-lake-id=\"ua2e7705c\" id=\"ua2e7705c\">UnionId 和 openId</span></h2><ul list=\"u4b3b0682\"><li fid=\"u09246130\" data-lake-id=\"uf2d28730\" id=\"uf2d28730\"><span data-lake-id=\"ue67d47d7\" id=\"ue67d47d7\">UnionId：是一个用户对于同主体微信小程序 、公众号、APP 的标识，开发者需要在微信开放平台下绑定相同账号的主体，开发者可通过 UnionId，实现多个小程序、公众号、甚至 APP 之间的数据互通</span></li><li fid=\"u09246130\" data-lake-id=\"ua3d59bf0\" id=\"ua3d59bf0\"><span data-lake-id=\"u974f991e\" id=\"u974f991e\">openId：是一个用户对于一个小程序、公众号的标识，开发者可以通过这个标识识别出用户</span></li></ul><h2 data-lake-id=\"NaQBj\" id=\"NaQBj\"><span data-lake-id=\"u6fcb7252\" id=\"u6fcb7252\">关键 api</span></h2><ul list=\"u2810e5f4\"><li fid=\"u5ddc5ca8\" data-lake-id=\"ub2674a14\" id=\"ub2674a14\"><span data-lake-id=\"u6dcf774e\" id=\"u6dcf774e\">wx.login：官方提供的登陆能力</span></li><li fid=\"u5ddc5ca8\" data-lake-id=\"u0717497c\" id=\"u0717497c\"><span data-lake-id=\"u00ea40bf\" id=\"u00ea40bf\">wx.checkSession：校验用户当前的 session_key 是否有效</span></li><li fid=\"u5ddc5ca8\" data-lake-id=\"ud412c408\" id=\"ud412c408\"><span data-lake-id=\"ub46b1e49\" id=\"ub46b1e49\">wx.authorize：提前向用户发起授权请求</span></li><li fid=\"u5ddc5ca8\" data-lake-id=\"u9e9025c1\" id=\"u9e9025c1\"><span data-lake-id=\"u19d1347e\" id=\"u19d1347e\">wx.getUserInfo：获取用户基本信息</span></li></ul><h2 data-lake-id=\"BmESV\" id=\"BmESV\"><span data-lake-id=\"uea091c67\" id=\"uea091c67\">登陆流程设计</span></h2><h3 data-lake-id=\"AF1Zw\" id=\"AF1Zw\"><span data-lake-id=\"ubda32400\" id=\"ubda32400\">利用现有的登陆体系</span></h3><p data-lake-id=\"ua3cb9308\" id=\"ua3cb9308\"><span data-lake-id=\"ueeeaacff\" id=\"ueeeaacff\">直接复用现有系统的登陆体系，只需要在小程序端设计用户名，密码/验证码页面，便可以简便的实现登陆，只需要保持良好的用户体验即可</span></p><h3 data-lake-id=\"MHTIF\" id=\"MHTIF\"><span data-lake-id=\"ufb552436\" id=\"ufb552436\">利用 OpenId 创建用户体系</span></h3><p data-lake-id=\"u86faed0c\" id=\"u86faed0c\"><span data-lake-id=\"ue81bebd1\" id=\"ue81bebd1\">OpenId 是一个小程序对于一个用户的标识，利用这一点我们可以轻松的实现一套基于小程序的用户体系，值得一题的是这种用户体系对用户的打扰最低，可以实现</span><strong><span data-lake-id=\"uc5d816f8\" id=\"uc5d816f8\">静默登陆</span></strong><span data-lake-id=\"ua3901244\" id=\"ua3901244\">，具体步骤如下：</span></p><ul list=\"u133c297a\"><li fid=\"u9c7bcd52\" data-lake-id=\"u3f4b6b2b\" id=\"u3f4b6b2b\"><span data-lake-id=\"u21e35246\" id=\"u21e35246\">小程序客户端通过 wx.login 获取 code</span></li><li fid=\"u9c7bcd52\" data-lake-id=\"u2691471c\" id=\"u2691471c\"><span data-lake-id=\"ufaad0377\" id=\"ufaad0377\">传递 code 向服务端，服务端拿到 code 调用微信登陆凭证校验接口，微信服务器返回 openId 和会话密钥 session_key，此时开发者服务端便可以利用 openId 生成用户入库，再向小程序客户端返回自定义登陆态</span></li><li fid=\"u9c7bcd52\" data-lake-id=\"u88f00497\" id=\"u88f00497\"><span data-lake-id=\"u2e0fe313\" id=\"u2e0fe313\">小程序客户端缓存(通过 storage) 自定义登陆态(token)，后续调用接口时携带该登陆态作为用户身份标识即可</span></li></ul><h3 data-lake-id=\"Kyq5g\" id=\"Kyq5g\"><span data-lake-id=\"u742705cf\" id=\"u742705cf\">利用 UnionId 创建用户体系</span></h3><p data-lake-id=\"u58b3486c\" id=\"u58b3486c\"><span data-lake-id=\"u6ef59fae\" id=\"u6ef59fae\">如果想实现多个小程序、公众号，已有登陆的数据互通，可以通过获取到用户 </span><code data-lake-id=\"u6598b33c\" id=\"u6598b33c\"><span data-lake-id=\"u1cb76a8b\" id=\"u1cb76a8b\">unionId</span></code><span data-lake-id=\"ua06cd25a\" id=\"ua06cd25a\"> 的方式建立用户体系。因为 </span><code data-lake-id=\"ue4f5b481\" id=\"ue4f5b481\"><span data-lake-id=\"u088418a2\" id=\"u088418a2\">unionId</span></code><span data-lake-id=\"u6f42fa5a\" id=\"u6f42fa5a\"> 在同一开放平台下的所有应用都是相同的，通过 </span><code data-lake-id=\"u9f23c428\" id=\"u9f23c428\"><span data-lake-id=\"u684c0837\" id=\"u684c0837\">unionId</span></code><span data-lake-id=\"u98024454\" id=\"u98024454\"> 简历的用户体系即可实现全平台数据的互通，更方便的接入原有的功能，使用 </span><code data-lake-id=\"ua6ca3c0c\" id=\"ua6ca3c0c\"><span data-lake-id=\"u3fbe65f1\" id=\"u3fbe65f1\">unionId</span></code><span data-lake-id=\"u3f7cc69a\" id=\"u3f7cc69a\"> 的获取有以下两种方式：</span></p><ul list=\"uc6ec6701\"><li fid=\"u025a20cd\" data-lake-id=\"ud8926aab\" id=\"ud8926aab\"><span data-lake-id=\"ud058ba44\" id=\"ud058ba44\">如果用户关注了某个相同主体公众号，或曾经在某个相同主题 App、公众号上进行过微信登陆授权，通过 wx.login 可以直接获取到 </span><code data-lake-id=\"u1d7e419e\" id=\"u1d7e419e\"><span data-lake-id=\"u9f5251b3\" id=\"u9f5251b3\">unionId</span></code></li><li fid=\"u025a20cd\" data-lake-id=\"uc52eee0f\" id=\"uc52eee0f\"><span data-lake-id=\"u33631cde\" id=\"u33631cde\">结合 </span><code data-lake-id=\"u4d93af60\" id=\"u4d93af60\"><span data-lake-id=\"u57a7078e\" id=\"u57a7078e\">wx.getUserInfo</span></code><span data-lake-id=\"ucbb701f2\" id=\"ucbb701f2\"> 和 </span><code data-lake-id=\"u35340737\" id=\"u35340737\"><span data-lake-id=\"u507a846b\" id=\"u507a846b\">&lt;button open-type=&quot;getUserInfo&quot;&gt;&lt;/button&gt;</span></code><span data-lake-id=\"u6f036881\" id=\"u6f036881\"> 这两种方式引导用户主动授权，主动授权后通过返回的信息和服务端交互(这里有一步需要服务端解密数据的过程，很简单，微信提供了示例代码)即可拿到 </span><code data-lake-id=\"u4578cdea\" id=\"u4578cdea\"><span data-lake-id=\"ub181bb4f\" id=\"ub181bb4f\">unionId</span></code><span data-lake-id=\"u1fb633b9\" id=\"u1fb633b9\"> 建立用户体系，然后由服务端返回登陆态，本地记录即可实现登陆</span></li></ul><h4 data-lake-id=\"ONzeU\" id=\"ONzeU\"><span data-lake-id=\"u2634c8cc\" id=\"u2634c8cc\">微信提供的最佳实践</span></h4><ul list=\"u3e9a1650\"><li fid=\"uba3e98e3\" data-lake-id=\"u4cce8141\" id=\"u4cce8141\"><span data-lake-id=\"u74223083\" id=\"u74223083\">调用 wx.login 获取 code，然后从微信后端换取到 session_key，用于解密 getUserInfo 返回的敏感数据</span></li><li fid=\"uba3e98e3\" data-lake-id=\"u8b57243f\" id=\"u8b57243f\"><span data-lake-id=\"u3328a300\" id=\"u3328a300\">使用 wx.getSetting 获取用户的授权情况</span></li></ul><ul list=\"u3e9a1650\" data-lake-indent=\"1\"><li fid=\"uba3e98e3\" data-lake-id=\"u35f8cc35\" id=\"u35f8cc35\"><span data-lake-id=\"u5014c307\" id=\"u5014c307\">如果用户已经授权，直接调用 API wx.getUserInfo 获取用户最新的信息</span></li><li fid=\"uba3e98e3\" data-lake-id=\"ue0ea8b5c\" id=\"ue0ea8b5c\"><span data-lake-id=\"u498a8143\" id=\"u498a8143\">用户未授权，在界面中显示一个按钮提示用户登入，当用户点击并授权后就获取到用户的最新信息</span></li></ul><ul list=\"u3e9a1650\" start=\"3\"><li fid=\"uba3e98e3\" data-lake-id=\"ucfc3a3b1\" id=\"ucfc3a3b1\"><span data-lake-id=\"u96122b79\" id=\"u96122b79\">获取到用户数据后可以进行展示或者发送给自己的后端</span></li></ul><blockquote data-lake-id=\"uf9f5fbb1\" id=\"uf9f5fbb1\" class=\"lake-alert lake-alert-warning\"><ul list=\"uf1755d64\"><li fid=\"ue9575135\" data-lake-id=\"ub9290a4a\" id=\"ub9290a4a\"><span data-lake-id=\"uf8477d38\" id=\"uf8477d38\">需要获取 unionid 形式的登录体系，在以前（18年4月之前）是通过以下这种方式来实现，但后续微信做了调整（因为一进入小程序，主动弹起各种授权弹窗的这种形式，比较容易导致用户流失），调整为必须使用按钮引导用户主动授权的方式，这次调整对开发者影响较大，开发者需要注意遵守微信的规则，并及时和业务方沟通业务形式，不要存在侥幸心理，以防造成小程序不过审等情况</span></li></ul><p data-lake-id=\"ueeac0b39\" id=\"ueeac0b39\"><code data-lake-id=\"u13f92e02\" id=\"u13f92e02\"><span data-lake-id=\"u36a8fab3\" id=\"u36a8fab3\">wx.login(获取code) ===&gt; wx.getUserInfo(用户授权) ===&gt; 获取 unionid</span></code></p><ul list=\"uacaa868d\"><li fid=\"ub183a8c7\" data-lake-id=\"u0a1358b9\" id=\"u0a1358b9\"><span data-lake-id=\"u0702d2ee\" id=\"u0702d2ee\">因为小程序不存在 </span><code data-lake-id=\"u29d87b06\" id=\"u29d87b06\"><span data-lake-id=\"u28f59869\" id=\"u28f59869\">cookie</span></code><span data-lake-id=\"ub613b8e6\" id=\"ub613b8e6\"> 的概念， 登录态必须缓存在本地，因此强烈建议为登录态设置过期时间</span></li><li fid=\"ub183a8c7\" data-lake-id=\"ubc6cc455\" id=\"ubc6cc455\"><span data-lake-id=\"ud692f018\" id=\"ud692f018\">值得一提的是如果需要支持风控安全校验，多平台登录等功能，可能需要加入一些公共参数，例如 </span><code data-lake-id=\"ubbc686ad\" id=\"ubbc686ad\"><span data-lake-id=\"u87f46848\" id=\"u87f46848\">platform</span></code><span data-lake-id=\"u3ad58e1d\" id=\"u3ad58e1d\">，</span><code data-lake-id=\"u502d113c\" id=\"u502d113c\"><span data-lake-id=\"ua6fbc054\" id=\"ua6fbc054\">channel</span></code><span data-lake-id=\"u358cd2b1\" id=\"u358cd2b1\">，</span><code data-lake-id=\"u95e110f5\" id=\"u95e110f5\"><span data-lake-id=\"u70efedf4\" id=\"u70efedf4\">deviceParam</span></code><span data-lake-id=\"uef6d35c3\" id=\"uef6d35c3\"> 等参数。在和服务端确定方案时，作为前端同学应该及时提出这些合理的建议，设计合理的系统。</span></li><li fid=\"ub183a8c7\" data-lake-id=\"u3def75ca\" id=\"u3def75ca\"><code data-lake-id=\"uad6d4994\" id=\"uad6d4994\"><span data-lake-id=\"uf6ba4b35\" id=\"uf6ba4b35\">openid</span></code><span data-lake-id=\"ud2cd9bdc\" id=\"ud2cd9bdc\">, </span><code data-lake-id=\"u98021b8e\" id=\"u98021b8e\"><span data-lake-id=\"u11faed80\" id=\"u11faed80\">unionid</span></code><span data-lake-id=\"u1091a2b3\" id=\"u1091a2b3\"> 不要在接口中明文传输，这是一种危险的行为，同时也很不专业</span></li></ul></blockquote>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-05-15T17:27:56.000Z",
  "deleted_at": null,
  "created_at": "2022-05-15T16:20:00.000Z",
  "updated_at": "2022-05-15T17:27:56.000Z",
  "published_at": "2022-05-15T17:27:56.000Z",
  "first_published_at": "2022-05-15T16:22:22.262Z",
  "word_count": 1361,
  "cover": null,
  "description": "登陆流程登录流程是调 wx.login 获取 code 传给后台服务器获取微信用户唯一标识 openid 及本次登录的会话密钥（session_key）等）。拿到开发者服务器传回来的会话密钥（session_key）之后，前端要保存 wx.setStorageSync('sessionKey'...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}