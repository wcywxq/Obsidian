{
  "id": 72212229,
  "slug": "wzg6fe",
  "title": "什么是 JavaScript 中的包装类型？",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "在 JavaScript 中，基本类型是没有属性和方法的，但是为了便于操作基本类型的值，在调用基本类型的属性或方法时 JavaScript 会在后台隐式地将基本类型的值转换为对象，如：\n```javascript\nconst a = \"abc\";\na.length; // 3\na.toUpperCase(); // \"ABC\"\n```\n在访问 'abc'.length 时，JavaScript 将 'abc' 在后台转换成 String('abc')，然后再访问其 length 属性。<br />JavaScript 也可以使用 Object 函数显式地将基本类型转换为包装类型：\n```javascript\nvar a = 'abc'\nObject(a) // String {\"abc\"}\n```\n也可以使用 valueOf 方法将包装类型倒转成基本类型：\n```javascript\nvar a = 'abc'\nvar b = Object(a)\nvar c = b.valueOf() // 'abc'\n```\n看看如下代码会打印出什么：\n```javascript\nvar a = new Boolean( false );\nif (!a) {\n\tconsole.log( \"Oops\" ); // never runs\n}\n```\n答案是什么都不会打印，因为虽然包裹的基本类型是 false，但是 false 被包裹成包装类型后就成了对象，所以其非值为 false，所以循环体中的内容不会运行。\n",
  "body_draft": "",
  "body_html": "<!doctype html><p data-lake-id=\"u679f534b\"><span>在 JavaScript 中，基本类型是没有属性和方法的，但是为了便于操作基本类型的值，在调用基本类型的属性或方法时 JavaScript 会在后台隐式地将基本类型的值转换为对象，如：</span></p><pre data-lang=\"javascript\"><code>const a = &quot;abc&quot;;\na.length; // 3\na.toUpperCase(); // &quot;ABC&quot;</code></pre><p data-lake-id=\"uebccd35e\"><span>在访问 'abc'.length 时，JavaScript 将 'abc' 在后台转换成 String('abc')，然后再访问其 length 属性。</span></p><p data-lake-id=\"u4a33f323\"><span>JavaScript 也可以使用 Object 函数显式地将基本类型转换为包装类型：</span></p><pre data-lang=\"javascript\"><code>var a = 'abc'\nObject(a) // String {&quot;abc&quot;}</code></pre><p data-lake-id=\"u87719d37\"><span>也可以使用 valueOf 方法将包装类型倒转成基本类型：</span></p><pre data-lang=\"javascript\"><code>var a = 'abc'\nvar b = Object(a)\nvar c = b.valueOf() // 'abc'</code></pre><p data-lake-id=\"u10b744fa\"><span>看看如下代码会打印出什么：</span></p><pre data-lang=\"javascript\"><code>var a = new Boolean( false );\nif (!a) {\n\tconsole.log( &quot;Oops&quot; ); // never runs\n}</code></pre><p data-lake-id=\"u5dd7b421\"><span>答案是什么都不会打印，因为虽然包裹的基本类型是 false，但是 false 被包裹成包装类型后就成了对象，所以其非值为 false，所以循环体中的内容不会运行。</span></p>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><p data-lake-id=\"u679f534b\" id=\"u679f534b\"><span data-lake-id=\"u64d493f1\" id=\"u64d493f1\">在 JavaScript 中，基本类型是没有属性和方法的，但是为了便于操作基本类型的值，在调用基本类型的属性或方法时 JavaScript 会在后台隐式地将基本类型的值转换为对象，如：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20a%20%3D%20%5C%22abc%5C%22%3B%5Cna.length%3B%20%2F%2F%203%5Cna.toUpperCase()%3B%20%2F%2F%20%5C%22ABC%5C%22%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22syFQL%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"uebccd35e\" id=\"uebccd35e\"><span data-lake-id=\"u1e6c09b9\" id=\"u1e6c09b9\">在访问 'abc'.length 时，JavaScript 将 'abc' 在后台转换成 String('abc')，然后再访问其 length 属性。</span></p><p data-lake-id=\"u4a33f323\" id=\"u4a33f323\"><span data-lake-id=\"u4ae52b7c\" id=\"u4ae52b7c\">JavaScript 也可以使用 Object 函数显式地将基本类型转换为包装类型：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20a%20%3D%20'abc'%5CnObject(a)%20%2F%2F%20String%20%7B%5C%22abc%5C%22%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22rsIeC%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u87719d37\" id=\"u87719d37\"><span data-lake-id=\"u42c24e21\" id=\"u42c24e21\">也可以使用 valueOf 方法将包装类型倒转成基本类型：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20a%20%3D%20'abc'%5Cnvar%20b%20%3D%20Object(a)%5Cnvar%20c%20%3D%20b.valueOf()%20%2F%2F%20'abc'%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22yRTEY%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u10b744fa\" id=\"u10b744fa\"><span data-lake-id=\"uf4c3a537\" id=\"uf4c3a537\">看看如下代码会打印出什么：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22var%20a%20%3D%20new%20Boolean(%20false%20)%3B%5Cnif%20(!a)%20%7B%5Cn%5Ctconsole.log(%20%5C%22Oops%5C%22%20)%3B%20%2F%2F%20never%20runs%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22tt9MX%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u5dd7b421\" id=\"u5dd7b421\"><span data-lake-id=\"u92084174\" id=\"u92084174\">答案是什么都不会打印，因为虽然包裹的基本类型是 false，但是 false 被包裹成包装类型后就成了对象，所以其非值为 false，所以循环体中的内容不会运行。</span></p>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:33:45.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:33:45.000Z",
  "updated_at": "2022-05-10T15:12:34.000Z",
  "published_at": "2022-04-04T11:33:45.000Z",
  "first_published_at": "2022-04-04T11:33:45.231Z",
  "word_count": 270,
  "cover": null,
  "description": "在 JavaScript 中，基本类型是没有属性和方法的，但是为了便于操作基本类型的值，在调用基本类型的属性或方法时 JavaScript 会在后台隐式地将基本类型的值转换为对象，如：const a = \"abc\"; a.length; // 3 a.toUpperCase(); // \"AB...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}