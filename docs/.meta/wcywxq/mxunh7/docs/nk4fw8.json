{
  "id": 72212130,
  "slug": "nk4fw8",
  "title": "get 和 post 的区别",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "get 和 post 是 http 请求的两种方法\n\n1. 从应用场景上来说，get 请求是一个幂等的请求，一般 get 请求用于对服务器资源不会产生影响的场景，比如说请求一个网页。而 post 不是一个幂等的请求，一般用于对服务器资源产生影响的情景。比如注册用户这一类的操作。\n2. 因为不同的应用场景，所以浏览器一般会对 Get 请求缓存，但很少对 Post 请求缓存\n3. 从发送的报文格式来说，get 请求的报文中实体部分为空，post 请求的报文中实体部分一般为向服务器发送的数据\n4. 但是 get 请求也可以将请求的参数放入 url 中向服务器发送，这样的做法相对于 post 请求来说，一个方面是不太安全，因为请求的 url 会被保留在历史记录中。并且浏览器由于对 url 上有一个长度上的限制，所以会影响 get 请求发送数据时的长度。这个限制是浏览器规定的，并不是 RFC 规定的。还有就是 post 的参数传递支持更多的数据类型。\n\nget\n\n- GET 请求可以被缓存\n- GET 请求保留在浏览器历史记录中\n- GET 请求可以添加书签\n- 处理敏感数据时绝不应使用 GET 请求\n- GET 请求有长度限制\n- GET 请求仅用于请求数据（不修改）\n\npost\n\n- POST 请求永远不会被缓存\n- POST 请求不会保留在浏览器历史记录中\n- 不能为 POST 请求添加书签\n- POST 请求对数据长度没有限制\n\n| GET | POST |  |\n| --- | --- | --- |\n| BACK button/Reload | Harmless | Data will be re-submitted (the browser should alert the user that the data are about to be re-submitted) |\n| Bookmarked | Can be bookmarked | Cannot be bookmarked |\n| Cached | Can be cached | Not cached |\n| Encoding type | application/x-www-form-urlencoded | application/x-www-form-urlencoded or multipart/form-data. Use multipart encoding for binary data |\n| History | Parameters remain in browser history | Parameters are not saved in browser history |\n| Restrictions on data length | Yes, when sending data, the GET method adds the data to the URL; and the length of a URL is limited (maximum URL length is 2048 characters) | No restrictions |\n| Restrictions on data type | Only ASCII characters allowed | No restrictions. Binary data is also allowed |\n| Security | GET is less secure compared to POST because data sent is part of the URL\n\nNever use GET when sending passwords or other sensitive information! | POST is a little safer than GET because the parameters are not stored in browser history or in web server logs |\n| Visibility | Data is visible to everyone in the URL | Data is not displayed in the URL |\n\n",
  "body_draft": "",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><p id=\"u6c0e37cc\" class=\"ne-p\"><span class=\"ne-text\">get 和 post 是 http 请求的两种方法</span></p><ol class=\"ne-ol\"><li id=\"u3892c8b2\"><span class=\"ne-text\">从应用场景上来说，get 请求是一个幂等的请求，一般 get 请求用于对服务器资源不会产生影响的场景，比如说请求一个网页。而 post 不是一个幂等的请求，一般用于对服务器资源产生影响的情景。比如注册用户这一类的操作。</span></li><li id=\"u92f59a2b\"><span class=\"ne-text\">因为不同的应用场景，所以浏览器一般会对 Get 请求缓存，但很少对 Post 请求缓存</span></li><li id=\"ue976adaf\"><span class=\"ne-text\">从发送的报文格式来说，get 请求的报文中实体部分为空，post 请求的报文中实体部分一般为向服务器发送的数据</span></li><li id=\"u3700295d\"><span class=\"ne-text\">但是 get 请求也可以将请求的参数放入 url 中向服务器发送，这样的做法相对于 post 请求来说，一个方面是不太安全，因为请求的 url 会被保留在历史记录中。并且浏览器由于对 url 上有一个长度上的限制，所以会影响 get 请求发送数据时的长度。这个限制是浏览器规定的，并不是 RFC 规定的。还有就是 post 的参数传递支持更多的数据类型。</span></li></ol><p id=\"u7c5fe742\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"uf5102809\" class=\"ne-p\"><span class=\"ne-text\">get</span></p><ul class=\"ne-ul\"><li id=\"u8f807795\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">GET 请求可以被缓存</span></li><li id=\"u641012e1\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">GET 请求保留在浏览器历史记录中</span></li><li id=\"u999225d8\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">GET 请求可以添加书签</span></li><li id=\"u5d9746c6\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">处理敏感数据时绝不应使用 GET 请求</span></li><li id=\"u010574f1\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">GET 请求有长度限制</span></li><li id=\"u5c90454a\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">GET 请求仅用于请求数据（不修改）</span></li></ul><p id=\"u8fab5713\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\"></span></p><p id=\"ud2b946a3\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">post</span></p><ul class=\"ne-ul\"><li id=\"ue3d945df\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">POST 请求永远不会被缓存</span></li><li id=\"u074ef953\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">POST 请求不会保留在浏览器历史记录中</span></li><li id=\"u797dc23c\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">不能为 POST 请求添加书签</span></li><li id=\"uf8c18a0c\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">POST 请求对数据长度没有限制</span></li></ul><p id=\"u42934301\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\"></span></p><table id=\"gw339\" class=\"ne-table\" style=\"width: 750px\"><tbody><tr style=\"height: 33px\"><td width=\"250\"><p id=\"u4286e1a2\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">GET</span></p></td><td width=\"250\"><p id=\"u1207bc6c\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">POST</span></p></td><td width=\"250\"></td></tr><tr style=\"height: 33px\"><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u0be2c638\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">BACK button/Reload</span></p></td><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u3ff077b0\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Harmless</span></p></td><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u2beab8bd\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Data will be re-submitted (the browser should alert the user that the data are about to be re-submitted)</span></p></td></tr><tr style=\"height: 33px\"><td width=\"250\"><p id=\"u79a30c98\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Bookmarked</span></p></td><td width=\"250\"><p id=\"u85082438\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Can be bookmarked</span></p></td><td width=\"250\"><p id=\"uce4cc330\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Cannot be bookmarked</span></p></td></tr><tr style=\"height: 33px\"><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u077ba89f\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Cached</span></p></td><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"ub9484b41\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Can be cached</span></p></td><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"uac64e806\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Not cached</span></p></td></tr><tr style=\"height: 33px\"><td width=\"250\"><p id=\"ue36fa1be\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Encoding type</span></p></td><td width=\"250\"><p id=\"ua7599979\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">application/x-www-form-urlencoded</span></p></td><td width=\"250\"><p id=\"u014f52ee\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">application/x-www-form-urlencoded or multipart/form-data. Use multipart encoding for binary data</span></p></td></tr><tr style=\"height: 33px\"><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u64436bab\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">History</span></p></td><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u12ded35d\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Parameters remain in browser history</span></p></td><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u8f01ede1\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Parameters are not saved in browser history</span></p></td></tr><tr style=\"height: 33px\"><td width=\"250\"><p id=\"ueff4c609\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Restrictions on data length</span></p></td><td width=\"250\"><p id=\"u7881e386\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Yes, when sending data, the GET method adds the data to the URL; and the length of a URL is limited (maximum URL length is 2048 characters)</span></p></td><td width=\"250\"><p id=\"u95c5a53e\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">No restrictions</span></p></td></tr><tr style=\"height: 33px\"><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u2021de09\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Restrictions on data type</span></p></td><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u96f9de96\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Only ASCII characters allowed</span></p></td><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u4777bd67\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">No restrictions. Binary data is also allowed</span></p></td></tr><tr style=\"height: 33px\"><td width=\"250\"><p id=\"u69f42de3\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Security</span></p></td><td width=\"250\"><p id=\"u2c2a9094\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">GET is less secure compared to POST because data sent is part of the URL<br /><br /></span><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Never use GET when sending passwords or other sensitive information!</span></p></td><td width=\"250\"><p id=\"u847cdb3d\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">POST is a little safer than GET because the parameters are not stored in browser history or in web server logs</span></p></td></tr><tr style=\"height: 33px\"><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u485325c6\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Visibility</span></p></td><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u76273203\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Data is visible to everyone in the URL</span></p></td><td width=\"250\" style=\"background-color: rgb(231, 233, 235)\"><p id=\"u69f77062\" class=\"ne-p\" style=\"text-align: left\"><span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">Data is not displayed in the URL</span></p></td></tr></tbody></table></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><p data-lake-id=\"u6c0e37cc\" id=\"u6c0e37cc\"><span data-lake-id=\"u29cea6e2\" id=\"u29cea6e2\">get 和 post 是 http 请求的两种方法</span></p><ol list=\"u08c64467\"><li fid=\"u5955b70e\" data-lake-id=\"u3892c8b2\" id=\"u3892c8b2\"><span data-lake-id=\"u77f444dc\" id=\"u77f444dc\">从应用场景上来说，get 请求是一个幂等的请求，一般 get 请求用于对服务器资源不会产生影响的场景，比如说请求一个网页。而 post 不是一个幂等的请求，一般用于对服务器资源产生影响的情景。比如注册用户这一类的操作。</span></li><li fid=\"u5955b70e\" data-lake-id=\"u92f59a2b\" id=\"u92f59a2b\"><span data-lake-id=\"u94fad1a5\" id=\"u94fad1a5\">因为不同的应用场景，所以浏览器一般会对 Get 请求缓存，但很少对 Post 请求缓存</span></li><li fid=\"u5955b70e\" data-lake-id=\"ue976adaf\" id=\"ue976adaf\"><span data-lake-id=\"uf5aba6d8\" id=\"uf5aba6d8\">从发送的报文格式来说，get 请求的报文中实体部分为空，post 请求的报文中实体部分一般为向服务器发送的数据</span></li><li fid=\"u5955b70e\" data-lake-id=\"u3700295d\" id=\"u3700295d\"><span data-lake-id=\"u444a1cc7\" id=\"u444a1cc7\">但是 get 请求也可以将请求的参数放入 url 中向服务器发送，这样的做法相对于 post 请求来说，一个方面是不太安全，因为请求的 url 会被保留在历史记录中。并且浏览器由于对 url 上有一个长度上的限制，所以会影响 get 请求发送数据时的长度。这个限制是浏览器规定的，并不是 RFC 规定的。还有就是 post 的参数传递支持更多的数据类型。</span></li></ol><p data-lake-id=\"u7c5fe742\" id=\"u7c5fe742\"><span data-lake-id=\"u32e4a4a1\" id=\"u32e4a4a1\">​</span><br></p><p data-lake-id=\"uf5102809\" id=\"uf5102809\"><span data-lake-id=\"uf917f698\" id=\"uf917f698\">get</span></p><ul list=\"u78c73b30\"><li fid=\"u01d45856\" data-lake-id=\"u8f807795\" id=\"u8f807795\"><span data-lake-id=\"ud54899e4\" id=\"ud54899e4\" style=\"color: rgb(0, 0, 0)\">GET 请求可以被缓存</span></li><li fid=\"u01d45856\" data-lake-id=\"u641012e1\" id=\"u641012e1\"><span data-lake-id=\"ud100b442\" id=\"ud100b442\" style=\"color: rgb(0, 0, 0)\">GET 请求保留在浏览器历史记录中</span></li><li fid=\"u01d45856\" data-lake-id=\"u999225d8\" id=\"u999225d8\"><span data-lake-id=\"u7ce54609\" id=\"u7ce54609\" style=\"color: rgb(0, 0, 0)\">GET 请求可以添加书签</span></li><li fid=\"u01d45856\" data-lake-id=\"u5d9746c6\" id=\"u5d9746c6\"><span data-lake-id=\"uba9d8f1a\" id=\"uba9d8f1a\" style=\"color: rgb(0, 0, 0)\">处理敏感数据时绝不应使用 GET 请求</span></li><li fid=\"u01d45856\" data-lake-id=\"u010574f1\" id=\"u010574f1\"><span data-lake-id=\"u9a351d70\" id=\"u9a351d70\" style=\"color: rgb(0, 0, 0)\">GET 请求有长度限制</span></li><li fid=\"u01d45856\" data-lake-id=\"u5c90454a\" id=\"u5c90454a\"><span data-lake-id=\"uf16582a6\" id=\"uf16582a6\" style=\"color: rgb(0, 0, 0)\">GET 请求仅用于请求数据（不修改）</span></li></ul><p data-lake-id=\"u8fab5713\" id=\"u8fab5713\"><span data-lake-id=\"u6030e078\" id=\"u6030e078\" style=\"color: rgb(0, 0, 0)\">​</span><br></p><p data-lake-id=\"ud2b946a3\" id=\"ud2b946a3\"><span data-lake-id=\"u596ea48e\" id=\"u596ea48e\" style=\"color: rgb(0, 0, 0)\">post</span></p><ul list=\"u28c41b85\"><li fid=\"u978e922f\" data-lake-id=\"ue3d945df\" id=\"ue3d945df\"><span data-lake-id=\"u125122eb\" id=\"u125122eb\" style=\"color: rgb(0, 0, 0)\">POST 请求永远不会被缓存</span></li><li fid=\"u978e922f\" data-lake-id=\"u074ef953\" id=\"u074ef953\"><span data-lake-id=\"u29d22249\" id=\"u29d22249\" style=\"color: rgb(0, 0, 0)\">POST 请求不会保留在浏览器历史记录中</span></li><li fid=\"u978e922f\" data-lake-id=\"u797dc23c\" id=\"u797dc23c\"><span data-lake-id=\"u984cb051\" id=\"u984cb051\" style=\"color: rgb(0, 0, 0)\">不能为 POST 请求添加书签</span></li><li fid=\"u978e922f\" data-lake-id=\"uf8c18a0c\" id=\"uf8c18a0c\"><span data-lake-id=\"ubbafe2d0\" id=\"ubbafe2d0\" style=\"color: rgb(0, 0, 0)\">POST 请求对数据长度没有限制</span></li></ul><p data-lake-id=\"u42934301\" id=\"u42934301\"><span data-lake-id=\"u515a0817\" id=\"u515a0817\" style=\"color: rgb(0, 0, 0)\">​</span><br></p><table data-lake-id=\"gw339\" id=\"gw339\" margin=\"true\" class=\"lake-table\" style=\"width: 750px\"><colgroup><col width=\"250\"><col width=\"250\"><col width=\"250\"></colgroup><tbody><tr data-lake-id=\"u2d9c97f6\" id=\"u2d9c97f6\"><td data-lake-id=\"u41eb4a8f\" id=\"u41eb4a8f\"><p data-lake-id=\"u4286e1a2\" id=\"u4286e1a2\" style=\"text-align: left\"><span data-lake-id=\"u425c148b\" id=\"u425c148b\" style=\"color: rgb(0, 0, 0)\">GET</span></p></td><td data-lake-id=\"u2937ed8f\" id=\"u2937ed8f\"><p data-lake-id=\"u1207bc6c\" id=\"u1207bc6c\" style=\"text-align: left\"><span data-lake-id=\"uf7371818\" id=\"uf7371818\" style=\"color: rgb(0, 0, 0)\">POST</span></p></td><td data-lake-id=\"u6ebfd941\" id=\"u6ebfd941\"></td></tr><tr data-lake-id=\"u5a5044cf\" id=\"u5a5044cf\"><td data-lake-id=\"ucd6e0630\" id=\"ucd6e0630\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u0be2c638\" id=\"u0be2c638\" style=\"text-align: left\"><span data-lake-id=\"u04bf9a49\" id=\"u04bf9a49\" style=\"color: rgb(0, 0, 0)\">BACK button/Reload</span></p></td><td data-lake-id=\"ubc61175e\" id=\"ubc61175e\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u3ff077b0\" id=\"u3ff077b0\" style=\"text-align: left\"><span data-lake-id=\"ue20d9a41\" id=\"ue20d9a41\" style=\"color: rgb(0, 0, 0)\">Harmless</span></p></td><td data-lake-id=\"ub6e72bc2\" id=\"ub6e72bc2\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u2beab8bd\" id=\"u2beab8bd\" style=\"text-align: left\"><span data-lake-id=\"u90ec9bd1\" id=\"u90ec9bd1\" style=\"color: rgb(0, 0, 0)\">Data will be re-submitted (the browser should alert the user that the data are about to be re-submitted)</span></p></td></tr><tr data-lake-id=\"ueb01747c\" id=\"ueb01747c\"><td data-lake-id=\"u4d809da6\" id=\"u4d809da6\"><p data-lake-id=\"u79a30c98\" id=\"u79a30c98\" style=\"text-align: left\"><span data-lake-id=\"u09d673b8\" id=\"u09d673b8\" style=\"color: rgb(0, 0, 0)\">Bookmarked</span></p></td><td data-lake-id=\"ud6fa6358\" id=\"ud6fa6358\"><p data-lake-id=\"u85082438\" id=\"u85082438\" style=\"text-align: left\"><span data-lake-id=\"uc3f3639f\" id=\"uc3f3639f\" style=\"color: rgb(0, 0, 0)\">Can be bookmarked</span></p></td><td data-lake-id=\"u4cd64b61\" id=\"u4cd64b61\"><p data-lake-id=\"uce4cc330\" id=\"uce4cc330\" style=\"text-align: left\"><span data-lake-id=\"uf40549f9\" id=\"uf40549f9\" style=\"color: rgb(0, 0, 0)\">Cannot be bookmarked</span></p></td></tr><tr data-lake-id=\"ua530fc31\" id=\"ua530fc31\"><td data-lake-id=\"uab77e69b\" id=\"uab77e69b\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u077ba89f\" id=\"u077ba89f\" style=\"text-align: left\"><span data-lake-id=\"u9d12007d\" id=\"u9d12007d\" style=\"color: rgb(0, 0, 0)\">Cached</span></p></td><td data-lake-id=\"ub7acd7f2\" id=\"ub7acd7f2\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"ub9484b41\" id=\"ub9484b41\" style=\"text-align: left\"><span data-lake-id=\"u03188907\" id=\"u03188907\" style=\"color: rgb(0, 0, 0)\">Can be cached</span></p></td><td data-lake-id=\"u08b48c4a\" id=\"u08b48c4a\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"uac64e806\" id=\"uac64e806\" style=\"text-align: left\"><span data-lake-id=\"u735ad36f\" id=\"u735ad36f\" style=\"color: rgb(0, 0, 0)\">Not cached</span></p></td></tr><tr data-lake-id=\"u8fb0c3f7\" id=\"u8fb0c3f7\"><td data-lake-id=\"u40a66904\" id=\"u40a66904\"><p data-lake-id=\"ue36fa1be\" id=\"ue36fa1be\" style=\"text-align: left\"><span data-lake-id=\"u3fbe741e\" id=\"u3fbe741e\" style=\"color: rgb(0, 0, 0)\">Encoding type</span></p></td><td data-lake-id=\"u55067359\" id=\"u55067359\"><p data-lake-id=\"ua7599979\" id=\"ua7599979\" style=\"text-align: left\"><span data-lake-id=\"u00c7fd18\" id=\"u00c7fd18\" style=\"color: rgb(0, 0, 0)\">application/x-www-form-urlencoded</span></p></td><td data-lake-id=\"ue29676f1\" id=\"ue29676f1\"><p data-lake-id=\"u014f52ee\" id=\"u014f52ee\" style=\"text-align: left\"><span data-lake-id=\"u4a0ffbb4\" id=\"u4a0ffbb4\" style=\"color: rgb(0, 0, 0)\">application/x-www-form-urlencoded or multipart/form-data. Use multipart encoding for binary data</span></p></td></tr><tr data-lake-id=\"u396696e5\" id=\"u396696e5\"><td data-lake-id=\"ud2962fc5\" id=\"ud2962fc5\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u64436bab\" id=\"u64436bab\" style=\"text-align: left\"><span data-lake-id=\"ue1bdda9c\" id=\"ue1bdda9c\" style=\"color: rgb(0, 0, 0)\">History</span></p></td><td data-lake-id=\"uca9f56e1\" id=\"uca9f56e1\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u12ded35d\" id=\"u12ded35d\" style=\"text-align: left\"><span data-lake-id=\"u8abeecda\" id=\"u8abeecda\" style=\"color: rgb(0, 0, 0)\">Parameters remain in browser history</span></p></td><td data-lake-id=\"u2ed40504\" id=\"u2ed40504\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u8f01ede1\" id=\"u8f01ede1\" style=\"text-align: left\"><span data-lake-id=\"udd594da9\" id=\"udd594da9\" style=\"color: rgb(0, 0, 0)\">Parameters are not saved in browser history</span></p></td></tr><tr data-lake-id=\"u74ec18ab\" id=\"u74ec18ab\"><td data-lake-id=\"ue5709fe7\" id=\"ue5709fe7\"><p data-lake-id=\"ueff4c609\" id=\"ueff4c609\" style=\"text-align: left\"><span data-lake-id=\"u458cf188\" id=\"u458cf188\" style=\"color: rgb(0, 0, 0)\">Restrictions on data length</span></p></td><td data-lake-id=\"u5cca396a\" id=\"u5cca396a\"><p data-lake-id=\"u7881e386\" id=\"u7881e386\" style=\"text-align: left\"><span data-lake-id=\"u89c769ba\" id=\"u89c769ba\" style=\"color: rgb(0, 0, 0)\">Yes, when sending data, the GET method adds the data to the URL; and the length of a URL is limited (maximum URL length is 2048 characters)</span></p></td><td data-lake-id=\"u6ce5f8ed\" id=\"u6ce5f8ed\"><p data-lake-id=\"u95c5a53e\" id=\"u95c5a53e\" style=\"text-align: left\"><span data-lake-id=\"u6d821861\" id=\"u6d821861\" style=\"color: rgb(0, 0, 0)\">No restrictions</span></p></td></tr><tr data-lake-id=\"u3805dcf3\" id=\"u3805dcf3\"><td data-lake-id=\"u6e46978b\" id=\"u6e46978b\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u2021de09\" id=\"u2021de09\" style=\"text-align: left\"><span data-lake-id=\"ub3d8660b\" id=\"ub3d8660b\" style=\"color: rgb(0, 0, 0)\">Restrictions on data type</span></p></td><td data-lake-id=\"ua02e19b4\" id=\"ua02e19b4\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u96f9de96\" id=\"u96f9de96\" style=\"text-align: left\"><span data-lake-id=\"u9fd8444d\" id=\"u9fd8444d\" style=\"color: rgb(0, 0, 0)\">Only ASCII characters allowed</span></p></td><td data-lake-id=\"u3c82dc28\" id=\"u3c82dc28\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u4777bd67\" id=\"u4777bd67\" style=\"text-align: left\"><span data-lake-id=\"u6f81f845\" id=\"u6f81f845\" style=\"color: rgb(0, 0, 0)\">No restrictions. Binary data is also allowed</span></p></td></tr><tr data-lake-id=\"u66f54af2\" id=\"u66f54af2\"><td data-lake-id=\"u84702390\" id=\"u84702390\"><p data-lake-id=\"u69f42de3\" id=\"u69f42de3\" style=\"text-align: left\"><span data-lake-id=\"ue085b4d7\" id=\"ue085b4d7\" style=\"color: rgb(0, 0, 0)\">Security</span></p></td><td data-lake-id=\"u8abfa7c2\" id=\"u8abfa7c2\"><p data-lake-id=\"u2c2a9094\" id=\"u2c2a9094\" style=\"text-align: left\"><span data-lake-id=\"udab481d6\" id=\"udab481d6\" style=\"color: rgb(0, 0, 0)\">GET is less secure compared to POST because data sent is part of the URL<br /><br /></span><span data-lake-id=\"u53f15212\" id=\"u53f15212\" style=\"color: rgb(0, 0, 0)\">Never use GET when sending passwords or other sensitive information!</span></p></td><td data-lake-id=\"u83c8ce38\" id=\"u83c8ce38\"><p data-lake-id=\"u847cdb3d\" id=\"u847cdb3d\" style=\"text-align: left\"><span data-lake-id=\"u3c8a30b1\" id=\"u3c8a30b1\" style=\"color: rgb(0, 0, 0)\">POST is a little safer than GET because the parameters are not stored in browser history or in web server logs</span></p></td></tr><tr data-lake-id=\"u393d1347\" id=\"u393d1347\"><td data-lake-id=\"u2619fad7\" id=\"u2619fad7\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u485325c6\" id=\"u485325c6\" style=\"text-align: left\"><span data-lake-id=\"u8ea17254\" id=\"u8ea17254\" style=\"color: rgb(0, 0, 0)\">Visibility</span></p></td><td data-lake-id=\"uae4ebbdd\" id=\"uae4ebbdd\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u76273203\" id=\"u76273203\" style=\"text-align: left\"><span data-lake-id=\"uae3c98da\" id=\"uae3c98da\" style=\"color: rgb(0, 0, 0)\">Data is visible to everyone in the URL</span></p></td><td data-lake-id=\"ufcb26e88\" id=\"ufcb26e88\" style=\"background-color: rgb(231, 233, 235)\"><p data-lake-id=\"u69f77062\" id=\"u69f77062\" style=\"text-align: left\"><span data-lake-id=\"u9c202594\" id=\"u9c202594\" style=\"color: rgb(0, 0, 0)\">Data is not displayed in the URL</span></p></td></tr></tbody></table>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-08-04T03:42:47.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:33:11.000Z",
  "updated_at": "2022-08-04T03:42:47.000Z",
  "published_at": "2022-08-04T03:42:47.000Z",
  "first_published_at": "2022-04-04T11:33:11.473Z",
  "word_count": 625,
  "cover": null,
  "description": "get 和 post 是 http 请求的两种方法从应用场景上来说，get 请求是一个幂等的请求，一般 get 请求用于对服务器资源不会产生影响的场景，比如说请求一个网页。而 post 不是一个幂等的请求，一般用于对服务器资源产生影响的情景。比如注册用户这一类的操作。因为不同的应用场景，所以浏...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}