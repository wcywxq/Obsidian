{
  "id": 72212218,
  "slug": "wethcy",
  "title": "实现原理",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "客户端路由实现的思想：\n\n- 基于 hash 的路由：通过监听hashchange事件，感知 hash 的变化 \n   - 改变 hash 可以直接通过 location.hash=xxx\n- 基于 H5 history 路由： \n   - 改变 url 可以通过 history.pushState 和 resplaceState 等，会将 URL 压入堆栈，同时能够应用 history.go() 等 API\n   - 监听 url 的变化可以通过自定义事件触发实现\n\n**react-router 实现的思想：**\n\n- 基于 history 库来实现上述不同的客户端路由实现思想，并且能够保存历史记录等，磨平浏览器差异，上层无感知\n- 通过维护的列表，在每次 URL 发生变化的回收，通过配置的 路由路径，匹配到对应的 Component，并且 render\n",
  "body_draft": "",
  "body_html": "<!doctype html><p data-lake-id=\"u3a0d08e9\"><span>客户端路由实现的思想：</span></p><ul><li><span>基于 hash 的路由：通过监听</span><span>hashchange</span><span>事件，感知 hash 的变化 </span></li></ul><ul data-lake-indent=\"1\"><li><span>改变 hash 可以直接通过 location.hash=xxx</span></li></ul><ul><li><span>基于 H5 history 路由： </span></li></ul><ul data-lake-indent=\"1\"><li><span>改变 url 可以通过 history.pushState 和 resplaceState 等，会将 URL 压入堆栈，同时能够应用 history.go() 等 API</span></li><li><span>监听 url 的变化可以通过自定义事件触发实现</span></li></ul><p data-lake-id=\"u833b1b01\"><span>​</span><br /></p><p data-lake-id=\"ucd005315\"><strong><span>react-router 实现的思想：</span></strong></p><ul><li><span>基于 </span><span>history</span><span> 库来实现上述不同的客户端路由实现思想，并且能够保存历史记录等，磨平浏览器差异，上层无感知</span></li><li><span>通过维护的列表，在每次 URL 发生变化的回收，通过配置的 路由路径，匹配到对应的 Component，并且 render</span></li></ul>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><p data-lake-id=\"u3a0d08e9\" id=\"u3a0d08e9\"><span data-lake-id=\"u2cd96cd2\" id=\"u2cd96cd2\">客户端路由实现的思想：</span></p><ul list=\"u733390b8\"><li fid=\"u9e5bc97e\" data-lake-id=\"u5886a66f\" id=\"u5886a66f\"><span data-lake-id=\"u78dbe97f\" id=\"u78dbe97f\">基于 hash 的路由：通过监听</span><span data-lake-id=\"ubb85f34f\" id=\"ubb85f34f\">hashchange</span><span data-lake-id=\"ud7e3dd68\" id=\"ud7e3dd68\">事件，感知 hash 的变化 </span></li></ul><ul list=\"u733390b8\" data-lake-indent=\"1\"><li fid=\"ufe3a9405\" data-lake-id=\"u87315fc0\" id=\"u87315fc0\"><span data-lake-id=\"u3540155e\" id=\"u3540155e\">改变 hash 可以直接通过 location.hash=xxx</span></li></ul><ul list=\"u733390b8\" start=\"2\"><li fid=\"u9e5bc97e\" data-lake-id=\"uac263d33\" id=\"uac263d33\"><span data-lake-id=\"ub5369b6f\" id=\"ub5369b6f\">基于 H5 history 路由： </span></li></ul><ul list=\"u733390b8\" data-lake-indent=\"1\"><li fid=\"u466a2bab\" data-lake-id=\"u0e209d11\" id=\"u0e209d11\"><span data-lake-id=\"u599555c7\" id=\"u599555c7\">改变 url 可以通过 history.pushState 和 resplaceState 等，会将 URL 压入堆栈，同时能够应用 history.go() 等 API</span></li><li fid=\"u466a2bab\" data-lake-id=\"udd267911\" id=\"udd267911\"><span data-lake-id=\"u2a29e72e\" id=\"u2a29e72e\">监听 url 的变化可以通过自定义事件触发实现</span></li></ul><p data-lake-id=\"u833b1b01\" id=\"u833b1b01\"><span data-lake-id=\"ub9ab9928\" id=\"ub9ab9928\">​</span><br></p><p data-lake-id=\"ucd005315\" id=\"ucd005315\"><strong><span data-lake-id=\"u1f251541\" id=\"u1f251541\">react-router 实现的思想：</span></strong></p><ul list=\"u2b5641f0\"><li fid=\"u22885aaf\" data-lake-id=\"uc0582afd\" id=\"uc0582afd\"><span data-lake-id=\"u15b76182\" id=\"u15b76182\">基于 </span><span data-lake-id=\"ude610129\" id=\"ude610129\">history</span><span data-lake-id=\"u516dee41\" id=\"u516dee41\"> 库来实现上述不同的客户端路由实现思想，并且能够保存历史记录等，磨平浏览器差异，上层无感知</span></li><li fid=\"u22885aaf\" data-lake-id=\"u5a8f8c35\" id=\"u5a8f8c35\"><span data-lake-id=\"u0acdea0e\" id=\"u0acdea0e\">通过维护的列表，在每次 URL 发生变化的回收，通过配置的 路由路径，匹配到对应的 Component，并且 render</span></li></ul>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:33:40.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:33:40.000Z",
  "updated_at": "2022-05-10T15:12:35.000Z",
  "published_at": "2022-04-04T11:33:40.000Z",
  "first_published_at": "2022-04-04T11:33:40.268Z",
  "word_count": 192,
  "cover": null,
  "description": "客户端路由实现的思想：基于 hash 的路由：通过监听hashchange事件，感知 hash 的变化 改变 hash 可以直接通过 location.hash=xxx基于 H5 history 路由： 改变 url 可以通过 history.pushState 和 resplaceState...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}