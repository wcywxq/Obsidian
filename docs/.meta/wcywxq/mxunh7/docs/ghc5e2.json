{
  "id": 72212036,
  "slug": "ghc5e2",
  "title": "vue3 数据响应式原理",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "采用 Proxy + Reflect 反射的原理，劫持 getter 和 setter，当数据发生变化时，触发代理对象发生变化，此时发布消息给订阅者，触发相应的监听回调\n:::info\n在 vue3 中通过 effect 来实现响应式处理和视图更新之间的解耦\n:::\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1647254315479-a6f6bf50-aa58-42d4-ab91-612b017f6160.png#clientId=u890d2a90-03d0-4&from=paste&height=694&id=u484a3e6d&originHeight=694&originWidth=967&originalType=binary&ratio=1&rotation=0&showTitle=false&size=46857&status=done&style=none&taskId=u28f71a97-90a4-43d5-a771-44bbceccde4&title=&width=967)<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1648098340058-8df60900-2532-4a47-97fb-15059467156a.png#clientId=u03f2ea5d-8f3d-4&from=paste&height=595&id=xhlTg&originHeight=595&originWidth=1304&originalType=binary&ratio=1&rotation=0&showTitle=false&size=198923&status=done&style=none&taskId=u0aa89809-a4c1-43ef-ae4e-e5401849fe7&title=&width=1304)\n<a name=\"gtwBg\"></a>\n## reactive\n设置对象为响应式对象。接受一个参数，判断这个参数是否为对象，不是对象则直接返回这个参数，不做响应式处理。创建拦截器 handler，设置 get/set/deleteProperty\n\n- get\n   - 收集依赖 track(只有在用户访问更深层次的属性时，才会进行递归)\n   - 如果当前 key 的值是对象，则为当前 key 的对象创建拦截器 handler，并设置 get/set/deleteProperty\n   - 如果当前的 key 的值不是对象，则返回当前 key 的值\n- set\n   - 设置的新值和老值不相等时，更新为新值，并触发更新 trigger\n   - deleteProperty 当前对象有这个 key 时，删除这个 key 并触发更新\n```javascript\nfunction reactive(target) {\n  const handler = {\n    get(target, key) {\n      const res = Reflect.get(target, key);\n      // 依赖收集\n      track(target, key);\n      return typeof res === 'object' ? reactive(res) : res;\n    },\n    set(target, key, val) {\n      // 如果数据没变，就什么都不做\n      if (target[key] === val) {\n        return;\n      }\n    \n      Reflect.set(target, key, val);\n      // 通知变化，触发执行 effect\n      trigger(target, key);\n    }\n  };\n  const observed = new Proxy(target, handler);\n  return observed;\n}\n```\n<a name=\"Ak5Za\"></a>\n## effect\n接收一个函数作为参数，作用是：访问响应式对象属性时去收集依赖\n```javascript\n  function effect(fn, options = {}) {\n    // 依赖函数\n    let e = createReactiveEffect(fn, options);\n    // lazy仕computed配置的\n    if (!options.lazy) {\n      // 不是懒执行\n      e();\n    }\n    return e;\n  }\n  function createReactiveEffect(fn, options) {\n    // 构造固定格式的effect\n    const effect = function effect(...args) {\n      return run(effect, fn, args);\n    };\n    // effect的配置\n    effect.deps = [];\n    effect.computed = options.computed;\n    effect.lazy = options.lazy;\n    return effect;\n  }\n  function run(effect, fn, args) {\n    // 执行effect\n    // 取出effect 执行\n    if (effectStack.indexOf(effect) === -1) {\n      try {\n        effectStack.push(effect);\n        return fn(...args); // 执行effect\n      } finally {\n        effectStack.pop(); // effect执行完毕\n      }\n    }\n  }\n```\n<a name=\"bmhDu\"></a>\n## track\n接受两个参数：target 和 key\n\n- 如果没有 activeEffect，则说明没有创建 effect 依赖\n- 如果有 activeEffect，则去判断 WeakMap 集合中是否有 target 属性\n- WeakMap 集合中没有 target 属性，则 `set(target, (depsMap = new Map()))`\n- WeakMap 集合中有 target 属性，则判断 target 属性的 map 值的 depsMap 中是否有 key 属性\n- depsMap 中没有 key 属性，则 `set(key, (dep = new Set())) －depsMap` 中有 key 属性，则添加这个 activeEffect\n\n假如数据是这样的。\n```javascript\n{\n  name: '18zili',\n  obj: {\n    age: 18\n  }\n}\n```\n那么经过 track 的处理，我们就得到了这样的数据格式。<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1648098477089-bb4e5530-e1c0-401e-a8fc-a76ceaca6c8c.png#clientId=u03f2ea5d-8f3d-4&from=paste&height=768&id=Jdz6Y&originHeight=768&originWidth=1304&originalType=binary&ratio=1&rotation=0&showTitle=false&size=184310&status=done&style=none&taskId=u2187ecc1-87d4-46dc-bf56-0766441fe0c&title=&width=1304)\n```javascript\n  // 存储 effect\n  let effectStack = [];\n  let targetMap = new WeakMap();\n  function track(target, key) {\n    const effect = effectStack[effectStack.length - 1];\n    if (effect) {\n      let depMap = targetMap.get(target);\n      if (!depMap) {\n        depMap = new Map();\n        targetMap.set(target, depMap);\n      }\n      \n      let dep = depMap.get(key);\n      if (!dep) {\n        dep = new Set();\n        depMap.set(key, dep);\n      }\n      \n      if (!dep.has(effect)) {\n        // 新增依赖 双向存储 方便查找优化\n        dep.add(effect);\n        effect.deps.push(dep);\n      }\n    }\n  }\n```\n<a name=\"PCt5V\"></a>\n## trigger\n判断 WeakMap 中是否有 target 属性，WeakMap 中有 target 属性，则判断 target 属性的 map 值中是否有 key 属性，有的话循环触发收集的 effect()。\n```javascript\n  function trigger(target, key) {\n    // 数据变化后，通知更新 执行effect\n    const depMap = targetMap.get(target);\n    if (depMap === undefined) {\n      return;\n    }\n    const effects = new Set();\n    if (key) {\n      let deps = depMap.get(key);\n      deps.forEach((effect) => {\n        effects.add(effect);\n      });\n      effects.forEach((effect) => effect());\n    }\n  }\n```\n<a name=\"dBLon\"></a>\n## reactivity 文件目录\n在源码的 packages/reactivity/src目录下，有以下几个主要文件：\n\n1. effect.ts：用来定义 effect / track / trigger ；\n2. baseHandlers.ts：定义 Proxy 处理器（ get 和 set）；\n3. reactive.ts：定义 reactive 方法并创建 ES6 Proxy；\n4. ref.ts：定义 reactive 的 ref 使用的对象访问器；\n5. computed.ts：定义计算属性的方法；\n\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1647190772866-a0325ede-917b-4c9e-990e-087a0225f21c.png#clientId=u5d19676c-0673-4&from=paste&height=404&id=ucae0aea4&originHeight=404&originWidth=1011&originalType=binary&ratio=1&rotation=0&showTitle=false&size=293719&status=done&style=none&taskId=ud978a69f-265d-4cd5-8b8f-6d54446b14a&title=&width=1011)\n",
  "body_draft": "",
  "body_html": "<!doctype html><p data-lake-id=\"u0d68a775\"><span>采用 Proxy + Reflect 反射的原理，劫持 getter 和 setter，当数据发生变化时，触发代理对象发生变化，此时发布消息给订阅者，触发相应的监听回调</span></p><blockquote class=\"lake-alert lake-alert-info\"><p data-lake-id=\"u25b2ac2a\"><span>在 vue3 中通过 effect 来实现响应式处理和视图更新之间的解耦</span></p></blockquote><p data-lake-id=\"u336a4d74\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1647254315479-a6f6bf50-aa58-42d4-ab91-612b017f6160.png#clientId=u890d2a90-03d0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=694&amp;id=u484a3e6d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=694&amp;originWidth=967&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=46857&amp;status=done&amp;style=none&amp;taskId=u28f71a97-90a4-43d5-a771-44bbceccde4&amp;title=&amp;width=967\" style=\"max-width: 600px; width: 967px;\" /></p><p data-lake-id=\"u78acd3b4\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648098340058-8df60900-2532-4a47-97fb-15059467156a.png#clientId=u03f2ea5d-8f3d-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=595&amp;id=xhlTg&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=595&amp;originWidth=1304&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=198923&amp;status=done&amp;style=none&amp;taskId=u0aa89809-a4c1-43ef-ae4e-e5401849fe7&amp;title=&amp;width=1304\" style=\"max-width: 600px; width: 1304px;\" /></p><h2 id=\"gtwBg\"><span>reactive</span></h2><p data-lake-id=\"u521ace12\"><span>设置对象为响应式对象。接受一个参数，判断这个参数是否为对象，不是对象则直接返回这个参数，不做响应式处理。创建拦截器 handler，设置 get/set/deleteProperty</span></p><ul><li><span>get</span></li></ul><ul data-lake-indent=\"1\"><li><span>收集依赖 track(只有在用户访问更深层次的属性时，才会进行递归)</span></li><li><span>如果当前 key 的值是对象，则为当前 key 的对象创建拦截器 handler，并设置 get/set/deleteProperty</span></li><li><span>如果当前的 key 的值不是对象，则返回当前 key 的值</span></li></ul><ul><li><span>set</span></li></ul><ul data-lake-indent=\"1\"><li><span>设置的新值和老值不相等时，更新为新值，并触发更新 trigger</span></li><li><span>deleteProperty 当前对象有这个 key 时，删除这个 key 并触发更新</span></li></ul><pre data-lang=\"javascript\"><code>function reactive(target) {\n  const handler = {\n    get(target, key) {\n      const res = Reflect.get(target, key);\n      // 依赖收集\n      track(target, key);\n      return typeof res === 'object' ? reactive(res) : res;\n    },\n    set(target, key, val) {\n      // 如果数据没变，就什么都不做\n      if (target[key] === val) {\n        return;\n      }\n    \n      Reflect.set(target, key, val);\n      // 通知变化，触发执行 effect\n      trigger(target, key);\n    }\n  };\n  const observed = new Proxy(target, handler);\n  return observed;\n}</code></pre><h2 id=\"Ak5Za\"><span>effect</span></h2><p data-lake-id=\"u015f10aa\"><span>接收一个函数作为参数，作用是：访问响应式对象属性时去收集依赖</span></p><pre data-lang=\"javascript\"><code>  function effect(fn, options = {}) {\n    // 依赖函数\n    let e = createReactiveEffect(fn, options);\n    // lazy仕computed配置的\n    if (!options.lazy) {\n      // 不是懒执行\n      e();\n    }\n    return e;\n  }\n  function createReactiveEffect(fn, options) {\n    // 构造固定格式的effect\n    const effect = function effect(...args) {\n      return run(effect, fn, args);\n    };\n    // effect的配置\n    effect.deps = [];\n    effect.computed = options.computed;\n    effect.lazy = options.lazy;\n    return effect;\n  }\n  function run(effect, fn, args) {\n    // 执行effect\n    // 取出effect 执行\n    if (effectStack.indexOf(effect) === -1) {\n      try {\n        effectStack.push(effect);\n        return fn(...args); // 执行effect\n      } finally {\n        effectStack.pop(); // effect执行完毕\n      }\n    }\n  }</code></pre><h2 id=\"bmhDu\"><span>track</span></h2><p data-lake-id=\"u8767f459\"><span>接受两个参数：target 和 key</span></p><ul><li><span>如果没有 activeEffect，则说明没有创建 effect 依赖</span></li><li><span>如果有 activeEffect，则去判断 WeakMap 集合中是否有 target 属性</span></li><li><span>WeakMap 集合中没有 target 属性，则 </span><code><span>set(target, (depsMap = new Map()))</span></code></li><li><span>WeakMap 集合中有 target 属性，则判断 target 属性的 map 值的 depsMap 中是否有 key 属性</span></li><li><span>depsMap 中没有 key 属性，则 </span><code><span>set(key, (dep = new Set())) －depsMap</span></code><span> 中有 key 属性，则添加这个 activeEffect</span></li></ul><p data-lake-id=\"udd62cb51\"><span>​</span><br /></p><p data-lake-id=\"u958f24db\"><span>假如数据是这样的。</span></p><pre data-lang=\"javascript\"><code>{\n  name: '18zili',\n  obj: {\n    age: 18\n  }\n}</code></pre><p data-lake-id=\"u65eb41ba\"><span>那么经过 </span><span>track</span><span> 的处理，我们就得到了这样的数据格式。</span></p><p data-lake-id=\"u0243381d\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648098477089-bb4e5530-e1c0-401e-a8fc-a76ceaca6c8c.png#clientId=u03f2ea5d-8f3d-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=768&amp;id=Jdz6Y&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=768&amp;originWidth=1304&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=184310&amp;status=done&amp;style=none&amp;taskId=u2187ecc1-87d4-46dc-bf56-0766441fe0c&amp;title=&amp;width=1304\" style=\"max-width: 600px; width: 1304px;\" /></p><pre data-lang=\"javascript\"><code>  // 存储 effect\n  let effectStack = [];\n  let targetMap = new WeakMap();\n  function track(target, key) {\n    const effect = effectStack[effectStack.length - 1];\n    if (effect) {\n      let depMap = targetMap.get(target);\n      if (!depMap) {\n        depMap = new Map();\n        targetMap.set(target, depMap);\n      }\n      \n      let dep = depMap.get(key);\n      if (!dep) {\n        dep = new Set();\n        depMap.set(key, dep);\n      }\n      \n      if (!dep.has(effect)) {\n        // 新增依赖 双向存储 方便查找优化\n        dep.add(effect);\n        effect.deps.push(dep);\n      }\n    }\n  }</code></pre><h2 id=\"PCt5V\"><span>trigger</span></h2><p data-lake-id=\"ucc129ad6\"><span>判断 WeakMap 中是否有 target 属性，WeakMap 中有 target 属性，则判断 target 属性的 map 值中是否有 key 属性，有的话循环触发收集的 effect()。</span></p><pre data-lang=\"javascript\"><code>  function trigger(target, key) {\n    // 数据变化后，通知更新 执行effect\n    const depMap = targetMap.get(target);\n    if (depMap === undefined) {\n      return;\n    }\n    const effects = new Set();\n    if (key) {\n      let deps = depMap.get(key);\n      deps.forEach((effect) =&gt; {\n        effects.add(effect);\n      });\n      effects.forEach((effect) =&gt; effect());\n    }\n  }</code></pre><h2 id=\"dBLon\"><span>reactivity 文件目录</span></h2><p data-lake-id=\"u6f1d2240\"><span>在源码的 packages/reactivity/src目录下，有以下几个主要文件：</span></p><ol><li><span>effect.ts：用来定义 </span><span>effect</span><span> / </span><span>track</span><span> / </span><span>trigger</span><span> ；</span></li><li><span>baseHandlers.ts：定义 Proxy 处理器（ get 和 set）；</span></li><li><span>reactive.ts：定义 </span><span>reactive</span><span> 方法并创建 ES6 Proxy；</span></li><li><span>ref.ts：定义 reactive 的 ref 使用的对象访问器；</span></li><li><span>computed.ts：定义计算属性的方法；</span></li></ol><p data-lake-id=\"u58208248\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1647190772866-a0325ede-917b-4c9e-990e-087a0225f21c.png#clientId=u5d19676c-0673-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=404&amp;id=ucae0aea4&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=404&amp;originWidth=1011&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=293719&amp;status=done&amp;style=none&amp;taskId=ud978a69f-265d-4cd5-8b8f-6d54446b14a&amp;title=&amp;width=1011\" style=\"max-width: 600px; width: 1011px;\" /></p>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><p data-lake-id=\"u0d68a775\" id=\"u0d68a775\"><span data-lake-id=\"u9746432b\" id=\"u9746432b\">采用 Proxy + Reflect 反射的原理，劫持 getter 和 setter，当数据发生变化时，触发代理对象发生变化，此时发布消息给订阅者，触发相应的监听回调</span></p><blockquote data-lake-id=\"ua1e72a49\" id=\"ua1e72a49\" class=\"lake-alert lake-alert-info\"><p data-lake-id=\"u25b2ac2a\" id=\"u25b2ac2a\"><span data-lake-id=\"u9af52e9d\" id=\"u9af52e9d\">在 vue3 中通过 effect 来实现响应式处理和视图更新之间的解耦</span></p></blockquote><p data-lake-id=\"u336a4d74\" id=\"u336a4d74\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1647254315479-a6f6bf50-aa58-42d4-ab91-612b017f6160.png%22%2C%22taskId%22%3A%22u28f71a97-90a4-43d5-a771-44bbceccde4%22%2C%22clientId%22%3A%22u890d2a90-03d0-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A967%2C%22height%22%3A694%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A46857%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A967%2C%22originHeight%22%3A694%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%95%B0%E6%8D%AE%20%E8%A7%86%E5%9B%BE%20REACTIVE(%20DATA)%20TEMPLATE%20PROXY(DATA)%20COMPILE%20MAP%20%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0%20TRIGGER%20SET%20INAME%3A%20RENDER%E5%87%BD%E6%95%B0%20WATCHER%20EFFECT(CB)%20CBJ%20TRACK%20GET%20VIRTUAL-DOM%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A574.6653%2C%22y%22%3A73.122116%2C%22width%22%3A44.15260000000001%2C%22height%22%3A20.968583999999993%2C%22text%22%3A%22%E6%95%B0%E6%8D%AE%22%7D%2C%7B%22x%22%3A155.16364%2C%22y%22%3A75.23422%2C%22width%22%3A43.74069%2C%22height%22%3A22.112970000000004%2C%22text%22%3A%22%E8%A7%86%E5%9B%BE%22%7D%2C%7B%22x%22%3A553.3032%2C%22y%22%3A146.7416%2C%22width%22%3A103.4091400000001%2C%22height%22%3A15.589789999999994%2C%22text%22%3A%22REACTIVE(%20DATA)%22%7D%2C%7B%22x%22%3A135.32664%2C%22y%22%3A154.11418%2C%22width%22%3A63.231660000000005%2C%22height%22%3A12.845920000000007%2C%22text%22%3A%22TEMPLATE%22%7D%2C%7B%22x%22%3A562.51965%2C%22y%22%3A245.57617%2C%22width%22%3A85.50080000000003%2C%22height%22%3A16.773410000000013%2C%22text%22%3A%22PROXY(DATA)%22%7D%2C%7B%22x%22%3A140.06027%2C%22y%22%3A255.41814%2C%22width%22%3A50.84733%2C%22height%22%3A12.742959999999982%2C%22text%22%3A%22COMPILE%22%7D%2C%7B%22x%22%3A756.15015%2C%22y%22%3A304.52267%2C%22width%22%3A31.098199999999906%2C%22height%22%3A16.528230000000008%2C%22text%22%3A%22MAP%22%7D%2C%7B%22x%22%3A470.59143%2C%22y%22%3A328.56525%2C%22width%22%3A51.99793000000005%2C%22height%22%3A12.218169999999986%2C%22text%22%3A%22%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0%22%7D%2C%7B%22x%22%3A625.9023%2C%22y%22%3A340.07425%2C%22width%22%3A52.36467000000005%2C%22height%22%3A13.033169999999984%2C%22text%22%3A%22TRIGGER%22%7D%2C%7B%22x%22%3A547.40326%2C%22y%22%3A340.7164%2C%22width%22%3A22.716669999999908%2C%22height%22%3A11.332099999999969%2C%22text%22%3A%22SET%22%7D%2C%7B%22x%22%3A755.2675%2C%22y%22%3A351.1976%2C%22width%22%3A46.548400000000015%2C%22height%22%3A10.363339999999994%2C%22text%22%3A%22INAME%3A%22%7D%2C%7B%22x%22%3A128.55891%2C%22y%22%3A355.4458%2C%22width%22%3A76.93641%2C%22height%22%3A14.189030000000002%2C%22text%22%3A%22RENDER%E5%87%BD%E6%95%B0%22%7D%2C%7B%22x%22%3A249.96416%2C%22y%22%3A356.60864%2C%22width%22%3A64.31128999999999%2C%22height%22%3A13.654359999999997%2C%22text%22%3A%22WATCHER%22%7D%2C%7B%22x%22%3A369.20468%2C%22y%22%3A356.91934%2C%22width%22%3A78.09501999999998%2C%22height%22%3A15.904089999999997%2C%22text%22%3A%22EFFECT(CB)%22%7D%2C%7B%22x%22%3A768.7116%2C%22y%22%3A366.6411%2C%22width%22%3A21.23610000000008%2C%22height%22%3A12.063150000000007%2C%22text%22%3A%22CBJ%22%7D%2C%7B%22x%22%3A631.6133%2C%22y%22%3A377.09106%2C%22width%22%3A40.65715%2C%22height%22%3A11.93716999999998%2C%22text%22%3A%22TRACK%22%7D%2C%7B%22x%22%3A546.0107%2C%22y%22%3A377.15436%2C%22width%22%3A26.99369999999999%2C%22height%22%3A12.202789999999993%2C%22text%22%3A%22GET%22%7D%2C%7B%22x%22%3A125.98419%2C%22y%22%3A466.24295%2C%22width%22%3A80.35069%2C%22height%22%3A12.595649999999978%2C%22text%22%3A%22VIRTUAL-DOM%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22u484a3e6d%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"u78acd3b4\" id=\"u78acd3b4\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1648098340058-8df60900-2532-4a47-97fb-15059467156a.png%22%2C%22taskId%22%3A%22u0aa89809-a4c1-43ef-ae4e-e5401849fe7%22%2C%22clientId%22%3A%22u03f2ea5d-8f3d-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1304%2C%22height%22%3A595%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A198923%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1304%2C%22originHeight%22%3A595%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22TRACK%20%E4%BE%9D%E8%B5%96%E6%94%B6%E9%9B%86%20%E8%A7%A6%E5%8F%91%E4%BE%9D%E8%B5%96%E6%94%B6%E9%9B%86%20GET%20UPDATE%20EFFECT%20PROXY%20REACTIVE%20%E6%95%B0%E6%8D%AE%E5%8A%AB%E6%8C%81%20SET%20%E9%80%9A%E7%9F%A5%E6%9B%B4%E6%96%B0%20%E7%BB%91%E5%AE%9A%E6%9B%B4%E6%96%B0%E5%87%BD%E6%95%B0%20TRIGGER%20%40%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A795.5393%2C%22y%22%3A113.09661%2C%22width%22%3A75.60929999999996%2C%22height%22%3A22.69203999999999%2C%22text%22%3A%22TRACK%22%7D%2C%7B%22x%22%3A917.7308%2C%22y%22%3A155.80603%2C%22width%22%3A66.9414999999999%2C%22height%22%3A18.395200000000017%2C%22text%22%3A%22%E4%BE%9D%E8%B5%96%E6%94%B6%E9%9B%86%22%7D%2C%7B%22x%22%3A672.8225%2C%22y%22%3A156.38582%2C%22width%22%3A97.60400000000004%2C%22height%22%3A17.927639999999997%2C%22text%22%3A%22%E8%A7%A6%E5%8F%91%E4%BE%9D%E8%B5%96%E6%94%B6%E9%9B%86%22%7D%2C%7B%22x%22%3A612.8224%2C%22y%22%3A176.60736%2C%22width%22%3A40.930830000000014%2C%22height%22%3A22.29876999999999%2C%22text%22%3A%22GET%22%7D%2C%7B%22x%22%3A1126.6029%2C%22y%22%3A259.57034%2C%22width%22%3A104.85619999999994%2C%22height%22%3A31.25168000000002%2C%22text%22%3A%22UPDATE%22%7D%2C%7B%22x%22%3A933.5716%2C%22y%22%3A268.03275%2C%22width%22%3A85.79460000000006%2C%22height%22%3A28.581899999999962%2C%22text%22%3A%22EFFECT%22%7D%2C%7B%22x%22%3A412.01215%2C%22y%22%3A273.6184%2C%22width%22%3A89.47539999999998%2C%22height%22%3A36.48984999999999%2C%22text%22%3A%22PROXY%22%7D%2C%7B%22x%22%3A96.567024%2C%22y%22%3A275.25653%2C%22width%22%3A134.465646%2C%22height%22%3A29.51857000000001%2C%22text%22%3A%22REACTIVE%22%7D%2C%7B%22x%22%3A297.83936%2C%22y%22%3A277.31973%2C%22width%22%3A68.2228%2C%22height%22%3A18.687970000000007%2C%22text%22%3A%22%E6%95%B0%E6%8D%AE%E5%8A%AB%E6%8C%81%22%7D%2C%7B%22x%22%3A611.12476%2C%22y%22%3A377.08063%2C%22width%22%3A36.406639999999925%2C%22height%22%3A18.609530000000007%2C%22text%22%3A%22SET%22%7D%2C%7B%22x%22%3A923.4054%2C%22y%22%3A398.76883%2C%22width%22%3A68.6757%2C%22height%22%3A20.22601000000003%2C%22text%22%3A%22%E9%80%9A%E7%9F%A5%E6%9B%B4%E6%96%B0%22%7D%2C%7B%22x%22%3A667.26575%2C%22y%22%3A402.06854%2C%22width%22%3A97.60637999999994%2C%22height%22%3A18.600960000000043%2C%22text%22%3A%22%E7%BB%91%E5%AE%9A%E6%9B%B4%E6%96%B0%E5%87%BD%E6%95%B0%22%7D%2C%7B%22x%22%3A781.20374%2C%22y%22%3A447.37064%2C%22width%22%3A98.83655999999996%2C%22height%22%3A28.652000000000044%2C%22text%22%3A%22TRIGGER%22%7D%2C%7B%22x%22%3A1128.9261%2C%22y%22%3A555.2247%2C%22width%22%3A160.12720000000013%2C%22height%22%3A24.98689999999999%2C%22text%22%3A%22%40%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22xhlTg%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><h2 data-lake-id=\"gtwBg\" id=\"gtwBg\"><span data-lake-id=\"uf7715bf9\" id=\"uf7715bf9\">reactive</span></h2><p data-lake-id=\"u521ace12\" id=\"u521ace12\"><span data-lake-id=\"u560bc8f1\" id=\"u560bc8f1\">设置对象为响应式对象。接受一个参数，判断这个参数是否为对象，不是对象则直接返回这个参数，不做响应式处理。创建拦截器 handler，设置 get/set/deleteProperty</span></p><ul list=\"uf600cd1a\"><li fid=\"u92d519e4\" data-lake-id=\"u10bbfe12\" id=\"u10bbfe12\"><span data-lake-id=\"u578efa6c\" id=\"u578efa6c\">get</span></li></ul><ul list=\"uf600cd1a\" data-lake-indent=\"1\"><li fid=\"u92d519e4\" data-lake-id=\"u3e12e942\" id=\"u3e12e942\"><span data-lake-id=\"u10ae7587\" id=\"u10ae7587\">收集依赖 track(只有在用户访问更深层次的属性时，才会进行递归)</span></li><li fid=\"u92d519e4\" data-lake-id=\"u77baf55e\" id=\"u77baf55e\"><span data-lake-id=\"ue9f74107\" id=\"ue9f74107\">如果当前 key 的值是对象，则为当前 key 的对象创建拦截器 handler，并设置 get/set/deleteProperty</span></li><li fid=\"u92d519e4\" data-lake-id=\"u5bbe876e\" id=\"u5bbe876e\"><span data-lake-id=\"u609fadc5\" id=\"u609fadc5\">如果当前的 key 的值不是对象，则返回当前 key 的值</span></li></ul><ul list=\"uf600cd1a\" start=\"2\"><li fid=\"u92d519e4\" data-lake-id=\"uc6d6bc0c\" id=\"uc6d6bc0c\"><span data-lake-id=\"u40e7cd75\" id=\"u40e7cd75\">set</span></li></ul><ul list=\"uf600cd1a\" data-lake-indent=\"1\"><li fid=\"u92d519e4\" data-lake-id=\"ue26ed26e\" id=\"ue26ed26e\"><span data-lake-id=\"u95643d1d\" id=\"u95643d1d\">设置的新值和老值不相等时，更新为新值，并触发更新 trigger</span></li><li fid=\"u92d519e4\" data-lake-id=\"uab253949\" id=\"uab253949\"><span data-lake-id=\"ucd347b5b\" id=\"ucd347b5b\">deleteProperty 当前对象有这个 key 时，删除这个 key 并触发更新</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20reactive(target)%20%7B%5Cn%20%20const%20handler%20%3D%20%7B%5Cn%20%20%20%20get(target%2C%20key)%20%7B%5Cn%20%20%20%20%20%20const%20res%20%3D%20Reflect.get(target%2C%20key)%3B%5Cn%20%20%20%20%20%20%2F%2F%20%E4%BE%9D%E8%B5%96%E6%94%B6%E9%9B%86%5Cn%20%20%20%20%20%20track(target%2C%20key)%3B%5Cn%20%20%20%20%20%20return%20typeof%20res%20%3D%3D%3D%20'object'%20%3F%20reactive(res)%20%3A%20res%3B%5Cn%20%20%20%20%7D%2C%5Cn%20%20%20%20set(target%2C%20key%2C%20val)%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E6%95%B0%E6%8D%AE%E6%B2%A1%E5%8F%98%EF%BC%8C%E5%B0%B1%E4%BB%80%E4%B9%88%E9%83%BD%E4%B8%8D%E5%81%9A%5Cn%20%20%20%20%20%20if%20(target%5Bkey%5D%20%3D%3D%3D%20val)%20%7B%5Cn%20%20%20%20%20%20%20%20return%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%5Cn%20%20%20%20%20%20Reflect.set(target%2C%20key%2C%20val)%3B%5Cn%20%20%20%20%20%20%2F%2F%20%E9%80%9A%E7%9F%A5%E5%8F%98%E5%8C%96%EF%BC%8C%E8%A7%A6%E5%8F%91%E6%89%A7%E8%A1%8C%20effect%5Cn%20%20%20%20%20%20trigger(target%2C%20key)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%3B%5Cn%20%20const%20observed%20%3D%20new%20Proxy(target%2C%20handler)%3B%5Cn%20%20return%20observed%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22VeNOU%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"Ak5Za\" id=\"Ak5Za\"><span data-lake-id=\"ue5b6b623\" id=\"ue5b6b623\">effect</span></h2><p data-lake-id=\"u015f10aa\" id=\"u015f10aa\"><span data-lake-id=\"u53a26569\" id=\"u53a26569\">接收一个函数作为参数，作用是：访问响应式对象属性时去收集依赖</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%20%20function%20effect(fn%2C%20options%20%3D%20%7B%7D)%20%7B%5Cn%20%20%20%20%2F%2F%20%E4%BE%9D%E8%B5%96%E5%87%BD%E6%95%B0%5Cn%20%20%20%20let%20e%20%3D%20createReactiveEffect(fn%2C%20options)%3B%5Cn%20%20%20%20%2F%2F%20lazy%E4%BB%95computed%E9%85%8D%E7%BD%AE%E7%9A%84%5Cn%20%20%20%20if%20(!options.lazy)%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20%E4%B8%8D%E6%98%AF%E6%87%92%E6%89%A7%E8%A1%8C%5Cn%20%20%20%20%20%20e()%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20e%3B%5Cn%20%20%7D%5Cn%20%20function%20createReactiveEffect(fn%2C%20options)%20%7B%5Cn%20%20%20%20%2F%2F%20%E6%9E%84%E9%80%A0%E5%9B%BA%E5%AE%9A%E6%A0%BC%E5%BC%8F%E7%9A%84effect%5Cn%20%20%20%20const%20effect%20%3D%20function%20effect(...args)%20%7B%5Cn%20%20%20%20%20%20return%20run(effect%2C%20fn%2C%20args)%3B%5Cn%20%20%20%20%7D%3B%5Cn%20%20%20%20%2F%2F%20effect%E7%9A%84%E9%85%8D%E7%BD%AE%5Cn%20%20%20%20effect.deps%20%3D%20%5B%5D%3B%5Cn%20%20%20%20effect.computed%20%3D%20options.computed%3B%5Cn%20%20%20%20effect.lazy%20%3D%20options.lazy%3B%5Cn%20%20%20%20return%20effect%3B%5Cn%20%20%7D%5Cn%20%20function%20run(effect%2C%20fn%2C%20args)%20%7B%5Cn%20%20%20%20%2F%2F%20%E6%89%A7%E8%A1%8Ceffect%5Cn%20%20%20%20%2F%2F%20%E5%8F%96%E5%87%BAeffect%20%E6%89%A7%E8%A1%8C%5Cn%20%20%20%20if%20(effectStack.indexOf(effect)%20%3D%3D%3D%20-1)%20%7B%5Cn%20%20%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%20%20effectStack.push(effect)%3B%5Cn%20%20%20%20%20%20%20%20return%20fn(...args)%3B%20%2F%2F%20%E6%89%A7%E8%A1%8Ceffect%5Cn%20%20%20%20%20%20%7D%20finally%20%7B%5Cn%20%20%20%20%20%20%20%20effectStack.pop()%3B%20%2F%2F%20effect%E6%89%A7%E8%A1%8C%E5%AE%8C%E6%AF%95%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22N9uIy%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"bmhDu\" id=\"bmhDu\"><span data-lake-id=\"u26a80bec\" id=\"u26a80bec\">track</span></h2><p data-lake-id=\"u8767f459\" id=\"u8767f459\"><span data-lake-id=\"u6bd65ca4\" id=\"u6bd65ca4\">接受两个参数：target 和 key</span></p><ul list=\"u3d543b87\"><li fid=\"ud2bd9f1e\" data-lake-id=\"u7feaab2c\" id=\"u7feaab2c\"><span data-lake-id=\"u1f7bc52b\" id=\"u1f7bc52b\">如果没有 activeEffect，则说明没有创建 effect 依赖</span></li><li fid=\"ud2bd9f1e\" data-lake-id=\"u81b7a79f\" id=\"u81b7a79f\"><span data-lake-id=\"ud96e0223\" id=\"ud96e0223\">如果有 activeEffect，则去判断 WeakMap 集合中是否有 target 属性</span></li><li fid=\"ud2bd9f1e\" data-lake-id=\"ucc3075d2\" id=\"ucc3075d2\"><span data-lake-id=\"u80054f4a\" id=\"u80054f4a\">WeakMap 集合中没有 target 属性，则 </span><code data-lake-id=\"ue3cf0f48\" id=\"ue3cf0f48\"><span data-lake-id=\"uf8aca12b\" id=\"uf8aca12b\">set(target, (depsMap = new Map()))</span></code></li><li fid=\"ud2bd9f1e\" data-lake-id=\"u16e27da7\" id=\"u16e27da7\"><span data-lake-id=\"ue504a5f4\" id=\"ue504a5f4\">WeakMap 集合中有 target 属性，则判断 target 属性的 map 值的 depsMap 中是否有 key 属性</span></li><li fid=\"ud2bd9f1e\" data-lake-id=\"ub67b1409\" id=\"ub67b1409\"><span data-lake-id=\"u4b8cbcba\" id=\"u4b8cbcba\">depsMap 中没有 key 属性，则 </span><code data-lake-id=\"u46567f79\" id=\"u46567f79\"><span data-lake-id=\"uc17d204a\" id=\"uc17d204a\">set(key, (dep = new Set())) －depsMap</span></code><span data-lake-id=\"u7f07fbfd\" id=\"u7f07fbfd\"> 中有 key 属性，则添加这个 activeEffect</span></li></ul><p data-lake-id=\"udd62cb51\" id=\"udd62cb51\"><span data-lake-id=\"u8493eefd\" id=\"u8493eefd\">​</span><br></p><p data-lake-id=\"u958f24db\" id=\"u958f24db\"><span data-lake-id=\"ua4f79c91\" id=\"ua4f79c91\">假如数据是这样的。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%7B%5Cn%20%20name%3A%20'18zili'%2C%5Cn%20%20obj%3A%20%7B%5Cn%20%20%20%20age%3A%2018%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Sj3yq%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u65eb41ba\" id=\"u65eb41ba\"><span data-lake-id=\"u49ce2dac\" id=\"u49ce2dac\">那么经过 </span><span data-lake-id=\"u0a721689\" id=\"u0a721689\">track</span><span data-lake-id=\"ufb85c7f8\" id=\"ufb85c7f8\"> 的处理，我们就得到了这样的数据格式。</span></p><p data-lake-id=\"u0243381d\" id=\"u0243381d\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1648098477089-bb4e5530-e1c0-401e-a8fc-a76ceaca6c8c.png%22%2C%22taskId%22%3A%22u2187ecc1-87d4-46dc-bf56-0766441fe0c%22%2C%22clientId%22%3A%22u03f2ea5d-8f3d-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1304%2C%22height%22%3A768%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A184310%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1304%2C%22originHeight%22%3A768%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22NAME%3A'18ZILI%2C%20OBJ%3A%7B%20AGE%3A18%20KEY%20KEY%20'NAME%20MAP1%20TARGET1%20SET1%20EFFECT%20VALUE%20VALUE%20'OBJ'%20KEY%20MAP2%20EFFECT%20SET1%20VALUE%20WEAKMAP%20KEY%20%7B%20AGE%3A18%5D%20KEY%20'AGE'%20TARGET2%20MAP1%20VALUE%20SET1%20EFFECT%20VALUE%20%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A794.24365%2C%22y%22%3A114.139496%2C%22width%22%3A141.7699%2C%22height%22%3A22.513644000000014%2C%22text%22%3A%22NAME%3A'18ZILI%2C%22%7D%2C%7B%22x%22%3A793.863%2C%22y%22%3A143.25931%2C%22width%22%3A61.47079999999994%2C%22height%22%3A23.75193999999999%2C%22text%22%3A%22OBJ%3A%7B%22%7D%2C%7B%22x%22%3A817.82556%2C%22y%22%3A169.63835%2C%22width%22%3A78.01256999999998%2C%22height%22%3A26.10696999999999%2C%22text%22%3A%22AGE%3A18%22%7D%2C%7B%22x%22%3A667.07043%2C%22y%22%3A228.28506%2C%22width%22%3A41.314070000000015%2C%22height%22%3A24.848730000000018%2C%22text%22%3A%22KEY%22%7D%2C%7B%22x%22%3A915.47614%2C%22y%22%3A277.84833%2C%22width%22%3A42.52098999999998%2C%22height%22%3A26.56257000000005%2C%22text%22%3A%22KEY%22%7D%2C%7B%22x%22%3A1023.90826%2C%22y%22%3A282.00787%2C%22width%22%3A65.63893999999993%2C%22height%22%3A17.493470000000002%2C%22text%22%3A%22'NAME%22%7D%2C%7B%22x%22%3A791.7768%2C%22y%22%3A307.5904%2C%22width%22%3A58.744140000000016%2C%22height%22%3A21.173760000000016%2C%22text%22%3A%22MAP1%22%7D%2C%7B%22x%22%3A490.2253%2C%22y%22%3A313.33527%2C%22width%22%3A96.94900000000001%2C%22height%22%3A33.06826000000001%2C%22text%22%3A%22TARGET1%22%7D%2C%7B%22x%22%3A1037.9565%2C%22y%22%3A335.23315%2C%22width%22%3A46.77780000000007%2C%22height%22%3A21.215119999999956%2C%22text%22%3A%22SET1%22%7D%2C%7B%22x%22%3A1151.8315%2C%22y%22%3A334.5488%2C%22width%22%3A62.574100000000044%2C%22height%22%3A22.632349999999974%2C%22text%22%3A%22EFFECT%22%7D%2C%7B%22x%22%3A916.7886%2C%22y%22%3A337.26193%2C%22width%22%3A57.46780000000001%2C%22height%22%3A19.31556999999998%2C%22text%22%3A%22VALUE%22%7D%2C%7B%22x%22%3A669.2004%2C%22y%22%3A366.71805%2C%22width%22%3A56.759700000000066%2C%22height%22%3A18.33821999999998%2C%22text%22%3A%22VALUE%22%7D%2C%7B%22x%22%3A1021.99475%2C%22y%22%3A392.2485%2C%22width%22%3A43.200950000000034%2C%22height%22%3A23.84494000000001%2C%22text%22%3A%22'OBJ'%22%7D%2C%7B%22x%22%3A916.4984%2C%22y%22%3A392.44037%2C%22width%22%3A40.58460000000002%2C%22height%22%3A25.446410000000014%2C%22text%22%3A%22KEY%22%7D%2C%7B%22x%22%3A792.7707%2C%22y%22%3A421.499%2C%22width%22%3A60.33339999999998%2C%22height%22%3A22.706399999999974%2C%22text%22%3A%22MAP2%22%7D%2C%7B%22x%22%3A1152.3225%2C%22y%22%3A450.38428%2C%22width%22%3A62.40820000000008%2C%22height%22%3A20.31256000000002%2C%22text%22%3A%22EFFECT%22%7D%2C%7B%22x%22%3A1040.1348%2C%22y%22%3A450.91077%2C%22width%22%3A42.662900000000036%2C%22height%22%3A19.19399999999996%2C%22text%22%3A%22SET1%22%7D%2C%7B%22x%22%3A917.7526%2C%22y%22%3A452.29645%2C%22width%22%3A56.44200000000001%2C%22height%22%3A18.12527%2C%22text%22%3A%22VALUE%22%7D%2C%7B%22x%22%3A120.66689%2C%22y%22%3A454.07068%2C%22width%22%3A217.85022999999998%2C%22height%22%3A47.768280000000004%2C%22text%22%3A%22WEAKMAP%22%7D%2C%7B%22x%22%3A667.116%2C%22y%22%3A546.8818%2C%22width%22%3A42.36620000000005%2C%22height%22%3A24.20225000000005%2C%22text%22%3A%22KEY%22%7D%2C%7B%22x%22%3A778.3263%2C%22y%22%3A546.9347%2C%22width%22%3A98.01763000000005%2C%22height%22%3A22.777600000000007%2C%22text%22%3A%22%7B%20AGE%3A18%5D%22%7D%2C%7B%22x%22%3A916.97614%2C%22y%22%3A597.64923%2C%22width%22%3A39.13445999999999%2C%22height%22%3A23.84967000000006%2C%22text%22%3A%22KEY%22%7D%2C%7B%22x%22%3A1022.47955%2C%22y%22%3A598.09143%2C%22width%22%3A44.92045000000007%2C%22height%22%3A21.652870000000007%2C%22text%22%3A%22'AGE'%22%7D%2C%7B%22x%22%3A489.54306%2C%22y%22%3A604.71655%2C%22width%22%3A99.24833999999993%2C%22height%22%3A29.797050000000013%2C%22text%22%3A%22TARGET2%22%7D%2C%7B%22x%22%3A790.175%2C%22y%22%3A625.538%2C%22width%22%3A58.54430000000002%2C%22height%22%3A22.45309999999995%2C%22text%22%3A%22MAP1%22%7D%2C%7B%22x%22%3A668.6937%2C%22y%22%3A627.5861%2C%22width%22%3A57.752039999999965%2C%22height%22%3A18.944200000000023%2C%22text%22%3A%22VALUE%22%7D%2C%7B%22x%22%3A1039.3875%2C%22y%22%3A653.69934%2C%22width%22%3A44.582099999999855%2C%22height%22%3A20.409760000000006%2C%22text%22%3A%22SET1%22%7D%2C%7B%22x%22%3A1152.4042%2C%22y%22%3A656.1688%2C%22width%22%3A62.613399999999956%2C%22height%22%3A19.267600000000016%2C%22text%22%3A%22EFFECT%22%7D%2C%7B%22x%22%3A917.40375%2C%22y%22%3A656.9698%2C%22width%22%3A57.546550000000025%2C%22height%22%3A18.458240000000046%2C%22text%22%3A%22VALUE%22%7D%2C%7B%22x%22%3A1137.6282%2C%22y%22%3A725.63885%2C%22width%22%3A148.1085999999998%2C%22height%22%3A21.189089999999965%2C%22text%22%3A%22%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22Jdz6Y%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%20%20%2F%2F%20%E5%AD%98%E5%82%A8%20effect%5Cn%20%20let%20effectStack%20%3D%20%5B%5D%3B%5Cn%20%20let%20targetMap%20%3D%20new%20WeakMap()%3B%5Cn%20%20function%20track(target%2C%20key)%20%7B%5Cn%20%20%20%20const%20effect%20%3D%20effectStack%5BeffectStack.length%20-%201%5D%3B%5Cn%20%20%20%20if%20(effect)%20%7B%5Cn%20%20%20%20%20%20let%20depMap%20%3D%20targetMap.get(target)%3B%5Cn%20%20%20%20%20%20if%20(!depMap)%20%7B%5Cn%20%20%20%20%20%20%20%20depMap%20%3D%20new%20Map()%3B%5Cn%20%20%20%20%20%20%20%20targetMap.set(target%2C%20depMap)%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%5Cn%20%20%20%20%20%20let%20dep%20%3D%20depMap.get(key)%3B%5Cn%20%20%20%20%20%20if%20(!dep)%20%7B%5Cn%20%20%20%20%20%20%20%20dep%20%3D%20new%20Set()%3B%5Cn%20%20%20%20%20%20%20%20depMap.set(key%2C%20dep)%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%5Cn%20%20%20%20%20%20if%20(!dep.has(effect))%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E6%96%B0%E5%A2%9E%E4%BE%9D%E8%B5%96%20%E5%8F%8C%E5%90%91%E5%AD%98%E5%82%A8%20%E6%96%B9%E4%BE%BF%E6%9F%A5%E6%89%BE%E4%BC%98%E5%8C%96%5Cn%20%20%20%20%20%20%20%20dep.add(effect)%3B%5Cn%20%20%20%20%20%20%20%20effect.deps.push(dep)%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22h1fDy%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"PCt5V\" id=\"PCt5V\"><span data-lake-id=\"u5ec06e0a\" id=\"u5ec06e0a\">trigger</span></h2><p data-lake-id=\"ucc129ad6\" id=\"ucc129ad6\"><span data-lake-id=\"u4ac5539e\" id=\"u4ac5539e\">判断 WeakMap 中是否有 target 属性，WeakMap 中有 target 属性，则判断 target 属性的 map 值中是否有 key 属性，有的话循环触发收集的 effect()。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%20%20function%20trigger(target%2C%20key)%20%7B%5Cn%20%20%20%20%2F%2F%20%E6%95%B0%E6%8D%AE%E5%8F%98%E5%8C%96%E5%90%8E%EF%BC%8C%E9%80%9A%E7%9F%A5%E6%9B%B4%E6%96%B0%20%E6%89%A7%E8%A1%8Ceffect%5Cn%20%20%20%20const%20depMap%20%3D%20targetMap.get(target)%3B%5Cn%20%20%20%20if%20(depMap%20%3D%3D%3D%20undefined)%20%7B%5Cn%20%20%20%20%20%20return%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20const%20effects%20%3D%20new%20Set()%3B%5Cn%20%20%20%20if%20(key)%20%7B%5Cn%20%20%20%20%20%20let%20deps%20%3D%20depMap.get(key)%3B%5Cn%20%20%20%20%20%20deps.forEach((effect)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20effects.add(effect)%3B%5Cn%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20effects.forEach((effect)%20%3D%3E%20effect())%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22qL0wh%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"dBLon\" id=\"dBLon\"><span data-lake-id=\"ua1c8dd77\" id=\"ua1c8dd77\">reactivity 文件目录</span></h2><p data-lake-id=\"u6f1d2240\" id=\"u6f1d2240\"><span data-lake-id=\"u06753019\" id=\"u06753019\">在源码的 packages/reactivity/src目录下，有以下几个主要文件：</span></p><ol list=\"u0db8daef\"><li fid=\"u1b4aa2ec\" data-lake-id=\"ua8dbf156\" id=\"ua8dbf156\"><span data-lake-id=\"u9ada325d\" id=\"u9ada325d\">effect.ts：用来定义 </span><span data-lake-id=\"u60afa87d\" id=\"u60afa87d\">effect</span><span data-lake-id=\"uc1ab2b57\" id=\"uc1ab2b57\"> / </span><span data-lake-id=\"u30f6150a\" id=\"u30f6150a\">track</span><span data-lake-id=\"uc178013b\" id=\"uc178013b\"> / </span><span data-lake-id=\"ucdd12f24\" id=\"ucdd12f24\">trigger</span><span data-lake-id=\"u4552e197\" id=\"u4552e197\"> ；</span></li><li fid=\"u1b4aa2ec\" data-lake-id=\"u15a31917\" id=\"u15a31917\"><span data-lake-id=\"uea824340\" id=\"uea824340\">baseHandlers.ts：定义 Proxy 处理器（ get 和 set）；</span></li><li fid=\"u1b4aa2ec\" data-lake-id=\"udc636a1e\" id=\"udc636a1e\"><span data-lake-id=\"u0877935c\" id=\"u0877935c\">reactive.ts：定义 </span><span data-lake-id=\"u99590a88\" id=\"u99590a88\">reactive</span><span data-lake-id=\"uae629a8b\" id=\"uae629a8b\"> 方法并创建 ES6 Proxy；</span></li><li fid=\"u1b4aa2ec\" data-lake-id=\"u5aec5a7d\" id=\"u5aec5a7d\"><span data-lake-id=\"u2a16f57f\" id=\"u2a16f57f\">ref.ts：定义 reactive 的 ref 使用的对象访问器；</span></li><li fid=\"u1b4aa2ec\" data-lake-id=\"u2c1314a6\" id=\"u2c1314a6\"><span data-lake-id=\"u271b5de4\" id=\"u271b5de4\">computed.ts：定义计算属性的方法；</span></li></ol><p data-lake-id=\"u58208248\" id=\"u58208248\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1647190772866-a0325ede-917b-4c9e-990e-087a0225f21c.png%22%2C%22taskId%22%3A%22ud978a69f-265d-4cd5-8b8f-6d54446b14a%22%2C%22clientId%22%3A%22u5d19676c-0673-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1011%2C%22height%22%3A404%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A293719%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1011%2C%22originHeight%22%3A404%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22INSIDE%20THE%2FPACKAGES%2FREACTIVITY%2FSRC%2FDIRECTORY%20WE%20HAVE%20A%20FEW.TS(TYPESCRIPT%20FILES)%3A%20EFFECT.TS%20DEFINES%20EFFECT%2CTRACK%2CAND%20TRIGGER.%3C%20REC%20DEFINES%20PROXY%20HANDLERS(GET%20AND%20SET).%20BASEHANDLERS.TS%20DEFINES%20REACTIVE%20WHICH%20CREATES%20AN%20ES6%20PROXY.%20REACTIVE.TS%20REF.TS%20DEFINES%20REACTIVE%20REFERENCE%20USING%20OBJECT%20ACCESSORS.%20DEFINES%20COMPUTED%20WHICH%20USES%20EFFECT%20AND%20RETURNS%20A%20REF.%20COMPUTED.TS%20%40%E7%A8%80%E5%A3%AB%E6%91%87%E6%8B%BF%E8%A5%BF%E8%91%A1%E8%90%84%E4%B9%90%E8%AF%BE%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A35.329422%2C%22y%22%3A7.6532083%2C%22width%22%3A805.044538%2C%22height%22%3A27.961293700000002%2C%22text%22%3A%22INSIDE%20THE%2FPACKAGES%2FREACTIVITY%2FSRC%2FDIRECTORY%20WE%20HAVE%20A%20FEW.TS(TYPESCRIPT%20FILES)%3A%22%7D%2C%7B%22x%22%3A83.20181%2C%22y%22%3A70.535706%2C%22width%22%3A134.27758%2C%22height%22%3A24.323583999999997%2C%22text%22%3A%22EFFECT.TS%22%7D%2C%7B%22x%22%3A341.39203%2C%22y%22%3A70.89449%2C%22width%22%3A329.40936999999997%2C%22height%22%3A26.52279%2C%22text%22%3A%22DEFINES%20EFFECT%2CTRACK%2CAND%20TRIGGER.%3C%22%7D%2C%7B%22x%22%3A505.39484%2C%22y%22%3A106.57411%2C%22width%22%3A23.435760000000016%2C%22height%22%3A12.76021999999999%2C%22text%22%3A%22REC%22%7D%2C%7B%22x%22%3A342.54056%2C%22y%22%3A157.69997%2C%22width%22%3A357.60983999999996%2C%22height%22%3A22.699780000000004%2C%22text%22%3A%22DEFINES%20PROXY%20HANDLERS(GET%20AND%20SET).%22%7D%2C%7B%22x%22%3A85.97554%2C%22y%22%3A158.03523%2C%22width%22%3A218.53336%2C%22height%22%3A20.535139999999984%2C%22text%22%3A%22BASEHANDLERS.TS%22%7D%2C%7B%22x%22%3A340.78485%2C%22y%22%3A219.54454%2C%22width%22%3A441.45655%2C%22height%22%3A25.237169999999992%2C%22text%22%3A%22DEFINES%20REACTIVE%20WHICH%20CREATES%20AN%20ES6%20PROXY.%22%7D%2C%7B%22x%22%3A86.416245%2C%22y%22%3A219.61269%2C%22width%22%3A160.087215%2C%22height%22%3A22.622920000000022%2C%22text%22%3A%22REACTIVE.TS%22%7D%2C%7B%22x%22%3A85.38293%2C%22y%22%3A285.3984%2C%22width%22%3A87.33852%2C%22height%22%3A21.53922%2C%22text%22%3A%22REF.TS%22%7D%2C%7B%22x%22%3A340.187%2C%22y%22%3A286.95834%2C%22width%22%3A496.95939999999996%2C%22height%22%3A21.79455999999999%2C%22text%22%3A%22DEFINES%20REACTIVE%20REFERENCE%20USING%20OBJECT%20ACCESSORS.%22%7D%2C%7B%22x%22%3A341.1447%2C%22y%22%3A348.56296%2C%22width%22%3A531.2789499999999%2C%22height%22%3A21.796600000000012%2C%22text%22%3A%22DEFINES%20COMPUTED%20WHICH%20USES%20EFFECT%20AND%20RETURNS%20A%20REF.%22%7D%2C%7B%22x%22%3A84.58024%2C%22y%22%3A349.3108%2C%22width%22%3A161.72413%2C%22height%22%3A21.842580000000055%2C%22text%22%3A%22COMPUTED.TS%22%7D%2C%7B%22x%22%3A836.75305%2C%22y%22%3A371.03134%2C%22width%22%3A165.10744999999997%2C%22height%22%3A23.60442999999998%2C%22text%22%3A%22%40%E7%A8%80%E5%A3%AB%E6%91%87%E6%8B%BF%E8%A5%BF%E8%91%A1%E8%90%84%E4%B9%90%E8%AF%BE%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22ucae0aea4%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:32:39.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:32:39.000Z",
  "updated_at": "2022-05-10T15:12:43.000Z",
  "published_at": "2022-04-04T11:32:39.000Z",
  "first_published_at": "2022-04-04T11:32:39.015Z",
  "word_count": 931,
  "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647254315479-a6f6bf50-aa58-42d4-ab91-612b017f6160.png",
  "description": "采用 Proxy + Reflect 反射的原理，劫持 getter 和 setter，当数据发生变化时，触发代理对象发生变化，此时发布消息给订阅者，触发相应的监听回调在 vue3 中通过 effect 来实现响应式处理和视图更新之间的解耦reactive设置对象为响应式对象。接受一个参数，判...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}