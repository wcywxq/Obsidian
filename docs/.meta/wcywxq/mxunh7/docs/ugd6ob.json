{
  "id": 72212111,
  "slug": "ugd6ob",
  "title": "钩子函数和执行顺序",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "钩子函数的种类分为: 全局守卫、路由守卫、组件守卫\n<a name=\"JaNj2\"></a>\n## 完整的导航解析流程\n\n- 导航行为被触发，此时导航未被确认。\n- 在失活的组件里调用离开守卫 beforeRouteLeave。\n- 调用全局的 beforeEach守卫。\n- 在重用的组件里调用 beforeRouteUpdate 守卫(2.2+)。\n- 在路由配置里调用 beforeEnteY。\n- 解析异步路由组件（如果有）。\n- 在被激活的组件里调用 beforeRouteEnter。\n- 调用全局的 beforeResolve 守卫（2.5+），标示解析阶段完成。\n- 导航被确认。\n- 调用全局的 afterEach 钩子。\n- 非重用组件，开始组件实例的生命周期：beforeCreate&created、beforeMount&mounted\n- 触发 DOM 更新。\n- 用创建好的实例调用 beforeRouteEnter守卫中传给 next 的回调函数。\n- 导航完成\n",
  "body_draft": "",
  "body_html": "<!doctype html><p data-lake-id=\"u7fb7487b\"><span class=\"lake-fontsize-12\" style=\"color: #444444;\">钩子函数的种类分为: 全局守卫、路由守卫、组件守卫</span></p><h2 id=\"JaNj2\"><span>完整的导航解析流程</span></h2><ul><li><span>导航行为被触发，此时导航未被确认。</span></li><li><span>在失活的组件里调用离开守卫 beforeRouteLeave。</span></li><li><span>调用全局的 beforeEach守卫。</span></li><li><span>在重用的组件里调用 beforeRouteUpdate 守卫(2.2+)。</span></li><li><span>在路由配置里调用 beforeEnteY。</span></li><li><span>解析异步路由组件（如果有）。</span></li><li><span>在被激活的组件里调用 beforeRouteEnter。</span></li><li><span>调用全局的 beforeResolve 守卫（2.5+），标示解析阶段完成。</span></li><li><span>导航被确认。</span></li><li><span>调用全局的 afterEach 钩子。</span></li><li><span>非重用组件，开始组件实例的生命周期：beforeCreate&amp;created、beforeMount&amp;mounted</span></li><li><span>触发 DOM 更新。</span></li><li><span>用创建好的实例调用 beforeRouteEnter守卫中传给 next 的回调函数。</span></li><li><span>导航完成</span></li></ul>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><p data-lake-id=\"u7fb7487b\" id=\"u7fb7487b\"><span data-lake-id=\"u8aa41cbf\" id=\"u8aa41cbf\" class=\"lake-fontsize-12\" style=\"color: rgb(68, 68, 68)\">钩子函数的种类分为: 全局守卫、路由守卫、组件守卫</span></p><h2 data-lake-id=\"JaNj2\" id=\"JaNj2\"><span data-lake-id=\"u4666bdb8\" id=\"u4666bdb8\">完整的导航解析流程</span></h2><ul list=\"u40fc0f0b\"><li fid=\"u7536ff61\" data-lake-id=\"u49e84d0f\" id=\"u49e84d0f\"><span data-lake-id=\"uf0baf586\" id=\"uf0baf586\">导航行为被触发，此时导航未被确认。</span></li><li fid=\"u7536ff61\" data-lake-id=\"u3e72468e\" id=\"u3e72468e\"><span data-lake-id=\"u503c20f9\" id=\"u503c20f9\">在失活的组件里调用离开守卫 beforeRouteLeave。</span></li><li fid=\"u7536ff61\" data-lake-id=\"uc7a2813f\" id=\"uc7a2813f\"><span data-lake-id=\"u1738b630\" id=\"u1738b630\">调用全局的 beforeEach守卫。</span></li><li fid=\"u7536ff61\" data-lake-id=\"uf2a2ac8e\" id=\"uf2a2ac8e\"><span data-lake-id=\"uf5786d05\" id=\"uf5786d05\">在重用的组件里调用 beforeRouteUpdate 守卫(2.2+)。</span></li><li fid=\"u7536ff61\" data-lake-id=\"ua2f02832\" id=\"ua2f02832\"><span data-lake-id=\"u60996024\" id=\"u60996024\">在路由配置里调用 beforeEnteY。</span></li><li fid=\"u7536ff61\" data-lake-id=\"u3c6ae1f6\" id=\"u3c6ae1f6\"><span data-lake-id=\"u043cb3ce\" id=\"u043cb3ce\">解析异步路由组件（如果有）。</span></li><li fid=\"u7536ff61\" data-lake-id=\"uaaf9fec1\" id=\"uaaf9fec1\"><span data-lake-id=\"u9a0cd3d9\" id=\"u9a0cd3d9\">在被激活的组件里调用 beforeRouteEnter。</span></li><li fid=\"u7536ff61\" data-lake-id=\"u62506288\" id=\"u62506288\"><span data-lake-id=\"ud438819e\" id=\"ud438819e\">调用全局的 beforeResolve 守卫（2.5+），标示解析阶段完成。</span></li><li fid=\"u7536ff61\" data-lake-id=\"ud1f117a5\" id=\"ud1f117a5\"><span data-lake-id=\"u6576f9a7\" id=\"u6576f9a7\">导航被确认。</span></li><li fid=\"u7536ff61\" data-lake-id=\"ude037138\" id=\"ude037138\"><span data-lake-id=\"ubfe9701d\" id=\"ubfe9701d\">调用全局的 afterEach 钩子。</span></li><li fid=\"u7536ff61\" data-lake-id=\"uba5b81fd\" id=\"uba5b81fd\"><span data-lake-id=\"u548add70\" id=\"u548add70\">非重用组件，开始组件实例的生命周期：beforeCreate&amp;created、beforeMount&amp;mounted</span></li><li fid=\"u7536ff61\" data-lake-id=\"uaa2dd6e2\" id=\"uaa2dd6e2\"><span data-lake-id=\"uaf74d299\" id=\"uaf74d299\">触发 DOM 更新。</span></li><li fid=\"u7536ff61\" data-lake-id=\"u37c9e737\" id=\"u37c9e737\"><span data-lake-id=\"udf18f22c\" id=\"udf18f22c\">用创建好的实例调用 beforeRouteEnter守卫中传给 next 的回调函数。</span></li><li fid=\"u7536ff61\" data-lake-id=\"u7d7ee569\" id=\"u7d7ee569\"><span data-lake-id=\"u568d6525\" id=\"u568d6525\">导航完成</span></li></ul>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:33:05.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:33:05.000Z",
  "updated_at": "2022-05-10T15:12:40.000Z",
  "published_at": "2022-04-04T11:33:05.000Z",
  "first_published_at": "2022-04-04T11:33:05.268Z",
  "word_count": 213,
  "cover": null,
  "description": "钩子函数的种类分为: 全局守卫、路由守卫、组件守卫完整的导航解析流程导航行为被触发，此时导航未被确认。在失活的组件里调用离开守卫 beforeRouteLeave。调用全局的 beforeEach守卫。在重用的组件里调用 beforeRouteUpdate 守卫(2.2+)。在路由配置里调用 ...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}