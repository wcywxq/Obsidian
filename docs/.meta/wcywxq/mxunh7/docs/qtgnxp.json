{
  "id": 72212241,
  "slug": "qtgnxp",
  "title": "<script>标签",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"KwomP\"></a>\n## 内联和外部引用的区别\n\n<a name=\"jVPBg\"></a>\n### 内联代码\n\n- 加载在同一页面中，因此不需要触发另一个请求\n- 立即被执行\n- async 和 defer 属性无效\n- 使用服务端动态渲染时会很有帮助\n<a name=\"uoroU\"></a>\n### 外部脚本文件\n\n- 更好滴分离关注点和可维护性\n- async 和 defer 属性有效，因此如果存在此属性，脚本将更改默认行为\n- 下载外部脚本后，浏览器会将其存储在缓存中，因此如果另外一个页面引用它，将无需进行额外下载\n- 可用于按需加载客户端代码并减少整体下载时间和大小\n\n---\n\n<a name=\"mO3nd\"></a>\n## defer 和 async 的区别\n\n如果没有 defer 或 async 属性，浏览器会立即加载并执行相应的脚本。它不会等待后续加载的文档元素，读取到就会开始加载和执行，这样就阻塞了后续文档的加载。\n\n下图可以直观的看出三者之间的区别:<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1647787938122-fc0ec65e-ea76-4f88-9779-0ac34cd18417.png#clientId=ue67105d7-b339-4&from=paste&height=112&id=u700315d5&originHeight=112&originWidth=689&originalType=binary&ratio=1&rotation=0&showTitle=false&size=49283&status=done&style=none&taskId=u6e37f40c-c57b-4c32-b565-498185ecff7&title=&width=689)\n:::info\n其中蓝色代表 js 脚本网络加载时间，红色代表 js 脚本执行时间，绿色代表 html 解析。\n:::\n\n`<script>` 标签添加 defer 或 async 属性，脚本就会异步加载。渲染引擎遇到这一行命令，就会开始下载外部脚本，但不会等它下载和执行，而是直接执行后面的命令。\n\n- defer：要等到整个页面在内存中正常渲染结束，才会执行；多个脚本时，按顺序执行\n- async：一旦下载完，渲染引擎就会中断渲染，执行这个脚本再继续渲染。多个脚本时，不能保证按执行顺序\n:::info\n总结:\n\n1. defer 是“**渲染完再执行**”，async 是“**下载完就执行**”。\n   1. defer = true，则脚本会在页面解析完毕后执行\n   2. async = true，则脚本在下载完成后异步执行\n   3. async = false, defer = false，则脚本会在页面解析过程中停止页面解析，立即下载并执行\n2. 使用这两个属性的脚本内部不能调用 document.write 方法\n3. html4.0 中定义了 defer，html5.0 中定义了 async\n:::\n\n",
  "body_draft": "",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"KwomP\"><span class=\"ne-text\" style=\"color: rgb(56, 56, 56)\">内联和外部引用的区别</span></h2><p id=\"uf5f278ab\" class=\"ne-p\"><br></p><h3 id=\"jVPBg\"><span class=\"ne-text\">内联代码</span></h3><p id=\"ucf1b2019\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"ud288b497\"><span class=\"ne-text\">加载在同一页面中，因此不需要触发另一个请求</span></li><li id=\"u0ab9b29f\"><span class=\"ne-text\">立即被执行</span></li><li id=\"uac49bf35\"><span class=\"ne-text\">async 和 defer 属性无效</span></li><li id=\"uc798fba2\"><span class=\"ne-text\">使用服务端动态渲染时会很有帮助</span></li></ul><h3 id=\"uoroU\"><span class=\"ne-text\">外部脚本文件</span></h3><p id=\"u54b7b73a\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uc8632264\"><span class=\"ne-text\">更好滴分离关注点和可维护性</span></li><li id=\"u86f59e20\"><span class=\"ne-text\">async 和 defer 属性有效，因此如果存在此属性，脚本将更改默认行为</span></li><li id=\"u96dbd6fe\"><span class=\"ne-text\">下载外部脚本后，浏览器会将其存储在缓存中，因此如果另外一个页面引用它，将无需进行额外下载</span></li><li id=\"u0955e04e\"><span class=\"ne-text\">可用于按需加载客户端代码并减少整体下载时间和大小</span></li></ul><hr id=\"JmLfW\" class=\"ne-hr\"><h2 id=\"mO3nd\"><span class=\"ne-text\" style=\"color: rgb(56, 56, 56)\">defer 和 async 的区别</span></h2><p id=\"u4078a5da\" class=\"ne-p\"><br></p><p id=\"u2c563f1c\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(56, 56, 56); font-size: 15px\">如果没有 defer 或 async 属性，浏览器会立即加载并执行相应的脚本。它不会等待后续加载的文档元素，读取到就会开始加载和执行，这样就阻塞了后续文档的加载。</span></p><p id=\"u2231f02b\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(56, 56, 56); font-size: 15px\"></span></p><p id=\"u93440582\" class=\"ne-p\"><span class=\"ne-text\" style=\"color: rgb(56, 56, 56); font-size: 15px\">下图可以直观的看出三者之间的区别:</span></p><p id=\"u100a80cf\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1647787938122-fc0ec65e-ea76-4f88-9779-0ac34cd18417.png\" width=\"689\" id=\"u700315d5\" class=\"ne-image\"></p><div data-type=\"info\" class=\"ne-alert\"><p id=\"u0356ee52\" class=\"ne-p\"><span class=\"ne-text\">其中蓝色代表 js 脚本网络加载时间，红色代表 js 脚本执行时间，绿色代表 html 解析。</span></p></div><p id=\"ubb4a4cbf\" class=\"ne-p\"><br></p><p id=\"u6b62ee6d\" class=\"ne-p\"><code class=\"ne-code\"><span class=\"ne-text\">&lt;script&gt;</span></code><span class=\"ne-text\"> 标签添加 defer 或 async 属性，脚本就会异步加载。渲染引擎遇到这一行命令，就会开始下载外部脚本，但不会等它下载和执行，而是直接执行后面的命令。</span></p><p id=\"uf24d2376\" class=\"ne-p\"><span class=\"ne-text\"></span></p><ul class=\"ne-ul\"><li id=\"u8eeaef7e\"><span class=\"ne-text\">defer：要等到整个页面在内存中正常渲染结束，才会执行；多个脚本时，按顺序执行</span></li><li id=\"ub4dfe392\"><span class=\"ne-text\">async：一旦下载完，渲染引擎就会中断渲染，执行这个脚本再继续渲染。多个脚本时，不能保证按执行顺序</span></li></ul><div data-type=\"info\" class=\"ne-alert\"><p id=\"uf95127e2\" class=\"ne-p\"><span class=\"ne-text\">总结:</span></p><ol class=\"ne-ol\"><li id=\"ud34a9456\"><span class=\"ne-text\">defer 是“</span><strong><span class=\"ne-text\" style=\"color: rgba(0,82,217,1)\">渲染完再执行</span></strong><span class=\"ne-text\">”，async 是“</span><strong><span class=\"ne-text\" style=\"color: rgba(0,82,217,1)\">下载完就执行</span></strong><span class=\"ne-text\">”。</span></li></ol><ol class=\"ne-list-wrap\"><ol ne-level=\"1\" class=\"ne-ol\"><li id=\"u280cbc94\"><span class=\"ne-text\">defer = true，则脚本会在页面解析完毕后执行</span></li><li id=\"uc50cbb89\"><span class=\"ne-text\">async = true，则脚本在下载完成后异步执行</span></li><li id=\"ua1212d75\"><span class=\"ne-text\">async = false, defer = false，则脚本会在页面解析过程中停止页面解析，立即下载并执行</span></li></ol></ol><ol start=\"2\" class=\"ne-ol\"><li id=\"ua6d87284\"><span class=\"ne-text\">使用这两个属性的脚本内部不能调用 document.write 方法</span></li><li id=\"ud86c4ec1\"><span class=\"ne-text\">html4.0 中定义了 defer，html5.0 中定义了 async</span></li></ol></div><p id=\"u3a74aebd\" class=\"ne-p\"><br></p></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"KwomP\" id=\"KwomP\"><span data-lake-id=\"u393859a7\" id=\"u393859a7\" style=\"color: rgb(56, 56, 56)\">内联和外部引用的区别</span></h2><p data-lake-id=\"uf5f278ab\" id=\"uf5f278ab\"><br></p><h3 data-lake-id=\"jVPBg\" id=\"jVPBg\"><span data-lake-id=\"u9af1e284\" id=\"u9af1e284\">内联代码</span></h3><p data-lake-id=\"ucf1b2019\" id=\"ucf1b2019\"><br></p><ul list=\"u0f9396db\"><li fid=\"u21fe5e1e\" data-lake-id=\"ud288b497\" id=\"ud288b497\"><span data-lake-id=\"ub1ecba64\" id=\"ub1ecba64\">加载在同一页面中，因此不需要触发另一个请求</span></li><li fid=\"u21fe5e1e\" data-lake-id=\"u0ab9b29f\" id=\"u0ab9b29f\"><span data-lake-id=\"ua7993ac2\" id=\"ua7993ac2\">立即被执行</span></li><li fid=\"u21fe5e1e\" data-lake-id=\"uac49bf35\" id=\"uac49bf35\"><span data-lake-id=\"ufbe8ff8a\" id=\"ufbe8ff8a\">async 和 defer 属性无效</span></li><li fid=\"u21fe5e1e\" data-lake-id=\"uc798fba2\" id=\"uc798fba2\"><span data-lake-id=\"ub82fc3e3\" id=\"ub82fc3e3\">使用服务端动态渲染时会很有帮助</span></li></ul><h3 data-lake-id=\"uoroU\" id=\"uoroU\"><span data-lake-id=\"ubaab73e8\" id=\"ubaab73e8\">外部脚本文件</span></h3><p data-lake-id=\"u54b7b73a\" id=\"u54b7b73a\"><br></p><ul list=\"u3b39e904\"><li fid=\"u8e67503b\" data-lake-id=\"uc8632264\" id=\"uc8632264\"><span data-lake-id=\"u81049c07\" id=\"u81049c07\">更好滴分离关注点和可维护性</span></li><li fid=\"u8e67503b\" data-lake-id=\"u86f59e20\" id=\"u86f59e20\"><span data-lake-id=\"uc2917182\" id=\"uc2917182\">async 和 defer 属性有效，因此如果存在此属性，脚本将更改默认行为</span></li><li fid=\"u8e67503b\" data-lake-id=\"u96dbd6fe\" id=\"u96dbd6fe\"><span data-lake-id=\"u81074b4b\" id=\"u81074b4b\">下载外部脚本后，浏览器会将其存储在缓存中，因此如果另外一个页面引用它，将无需进行额外下载</span></li><li fid=\"u8e67503b\" data-lake-id=\"u0955e04e\" id=\"u0955e04e\"><span data-lake-id=\"u243e5d37\" id=\"u243e5d37\">可用于按需加载客户端代码并减少整体下载时间和大小</span></li></ul><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22JmLfW%22%7D\"></card><h2 data-lake-id=\"mO3nd\" id=\"mO3nd\"><span data-lake-id=\"uc5a49dba\" id=\"uc5a49dba\" style=\"color: rgb(56, 56, 56)\">defer 和 async 的区别</span></h2><p data-lake-id=\"u4078a5da\" id=\"u4078a5da\"><br></p><p data-lake-id=\"u2c563f1c\" id=\"u2c563f1c\"><span data-lake-id=\"u4a731900\" id=\"u4a731900\" class=\"lake-fontsize-1515\" style=\"color: rgb(56, 56, 56)\">如果没有 defer 或 async 属性，浏览器会立即加载并执行相应的脚本。它不会等待后续加载的文档元素，读取到就会开始加载和执行，这样就阻塞了后续文档的加载。</span></p><p data-lake-id=\"u2231f02b\" id=\"u2231f02b\"><span data-lake-id=\"u2c233ebd\" id=\"u2c233ebd\" class=\"lake-fontsize-1515\" style=\"color: rgb(56, 56, 56)\">​</span><br></p><p data-lake-id=\"u93440582\" id=\"u93440582\"><span data-lake-id=\"u8741e787\" id=\"u8741e787\" class=\"lake-fontsize-1515\" style=\"color: rgb(56, 56, 56)\">下图可以直观的看出三者之间的区别:</span></p><p data-lake-id=\"u100a80cf\" id=\"u100a80cf\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1647787938122-fc0ec65e-ea76-4f88-9779-0ac34cd18417.png%22%2C%22taskId%22%3A%22u6e37f40c-c57b-4c32-b565-498185ecff7%22%2C%22clientId%22%3A%22ue67105d7-b339-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A689%2C%22height%22%3A112%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A49283%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A689%2C%22originHeight%22%3A112%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22SCRIPTING%20%3CSCRIPT%3E%20HTML%20%20PARSER%20SCRIPTING%20%3CSCRIPT%20DEFER%3E%20HTML%20PARSER%20SCRIPTING%20%3CSCRIPT%20ASYNC%3E%20HTML%20PARSER%20RUNTIME%20EXECUTION%20NET%20PARSER%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A140.7347%2C%22y%22%3A4.215416%2C%22width%22%3A51.71713%2C%22height%22%3A10.05041%2C%22text%22%3A%22SCRIPTING%22%7D%2C%7B%22x%22%3A11.431752%2C%22y%22%3A9.8339%2C%22width%22%3A52.348563%2C%22height%22%3A11.487656000000001%2C%22text%22%3A%22%3CSCRIPT%3E%22%7D%2C%7B%22x%22%3A140.24501%2C%22y%22%3A19.050058%2C%22width%22%3A62.45712%2C%22height%22%3A8.305594%2C%22text%22%3A%22HTML%20%20PARSER%22%7D%2C%7B%22x%22%3A140.85973%2C%22y%22%3A37.71992%2C%22width%22%3A51.31411%2C%22height%22%3A9.819832999999996%2C%22text%22%3A%22SCRIPTING%22%7D%2C%7B%22x%22%3A9.691649%2C%22y%22%3A44.79572%2C%22width%22%3A93.85680500000001%2C%22height%22%3A10.756186999999997%2C%22text%22%3A%22%3CSCRIPT%20DEFER%3E%22%7D%2C%7B%22x%22%3A140.57213%2C%22y%22%3A52.95579%2C%22width%22%3A61.93697%2C%22height%22%3A8.799763999999996%2C%22text%22%3A%22HTML%20PARSER%22%7D%2C%7B%22x%22%3A140.97667%2C%22y%22%3A72.25773%2C%22width%22%3A50.493769999999984%2C%22height%22%3A9.452390000000008%2C%22text%22%3A%22SCRIPTING%22%7D%2C%7B%22x%22%3A9.814731%2C%22y%22%3A78.04797%2C%22width%22%3A93.11373900000001%2C%22height%22%3A12.043309999999991%2C%22text%22%3A%22%3CSCRIPT%20ASYNC%3E%22%7D%2C%7B%22x%22%3A140.9309%2C%22y%22%3A87.015175%2C%22width%22%3A62.333079999999995%2C%22height%22%3A8.960435000000004%2C%22text%22%3A%22HTML%20PARSER%22%7D%2C%7B%22x%22%3A627.7406%2C%22y%22%3A101.52917%2C%22width%22%3A34.67020000000002%2C%22height%22%3A8.50376%2C%22text%22%3A%22RUNTIME%22%7D%2C%7B%22x%22%3A332.40173%2C%22y%22%3A102.2767%2C%22width%22%3A43.7688%2C%22height%22%3A7.722679999999997%2C%22text%22%3A%22EXECUTION%22%7D%2C%7B%22x%22%3A302.15427%2C%22y%22%3A102.35342%2C%22width%22%3A15.212580000000003%2C%22height%22%3A7.688060000000007%2C%22text%22%3A%22NET%22%7D%2C%7B%22x%22%3A257.3559%2C%22y%22%3A102.66674%2C%22width%22%3A26.912559999999985%2C%22height%22%3A7.87281999999999%2C%22text%22%3A%22PARSER%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22u700315d5%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><blockquote data-lake-id=\"u93b5edc9\" id=\"u93b5edc9\" class=\"lake-alert lake-alert-info\"><p data-lake-id=\"u0356ee52\" id=\"u0356ee52\"><span data-lake-id=\"u493f7248\" id=\"u493f7248\">其中蓝色代表 js 脚本网络加载时间，红色代表 js 脚本执行时间，绿色代表 html 解析。</span></p></blockquote><p data-lake-id=\"ubb4a4cbf\" id=\"ubb4a4cbf\"><br></p><p data-lake-id=\"u6b62ee6d\" id=\"u6b62ee6d\"><code data-lake-id=\"uf1e0dfe6\" id=\"uf1e0dfe6\"><span data-lake-id=\"u81861407\" id=\"u81861407\">&lt;script&gt;</span></code><span data-lake-id=\"u69e0d2b4\" id=\"u69e0d2b4\"> 标签添加 defer 或 async 属性，脚本就会异步加载。渲染引擎遇到这一行命令，就会开始下载外部脚本，但不会等它下载和执行，而是直接执行后面的命令。</span></p><p data-lake-id=\"uf24d2376\" id=\"uf24d2376\"><span data-lake-id=\"u7c61d781\" id=\"u7c61d781\">​</span><br></p><ul list=\"u6aa71d13\"><li fid=\"u4f481fae\" data-lake-id=\"u8eeaef7e\" id=\"u8eeaef7e\"><span data-lake-id=\"u9e970e1d\" id=\"u9e970e1d\">defer：要等到整个页面在内存中正常渲染结束，才会执行；多个脚本时，按顺序执行</span></li><li fid=\"u4f481fae\" data-lake-id=\"ub4dfe392\" id=\"ub4dfe392\"><span data-lake-id=\"ueecf6959\" id=\"ueecf6959\">async：一旦下载完，渲染引擎就会中断渲染，执行这个脚本再继续渲染。多个脚本时，不能保证按执行顺序</span></li></ul><blockquote data-lake-id=\"ubf7b012f\" id=\"ubf7b012f\" class=\"lake-alert lake-alert-info\"><p data-lake-id=\"uf95127e2\" id=\"uf95127e2\"><span data-lake-id=\"u8a29af8e\" id=\"u8a29af8e\">总结:</span></p><ol list=\"u39313027\"><li fid=\"u897248fa\" data-lake-id=\"ud34a9456\" id=\"ud34a9456\"><span data-lake-id=\"u7c0873d9\" id=\"u7c0873d9\">defer 是“</span><strong><span data-lake-id=\"u799f5a8a\" id=\"u799f5a8a\" style=\"color: rgba(0,82,217,1)\">渲染完再执行</span></strong><span data-lake-id=\"u1276e131\" id=\"u1276e131\">”，async 是“</span><strong><span data-lake-id=\"u8d1d7514\" id=\"u8d1d7514\" style=\"color: rgba(0,82,217,1)\">下载完就执行</span></strong><span data-lake-id=\"u40f514fe\" id=\"u40f514fe\">”。</span></li></ol><ol list=\"u39313027\" data-lake-indent=\"1\"><li fid=\"u897248fa\" data-lake-id=\"u280cbc94\" id=\"u280cbc94\"><span data-lake-id=\"ufc97f1a5\" id=\"ufc97f1a5\">defer = true，则脚本会在页面解析完毕后执行</span></li><li fid=\"u897248fa\" data-lake-id=\"uc50cbb89\" id=\"uc50cbb89\"><span data-lake-id=\"u97e7476b\" id=\"u97e7476b\">async = true，则脚本在下载完成后异步执行</span></li><li fid=\"u897248fa\" data-lake-id=\"ua1212d75\" id=\"ua1212d75\"><span data-lake-id=\"uaa837c98\" id=\"uaa837c98\">async = false, defer = false，则脚本会在页面解析过程中停止页面解析，立即下载并执行</span></li></ol><ol list=\"u39313027\" start=\"2\"><li fid=\"u897248fa\" data-lake-id=\"ua6d87284\" id=\"ua6d87284\"><span data-lake-id=\"uc7c87d9b\" id=\"uc7c87d9b\">使用这两个属性的脚本内部不能调用 document.write 方法</span></li><li fid=\"u897248fa\" data-lake-id=\"ud86c4ec1\" id=\"ud86c4ec1\"><span data-lake-id=\"u0e7faa2f\" id=\"u0e7faa2f\">html4.0 中定义了 defer，html5.0 中定义了 async</span></li></ol></blockquote><p data-lake-id=\"u3a74aebd\" id=\"u3a74aebd\"><br></p>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-08-25T03:21:54.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:33:48.000Z",
  "updated_at": "2022-08-25T03:21:56.000Z",
  "published_at": "2022-08-25T03:21:54.000Z",
  "first_published_at": "2022-04-04T11:33:48.080Z",
  "word_count": 577,
  "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647787938122-fc0ec65e-ea76-4f88-9779-0ac34cd18417.png",
  "description": "内联和外部引用的区别内联代码加载在同一页面中，因此不需要触发另一个请求立即被执行async 和 defer 属性无效使用服务端动态渲染时会很有帮助外部脚本文件更好滴分离关注点和可维护性async 和 defer 属性有效，因此如果存在此属性，脚本将更改默认行为下载外部脚本后，浏览器会将其存储在...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}