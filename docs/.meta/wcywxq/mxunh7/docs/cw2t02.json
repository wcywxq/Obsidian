{
  "id": 72212027,
  "slug": "cw2t02",
  "title": "正则表达式",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"Hrs8h\"></a>\n## 常用正则表达式\n```javascript\n// （1）匹配 16 进制颜色值\nvar regex = /#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})/g;\n\n// （2）匹配日期，如 yyyy-mm-dd 格式\nvar regex = /^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/;\n\n// （3）匹配 qq 号\nvar regex = /^[1-9][0-9]{4,10}$/g;\n\n// （4）手机号码正则\nvar regex = /^1[34578]\\d{9}$/g;\n\n// （5）用户名正则\nvar regex = /^[a-zA-Z\\$][a-zA-Z0-9_\\$]{4,16}$/;\n```\n<a name=\"Kz4lx\"></a>\n### url 参数转对象\n```javascript\nfunction getParams(url) {  \n  const reg = /(?:&|\\/?)(\\w+)=([^&$]+)/g\n  const params = {}\n  while(result = reg.exec(url)) {\n  \tparams[result[1]] = result[2]\n  }\n  return params\n}\n```\n<a name=\"yUJjK\"></a>\n### 数字价格千分位分割\n描述：将 123456789 变成 123,456,789\n```javascript\n'123456789'.replace(/(?!^)(?=(\\d{3})+$)/g, ',')\n```\n<a name=\"BxlMS\"></a>\n### 手机号 3-4-4 分割\n描述：将手机号 183xxxxxxxx 转化成 183-xxxx-xxxx\n```javascript\n'18312345678'.replace(/(?=(\\d{4})+$)/g, '-')\n```\n<a name=\"cZDLT\"></a>\n### 字符串驼峰化\n描述：\n\n- foo Bar => fooBar\n- foo-bar---- => fooBar\n- foo_bar____ => fooBar\n```javascript\nconst camelCase = str => {\n\tconst camelCaseRegex = /[-_\\s]+(.)?/g\n  return str.replace(camelCaseRegex, (match, char) => {\n  \treturn char ? char.toUpperCase() : ''\n  })\n}\n```\n<a name=\"GVO72\"></a>\n### 将字符串首字母转化为大写，剩下为小写\n描述：hello world => Hello World\n```javascript\nconst capitalize = str => {\n\tconst capitalizeRegex = /(?:^|\\s+)\\w/g\n  return str.toLowerCase().replace(capitalizeRegex, match => {\n  \treturn match.toUpperCase()\n  })\n}\n```\n<a name=\"EmYnm\"></a>\n### 提取连续重复的字符\n描述：将有重复的字符串提取出来，例如：12323454545666，提取['23', '45', '6']\n```javascript\nconst collectRepeatStr = str => {\n\tlet repeatStrs = []\n  const repeatRegex = /(.+)\\1+/g\n  str.replace(repeatRegex, ($0, $1) => {\n  \t$1 && repeatStrs.push($1)\n  })\n  return repeatStrs\n}\n```\n<a name=\"GSUlT\"></a>\n### 实现一个 trim 函数\n描述：去除字符串的首尾空格\n```javascript\n// 去除空格法\nconst trim = str => str.replace(/^\\s*|\\s*$/g, '')\n// 提取非空格法\nconst trim = str => str.replace(/^\\s*(.*?)\\s*$/g, '$1')\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><h2 id=\"Hrs8h\"><span>常用正则表达式</span></h2><pre data-lang=\"javascript\"><code>// （1）匹配 16 进制颜色值\nvar regex = /#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})/g;\n\n// （2）匹配日期，如 yyyy-mm-dd 格式\nvar regex = /^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/;\n\n// （3）匹配 qq 号\nvar regex = /^[1-9][0-9]{4,10}$/g;\n\n// （4）手机号码正则\nvar regex = /^1[34578]\\d{9}$/g;\n\n// （5）用户名正则\nvar regex = /^[a-zA-Z\\$][a-zA-Z0-9_\\$]{4,16}$/;</code></pre><h3 id=\"Kz4lx\"><span>url 参数转对象</span></h3><pre data-lang=\"javascript\"><code>function getParams(url) {  \n  const reg = /(?:&amp;|\\/?)(\\w+)=([^&amp;$]+)/g\n  const params = {}\n  while(result = reg.exec(url)) {\n  \tparams[result[1]] = result[2]\n  }\n  return params\n}</code></pre><h3 id=\"yUJjK\"><span>数字价格千分位分割</span></h3><p data-lake-id=\"u68d48c4f\"><span>描述：将 123456789 变成 123,456,789</span></p><pre data-lang=\"javascript\"><code>'123456789'.replace(/(?!^)(?=(\\d{3})+$)/g, ',')</code></pre><h3 id=\"BxlMS\"><span>手机号 3-4-4 分割</span></h3><p data-lake-id=\"u9accb5a9\"><span>描述：将手机号 183xxxxxxxx 转化成 183-xxxx-xxxx</span></p><pre data-lang=\"javascript\"><code>'18312345678'.replace(/(?=(\\d{4})+$)/g, '-')</code></pre><h3 id=\"cZDLT\"><span>字符串驼峰化</span></h3><p data-lake-id=\"uc4b4d785\"><span>描述：</span></p><ul><li><span>foo Bar =&gt; fooBar</span></li><li><span>foo-bar---- =&gt; fooBar</span></li><li><span>foo_bar____ =&gt; fooBar</span></li></ul><pre data-lang=\"javascript\"><code>const camelCase = str =&gt; {\n\tconst camelCaseRegex = /[-_\\s]+(.)?/g\n  return str.replace(camelCaseRegex, (match, char) =&gt; {\n  \treturn char ? char.toUpperCase() : ''\n  })\n}</code></pre><h3 id=\"GVO72\"><span>将字符串首字母转化为大写，剩下为小写</span></h3><p data-lake-id=\"u3af96c32\"><span>描述：hello world =&gt; Hello World</span></p><pre data-lang=\"javascript\"><code>const capitalize = str =&gt; {\n\tconst capitalizeRegex = /(?:^|\\s+)\\w/g\n  return str.toLowerCase().replace(capitalizeRegex, match =&gt; {\n  \treturn match.toUpperCase()\n  })\n}</code></pre><h3 id=\"EmYnm\"><span>提取连续重复的字符</span></h3><p data-lake-id=\"u43913169\"><span>描述：将有重复的字符串提取出来，例如：12323454545666，提取['23', '45', '6']</span></p><pre data-lang=\"javascript\"><code>const collectRepeatStr = str =&gt; {\n\tlet repeatStrs = []\n  const repeatRegex = /(.+)\\1+/g\n  str.replace(repeatRegex, ($0, $1) =&gt; {\n  \t$1 &amp;&amp; repeatStrs.push($1)\n  })\n  return repeatStrs\n}</code></pre><h3 id=\"GSUlT\"><span>实现一个 trim 函数</span></h3><p data-lake-id=\"u1b09514b\"><span>描述：去除字符串的首尾空格</span></p><pre data-lang=\"javascript\"><code>// 去除空格法\nconst trim = str =&gt; str.replace(/^\\s*|\\s*$/g, '')\n// 提取非空格法\nconst trim = str =&gt; str.replace(/^\\s*(.*?)\\s*$/g, '$1')</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"Hrs8h\" id=\"Hrs8h\"><span data-lake-id=\"u60f3db0f\" id=\"u60f3db0f\">常用正则表达式</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%EF%BC%881%EF%BC%89%E5%8C%B9%E9%85%8D%2016%20%E8%BF%9B%E5%88%B6%E9%A2%9C%E8%89%B2%E5%80%BC%5Cnvar%20regex%20%3D%20%2F%23(%5B0-9a-fA-F%5D%7B6%7D%7C%5B0-9a-fA-F%5D%7B3%7D)%2Fg%3B%5Cn%5Cn%2F%2F%20%EF%BC%882%EF%BC%89%E5%8C%B9%E9%85%8D%E6%97%A5%E6%9C%9F%EF%BC%8C%E5%A6%82%20yyyy-mm-dd%20%E6%A0%BC%E5%BC%8F%5Cnvar%20regex%20%3D%20%2F%5E%5B0-9%5D%7B4%7D-(0%5B1-9%5D%7C1%5B0-2%5D)-(0%5B1-9%5D%7C%5B12%5D%5B0-9%5D%7C3%5B01%5D)%24%2F%3B%5Cn%5Cn%2F%2F%20%EF%BC%883%EF%BC%89%E5%8C%B9%E9%85%8D%20qq%20%E5%8F%B7%5Cnvar%20regex%20%3D%20%2F%5E%5B1-9%5D%5B0-9%5D%7B4%2C10%7D%24%2Fg%3B%5Cn%5Cn%2F%2F%20%EF%BC%884%EF%BC%89%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81%E6%AD%A3%E5%88%99%5Cnvar%20regex%20%3D%20%2F%5E1%5B34578%5D%5C%5Cd%7B9%7D%24%2Fg%3B%5Cn%5Cn%2F%2F%20%EF%BC%885%EF%BC%89%E7%94%A8%E6%88%B7%E5%90%8D%E6%AD%A3%E5%88%99%5Cnvar%20regex%20%3D%20%2F%5E%5Ba-zA-Z%5C%5C%24%5D%5Ba-zA-Z0-9_%5C%5C%24%5D%7B4%2C16%7D%24%2F%3B%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22siuJd%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"Kz4lx\" id=\"Kz4lx\"><span data-lake-id=\"ucd9229d0\" id=\"ucd9229d0\">url 参数转对象</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20getParams(url)%20%7B%20%20%5Cn%20%20const%20reg%20%3D%20%2F(%3F%3A%26%7C%5C%5C%2F%3F)(%5C%5Cw%2B)%3D(%5B%5E%26%24%5D%2B)%2Fg%5Cn%20%20const%20params%20%3D%20%7B%7D%5Cn%20%20while(result%20%3D%20reg.exec(url))%20%7B%5Cn%20%20%5Ctparams%5Bresult%5B1%5D%5D%20%3D%20result%5B2%5D%5Cn%20%20%7D%5Cn%20%20return%20params%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22uo2vB%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"yUJjK\" id=\"yUJjK\"><span data-lake-id=\"uf69e759c\" id=\"uf69e759c\">数字价格千分位分割</span></h3><p data-lake-id=\"u68d48c4f\" id=\"u68d48c4f\"><span data-lake-id=\"u67e8d996\" id=\"u67e8d996\">描述：将 123456789 变成 123,456,789</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22'123456789'.replace(%2F(%3F!%5E)(%3F%3D(%5C%5Cd%7B3%7D)%2B%24)%2Fg%2C%20'%2C')%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22Q9puI%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"BxlMS\" id=\"BxlMS\"><span data-lake-id=\"ue912cb0a\" id=\"ue912cb0a\">手机号 3-4-4 分割</span></h3><p data-lake-id=\"u9accb5a9\" id=\"u9accb5a9\"><span data-lake-id=\"ue4ca77b0\" id=\"ue4ca77b0\">描述：将手机号 183xxxxxxxx 转化成 183-xxxx-xxxx</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22'18312345678'.replace(%2F(%3F%3D(%5C%5Cd%7B4%7D)%2B%24)%2Fg%2C%20'-')%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22Gl85r%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"cZDLT\" id=\"cZDLT\"><span data-lake-id=\"ua03b8fd2\" id=\"ua03b8fd2\">字符串驼峰化</span></h3><p data-lake-id=\"uc4b4d785\" id=\"uc4b4d785\"><span data-lake-id=\"ud4f1e8a4\" id=\"ud4f1e8a4\">描述：</span></p><ul list=\"u020d60dd\"><li fid=\"u49e16af4\" data-lake-id=\"u4ccadf5c\" id=\"u4ccadf5c\"><span data-lake-id=\"ueaede7b6\" id=\"ueaede7b6\">foo Bar =&gt; fooBar</span></li><li fid=\"u49e16af4\" data-lake-id=\"u9bf63ad8\" id=\"u9bf63ad8\"><span data-lake-id=\"uee17654b\" id=\"uee17654b\">foo-bar---- =&gt; fooBar</span></li><li fid=\"u49e16af4\" data-lake-id=\"u9b029edf\" id=\"u9b029edf\"><span data-lake-id=\"uc3563fe5\" id=\"uc3563fe5\">foo_bar____ =&gt; fooBar</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20camelCase%20%3D%20str%20%3D%3E%20%7B%5Cn%5Ctconst%20camelCaseRegex%20%3D%20%2F%5B-_%5C%5Cs%5D%2B(.)%3F%2Fg%5Cn%20%20return%20str.replace(camelCaseRegex%2C%20(match%2C%20char)%20%3D%3E%20%7B%5Cn%20%20%5Ctreturn%20char%20%3F%20char.toUpperCase()%20%3A%20''%5Cn%20%20%7D)%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22osdGy%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"GVO72\" id=\"GVO72\"><span data-lake-id=\"u02e6aee1\" id=\"u02e6aee1\">将字符串首字母转化为大写，剩下为小写</span></h3><p data-lake-id=\"u3af96c32\" id=\"u3af96c32\"><span data-lake-id=\"uba596659\" id=\"uba596659\">描述：hello world =&gt; Hello World</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20capitalize%20%3D%20str%20%3D%3E%20%7B%5Cn%5Ctconst%20capitalizeRegex%20%3D%20%2F(%3F%3A%5E%7C%5C%5Cs%2B)%5C%5Cw%2Fg%5Cn%20%20return%20str.toLowerCase().replace(capitalizeRegex%2C%20match%20%3D%3E%20%7B%5Cn%20%20%5Ctreturn%20match.toUpperCase()%5Cn%20%20%7D)%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22LqXuO%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"EmYnm\" id=\"EmYnm\"><span data-lake-id=\"udeacab5c\" id=\"udeacab5c\">提取连续重复的字符</span></h3><p data-lake-id=\"u43913169\" id=\"u43913169\"><span data-lake-id=\"uce5b5a22\" id=\"uce5b5a22\">描述：将有重复的字符串提取出来，例如：12323454545666，提取['23', '45', '6']</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20collectRepeatStr%20%3D%20str%20%3D%3E%20%7B%5Cn%5Ctlet%20repeatStrs%20%3D%20%5B%5D%5Cn%20%20const%20repeatRegex%20%3D%20%2F(.%2B)%5C%5C1%2B%2Fg%5Cn%20%20str.replace(repeatRegex%2C%20(%240%2C%20%241)%20%3D%3E%20%7B%5Cn%20%20%5Ct%241%20%26%26%20repeatStrs.push(%241)%5Cn%20%20%7D)%5Cn%20%20return%20repeatStrs%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22IYWnh%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"GSUlT\" id=\"GSUlT\"><span data-lake-id=\"ub4afb6b2\" id=\"ub4afb6b2\">实现一个 trim 函数</span></h3><p data-lake-id=\"u1b09514b\" id=\"u1b09514b\"><span data-lake-id=\"uac93eb2c\" id=\"uac93eb2c\">描述：去除字符串的首尾空格</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E5%8E%BB%E9%99%A4%E7%A9%BA%E6%A0%BC%E6%B3%95%5Cnconst%20trim%20%3D%20str%20%3D%3E%20str.replace(%2F%5E%5C%5Cs*%7C%5C%5Cs*%24%2Fg%2C%20'')%5Cn%2F%2F%20%E6%8F%90%E5%8F%96%E9%9D%9E%E7%A9%BA%E6%A0%BC%E6%B3%95%5Cnconst%20trim%20%3D%20str%20%3D%3E%20str.replace(%2F%5E%5C%5Cs*(.*%3F)%5C%5Cs*%24%2Fg%2C%20'%241')%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22fgpuM%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:32:37.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:32:37.000Z",
  "updated_at": "2022-05-10T15:12:44.000Z",
  "published_at": "2022-04-04T11:32:37.000Z",
  "first_published_at": "2022-04-04T11:32:36.779Z",
  "word_count": 342,
  "cover": null,
  "description": "常用正则表达式// （1）匹配 16 进制颜色值 var regex = /#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})/g;  // （2）匹配日期，如 yyyy-mm-dd 格式 var regex = /^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}