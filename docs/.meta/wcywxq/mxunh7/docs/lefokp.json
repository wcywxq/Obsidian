{
  "id": 72212243,
  "slug": "lefokp",
  "title": "html5 离线储存相关问题",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"e6uE7\"></a>\n## html5 离线存储使用方式和原理\n离线存储指的是：在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。\n\n原理：HTML5的离线存储是基于一个新建的 .appcache 文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示\n\n使用方法：\n\n1. 创建一个和 html 同名的 manifest 文件，然后在页面头部加入 manifest 属性\n```html\n<html lang=\"en\" manifest=\"index.manifest\">\n```\n\n2. 在 cache.manifest 文件中编写需要离线存储的资源：\n```html\nCACHE MANIFEST\n    #v0.11\n    CACHE:\n    js/app.js\n    css/style.css\n    NETWORK:\n    resourse/logo.png\n    FALLBACK:\n    / /offline.html\n```\n\n- CACHE: 表示需要离线存储的资源列表，由于包含 manifest 文件的页面将被自动离线存储，所以不需要把页面自身也列出来。\n- NETWORK: 表示在它下面列出来的资源只有在在线的情况下才能访问，他们不会被离线存储，所以在离线情况下无法使用这些资源。不过，如果在 CACHE 和 NETWORK 中有一个相同的资源，那么这个资源还是会被离线存储，也就是说 CACHE 的优先级更高。\n- FALLBACK: 表示如果访问第一个资源失败，那么就使用第二个资源来替换他，比如上面这个文件表示的就是如果访问根目录下任何一个资源失败了，那么就去访问 offline.html 。\n3. 在离线状态时，操作 window.applicationCache 进行离线缓存的操作\n\n如何更新缓存：\n\n1. 更新 manifest 文件\n2. 通过 javascript 操作\n3. 清除浏览器缓存\n\n注意事项：\n\n1. 浏览器对缓存数据的容量限制可能不太一样（某些浏览器设置的限制是每个站点 5MB）。\n2. 如果 manifest 文件，或者内部列举的某一个文件不能正常下载，整个更新过程都将失败，浏览器继续全部使用老的缓存。\n3. 引用 manifest 的 html 必须与 manifest 文件同源，在同一个域下。\n4. FALLBACK 中的资源必须和 manifest 文件同源。\n5. 当一个资源被缓存后，该浏览器直接请求这个绝对路径也会访问缓存中的资源。\n6. 站点中的其他页面即使没有设置 manifest 属性，请求的资源如果在缓存中也从缓存中访问。\n7. 当 manifest 文件发生改变时，资源请求本身也会触发更新。\n<a name=\"v903V\"></a>\n### 浏览器是如何对 HTML5 的离线储存资源进行管理和加载\n\n- **在线的情况下**，浏览器发现 html 头部有 manifest 属性，它会请求 manifest 文件，如果是第一次访问页面 ，那么浏览器就会根据 manifest 文件的内容下载相应的资源并且进行离线存储。如果已经访问过页面并且资源已经进行离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的 manifest 文件与旧的 manifest 文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，就会重新下载文件中的资源并进行离线存储。\n- **离线的情况下**，浏览器会直接使用离线存储的资源。\n",
  "body_draft": "",
  "body_html": "<!doctype html><h2 id=\"e6uE7\"><span>html5 离线存储使用方式和原理</span></h2><p data-lake-id=\"u183f9340\"><span>离线存储指的是：在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。</span></p><p data-lake-id=\"u0ec6b02e\"><span>​</span><br /></p><p data-lake-id=\"u8083374a\"><span>原理：HTML5的离线存储是基于一个新建的 .appcache 文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示</span></p><p data-lake-id=\"uc0848373\"><span>​</span><br /></p><p data-lake-id=\"u36a522f8\"><span>使用方法：</span></p><ol><li><span>创建一个和 html 同名的 manifest 文件，然后在页面头部加入 manifest 属性</span></li></ol><pre data-lang=\"html\"><code>&lt;html lang=&quot;en&quot; manifest=&quot;index.manifest&quot;&gt;</code></pre><ol start=\"2\"><li><span>在 </span><span>cache.manifest</span><span> 文件中编写需要离线存储的资源：</span></li></ol><pre data-lang=\"html\"><code>CACHE MANIFEST\n    #v0.11\n    CACHE:\n    js/app.js\n    css/style.css\n    NETWORK:\n    resourse/logo.png\n    FALLBACK:\n    / /offline.html</code></pre><ul><li><span>CACHE</span><span>: 表示需要离线存储的资源列表，由于包含 manifest 文件的页面将被自动离线存储，所以不需要把页面自身也列出来。</span></li><li><span>NETWORK</span><span>: 表示在它下面列出来的资源只有在在线的情况下才能访问，他们不会被离线存储，所以在离线情况下无法使用这些资源。不过，如果在 CACHE 和 NETWORK 中有一个相同的资源，那么这个资源还是会被离线存储，也就是说 CACHE 的优先级更高。</span></li><li><span>FALLBACK</span><span>: 表示如果访问第一个资源失败，那么就使用第二个资源来替换他，比如上面这个文件表示的就是如果访问根目录下任何一个资源失败了，那么就去访问 offline.html 。</span></li></ul><ol start=\"3\"><li><span>在离线状态时，操作 </span><span>window.applicationCache</span><span> 进行离线缓存的操作</span></li></ol><p data-lake-id=\"u8b30010a\"><span>​</span><br /></p><p data-lake-id=\"u13a30c90\"><span>如何更新缓存：</span></p><ol><li><span>更新 manifest 文件</span></li><li><span>通过 javascript 操作</span></li><li><span>清除浏览器缓存</span></li></ol><p data-lake-id=\"u570e8b28\"><span>​</span><br /></p><p data-lake-id=\"u3e7707e6\"><span>注意事项：</span></p><ol><li><span>浏览器对缓存数据的容量限制可能不太一样（某些浏览器设置的限制是每个站点 5MB）。</span></li><li><span>如果 manifest 文件，或者内部列举的某一个文件不能正常下载，整个更新过程都将失败，浏览器继续全部使用老的缓存。</span></li><li><span>引用 manifest 的 html 必须与 manifest 文件同源，在同一个域下。</span></li><li><span>FALLBACK 中的资源必须和 manifest 文件同源。</span></li><li><span>当一个资源被缓存后，该浏览器直接请求这个绝对路径也会访问缓存中的资源。</span></li><li><span>站点中的其他页面即使没有设置 manifest 属性，请求的资源如果在缓存中也从缓存中访问。</span></li><li><span>当 manifest 文件发生改变时，资源请求本身也会触发更新。</span></li></ol><h3 id=\"v903V\"><span>浏览器是如何对 HTML5 的离线储存资源进行管理和加载</span></h3><ul><li><strong><span>在线的情况下</span></strong><span>，浏览器发现 html 头部有 manifest 属性，它会请求 manifest 文件，如果是第一次访问页面 ，那么浏览器就会根据 manifest 文件的内容下载相应的资源并且进行离线存储。如果已经访问过页面并且资源已经进行离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的 manifest 文件与旧的 manifest 文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，就会重新下载文件中的资源并进行离线存储。</span></li><li><strong><span>离线的情况下</span></strong><span>，浏览器会直接使用离线存储的资源。</span></li></ul>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"e6uE7\" id=\"e6uE7\"><span data-lake-id=\"ua578700b\" id=\"ua578700b\">html5 离线存储使用方式和原理</span></h2><p data-lake-id=\"u183f9340\" id=\"u183f9340\"><span data-lake-id=\"ub1b2cb58\" id=\"ub1b2cb58\">离线存储指的是：在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。</span></p><p data-lake-id=\"u0ec6b02e\" id=\"u0ec6b02e\"><span data-lake-id=\"uf71f7e1c\" id=\"uf71f7e1c\">​</span><br></p><p data-lake-id=\"u8083374a\" id=\"u8083374a\"><span data-lake-id=\"u552bdba5\" id=\"u552bdba5\">原理：HTML5的离线存储是基于一个新建的 .appcache 文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示</span></p><p data-lake-id=\"uc0848373\" id=\"uc0848373\"><span data-lake-id=\"u9c020652\" id=\"u9c020652\">​</span><br></p><p data-lake-id=\"u36a522f8\" id=\"u36a522f8\"><span data-lake-id=\"u37f5cc0f\" id=\"u37f5cc0f\">使用方法：</span></p><ol list=\"u70f7a4e1\"><li fid=\"u1a9cbfd0\" data-lake-id=\"u9c784b19\" id=\"u9c784b19\"><span data-lake-id=\"u782dd9cb\" id=\"u782dd9cb\">创建一个和 html 同名的 manifest 文件，然后在页面头部加入 manifest 属性</span></li></ol><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22%3Chtml%20lang%3D%5C%22en%5C%22%20manifest%3D%5C%22index.manifest%5C%22%3E%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22UCad4%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ol list=\"u70f7a4e1\" start=\"2\"><li fid=\"u1a9cbfd0\" data-lake-id=\"ub73b127d\" id=\"ub73b127d\"><span data-lake-id=\"u1c66cde5\" id=\"u1c66cde5\">在 </span><span data-lake-id=\"u06f93460\" id=\"u06f93460\">cache.manifest</span><span data-lake-id=\"ud75df91b\" id=\"ud75df91b\"> 文件中编写需要离线存储的资源：</span></li></ol><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22html%22%2C%22code%22%3A%22CACHE%20MANIFEST%5Cn%20%20%20%20%23v0.11%5Cn%20%20%20%20CACHE%3A%5Cn%20%20%20%20js%2Fapp.js%5Cn%20%20%20%20css%2Fstyle.css%5Cn%20%20%20%20NETWORK%3A%5Cn%20%20%20%20resourse%2Flogo.png%5Cn%20%20%20%20FALLBACK%3A%5Cn%20%20%20%20%2F%20%2Foffline.html%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22u7N2o%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ul list=\"u9007508c\"><li fid=\"ubecc71ce\" data-lake-id=\"ue6b106d7\" id=\"ue6b106d7\"><span data-lake-id=\"u265b38b2\" id=\"u265b38b2\">CACHE</span><span data-lake-id=\"ua9241e75\" id=\"ua9241e75\">: 表示需要离线存储的资源列表，由于包含 manifest 文件的页面将被自动离线存储，所以不需要把页面自身也列出来。</span></li><li fid=\"ubecc71ce\" data-lake-id=\"u604534d0\" id=\"u604534d0\"><span data-lake-id=\"u37353cb5\" id=\"u37353cb5\">NETWORK</span><span data-lake-id=\"u3d4cba4c\" id=\"u3d4cba4c\">: 表示在它下面列出来的资源只有在在线的情况下才能访问，他们不会被离线存储，所以在离线情况下无法使用这些资源。不过，如果在 CACHE 和 NETWORK 中有一个相同的资源，那么这个资源还是会被离线存储，也就是说 CACHE 的优先级更高。</span></li><li fid=\"ubecc71ce\" data-lake-id=\"u4e18f6e0\" id=\"u4e18f6e0\"><span data-lake-id=\"u0db475b8\" id=\"u0db475b8\">FALLBACK</span><span data-lake-id=\"u3eae1503\" id=\"u3eae1503\">: 表示如果访问第一个资源失败，那么就使用第二个资源来替换他，比如上面这个文件表示的就是如果访问根目录下任何一个资源失败了，那么就去访问 offline.html 。</span></li></ul><ol list=\"u22682a77\" start=\"3\"><li fid=\"ue39ae644\" data-lake-id=\"u65e40277\" id=\"u65e40277\"><span data-lake-id=\"u9bd1c47c\" id=\"u9bd1c47c\">在离线状态时，操作 </span><span data-lake-id=\"ue45ba298\" id=\"ue45ba298\">window.applicationCache</span><span data-lake-id=\"u3ad081b5\" id=\"u3ad081b5\"> 进行离线缓存的操作</span></li></ol><p data-lake-id=\"u8b30010a\" id=\"u8b30010a\"><span data-lake-id=\"ud7f63241\" id=\"ud7f63241\">​</span><br></p><p data-lake-id=\"u13a30c90\" id=\"u13a30c90\"><span data-lake-id=\"u433d9d8a\" id=\"u433d9d8a\">如何更新缓存：</span></p><ol list=\"u45072252\"><li fid=\"ud9c756c0\" data-lake-id=\"u28a81707\" id=\"u28a81707\"><span data-lake-id=\"u42e5a59a\" id=\"u42e5a59a\">更新 manifest 文件</span></li><li fid=\"ud9c756c0\" data-lake-id=\"u601dc3ff\" id=\"u601dc3ff\"><span data-lake-id=\"u31ed37a9\" id=\"u31ed37a9\">通过 javascript 操作</span></li><li fid=\"ud9c756c0\" data-lake-id=\"ud362aed2\" id=\"ud362aed2\"><span data-lake-id=\"u3b439d75\" id=\"u3b439d75\">清除浏览器缓存</span></li></ol><p data-lake-id=\"u570e8b28\" id=\"u570e8b28\"><span data-lake-id=\"u98945d22\" id=\"u98945d22\">​</span><br></p><p data-lake-id=\"u3e7707e6\" id=\"u3e7707e6\"><span data-lake-id=\"u202dfdd7\" id=\"u202dfdd7\">注意事项：</span></p><ol list=\"u92d30020\"><li fid=\"u85c4f5ba\" data-lake-id=\"u76f52e12\" id=\"u76f52e12\"><span data-lake-id=\"uf0ec7a46\" id=\"uf0ec7a46\">浏览器对缓存数据的容量限制可能不太一样（某些浏览器设置的限制是每个站点 5MB）。</span></li><li fid=\"u85c4f5ba\" data-lake-id=\"ufc3dfe05\" id=\"ufc3dfe05\"><span data-lake-id=\"ue252153e\" id=\"ue252153e\">如果 manifest 文件，或者内部列举的某一个文件不能正常下载，整个更新过程都将失败，浏览器继续全部使用老的缓存。</span></li><li fid=\"u85c4f5ba\" data-lake-id=\"uc3dd63ce\" id=\"uc3dd63ce\"><span data-lake-id=\"ud7fb6475\" id=\"ud7fb6475\">引用 manifest 的 html 必须与 manifest 文件同源，在同一个域下。</span></li><li fid=\"u85c4f5ba\" data-lake-id=\"ua4e9550f\" id=\"ua4e9550f\"><span data-lake-id=\"u85eae58a\" id=\"u85eae58a\">FALLBACK 中的资源必须和 manifest 文件同源。</span></li><li fid=\"u85c4f5ba\" data-lake-id=\"u74231fd9\" id=\"u74231fd9\"><span data-lake-id=\"uc5fa5344\" id=\"uc5fa5344\">当一个资源被缓存后，该浏览器直接请求这个绝对路径也会访问缓存中的资源。</span></li><li fid=\"u85c4f5ba\" data-lake-id=\"uabae177f\" id=\"uabae177f\"><span data-lake-id=\"ub9b0defd\" id=\"ub9b0defd\">站点中的其他页面即使没有设置 manifest 属性，请求的资源如果在缓存中也从缓存中访问。</span></li><li fid=\"u85c4f5ba\" data-lake-id=\"u3b815b77\" id=\"u3b815b77\"><span data-lake-id=\"u1babeae5\" id=\"u1babeae5\">当 manifest 文件发生改变时，资源请求本身也会触发更新。</span></li></ol><h3 data-lake-id=\"v903V\" id=\"v903V\"><span data-lake-id=\"ub2efbccf\" id=\"ub2efbccf\">浏览器是如何对 HTML5 的离线储存资源进行管理和加载</span></h3><ul list=\"u033686d9\"><li fid=\"u2f5f2bc9\" data-lake-id=\"u0b174963\" id=\"u0b174963\"><strong><span data-lake-id=\"u42bb033e\" id=\"u42bb033e\">在线的情况下</span></strong><span data-lake-id=\"u8d2c4432\" id=\"u8d2c4432\">，浏览器发现 html 头部有 manifest 属性，它会请求 manifest 文件，如果是第一次访问页面 ，那么浏览器就会根据 manifest 文件的内容下载相应的资源并且进行离线存储。如果已经访问过页面并且资源已经进行离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的 manifest 文件与旧的 manifest 文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，就会重新下载文件中的资源并进行离线存储。</span></li><li fid=\"u2f5f2bc9\" data-lake-id=\"u529e8fe4\" id=\"u529e8fe4\"><strong><span data-lake-id=\"ue5a6e1b6\" id=\"ue5a6e1b6\">离线的情况下</span></strong><span data-lake-id=\"u40cd0acb\" id=\"u40cd0acb\">，浏览器会直接使用离线存储的资源。</span></li></ul>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:33:49.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:33:49.000Z",
  "updated_at": "2022-05-10T15:12:34.000Z",
  "published_at": "2022-04-04T11:33:49.000Z",
  "first_published_at": "2022-04-04T11:33:48.569Z",
  "word_count": 946,
  "cover": null,
  "description": "html5 离线存储使用方式和原理离线存储指的是：在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。原理：HTML5的离线存储是基于一个新建的 .appcache 文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}