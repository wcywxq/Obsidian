{
  "id": 72212094,
  "slug": "si40mg",
  "title": "高阶组件",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1647010293179-c8265b67-90a6-443a-8bb1-20a80e5211f4.png#clientId=u1d4f15bb-44c4-4&from=paste&height=548&id=u5dd81250&originHeight=548&originWidth=1080&originalType=binary&ratio=1&size=264783&status=done&style=none&taskId=uea147c34-410d-46b9-8d52-52beaa5425c&width=1080)<br />高阶组件就是一个函数，且该函数接受一个组件作为参数，并返回一个新的组件\n\n<a name=\"xWoDt\"></a>\n## 属性代理\n函数返回一个自己定义的组件，然后在 render 函数中返回要包裹的组件，这样就可以代理所有传入的 props，并且决定如何渲染\n```jsx\nfunction proxyHoc(WrapperComponent) {\n\treturn class extends Component {\n  \trender() {\n    \treturn <WrapperComponent {...this.props} />\n    }\n  }\n}\n```\n:::tips\n对比原生组件增强的功能：\n\n1. 可操作所有传入的 props\n2. 可操作组件的生命周期\n3. 可操作组件的 static 静态方法\n4. 可以获取 refs\n:::\n<a name=\"ghmzm\"></a>\n## 反向继承\n返回一个组件，继承原组件。在 render 函数中调用原组件的 render 方法，由于继承了原组件，因此可以通过 this 访问到原组件的 **生命周期**、**props**、**state**、**render函数** 等，相比于属性代理的方式，可以操作更多的属性。\n```javascript\nfunction isHeritHoc(WrapperComponent) {\n\treturn class extends WrapperComponent {\n  \trender() {\n    \treturn super.render()\n    }\n  }\n}\n```\n:::tips\n对比原生组件增强的功能：\n\n1. 可操作所有传入的 props\n2. 可操作组件的生命周期\n3. 可操作组件的 static 静态方法\n4. 可以获取 refs\n5. 可操作 state\n6. 可进行渲染劫持\n:::\n<a name=\"gAIkY\"></a>\n## 应用场景\n<a name=\"YWcXm\"></a>\n### 可实现的功能\n\n- 组合渲染\n- 条件渲染\n- 操作 props\n- 获取 refs\n- 状态管理\n- 操作 state\n- 渲染劫持\n<a name=\"dE0mo\"></a>\n### 实际应用\n\n- 日志打点\n- 权限控制\n```jsx\n// HOC.js\nfunction withAdminAuth(WrappedComponent) {\n    return class extends React.Component {\n        state = {\n            isAdmin: false,\n        }\n        async UNSAFE_componentWillMount() {\n            const currentRole = await getCurrentUserRole();\n            this.setState({\n                isAdmin: currentRole === 'Admin',\n            });\n        }\n        render() {\n            if (this.state.isAdmin) {\n                return <WrappedComponent {...this.props} />;\n            } else {\n                return (<div>您没有权限查看该页面，请联系管理员！</div>);\n            }\n        }\n    };\n}\n\n// pages/page-a.js\nclass PageA extends React.Component {\n    constructor(props) {\n        super(props);\n        // something here...\n    }\n    UNSAFE_componentWillMount() {\n        // fetching data\n    }\n    render() {\n        // render page with data\n    }\n}\nexport default withAdminAuth(PageA);\n\n\n// pages/page-b.js\nclass PageB extends React.Component {\n    constructor(props) {\n        super(props);\n    // something here...\n        }\n    UNSAFE_componentWillMount() {\n    // fetching data\n    }\n    render() {\n    // render page with data\n    }\n}\nexport default withAdminAuth(PageB);\n```\n\n- 双向绑定\n- 表单检验\n- 组件渲染性能追踪\n```javascript\nclass Home extends React.Component {\n    render() {\n        return <h1>Hello World.</h1>\n    }\n}\nfunction withTiming(WrappedComponent) {\n    return class extends WrappedComponent {\n        constructor(props) {\n            super(props)\n            this.start = 0\n            this.end = 0\n        }\n        UNSAFE_componentWillMount() {\n            super.componentWillMount && super.componentWillMount()\n            this.start = Date.now()\n        }\n        componentDidMount() {\n            super.componentDidMount && super.componentDidMount()\n            this.end = Date.now()\n            console.log(`${WrappedComponent.name} 组件渲染时间为 ${this.end - this.start} ms`)\n        }\n        render() {\n            return super.render()\n        }\n    }\n}\n\nexport default withTiming(Home)\n```\n:::warning\n注意：withTiming 是利用 反向继承 实现的一个高阶组件，功能是计算被包裹组件（这里是 Home 组件）的渲染时间。\n:::\n\n- 页面复用\n```jsx\nconst withFetching = fetching => WrappedComponent => {\n    return class extends React.Component {\n        state = {\n            data: [],\n        }\n        async UNSAFE_componentWillMount() {\n            const data = await fetching();\n            this.setState({\n                data,\n            });\n        }\n        render() {\n            return <WrappedComponent data={this.state.data} {...this.props} />;\n        }\n    }\n}\n\n// pages/page-a.js\nexport default withFetching(fetching('science-fiction'))(MovieList);\n// pages/page-b.js\nexport default withFetching(fetching('action'))(MovieList);\n// pages/page-other.js\nexport default withFetching(fetching('some-other-type'))(MovieList);\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><p data-lake-id=\"u5b6465e0\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1647010293179-c8265b67-90a6-443a-8bb1-20a80e5211f4.png#clientId=u1d4f15bb-44c4-4&amp;from=paste&amp;height=548&amp;id=u5dd81250&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=548&amp;originWidth=1080&amp;originalType=binary&amp;ratio=1&amp;size=264783&amp;status=done&amp;style=none&amp;taskId=uea147c34-410d-46b9-8d52-52beaa5425c&amp;width=1080\" style=\"max-width: 600px; width: 1080px;\" /></p><p data-lake-id=\"u1e9a2e7c\"><span>高阶组件就是一个函数，且该函数接受一个组件作为参数，并返回一个新的组件</span></p><p data-lake-id=\"u805cb7d5\"><span>​</span><br /></p><h2 id=\"xWoDt\"><span>属性代理</span></h2><p data-lake-id=\"u40531e55\"><span>函数返回一个自己定义的组件，然后在 render 函数中返回要包裹的组件，这样就可以代理所有传入的 props，并且决定如何渲染</span></p><pre data-lang=\"jsx\"><code>function proxyHoc(WrapperComponent) {\n\treturn class extends Component {\n  \trender() {\n    \treturn &lt;WrapperComponent {...this.props} /&gt;\n    }\n  }\n}</code></pre><blockquote class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"u8e8ca0ce\"><span>对比原生组件增强的功能：</span></p><ol><li><span>可操作所有传入的 props</span></li><li><span>可操作组件的生命周期</span></li><li><span>可操作组件的 static 静态方法</span></li><li><span>可以获取 refs</span></li></ol></blockquote><h2 id=\"ghmzm\"><span>反向继承</span></h2><p data-lake-id=\"ub569027a\"><span>返回一个组件，继承原组件。在 render 函数中调用原组件的 render 方法，由于继承了原组件，因此可以通过 this 访问到原组件的 </span><strong><span style=\"color: rgba(255,103,0,1);\">生命周期</span></strong><span>、</span><strong><span style=\"color: rgba(255,103,0,1);\">props</span></strong><span>、</span><strong><span style=\"color: rgba(255,103,0,1);\">state</span></strong><span>、</span><strong><span style=\"color: rgba(255,103,0,1);\">render函数</span></strong><span> 等，相比于属性代理的方式，可以操作更多的属性。</span></p><pre data-lang=\"javascript\"><code>function isHeritHoc(WrapperComponent) {\n\treturn class extends WrapperComponent {\n  \trender() {\n    \treturn super.render()\n    }\n  }\n}</code></pre><blockquote class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"u7c34d6de\"><span>对比原生组件增强的功能：</span></p><ol><li><span>可操作所有传入的 props</span></li><li><span>可操作组件的生命周期</span></li><li><span>可操作组件的 static 静态方法</span></li><li><span>可以获取 refs</span></li><li><span>可操作 state</span></li><li><span>可进行渲染劫持</span></li></ol></blockquote><h2 id=\"gAIkY\"><span>应用场景</span></h2><h3 id=\"YWcXm\"><span>可实现的功能</span></h3><ul><li><span>组合渲染</span></li><li><span>条件渲染</span></li><li><span>操作 props</span></li><li><span>获取 refs</span></li><li><span>状态管理</span></li><li><span>操作 state</span></li><li><span>渲染劫持</span></li></ul><h3 id=\"dE0mo\"><span>实际应用</span></h3><ul><li><span>日志打点</span></li><li><span>权限控制</span></li></ul><pre data-lang=\"jsx\"><code>// HOC.js\nfunction withAdminAuth(WrappedComponent) {\n    return class extends React.Component {\n        state = {\n            isAdmin: false,\n        }\n        async UNSAFE_componentWillMount() {\n            const currentRole = await getCurrentUserRole();\n            this.setState({\n                isAdmin: currentRole === 'Admin',\n            });\n        }\n        render() {\n            if (this.state.isAdmin) {\n                return &lt;WrappedComponent {...this.props} /&gt;;\n            } else {\n                return (&lt;div&gt;您没有权限查看该页面，请联系管理员！&lt;/div&gt;);\n            }\n        }\n    };\n}\n\n// pages/page-a.js\nclass PageA extends React.Component {\n    constructor(props) {\n        super(props);\n        // something here...\n    }\n    UNSAFE_componentWillMount() {\n        // fetching data\n    }\n    render() {\n        // render page with data\n    }\n}\nexport default withAdminAuth(PageA);\n\n\n// pages/page-b.js\nclass PageB extends React.Component {\n    constructor(props) {\n        super(props);\n    // something here...\n        }\n    UNSAFE_componentWillMount() {\n    // fetching data\n    }\n    render() {\n    // render page with data\n    }\n}\nexport default withAdminAuth(PageB);</code></pre><ul><li><span>双向绑定</span></li><li><span>表单检验</span></li><li><span>组件渲染性能追踪</span></li></ul><pre data-lang=\"javascript\"><code>class Home extends React.Component {\n    render() {\n        return &lt;h1&gt;Hello World.&lt;/h1&gt;\n    }\n}\nfunction withTiming(WrappedComponent) {\n    return class extends WrappedComponent {\n        constructor(props) {\n            super(props)\n            this.start = 0\n            this.end = 0\n        }\n        UNSAFE_componentWillMount() {\n            super.componentWillMount &amp;&amp; super.componentWillMount()\n            this.start = Date.now()\n        }\n        componentDidMount() {\n            super.componentDidMount &amp;&amp; super.componentDidMount()\n            this.end = Date.now()\n            console.log(`${WrappedComponent.name} 组件渲染时间为 ${this.end - this.start} ms`)\n        }\n        render() {\n            return super.render()\n        }\n    }\n}\n\nexport default withTiming(Home)</code></pre><blockquote class=\"lake-alert lake-alert-warning\"><p data-lake-id=\"ub4a63310\"><span class=\"lake-fontsize-1515\" style=\"color: #383838;\">注意：withTiming 是利用 反向继承 实现的一个高阶组件，功能是计算被包裹组件（这里是 Home 组件）的渲染时间。</span></p></blockquote><ul><li><span>页面复用</span></li></ul><pre data-lang=\"jsx\"><code>const withFetching = fetching =&gt; WrappedComponent =&gt; {\n    return class extends React.Component {\n        state = {\n            data: [],\n        }\n        async UNSAFE_componentWillMount() {\n            const data = await fetching();\n            this.setState({\n                data,\n            });\n        }\n        render() {\n            return &lt;WrappedComponent data={this.state.data} {...this.props} /&gt;;\n        }\n    }\n}\n\n// pages/page-a.js\nexport default withFetching(fetching('science-fiction'))(MovieList);\n// pages/page-b.js\nexport default withFetching(fetching('action'))(MovieList);\n// pages/page-other.js\nexport default withFetching(fetching('some-other-type'))(MovieList);</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><p data-lake-id=\"u5b6465e0\" id=\"u5b6465e0\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1647010293179-c8265b67-90a6-443a-8bb1-20a80e5211f4.png%22%2C%22taskId%22%3A%22uea147c34-410d-46b9-8d52-52beaa5425c%22%2C%22clientId%22%3A%22u1d4f15bb-44c4-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1080%2C%22height%22%3A548%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A264783%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1080%2C%22originHeight%22%3A548%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E7%BB%84%E5%90%88%E6%B8%B2%E6%9F%93%20%E9%9D%99%E6%80%81%E5%B1%9E%E6%80%A7%E6%8B%B7%E8%B4%9D%20%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%20%E6%B8%B2%E6%9F%93%E5%8A%AB%E6%8C%81%20%E5%91%8A%E8%AF%AB%20%E4%BC%A0%E9%80%92REFS%20REACT%E5%85%83%E7%B4%A0%20%E7%A6%81%E6%AD%A2RENDER%E8%B0%83%E7%94%A8%20%E6%93%8D%E4%BD%9CPROPS%20%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%20%E4%B8%8D%E6%94%B9%E5%8F%98%E5%8E%9F%E5%A7%8B%E7%BB%84%E4%BB%B6%20%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%8A%9F%E8%83%BD%20%E6%93%8D%E4%BD%9CSTATE%20%E7%BA%A6%E5%AE%9A%20%E9%80%8F%E4%BC%A0PROPS%20%E8%8E%B7%E5%8F%96REFS%20DISPLAYNAME%20%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%20REDUX%20%E5%B1%9E%E6%80%A7%E4%BB%A3%E7%90%86%20%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%20%E5%BC%80%E6%BA%90%E5%BA%93%E7%9A%84%E5%BA%94%E7%94%A8%20RELAY%20%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F%20%E5%8F%8D%E7%9B%B8%E7%BB%A7%E6%89%BF%20%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8%20%E5%87%BD%E6%95%B0%20%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95%20%E6%97%A5%E5%BF%97%E6%89%93%E7%82%B9%20%E5%90%88%E5%B9%B6%20COMPOSE%20%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20%E5%8F%AF%E7%94%A8%2C%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%20%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%20%E8%A3%85%E9%A5%B0%E5%99%A8%20DECORATORS%20%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%20%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C%20CODE%E7%A7%98%E5%AF%86%E8%8A%B1%E5%9B%AD%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A995.6467%2C%22y%22%3A51.389534%2C%22width%22%3A56.350599999999986%2C%22height%22%3A15.481139999999996%2C%22text%22%3A%22%E7%BB%84%E5%90%88%E6%B8%B2%E6%9F%93%22%7D%2C%7B%22x%22%3A37.396828%2C%22y%22%3A62.694252%2C%22width%22%3A83.260502%2C%22height%22%3A14.364168%2C%22text%22%3A%22%E9%9D%99%E6%80%81%E5%B1%9E%E6%80%A7%E6%8B%B7%E8%B4%9D%22%7D%2C%7B%22x%22%3A995.94965%2C%22y%22%3A81.697395%2C%22width%22%3A55.68024999999989%2C%22height%22%3A15.372484999999998%2C%22text%22%3A%22%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%22%7D%2C%7B%22x%22%3A900.11584%2C%22y%22%3A81.99996%2C%22width%22%3A54.38189999999997%2C%22height%22%3A15.029855999999995%2C%22text%22%3A%22%E6%B8%B2%E6%9F%93%E5%8A%AB%E6%8C%81%22%7D%2C%7B%22x%22%3A159.22934%2C%22y%22%3A91.92996%2C%22width%22%3A29.173929999999984%2C%22height%22%3A15.8356%2C%22text%22%3A%22%E5%91%8A%E8%AF%AB%22%7D%2C%7B%22x%22%3A66.846535%2C%22y%22%3A92.90954%2C%22width%22%3A52.78991499999999%2C%22height%22%3A15.07781%2C%22text%22%3A%22%E4%BC%A0%E9%80%92REFS%22%7D%2C%7B%22x%22%3A995.058%2C%22y%22%3A113.200905%2C%22width%22%3A63.19990000000007%2C%22height%22%3A14.468084999999988%2C%22text%22%3A%22REACT%E5%85%83%E7%B4%A0%22%7D%2C%7B%22x%22%3A21.793629%2C%22y%22%3A123.153114%2C%22width%22%3A97.828457%2C%22height%22%3A15.212886000000012%2C%22text%22%3A%22%E7%A6%81%E6%AD%A2RENDER%E8%B0%83%E7%94%A8%22%7D%2C%7B%22x%22%3A898.6406%2C%22y%22%3A139.80565%2C%22width%22%3A69.35310000000004%2C%22height%22%3A18.73623999999998%2C%22text%22%3A%22%E6%93%8D%E4%BD%9CPROPS%22%7D%2C%7B%22x%22%3A271.39853%2C%22y%22%3A144.99054%2C%22width%22%3A73.90107%2C%22height%22%3A19.220309999999984%2C%22text%22%3A%22%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%22%7D%2C%7B%22x%22%3A24.188114%2C%22y%22%3A151.83376%2C%22width%22%3A94.990466%2C%22height%22%3A13.713650000000001%2C%22text%22%3A%22%E4%B8%8D%E6%94%B9%E5%8F%98%E5%8E%9F%E5%A7%8B%E7%BB%84%E4%BB%B6%22%7D%2C%7B%22x%22%3A693.1245%2C%22y%22%3A161.15361%2C%22width%22%3A123.06089999999995%2C%22height%22%3A18.76096000000001%2C%22text%22%3A%22%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%8A%9F%E8%83%BD%22%7D%2C%7B%22x%22%3A899.18616%2C%22y%22%3A168.78719%2C%22width%22%3A62.28857000000005%2C%22height%22%3A15.71420999999998%2C%22text%22%3A%22%E6%93%8D%E4%BD%9CSTATE%22%7D%2C%7B%22x%22%3A159.0115%2C%22y%22%3A181.78596%2C%22width%22%3A28.538399999999996%2C%22height%22%3A14.882540000000006%2C%22text%22%3A%22%E7%BA%A6%E5%AE%9A%22%7D%2C%7B%22x%22%3A54.888355%2C%22y%22%3A182.2942%2C%22width%22%3A64.63750100000001%2C%22height%22%3A15.103440000000006%2C%22text%22%3A%22%E9%80%8F%E4%BC%A0PROPS%22%7D%2C%7B%22x%22%3A899.4008%2C%22y%22%3A196.53017%2C%22width%22%3A54.88149999999996%2C%22height%22%3A14.426909999999992%2C%22text%22%3A%22%E8%8E%B7%E5%8F%96REFS%22%7D%2C%7B%22x%22%3A37.700123%2C%22y%22%3A214.45268%2C%22width%22%3A81.46445700000001%2C%22height%22%3A11.528080000000017%2C%22text%22%3A%22DISPLAYNAME%22%7D%2C%7B%22x%22%3A899.7407%2C%22y%22%3A224.78723%2C%22width%22%3A58.142540000000054%2C%22height%22%3A15.54140000000001%2C%22text%22%3A%22%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%22%7D%2C%7B%22x%22%3A110.07411%2C%22y%22%3A271.98755%2C%22width%22%3A43.29796%2C%22height%22%3A13.219550000000027%2C%22text%22%3A%22REDUX%22%7D%2C%7B%22x%22%3A847.0834%2C%22y%22%3A281.47913%2C%22width%22%3A57.39927%2C%22height%22%3A17.526700000000005%2C%22text%22%3A%22%E5%B1%9E%E6%80%A7%E4%BB%A3%E7%90%86%22%7D%2C%7B%22x%22%3A455.7035%2C%22y%22%3A281.63388%2C%22width%22%3A122.85685999999993%2C%22height%22%3A31.09418000000005%2C%22text%22%3A%22%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%22%7D%2C%7B%22x%22%3A237.11543%2C%22y%22%3A291.60068%2C%22width%22%3A106.58364%2C%22height%22%3A19.302269999999965%2C%22text%22%3A%22%E5%BC%80%E6%BA%90%E5%BA%93%E7%9A%84%E5%BA%94%E7%94%A8%22%7D%2C%7B%22x%22%3A115.45871%2C%22y%22%3A299.4926%2C%22width%22%3A37.770250000000004%2C%22height%22%3A14.605639999999994%2C%22text%22%3A%22RELAY%22%7D%2C%7B%22x%22%3A692.13684%2C%22y%22%3A304.31647%2C%22width%22%3A72.17602999999997%2C%22height%22%3A20.08746000000002%2C%22text%22%3A%22%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F%22%7D%2C%7B%22x%22%3A847.9653%2C%22y%22%3A310.98703%2C%22width%22%3A56.73680000000002%2C%22height%22%3A15.483220000000017%2C%22text%22%3A%22%E5%8F%8D%E7%9B%B8%E7%BB%A7%E6%89%BF%22%7D%2C%7B%22x%22%3A131.48157%2C%22y%22%3A365.31064%2C%22width%22%3A56.04918999999998%2C%22height%22%3A15.211610000000007%2C%22text%22%3A%22%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8%22%7D%2C%7B%22x%22%3A942.8067%2C%22y%22%3A378.62454%2C%22width%22%3A28.92786000000001%2C%22height%22%3A14.60741999999999%2C%22text%22%3A%22%E5%87%BD%E6%95%B0%22%7D%2C%7B%22x%22%3A847.9911%2C%22y%22%3A378.86356%2C%22width%22%3A53.6739%2C%22height%22%3A14.560299999999984%2C%22text%22%3A%22%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95%22%7D%2C%7B%22x%22%3A132.74344%2C%22y%22%3A393.93423%2C%22width%22%3A55.132480000000015%2C%22height%22%3A16.53501%2C%22text%22%3A%22%E6%97%A5%E5%BF%97%E6%89%93%E7%82%B9%22%7D%2C%7B%22x%22%3A945.35016%2C%22y%22%3A407.18286%2C%22width%22%3A29.395939999999996%2C%22height%22%3A13.902989999999988%2C%22text%22%3A%22%E5%90%88%E5%B9%B6%22%7D%2C%7B%22x%22%3A847.0654%2C%22y%22%3A408.1136%2C%22width%22%3A58.446000000000026%2C%22height%22%3A12.966169999999977%2C%22text%22%3A%22COMPOSE%22%7D%2C%7B%22x%22%3A691.95044%2C%22y%22%3A414.9125%2C%22width%22%3A71.50466000000006%2C%22height%22%3A18.777999999999963%2C%22text%22%3A%22%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%22%7D%2C%7B%22x%22%3A92.52567%2C%22y%22%3A421.8308%2C%22width%22%3A95.80415%2C%22height%22%3A15.580449999999985%2C%22text%22%3A%22%E5%8F%AF%E7%94%A8%2C%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%22%7D%2C%7B%22x%22%3A272.50104%2C%22y%22%3A430.28674%2C%22width%22%3A71.20996000000002%2C%22height%22%3A18.549840000000017%2C%22text%22%3A%22%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%22%7D%2C%7B%22x%22%3A957.35486%2C%22y%22%3A435.5186%2C%22width%22%3A44.63693999999998%2C%22height%22%3A15.208900000000028%2C%22text%22%3A%22%E8%A3%85%E9%A5%B0%E5%99%A8%22%7D%2C%7B%22x%22%3A846.96075%2C%22y%22%3A435.7941%2C%22width%22%3A71.05615%2C%22height%22%3A13.10899999999998%2C%22text%22%3A%22DECORATORS%22%7D%2C%7B%22x%22%3A133.10529%2C%22y%22%3A451.00842%2C%22width%22%3A54.09831%2C%22height%22%3A14.541080000000022%2C%22text%22%3A%22%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%22%7D%2C%7B%22x%22%3A133.3662%2C%22y%22%3A479.13824%2C%22width%22%3A54.05845000000002%2C%22height%22%3A14.967930000000024%2C%22text%22%3A%22%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C%22%7D%2C%7B%22x%22%3A872.8638%2C%22y%22%3A484.9963%2C%22width%22%3A173.44580000000008%2C%22height%22%3A31.535999999999945%2C%22text%22%3A%22CODE%E7%A7%98%E5%AF%86%E8%8A%B1%E5%9B%AD%22%7D%5D%2C%22id%22%3A%22u5dd81250%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"u1e9a2e7c\" id=\"u1e9a2e7c\"><span data-lake-id=\"u3f38e786\" id=\"u3f38e786\">高阶组件就是一个函数，且该函数接受一个组件作为参数，并返回一个新的组件</span></p><p data-lake-id=\"u805cb7d5\" id=\"u805cb7d5\"><span data-lake-id=\"u04f2d291\" id=\"u04f2d291\">​</span><br></p><h2 data-lake-id=\"xWoDt\" id=\"xWoDt\"><span data-lake-id=\"u9c44f64e\" id=\"u9c44f64e\">属性代理</span></h2><p data-lake-id=\"u40531e55\" id=\"u40531e55\"><span data-lake-id=\"ude830c3f\" id=\"ude830c3f\">函数返回一个自己定义的组件，然后在 render 函数中返回要包裹的组件，这样就可以代理所有传入的 props，并且决定如何渲染</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22jsx%22%2C%22code%22%3A%22function%20proxyHoc(WrapperComponent)%20%7B%5Cn%5Ctreturn%20class%20extends%20Component%20%7B%5Cn%20%20%5Ctrender()%20%7B%5Cn%20%20%20%20%5Ctreturn%20%3CWrapperComponent%20%7B...this.props%7D%20%2F%3E%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22GoQ1E%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><blockquote data-lake-id=\"uaf203d9a\" id=\"uaf203d9a\" class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"u8e8ca0ce\" id=\"u8e8ca0ce\"><span data-lake-id=\"u98a989fe\" id=\"u98a989fe\">对比原生组件增强的功能：</span></p><ol list=\"u079584cc\"><li fid=\"ufa5b0fce\" data-lake-id=\"u2eea8f5e\" id=\"u2eea8f5e\"><span data-lake-id=\"uf0567734\" id=\"uf0567734\">可操作所有传入的 props</span></li><li fid=\"ufa5b0fce\" data-lake-id=\"ud4274a72\" id=\"ud4274a72\"><span data-lake-id=\"u9d5fe9a6\" id=\"u9d5fe9a6\">可操作组件的生命周期</span></li><li fid=\"ufa5b0fce\" data-lake-id=\"ub5148774\" id=\"ub5148774\"><span data-lake-id=\"u8e071f3d\" id=\"u8e071f3d\">可操作组件的 static 静态方法</span></li><li fid=\"ufa5b0fce\" data-lake-id=\"u990b116d\" id=\"u990b116d\"><span data-lake-id=\"u20567307\" id=\"u20567307\">可以获取 refs</span></li></ol></blockquote><h2 data-lake-id=\"ghmzm\" id=\"ghmzm\"><span data-lake-id=\"u43b1f365\" id=\"u43b1f365\">反向继承</span></h2><p data-lake-id=\"ub569027a\" id=\"ub569027a\"><span data-lake-id=\"u115cb498\" id=\"u115cb498\">返回一个组件，继承原组件。在 render 函数中调用原组件的 render 方法，由于继承了原组件，因此可以通过 this 访问到原组件的 </span><strong><span data-lake-id=\"u3b1d9fe7\" id=\"u3b1d9fe7\" style=\"color: rgba(255,103,0,1)\">生命周期</span></strong><span data-lake-id=\"u7b607cc4\" id=\"u7b607cc4\">、</span><strong><span data-lake-id=\"u1432605a\" id=\"u1432605a\" style=\"color: rgba(255,103,0,1)\">props</span></strong><span data-lake-id=\"ubccb104f\" id=\"ubccb104f\">、</span><strong><span data-lake-id=\"u92b77ba7\" id=\"u92b77ba7\" style=\"color: rgba(255,103,0,1)\">state</span></strong><span data-lake-id=\"u610fed98\" id=\"u610fed98\">、</span><strong><span data-lake-id=\"u3155ffcb\" id=\"u3155ffcb\" style=\"color: rgba(255,103,0,1)\">render函数</span></strong><span data-lake-id=\"ud6eefc7f\" id=\"ud6eefc7f\"> 等，相比于属性代理的方式，可以操作更多的属性。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20isHeritHoc(WrapperComponent)%20%7B%5Cn%5Ctreturn%20class%20extends%20WrapperComponent%20%7B%5Cn%20%20%5Ctrender()%20%7B%5Cn%20%20%20%20%5Ctreturn%20super.render()%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22DTwVr%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><blockquote data-lake-id=\"u20139ebe\" id=\"u20139ebe\" class=\"lake-alert lake-alert-tips\"><p data-lake-id=\"u7c34d6de\" id=\"u7c34d6de\"><span data-lake-id=\"u81b87fa2\" id=\"u81b87fa2\">对比原生组件增强的功能：</span></p><ol list=\"ua8a4bd2e\"><li fid=\"u91764fe9\" data-lake-id=\"ue6d640b1\" id=\"ue6d640b1\"><span data-lake-id=\"uddf0b2ed\" id=\"uddf0b2ed\">可操作所有传入的 props</span></li><li fid=\"u91764fe9\" data-lake-id=\"u89545472\" id=\"u89545472\"><span data-lake-id=\"u273f9592\" id=\"u273f9592\">可操作组件的生命周期</span></li><li fid=\"u91764fe9\" data-lake-id=\"u3a5b8cf4\" id=\"u3a5b8cf4\"><span data-lake-id=\"u176cc7fe\" id=\"u176cc7fe\">可操作组件的 static 静态方法</span></li><li fid=\"u91764fe9\" data-lake-id=\"ub1cb4089\" id=\"ub1cb4089\"><span data-lake-id=\"u961fa2c9\" id=\"u961fa2c9\">可以获取 refs</span></li><li fid=\"u91764fe9\" data-lake-id=\"u687b8817\" id=\"u687b8817\"><span data-lake-id=\"u1330e56d\" id=\"u1330e56d\">可操作 state</span></li><li fid=\"u91764fe9\" data-lake-id=\"uc05c9377\" id=\"uc05c9377\"><span data-lake-id=\"ubcf9a7f0\" id=\"ubcf9a7f0\">可进行渲染劫持</span></li></ol></blockquote><h2 data-lake-id=\"gAIkY\" id=\"gAIkY\"><span data-lake-id=\"u92096234\" id=\"u92096234\">应用场景</span></h2><h3 data-lake-id=\"YWcXm\" id=\"YWcXm\"><span data-lake-id=\"uec026ef6\" id=\"uec026ef6\">可实现的功能</span></h3><ul list=\"u674b86e8\"><li fid=\"u5fa50bb0\" data-lake-id=\"u00dc5b73\" id=\"u00dc5b73\"><span data-lake-id=\"u5b56cfba\" id=\"u5b56cfba\">组合渲染</span></li><li fid=\"u5fa50bb0\" data-lake-id=\"u83455b83\" id=\"u83455b83\"><span data-lake-id=\"u448a6605\" id=\"u448a6605\">条件渲染</span></li><li fid=\"u5fa50bb0\" data-lake-id=\"u4e2bd712\" id=\"u4e2bd712\"><span data-lake-id=\"u079bab60\" id=\"u079bab60\">操作 props</span></li><li fid=\"u5fa50bb0\" data-lake-id=\"u8107a3c8\" id=\"u8107a3c8\"><span data-lake-id=\"u799605a3\" id=\"u799605a3\">获取 refs</span></li><li fid=\"u5fa50bb0\" data-lake-id=\"u9ecd2ee5\" id=\"u9ecd2ee5\"><span data-lake-id=\"u7ba41716\" id=\"u7ba41716\">状态管理</span></li><li fid=\"u5fa50bb0\" data-lake-id=\"u5f2674ef\" id=\"u5f2674ef\"><span data-lake-id=\"u6c13f0ae\" id=\"u6c13f0ae\">操作 state</span></li><li fid=\"u5fa50bb0\" data-lake-id=\"u103bb543\" id=\"u103bb543\"><span data-lake-id=\"u9dec8320\" id=\"u9dec8320\">渲染劫持</span></li></ul><h3 data-lake-id=\"dE0mo\" id=\"dE0mo\"><span data-lake-id=\"u5b235a84\" id=\"u5b235a84\">实际应用</span></h3><ul list=\"u187d011a\"><li fid=\"uc2315182\" data-lake-id=\"u112119d8\" id=\"u112119d8\"><span data-lake-id=\"u02ec0eb4\" id=\"u02ec0eb4\">日志打点</span></li><li fid=\"uc2315182\" data-lake-id=\"ud9f239d0\" id=\"ud9f239d0\"><span data-lake-id=\"u39217926\" id=\"u39217926\">权限控制</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22jsx%22%2C%22code%22%3A%22%2F%2F%20HOC.js%5Cnfunction%20withAdminAuth(WrappedComponent)%20%7B%5Cn%20%20%20%20return%20class%20extends%20React.Component%20%7B%5Cn%20%20%20%20%20%20%20%20state%20%3D%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20isAdmin%3A%20false%2C%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20async%20UNSAFE_componentWillMount()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20const%20currentRole%20%3D%20await%20getCurrentUserRole()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.setState(%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20isAdmin%3A%20currentRole%20%3D%3D%3D%20'Admin'%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20render()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(this.state.isAdmin)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%3CWrappedComponent%20%7B...this.props%7D%20%2F%3E%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20(%3Cdiv%3E%E6%82%A8%E6%B2%A1%E6%9C%89%E6%9D%83%E9%99%90%E6%9F%A5%E7%9C%8B%E8%AF%A5%E9%A1%B5%E9%9D%A2%EF%BC%8C%E8%AF%B7%E8%81%94%E7%B3%BB%E7%AE%A1%E7%90%86%E5%91%98%EF%BC%81%3C%2Fdiv%3E)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%3B%5Cn%7D%5Cn%5Cn%2F%2F%20pages%2Fpage-a.js%5Cnclass%20PageA%20extends%20React.Component%20%7B%5Cn%20%20%20%20constructor(props)%20%7B%5Cn%20%20%20%20%20%20%20%20super(props)%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20something%20here...%5Cn%20%20%20%20%7D%5Cn%20%20%20%20UNSAFE_componentWillMount()%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20fetching%20data%5Cn%20%20%20%20%7D%5Cn%20%20%20%20render()%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20render%20page%20with%20data%5Cn%20%20%20%20%7D%5Cn%7D%5Cnexport%20default%20withAdminAuth(PageA)%3B%5Cn%5Cn%5Cn%2F%2F%20pages%2Fpage-b.js%5Cnclass%20PageB%20extends%20React.Component%20%7B%5Cn%20%20%20%20constructor(props)%20%7B%5Cn%20%20%20%20%20%20%20%20super(props)%3B%5Cn%20%20%20%20%2F%2F%20something%20here...%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20UNSAFE_componentWillMount()%20%7B%5Cn%20%20%20%20%2F%2F%20fetching%20data%5Cn%20%20%20%20%7D%5Cn%20%20%20%20render()%20%7B%5Cn%20%20%20%20%2F%2F%20render%20page%20with%20data%5Cn%20%20%20%20%7D%5Cn%7D%5Cnexport%20default%20withAdminAuth(PageB)%3B%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22sOVUK%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ul list=\"u187d011a\" start=\"3\"><li fid=\"uc2315182\" data-lake-id=\"ubf42a4c1\" id=\"ubf42a4c1\"><span data-lake-id=\"u6984eec5\" id=\"u6984eec5\">双向绑定</span></li><li fid=\"uc2315182\" data-lake-id=\"u980b2b0c\" id=\"u980b2b0c\"><span data-lake-id=\"ua900843c\" id=\"ua900843c\">表单检验</span></li><li fid=\"uc2315182\" data-lake-id=\"u121bdc9c\" id=\"u121bdc9c\"><span data-lake-id=\"u08e41672\" id=\"u08e41672\">组件渲染性能追踪</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22class%20Home%20extends%20React.Component%20%7B%5Cn%20%20%20%20render()%20%7B%5Cn%20%20%20%20%20%20%20%20return%20%3Ch1%3EHello%20World.%3C%2Fh1%3E%5Cn%20%20%20%20%7D%5Cn%7D%5Cnfunction%20withTiming(WrappedComponent)%20%7B%5Cn%20%20%20%20return%20class%20extends%20WrappedComponent%20%7B%5Cn%20%20%20%20%20%20%20%20constructor(props)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20super(props)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.start%20%3D%200%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.end%20%3D%200%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20UNSAFE_componentWillMount()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20super.componentWillMount%20%26%26%20super.componentWillMount()%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.start%20%3D%20Date.now()%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20componentDidMount()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20super.componentDidMount%20%26%26%20super.componentDidMount()%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.end%20%3D%20Date.now()%5Cn%20%20%20%20%20%20%20%20%20%20%20%20console.log(%60%24%7BWrappedComponent.name%7D%20%E7%BB%84%E4%BB%B6%E6%B8%B2%E6%9F%93%E6%97%B6%E9%97%B4%E4%B8%BA%20%24%7Bthis.end%20-%20this.start%7D%20ms%60)%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20render()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20super.render()%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%7D%5Cn%5Cnexport%20default%20withTiming(Home)%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22uaQOy%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><blockquote data-lake-id=\"udc7e07c1\" id=\"udc7e07c1\" class=\"lake-alert lake-alert-warning\"><p data-lake-id=\"ub4a63310\" id=\"ub4a63310\"><span data-lake-id=\"uf54d1093\" id=\"uf54d1093\" class=\"lake-fontsize-1515\" style=\"color: rgb(56, 56, 56)\">注意：withTiming 是利用 反向继承 实现的一个高阶组件，功能是计算被包裹组件（这里是 Home 组件）的渲染时间。</span></p></blockquote><ul list=\"ufa92ad41\"><li fid=\"udf7cf763\" data-lake-id=\"ud0396dca\" id=\"ud0396dca\"><span data-lake-id=\"u36864e78\" id=\"u36864e78\">页面复用</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22jsx%22%2C%22code%22%3A%22const%20withFetching%20%3D%20fetching%20%3D%3E%20WrappedComponent%20%3D%3E%20%7B%5Cn%20%20%20%20return%20class%20extends%20React.Component%20%7B%5Cn%20%20%20%20%20%20%20%20state%20%3D%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20data%3A%20%5B%5D%2C%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20async%20UNSAFE_componentWillMount()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20const%20data%20%3D%20await%20fetching()%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.setState(%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20data%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20render()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20%3CWrappedComponent%20data%3D%7Bthis.state.data%7D%20%7B...this.props%7D%20%2F%3E%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%7D%5Cn%5Cn%2F%2F%20pages%2Fpage-a.js%5Cnexport%20default%20withFetching(fetching('science-fiction'))(MovieList)%3B%5Cn%2F%2F%20pages%2Fpage-b.js%5Cnexport%20default%20withFetching(fetching('action'))(MovieList)%3B%5Cn%2F%2F%20pages%2Fpage-other.js%5Cnexport%20default%20withFetching(fetching('some-other-type'))(MovieList)%3B%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22epbgb%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:33:00.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:33:00.000Z",
  "updated_at": "2022-05-10T15:12:40.000Z",
  "published_at": "2022-04-04T11:33:00.000Z",
  "first_published_at": "2022-04-04T11:32:59.552Z",
  "word_count": 688,
  "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647010293179-c8265b67-90a6-443a-8bb1-20a80e5211f4.png",
  "description": "高阶组件就是一个函数，且该函数接受一个组件作为参数，并返回一个新的组件属性代理函数返回一个自己定义的组件，然后在 render 函数中返回要包裹的组件，这样就可以代理所有传入的 props，并且决定如何渲染function proxyHoc(WrapperComponent) { \tretur...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}