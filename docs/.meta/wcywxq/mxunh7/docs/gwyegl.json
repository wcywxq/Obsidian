{
  "id": 72212197,
  "slug": "gwyegl",
  "title": "webpack 5 和 webpack 4 的区别",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"CY4Z8\"></a>\n## 内置静态资源构建能力 Asset Modules\n在 `webpack v5` 之前，通常使用：\n\n- `raw-loader` 将文件导入为字符串\n- `url-loader` 将文件作为 `data URI` 内联到 `bundle` 中\n- `file-loader` 将文件发送到输出目录\n\n资源模块类型 `asset module type`，通过添加 `4` 种新的模块类型，来替换所有这些 `loader`：\n\n- `asset/resource` 发送一个单独的文件并导出 `URL`，用来替代 `file-loader`\n- `asset/inline` 导出一个资源的 `data URI`，用来替代 `url-loader`\n- `asset/source` 导出资源的源代码，用来替代  `raw-loader`\n- `asset` 在导出一个 `data URI` 和发送一个单独的文件之间自动选择，之前通过使用 `url-loader`，并且配置\n<a name=\"mm9My\"></a>\n## 构建速度优化\n在 `webpack v4` 中，为了让我们的构建速度更快，通常需要借助一些插件或者额外的配置来达到目的。\n\n1. `cache-loader`webpack5不推荐：针对于一些耗时的工作进行缓存，如：缓存 `babel-loader` 的工作\n2. `terser-webpack-plugin`webpack5推荐 / `uglifyjs-webpack-plugin`webpack5不推荐 的 `cache`、`parallel`\n\n我们会借助 `cache-loader` 去对我们构建过程中消耗性能比较大的部分进行缓存，缓存会存放到硬盘中的 `node_modules/.cache/cache-loader`，缓存的读取和存储是会消耗性能的，所以只推荐用在性能开销大的地方。\n```javascript\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /.js$/,\n        use: ['cache-loader', 'babel-loader'],\n        include: path.resolve('src')\n      }\n    ]\n  }\n}\n```\n`terserPlugin` 继承自 `uglifyjsPlugin`，可以通过开启插件的 `cache` 以及 `parallel` 特性来加快压缩(`terserPlugin` 是 `webpack` 推荐及内置的压缩插件，`cache` 与 `parallel` 默认为开启状态)，缓存路径在 `node_modules/.cache/terser-webpack-plugin`\n```javascript\nmodule.exports = {\n  minimizer: {\n    new TerserPlugin({\n      cache: true, // 开启该插件的缓存，默认缓存到 node_modules/.cache\n      parallel: true, // 开启多线程压缩，提高压缩效率\n      exclude: /node_modules/\n    })\n  }\n}\n```\n到了 `webpack5`，可以通过 `cache` 特性来将 `webpack` 工作缓存到硬盘中，存放的路径为 `node_modules/.cache/webpack`\n```javascript\nmodule.exports = {\n  cache: {\n    // 1. 将缓存类型设置为文件系统\n    type: 'filesystem', // 默认是 memory\n    // 2. 将缓存文件命名为 .temp_cache, 默认路径是 node_modules/.cache/webpack\n    cacheDirectory: path.resolve(__dirname, '.temp_cache')\n  }\n}\n```\n<a name=\"iQnAq\"></a>\n## 包代码体积优化\n<a name=\"hsi64\"></a>\n### 代码分割\n为了让我们打出来的包体积更加小，颗粒度更加明确。我们经常会用到 `webpack` 的代码分割 `split chunk` 以及 `tree shaking`。<br />在 `webpack5` 中，这两者也得到了优化与加强。\n```javascript\nmodule.exports = {\n  optimization: {\n    splitChunks: {\n      chunks: 'async', // 只对异步加载的模块进行处理\n      minSize: {\n        javascript: 30000, // 模块要大于 30kb 才会进行提取\n        style: 50000, // 模块要大于 50kb 才会进行提取\n      },\n      minRemainingSize: 0, // 代码分割后，文件 size 必须大于该值\n      maxSize: 0,\n      minChunks: 1, // 被提取的模块必须被引用 1 次\n      maxAsyncRequests: 6, // 异步加载代码时同时进行的最大请求数不得超过 6 个\n      maxInitialRequests: 4, // 入口文件加载时最大同时请求数不得超过 4 个\n      automaticNameDelimiter: '~', // 模块文件名称前缀\n      cacheGroups: {\n        // 分组，可继承或覆盖外层配置\n        // 来自 node_modules 的模块提取到一个公共文件中(由 v4 的 vendors 改名而来)\n        defaultVendors: {\n          test: /[\\\\/]node_modules[\\\\/]/,\n          priority: -10\n        },\n        // 其他不是 node_modules 中的模块，如果有被引用不少于 2 次，那么也提取出来\n        default: {\n          minChunks: 2,\n          priority: -20,\n          reuseExistingChunk: true\n        }\n      }\n    }\n  }\n}\n```\n<a name=\"Qiftp\"></a>\n### Tree shaking\n`webpack` 不能 `100%` 安全地进行 `tree-shaking`，`**webpack v4**`** 有些场景是不能将无用代码剔除的**。有些模块导入，只要被引入，就会对应用程序产生重要的影响。一个很好的例子：全局样式表、设置全局配置的 `javaScript` 文件。\n\n`webpack` 认为这样的文件有 \"副作用\"。具有副作用的文件不应该做 `tree-shaking`，因为这将破坏整个应用程序。`webpack` 的设计者清楚地认识到：不知道哪些文件有副作用的情况下打包代码的风险，因此 `webpack4` 默认地将所有代码视为有副作用。这可以保护你免于删除必要的文件，但这意味着 `webpack` 的默认行为实际上是不进行 `tree-shaking`。\n:::info\n`webpack v5` 默认会进行 `tree-shaking`\n:::\n\n<a name=\"Hl4o5\"></a>\n#### 内部模块 tree shaking\n`webpack v4` 没有分析模块的导出和导入之间的依赖关系。`webpack v5` 有一个新选项 `optimization.innerGraph`，它在生产模式下默认启用，它对模块中的符号运行分析以找出从导出到导入的依赖关系。\n```javascript\nimport { something } from './something'\n\nfunction usingSomething() {\n  return something\n}\n\nexport function test() {\n  return useingSomething()\n}\n```\n`innerGraph` 将计算出 `something` 仅在使用 `test` 导出时使用。这允许将更多导出标记为未使用并从包中省略更多代码。<br />当 `\"sideEffects\": false` 设置，这允许省略甚至更多的模块。在此示例中，`./something` 当 `test` 导出未使用时将被省略。\n<a name=\"TVQ03\"></a>\n#### commonjs tree shaking\n`webpack4` 曾经不进行对 `commonjs` 导出和 `require` 调用时的导出使用分析。`webpack5` 增加了对一些 `commonjs` 构造的支持，允许消除未使用的 `commonjs` 导出，并从 `require` 调用中跟踪引用的导出名称。\n<a name=\"AYeHi\"></a>\n### 剔除 npm 包内部针对 node.js 模块自动引用的 polyfills\n`webpack v4` 编译引入 `npm` 包，有些 `npm` 包里面包含针对 `nodejs` 的 `polyfills`，实际上前端浏览器是不需要的。\n```javascript\nimport CryptoJS from 'crypto-js'\nconst md5Password = CryptoJS.MD5('123123')\nconsole.log(md5Password)\n```\n`webpack v4` 引入 `crypto-js` 模块会自动引入 `polyfill：crypto-browerify`，但是部分代码是不需要的，`webpack v5` 默认会自动剔除\n\n`webpack v5` 编译中，会出现 `polyfill` 添加提示，如果不需要 `node polufill`，按照提示 `alias` 设置为 `false` 即可\n```javascript\nmodule.exports = {\n  resolve: {\n    // 1. 不需要 node polyfills\n    alias: {\n      crypto: false\n    },\n    // 2. 手动添加 polyfills\n    // fallback: {\n    //   crypto: require.resolve('crypto-browserify')\n    // }\n  }\n}\n```\n到了 `webpack v5`，我们需要清楚自己的项目需要引入哪些 `node polyfill`。\n<a name=\"GWjtc\"></a>\n## 持久化缓存\n<a name=\"hbKWt\"></a>\n#### 内容哈希\n在 `webpack v4` 是**根据代码的结构**生成 `chunkhash`，现在 `webpack v5` 将完全根据内容生成 `chunkhash`，比如修改了内容的注释或者变量则不会引起 `chunkhash` 的变化，让浏览器继续使用缓存\n<a name=\"BOOGe\"></a>\n#### 默认启用长期缓存算法\n在 `webpack v4` 中，`chunkId` 与 `moduleId` 都是**自增 id**。也就是只要我们新增一个模块，那么代码中 `module` 的数量就会发生变化，从而导致 `moduleId` 发生变化，于是文件内容就发生了变化。`chunkId` 也是如此，新增一个入口的时候，`chunk` 数量的变化造成了 `chunkId` 的变化，导致了文件内容变化。\n\n`webpack v4` 可以通过设置 `optimization.moduleIds = \"hashed\"` 与 `optimization.namedChunks = true` 来解决 这些问题，但是都存在性能损耗等副作用。\n```javascript\nmodule.exports = {\n  moduleIds: 'hashed',\n  namedChunks: true\n}\n```\n而 `webpack v5` 在 `production` 模式下 `optimization.chunkIds` 和 `optimization.moduleIds` 默认会设为 `'deterministic'`，`webpack` 会采用新的算法来计算确定性的 `chunkId` 和 `moduleId`。\n<a name=\"wkxmn\"></a>\n## 模块联邦\n模块联邦制，使 `javaScript` 应用得以从另一个 `javaScript` 应用中动态地加载代码 --- 同时共享依赖。项目分为：消费者 `Host`，被消费者 `Remote`。功能实现主要依靠 `ModuleFederationPlugin` 插件。\n```javascript\nnew ModuleFedrationPlugin({\n  name: '', // 名称，唯一 id\n  library: {}, // 以什么形式暴露，比如 umd\n  filename: '',  // 输出的入口文件名称\n  exporse: {}, // 要输出的组件或方法\n  shared: [] // 要共享的依赖\n})\n```\n```javascript\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst ModuleFederationPlugin = require('webpack/lib/container/ModuleFederationPlugin')\n\nmodule.exports = {\n  // ...\n  plugins: [\n    new ModuleFederationPlugin({\n      // 1. name 当前应用名称，需要全局唯一\n      name: 'app_one_remote',\n      // 2. remotes 可以讲其他项目的 name 映射到当前项目中\n      remotes: {\n        app_two: 'app_two_remote',\n        app_three: 'app_three_remote'\n      },\n      // 3. exposes 表示导出的模块，只有在此声明的模块才可以作为远程依赖被使用\n      exposes: {\n        AppContainer: './src/App'\n      },\n      // 4. shared 可以让远程加载的模块对应依赖改为使用本地项目的 react/react-dom\n      shard: ['react', 'react-dom', 'react-router-dom']\n    }),\n    new HtmlWebpackPlugin({\n      template: './public/index.html',\n      chunks: ['main']\n    })\n  ]\n}\n```\n如果设置了 `remotes: { app_two: 'app_two_remote' }`，在代码中就可以直接利用以下方式直接从对方应用调用模块\n```javascript\nimport { Search } from 'app_two/Search'\n// app_two/Search 来自于 app_two 的配置\n```\n```javascript\nexport default {\n  plugins: [\n    new ModuleFederationPlugin({\n      name: 'app_two',\n      library: {\n        type: 'var',\n        name: 'app_two'\n      },\n      filename: 'remoteEntry.js',\n      exposes: {\n        Search: './src/Search'\n      },\n      shared: ['react', 'react-dom']\n    })\n  ]\n}\n```\n正因为 `Search` 被 `exposes` 被导出，因此可以使用 `[name]/[exposes_name]` 这个模块，这个模块对于被引用应用来说是一个本地模块。实际上是直接将一个应用的 `bundle`，应用于另一个应用，动态分发 `runtime` 自模块给其他应用。\n<a name=\"SAqZk\"></a>\n### 结论\n`webpack v5` 的模块联邦让 `webpack` 达到了线上 `runtime` 的效果，让代码直接在项目间利用 `cdn` 直接共享，不再需要本地安装 `npm` 包、构建再发布了。\n<a name=\"QCqbH\"></a>\n### 微前端架构存在的问题\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1648046099220-3f4e6738-7bab-465b-af99-22d0f2dfd0e3.png#clientId=u9a0f9fd2-2ae0-4&from=paste&height=928&id=ud0a3e2bb&originHeight=928&originWidth=1304&originalType=binary&ratio=1&rotation=0&showTitle=false&size=543589&status=done&style=none&taskId=u5d3c0195-789e-46be-9c5b-c470018991a&title=&width=1304)<br />在当前的为前端架构中，通过了许多技术手段，如：应用分离、`js` 沙箱、`css` 隔离、预加载等实现了整个架构的使用。但对于公共依赖加载目前并没有非常好的解决方案。<br />通常处理公共依赖的方式是使用 `npm`，将依赖抽离作为 `lib` 公共库进行管理。应用之中使用到 `lib`，将其安装到项目中，再通过 `webpack` 打包上线<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1648046818769-a678e047-0cd2-4a27-bda7-251fbfd2e2de.png#clientId=u9a0f9fd2-2ae0-4&from=paste&height=798&id=u64ed7e29&originHeight=798&originWidth=1304&originalType=binary&ratio=1&rotation=0&showTitle=false&size=264513&status=done&style=none&taskId=u97514bbc-5ece-4811-93a3-29b574293f0&title=&width=1304)<br />这种方式虽然解决了公共依赖问题，但还是需要走本地编译，无法做到项目运行时 `runtime` 调用。\n\n使用 `webpack v5` 模块联邦就可以解决这一问题。\n\n将公共依赖配置成一个远程模块，子应用只需要根据需求动态加载。这种方式可以做到运行时调用，不用考虑本地编译问题。<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1648046937650-f14035db-aa15-4b12-9e45-75aba0982b0d.png#clientId=u9a0f9fd2-2ae0-4&from=paste&height=813&id=ud7712ff1&originHeight=813&originWidth=1304&originalType=binary&ratio=1&rotation=0&showTitle=false&size=259883&status=done&style=none&taskId=u3995fc2e-53b9-42d2-9b2d-0ce0470641f&title=&width=1304)<br />这就衍生出一种新的应用形态：中心应用，这个应用具备模块输出的能力，可以在线动态的分发运行时的子模块。<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1648046989783-976f1257-96f2-4bc8-8a3f-d46007ca1227.png#clientId=u9a0f9fd2-2ae0-4&from=paste&height=1238&id=u6c3ca203&originHeight=1238&originWidth=1204&originalType=binary&ratio=1&rotation=0&showTitle=false&size=337511&status=done&style=none&taskId=u0196dd1e-7bbb-45a1-b464-d142c77f902&title=&width=1204)\n:::info\n模块联邦在一定程度上弥补了为前端架构中的不足，让为前端架构日益趋向成熟。在可以预见的未来，前端工程化将进入一个新的阶段。\n:::\n<a name=\"Cp2Ww\"></a>\n## 对 web 平台功能的全新支持\n<a name=\"ZrL4Q\"></a>\n#### JSON 模块\n\n- 使用自定义的 `JSON` 解析器：`Rule.parser.parse` 中指定\n- 未使用的属性也会被 `optimization.usedExports` 优化丢弃\n- 属性会被 `optimization.mangleExports` 优化打乱\n<a name=\"kwUCJ\"></a>\n#### ProgressPlugin 插件的优化\n不仅可以统计模块编译的进度，也可以统计 **入口** 和 **依赖**\n<a name=\"ZOl0x\"></a>\n#### 自动添加唯一命名\n`webpack v4` 中，多个 `webpack` 同时运行时可能会在同一个 `html` 页面上发生冲突，这时候会在 `output.jsonpFunction` 配置提供一个自定义的。\n\n`webpack v5` 中，会从 `package.json name` 中自动推断出一个唯一的构建名称，并将其作为 `output.uniqueName` 的默认值，可将 `output.jsonpFunction` 删除。\n<a name=\"Cl9b2\"></a>\n#### TypeScript 类型\n`webpack v5` 可以从源码中生成 `typescript` 类型，并通过 `npm` 包暴露它们\n<a name=\"vOwNF\"></a>\n## <br />\n",
  "body_draft": "",
  "body_html": "<!doctype html><h2 id=\"CY4Z8\"><span>内置静态资源构建能力 Asset Modules</span></h2><p data-lake-id=\"u23ac8101\"><span>在 </span><code><span>webpack v5</span></code><span> 之前，通常使用：</span></p><ul><li><code><span>raw-loader</span></code><span> 将文件导入为字符串</span></li><li><code><span>url-loader</span></code><span> 将文件作为 </span><code><span>data URI</span></code><span> 内联到 </span><code><span>bundle</span></code><span> 中</span></li><li><code><span>file-loader</span></code><span> 将文件发送到输出目录</span></li></ul><p data-lake-id=\"u993d2fda\"><span>资源模块类型 </span><code><span>asset module type</span></code><span>，通过添加 </span><code><span>4</span></code><span> 种新的模块类型，来替换所有这些 </span><code><span>loader</span></code><span>：</span></p><ul><li><code><span>asset/resource</span></code><span> 发送一个单独的文件并导出 </span><code><span>URL</span></code><span>，用来替代 </span><code><span>file-loader</span></code></li><li><code><span>asset/inline</span></code><span> 导出一个资源的 </span><code><span>data URI</span></code><span>，用来替代 </span><code><span>url-loader</span></code></li><li><code><span>asset/source</span></code><span> 导出资源的源代码，用来替代  </span><code><span>raw-loader</span></code></li><li><code><span>asset</span></code><span> 在导出一个 </span><code><span>data URI</span></code><span> 和发送一个单独的文件之间自动选择，之前通过使用 </span><code><span>url-loader</span></code><span>，并且配置</span></li></ul><h2 id=\"mm9My\"><span>构建速度优化</span></h2><p data-lake-id=\"u6e059ded\"><span>在 </span><code><span>webpack v4</span></code><span> 中，为了让我们的构建速度更快，通常需要借助一些插件或者额外的配置来达到目的。</span></p><ol><li><code><span>cache-loader</span></code><span class=\"lake-card-label\" style=\"background-color: #FFE8E6; color: #820014;\">webpack5不推荐</span><span>：针对于一些耗时的工作进行缓存，如：缓存 </span><code><span>babel-loader</span></code><span> 的工作</span></li><li><code><span>terser-webpack-plugin</span></code><span class=\"lake-card-label\" style=\"background-color: #E4F7D2; color: #135200;\">webpack5推荐</span><span> / </span><code><span>uglifyjs-webpack-plugin</span></code><span class=\"lake-card-label\" style=\"background-color: #FFE8E6; color: #820014;\">webpack5不推荐</span><span> 的 </span><code><span>cache</span></code><span>、</span><code><span>parallel</span></code></li></ol><p data-lake-id=\"u7a07925c\"><span>​</span><br /></p><p data-lake-id=\"u5f292bf4\"><span>我们会借助 </span><code><span>cache-loader</span></code><span> 去对我们构建过程中消耗性能比较大的部分进行缓存，缓存会存放到硬盘中的 </span><code><span>node_modules/.cache/cache-loader</span></code><span>，缓存的读取和存储是会消耗性能的，所以只推荐用在性能开销大的地方。</span></p><pre data-lang=\"javascript\"><code>module.exports = {\n  module: {\n    rules: [\n      {\n        test: /.js$/,\n        use: ['cache-loader', 'babel-loader'],\n        include: path.resolve('src')\n      }\n    ]\n  }\n}</code></pre><p data-lake-id=\"u3f8cfe5f\"><code><span>terserPlugin</span></code><span> 继承自 </span><code><span>uglifyjsPlugin</span></code><span>，可以通过开启插件的 </span><code><span>cache</span></code><span> 以及 </span><code><span>parallel</span></code><span> 特性来加快压缩(</span><code><span>terserPlugin</span></code><span> 是 </span><code><span>webpack</span></code><span> 推荐及内置的压缩插件，</span><code><span>cache</span></code><span> 与 </span><code><span>parallel</span></code><span> 默认为开启状态)，缓存路径在 </span><code><span>node_modules/.cache/terser-webpack-plugin</span></code></p><pre data-lang=\"javascript\"><code>module.exports = {\n  minimizer: {\n    new TerserPlugin({\n      cache: true, // 开启该插件的缓存，默认缓存到 node_modules/.cache\n      parallel: true, // 开启多线程压缩，提高压缩效率\n      exclude: /node_modules/\n    })\n  }\n}</code></pre><p data-lake-id=\"ud785d70b\"><span>到了 </span><code><span>webpack5</span></code><span>，可以通过 </span><code><span>cache</span></code><span> 特性来将 </span><code><span>webpack</span></code><span> 工作缓存到硬盘中，存放的路径为 </span><code><span>node_modules/.cache/webpack</span></code></p><pre data-lang=\"javascript\"><code>module.exports = {\n  cache: {\n    // 1. 将缓存类型设置为文件系统\n    type: 'filesystem', // 默认是 memory\n    // 2. 将缓存文件命名为 .temp_cache, 默认路径是 node_modules/.cache/webpack\n    cacheDirectory: path.resolve(__dirname, '.temp_cache')\n  }\n}</code></pre><h2 id=\"iQnAq\"><span>包代码体积优化</span></h2><h3 id=\"hsi64\"><span>代码分割</span></h3><p data-lake-id=\"u6959783b\" style=\"text-indent: 2em;\"><span>为了让我们打出来的包体积更加小，颗粒度更加明确。我们经常会用到 </span><code><span>webpack</span></code><span> 的代码分割 </span><code><span>split chunk</span></code><span> 以及 </span><code><span>tree shaking</span></code><span>。</span></p><p data-lake-id=\"u024027f1\" style=\"text-indent: 2em;\"><span>在 </span><code><span>webpack5</span></code><span> 中，这两者也得到了优化与加强。</span></p><pre data-lang=\"javascript\"><code>module.exports = {\n  optimization: {\n    splitChunks: {\n      chunks: 'async', // 只对异步加载的模块进行处理\n      minSize: {\n        javascript: 30000, // 模块要大于 30kb 才会进行提取\n        style: 50000, // 模块要大于 50kb 才会进行提取\n      },\n      minRemainingSize: 0, // 代码分割后，文件 size 必须大于该值\n      maxSize: 0,\n      minChunks: 1, // 被提取的模块必须被引用 1 次\n      maxAsyncRequests: 6, // 异步加载代码时同时进行的最大请求数不得超过 6 个\n      maxInitialRequests: 4, // 入口文件加载时最大同时请求数不得超过 4 个\n      automaticNameDelimiter: '~', // 模块文件名称前缀\n      cacheGroups: {\n        // 分组，可继承或覆盖外层配置\n        // 来自 node_modules 的模块提取到一个公共文件中(由 v4 的 vendors 改名而来)\n        defaultVendors: {\n          test: /[\\\\/]node_modules[\\\\/]/,\n          priority: -10\n        },\n        // 其他不是 node_modules 中的模块，如果有被引用不少于 2 次，那么也提取出来\n        default: {\n          minChunks: 2,\n          priority: -20,\n          reuseExistingChunk: true\n        }\n      }\n    }\n  }\n}</code></pre><h3 id=\"Qiftp\"><span>Tree shaking</span></h3><p data-lake-id=\"u93c2b2c7\"><code><span>webpack</span></code><span> 不能 </span><code><span>100%</span></code><span> 安全地进行 </span><code><span>tree-shaking</span></code><span>，</span><code><strong><span>webpack v4</span></strong></code><strong><span> 有些场景是不能将无用代码剔除的</span></strong><span>。有些模块导入，只要被引入，就会对应用程序产生重要的影响。一个很好的例子：全局样式表、设置全局配置的 </span><code><span>javaScript</span></code><span> 文件。</span></p><p data-lake-id=\"u22cda552\"><span>​</span><br /></p><p data-lake-id=\"ube0dc931\"><code><span>webpack</span></code><span> 认为这样的文件有 &quot;副作用&quot;。具有副作用的文件不应该做 </span><code><span>tree-shaking</span></code><span>，因为这将破坏整个应用程序。</span><code><span>webpack</span></code><span> 的设计者清楚地认识到：不知道哪些文件有副作用的情况下打包代码的风险，因此 </span><code><span>webpack4</span></code><span> 默认地将所有代码视为有副作用。这可以保护你免于删除必要的文件，但这意味着 </span><code><span>webpack</span></code><span> 的默认行为实际上是不进行 </span><code><span>tree-shaking</span></code><span>。</span></p><blockquote class=\"lake-alert lake-alert-info\"><p data-lake-id=\"ufa26a6a1\"><code><span>webpack v5</span></code><span> 默认会进行 </span><code><span>tree-shaking</span></code></p></blockquote><p data-lake-id=\"uaa5edaa5\"><br /></p><h4 id=\"Hl4o5\"><span>内部模块 tree shaking</span></h4><p data-lake-id=\"u5cc61881\"><code><span>webpack v4</span></code><span> 没有分析模块的导出和导入之间的依赖关系。</span><code><span>webpack v5</span></code><span> 有一个新选项 </span><code><span>optimization.innerGraph</span></code><span>，它在生产模式下默认启用，它对模块中的符号运行分析以找出从导出到导入的依赖关系。</span></p><pre data-lang=\"javascript\"><code>import { something } from './something'\n\nfunction usingSomething() {\n  return something\n}\n\nexport function test() {\n  return useingSomething()\n}</code></pre><p data-lake-id=\"u5939a2e6\"><code><span>innerGraph</span></code><span> 将计算出 </span><code><span>something</span></code><span> 仅在使用 </span><code><span>test</span></code><span> 导出时使用。这允许将更多导出标记为未使用并从包中省略更多代码。</span></p><p data-lake-id=\"u776c43a8\"><span>当 </span><code><span>&quot;sideEffects&quot;: false</span></code><span> 设置，这允许省略甚至更多的模块。在此示例中，</span><code><span>./something</span></code><span> 当 </span><code><span>test</span></code><span> 导出未使用时将被省略。</span></p><h4 id=\"TVQ03\"><span>commonjs tree shaking</span></h4><p data-lake-id=\"uaa69f9bd\"><code><span>webpack4</span></code><span> 曾经不进行对 </span><code><span>commonjs</span></code><span> 导出和 </span><code><span>require</span></code><span> 调用时的导出使用分析。</span><code><span>webpack5</span></code><span> 增加了对一些 </span><code><span>commonjs</span></code><span> 构造的支持，允许消除未使用的 </span><code><span>commonjs</span></code><span> 导出，并从 </span><code><span>require</span></code><span> 调用中跟踪引用的导出名称。</span></p><h3 id=\"AYeHi\"><span>剔除 npm 包内部针对 node.js 模块自动引用的 polyfills</span></h3><p data-lake-id=\"u3cd58fd3\"><code><span>webpack v4</span></code><span> 编译引入 </span><code><span>npm</span></code><span> 包，有些 </span><code><span>npm</span></code><span> 包里面包含针对 </span><code><span>nodejs</span></code><span> 的 </span><code><span>polyfills</span></code><span>，实际上前端浏览器是不需要的。</span></p><pre data-lang=\"javascript\"><code>import CryptoJS from 'crypto-js'\nconst md5Password = CryptoJS.MD5('123123')\nconsole.log(md5Password)</code></pre><p data-lake-id=\"u56c940af\"><code><span>webpack v4</span></code><span> 引入 </span><code><span>crypto-js</span></code><span> 模块会自动引入 </span><code><span>polyfill：crypto-browerify</span></code><span>，但是部分代码是不需要的，</span><code><span>webpack v5</span></code><span> 默认会自动剔除</span></p><p data-lake-id=\"u520cb5c7\"><span>​</span><br /></p><p data-lake-id=\"ufe8a51ec\"><code><span>webpack v5</span></code><span> 编译中，会出现 </span><code><span>polyfill</span></code><span> 添加提示，如果不需要 </span><code><span>node polufill</span></code><span>，按照提示 </span><code><span>alias</span></code><span> 设置为 </span><code><span>false</span></code><span> 即可</span></p><pre data-lang=\"javascript\"><code>module.exports = {\n  resolve: {\n    // 1. 不需要 node polyfills\n    alias: {\n      crypto: false\n    },\n    // 2. 手动添加 polyfills\n    // fallback: {\n    //   crypto: require.resolve('crypto-browserify')\n    // }\n  }\n}</code></pre><p data-lake-id=\"ue7919d8d\"><span>到了 </span><code><span>webpack v5</span></code><span>，我们需要清楚自己的项目需要引入哪些 </span><code><span>node polyfill</span></code><span>。</span></p><h2 id=\"GWjtc\"><span>持久化缓存</span></h2><h4 id=\"hbKWt\"><span>内容哈希</span></h4><p data-lake-id=\"ua569cbd4\"><span>在 </span><code><span>webpack v4</span></code><span> 是</span><strong><span>根据代码的结构</span></strong><span>生成 </span><code><span>chunkhash</span></code><span>，现在 </span><code><span>webpack v5</span></code><span> 将完全根据内容生成 </span><code><span>chunkhash</span></code><span>，比如修改了内容的注释或者变量则不会引起 </span><code><span>chunkhash</span></code><span> 的变化，让浏览器继续使用缓存</span></p><h4 id=\"BOOGe\"><span>默认启用长期缓存算法</span></h4><p data-lake-id=\"u6264ff46\"><span>在 </span><code><span>webpack v4</span></code><span> 中，</span><code><span>chunkId</span></code><span> 与 </span><code><span>moduleId</span></code><span> 都是</span><strong><span>自增 id</span></strong><span>。也就是只要我们新增一个模块，那么代码中 </span><code><span>module</span></code><span> 的数量就会发生变化，从而导致 </span><code><span>moduleId</span></code><span> 发生变化，于是文件内容就发生了变化。</span><code><span>chunkId</span></code><span> 也是如此，新增一个入口的时候，</span><code><span>chunk</span></code><span> 数量的变化造成了 </span><code><span>chunkId</span></code><span> 的变化，导致了文件内容变化。</span></p><p data-lake-id=\"uc2631483\"><span>​</span><br /></p><p data-lake-id=\"ub0345d5c\"><code><span>webpack v4</span></code><span> 可以通过设置 </span><code><span>optimization.moduleIds = &quot;hashed&quot;</span></code><span> 与 </span><code><span>optimization.namedChunks = true</span></code><span> 来解决 这些问题，但是都存在性能损耗等副作用。</span></p><pre data-lang=\"javascript\"><code>module.exports = {\n  moduleIds: 'hashed',\n  namedChunks: true\n}</code></pre><p data-lake-id=\"uc8be5244\"><span>而 </span><code><span>webpack v5</span></code><span> 在 </span><code><span>production</span></code><span> 模式下 </span><code><span>optimization.chunkIds</span></code><span> 和 </span><code><span>optimization.moduleIds</span></code><span> 默认会设为 </span><code><span>'deterministic'</span></code><span>，</span><code><span>webpack</span></code><span> 会采用新的算法来计算确定性的 </span><code><span>chunkId</span></code><span> 和 </span><code><span>moduleId</span></code><span>。</span></p><h2 id=\"wkxmn\"><span>模块联邦</span></h2><p data-lake-id=\"udf01e38c\"><span>模块联邦制，使 </span><code><span>javaScript</span></code><span> 应用得以从另一个 </span><code><span>javaScript</span></code><span> 应用中动态地加载代码 --- 同时共享依赖。项目分为：消费者 </span><code><span>Host</span></code><span>，被消费者 </span><code><span>Remote</span></code><span>。功能实现主要依靠 </span><code><span>ModuleFederationPlugin</span></code><span> 插件。</span></p><pre data-lang=\"javascript\"><code>new ModuleFedrationPlugin({\n  name: '', // 名称，唯一 id\n  library: {}, // 以什么形式暴露，比如 umd\n  filename: '',  // 输出的入口文件名称\n  exporse: {}, // 要输出的组件或方法\n  shared: [] // 要共享的依赖\n})</code></pre><pre data-lang=\"javascript\"><code>const HtmlWebpackPlugin = require('html-webpack-plugin')\nconst ModuleFederationPlugin = require('webpack/lib/container/ModuleFederationPlugin')\n\nmodule.exports = {\n  // ...\n  plugins: [\n    new ModuleFederationPlugin({\n      // 1. name 当前应用名称，需要全局唯一\n      name: 'app_one_remote',\n      // 2. remotes 可以讲其他项目的 name 映射到当前项目中\n      remotes: {\n        app_two: 'app_two_remote',\n        app_three: 'app_three_remote'\n      },\n      // 3. exposes 表示导出的模块，只有在此声明的模块才可以作为远程依赖被使用\n      exposes: {\n        AppContainer: './src/App'\n      },\n      // 4. shared 可以让远程加载的模块对应依赖改为使用本地项目的 react/react-dom\n      shard: ['react', 'react-dom', 'react-router-dom']\n    }),\n    new HtmlWebpackPlugin({\n      template: './public/index.html',\n      chunks: ['main']\n    })\n  ]\n}</code></pre><p data-lake-id=\"ueac4dd6c\"><span>如果设置了 </span><code><span>remotes: { app_two: 'app_two_remote' }</span></code><span>，在代码中就可以直接利用以下方式直接从对方应用调用模块</span></p><pre data-lang=\"javascript\"><code>import { Search } from 'app_two/Search'\n// app_two/Search 来自于 app_two 的配置</code></pre><pre data-lang=\"javascript\"><code>export default {\n  plugins: [\n    new ModuleFederationPlugin({\n      name: 'app_two',\n      library: {\n        type: 'var',\n        name: 'app_two'\n      },\n      filename: 'remoteEntry.js',\n      exposes: {\n        Search: './src/Search'\n      },\n      shared: ['react', 'react-dom']\n    })\n  ]\n}</code></pre><p data-lake-id=\"u7f6dda63\"><span>正因为 </span><code><span>Search</span></code><span> 被 </span><code><span>exposes</span></code><span> 被导出，因此可以使用 </span><code><span>[name]/[exposes_name]</span></code><span> 这个模块，这个模块对于被引用应用来说是一个本地模块。实际上是直接将一个应用的 </span><code><span>bundle</span></code><span>，应用于另一个应用，动态分发 </span><code><span>runtime</span></code><span> 自模块给其他应用。</span></p><h3 id=\"SAqZk\"><span>结论</span></h3><p data-lake-id=\"uee391b7a\"><code><span>webpack v5</span></code><span> 的模块联邦让 </span><code><span>webpack</span></code><span> 达到了线上 </span><code><span>runtime</span></code><span> 的效果，让代码直接在项目间利用 </span><code><span>cdn</span></code><span> 直接共享，不再需要本地安装 </span><code><span>npm</span></code><span> 包、构建再发布了。</span></p><h3 id=\"QCqbH\"><span>微前端架构存在的问题</span></h3><p data-lake-id=\"ub783f76c\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648046099220-3f4e6738-7bab-465b-af99-22d0f2dfd0e3.png#clientId=u9a0f9fd2-2ae0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=928&amp;id=ud0a3e2bb&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=928&amp;originWidth=1304&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=543589&amp;status=done&amp;style=none&amp;taskId=u5d3c0195-789e-46be-9c5b-c470018991a&amp;title=&amp;width=1304\" style=\"max-width: 600px; width: 1304px;\" /></p><p data-lake-id=\"ufa0a653a\" style=\"text-indent: 2em;\"><span>在当前的为前端架构中，通过了许多技术手段，如：应用分离、</span><code><span>js</span></code><span> 沙箱、</span><code><span>css</span></code><span> 隔离、预加载等实现了整个架构的使用。但对于公共依赖加载目前并没有非常好的解决方案。</span></p><p data-lake-id=\"u7f00fbb5\" style=\"text-indent: 2em;\"><span>通常处理公共依赖的方式是使用 </span><code><span>npm</span></code><span>，将依赖抽离作为 </span><code><span>lib</span></code><span> 公共库进行管理。应用之中使用到 </span><code><span>lib</span></code><span>，将其安装到项目中，再通过 </span><code><span>webpack</span></code><span> 打包上线</span></p><p data-lake-id=\"ub53df518\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648046818769-a678e047-0cd2-4a27-bda7-251fbfd2e2de.png#clientId=u9a0f9fd2-2ae0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=798&amp;id=u64ed7e29&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=798&amp;originWidth=1304&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=264513&amp;status=done&amp;style=none&amp;taskId=u97514bbc-5ece-4811-93a3-29b574293f0&amp;title=&amp;width=1304\" style=\"max-width: 600px; width: 1304px;\" /></p><p data-lake-id=\"u12f1e570\" style=\"text-indent: 2em;\"><span>这种方式虽然解决了公共依赖问题，但还是需要走本地编译，无法做到项目运行时 </span><code><span>runtime</span></code><span> 调用。</span></p><p data-lake-id=\"u399adaaf\" style=\"text-indent: 2em;\"><span>​</span><br /></p><p data-lake-id=\"ub02b07c5\" style=\"text-indent: 2em;\"><span>使用 </span><code><span>webpack v5</span></code><span> 模块联邦就可以解决这一问题。</span></p><p data-lake-id=\"ud0e3bba7\" style=\"text-indent: 2em;\"><span>​</span><br /></p><p data-lake-id=\"ubc98cf2d\" style=\"text-indent: 2em;\"><span>将公共依赖配置成一个远程模块，子应用只需要根据需求动态加载。这种方式可以做到运行时调用，不用考虑本地编译问题。</span></p><p data-lake-id=\"u8802f259\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648046937650-f14035db-aa15-4b12-9e45-75aba0982b0d.png#clientId=u9a0f9fd2-2ae0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=813&amp;id=ud7712ff1&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=813&amp;originWidth=1304&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=259883&amp;status=done&amp;style=none&amp;taskId=u3995fc2e-53b9-42d2-9b2d-0ce0470641f&amp;title=&amp;width=1304\" style=\"max-width: 600px; width: 1304px;\" /></p><p data-lake-id=\"ube75bc30\"><span>这就衍生出一种新的应用形态：中心应用，这个应用具备模块输出的能力，可以在线动态的分发运行时的子模块。</span></p><p data-lake-id=\"uf691a06e\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1648046989783-976f1257-96f2-4bc8-8a3f-d46007ca1227.png#clientId=u9a0f9fd2-2ae0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=1238&amp;id=u6c3ca203&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1238&amp;originWidth=1204&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=337511&amp;status=done&amp;style=none&amp;taskId=u0196dd1e-7bbb-45a1-b464-d142c77f902&amp;title=&amp;width=1204\" style=\"max-width: 600px; width: 1204px;\" /></p><blockquote class=\"lake-alert lake-alert-info\"><p data-lake-id=\"uaf4440e9\"><span>模块联邦在一定程度上弥补了为前端架构中的不足，让为前端架构日益趋向成熟。在可以预见的未来，前端工程化将进入一个新的阶段。</span></p></blockquote><h2 id=\"Cp2Ww\"><span>对 web 平台功能的全新支持</span></h2><h4 id=\"ZrL4Q\"><span>JSON 模块</span></h4><ul><li><span>使用自定义的 </span><code><span>JSON</span></code><span> 解析器：</span><code><span>Rule.parser.parse</span></code><span> 中指定</span></li><li><span>未使用的属性也会被 </span><code><span>optimization.usedExports</span></code><span> 优化丢弃</span></li><li><span>属性会被 </span><code><span>optimization.mangleExports</span></code><span> 优化打乱</span></li></ul><h4 id=\"kwUCJ\"><span>ProgressPlugin 插件的优化</span></h4><p data-lake-id=\"u9df446a7\"><span>不仅可以统计模块编译的进度，也可以统计 </span><strong><span>入口</span></strong><span> 和 </span><strong><span>依赖</span></strong></p><h4 id=\"ZOl0x\"><span>自动添加唯一命名</span></h4><p data-lake-id=\"u103f3517\"><code><span>webpack v4</span></code><span> 中，多个 </span><code><span>webpack</span></code><span> 同时运行时可能会在同一个 </span><code><span>html</span></code><span> 页面上发生冲突，这时候会在 </span><code><span>output.jsonpFunction</span></code><span> 配置提供一个自定义的。</span></p><p data-lake-id=\"u5086dead\"><span>​</span><br /></p><p data-lake-id=\"u0aaeb024\"><code><span>webpack v5</span></code><span> 中，会从 </span><code><span>package.json name</span></code><span> 中自动推断出一个唯一的构建名称，并将其作为 </span><code><span>output.uniqueName</span></code><span> 的默认值，可将 </span><code><span>output.jsonpFunction</span></code><span> 删除。</span></p><h4 id=\"Cl9b2\"><span>TypeScript 类型</span></h4><p data-lake-id=\"u06e923f2\"><code><span>webpack v5</span></code><span> 可以从源码中生成 </span><code><span>typescript</span></code><span> 类型，并通过 </span><code><span>npm</span></code><span> 包暴露它们</span></p><h2 id=\"vOwNF\"><span>​</span><br /></h2>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"CY4Z8\" id=\"CY4Z8\"><span data-lake-id=\"u85f14a01\" id=\"u85f14a01\">内置静态资源构建能力 Asset Modules</span></h2><p data-lake-id=\"u23ac8101\" id=\"u23ac8101\"><span data-lake-id=\"ufa36b5c1\" id=\"ufa36b5c1\">在 </span><code data-lake-id=\"u85120e9b\" id=\"u85120e9b\"><span data-lake-id=\"u9a01fa83\" id=\"u9a01fa83\">webpack v5</span></code><span data-lake-id=\"u6bdbffdc\" id=\"u6bdbffdc\"> 之前，通常使用：</span></p><ul list=\"uf9427008\"><li fid=\"ubda1ea66\" data-lake-id=\"u16a8971a\" id=\"u16a8971a\"><code data-lake-id=\"u92185cea\" id=\"u92185cea\"><span data-lake-id=\"u85b914c0\" id=\"u85b914c0\">raw-loader</span></code><span data-lake-id=\"u6a0bf1a6\" id=\"u6a0bf1a6\"> 将文件导入为字符串</span></li><li fid=\"ubda1ea66\" data-lake-id=\"ud5f4c4d5\" id=\"ud5f4c4d5\"><code data-lake-id=\"u084d028a\" id=\"u084d028a\"><span data-lake-id=\"ufd81ec8f\" id=\"ufd81ec8f\">url-loader</span></code><span data-lake-id=\"u60aba4a2\" id=\"u60aba4a2\"> 将文件作为 </span><code data-lake-id=\"u807eae18\" id=\"u807eae18\"><span data-lake-id=\"u272410b3\" id=\"u272410b3\">data URI</span></code><span data-lake-id=\"u89880bfe\" id=\"u89880bfe\"> 内联到 </span><code data-lake-id=\"u1368d654\" id=\"u1368d654\"><span data-lake-id=\"u61d47df3\" id=\"u61d47df3\">bundle</span></code><span data-lake-id=\"uc54aed14\" id=\"uc54aed14\"> 中</span></li><li fid=\"ubda1ea66\" data-lake-id=\"ud5b9ff2e\" id=\"ud5b9ff2e\"><code data-lake-id=\"u5f6baf5e\" id=\"u5f6baf5e\"><span data-lake-id=\"u6bbdd002\" id=\"u6bbdd002\">file-loader</span></code><span data-lake-id=\"u8b0ef839\" id=\"u8b0ef839\"> 将文件发送到输出目录</span></li></ul><p data-lake-id=\"u993d2fda\" id=\"u993d2fda\"><span data-lake-id=\"uedf6f50f\" id=\"uedf6f50f\">资源模块类型 </span><code data-lake-id=\"u5c5004f9\" id=\"u5c5004f9\"><span data-lake-id=\"u90ce705e\" id=\"u90ce705e\">asset module type</span></code><span data-lake-id=\"u3aefd58a\" id=\"u3aefd58a\">，通过添加 </span><code data-lake-id=\"u4e6fdd37\" id=\"u4e6fdd37\"><span data-lake-id=\"ud5c70e35\" id=\"ud5c70e35\">4</span></code><span data-lake-id=\"ubeefa11a\" id=\"ubeefa11a\"> 种新的模块类型，来替换所有这些 </span><code data-lake-id=\"u5f126224\" id=\"u5f126224\"><span data-lake-id=\"u76d194b5\" id=\"u76d194b5\">loader</span></code><span data-lake-id=\"u116c43a7\" id=\"u116c43a7\">：</span></p><ul list=\"ua8965184\"><li fid=\"u5cc32ecb\" data-lake-id=\"u78657726\" id=\"u78657726\"><code data-lake-id=\"u6d89f168\" id=\"u6d89f168\"><span data-lake-id=\"ud61446a6\" id=\"ud61446a6\">asset/resource</span></code><span data-lake-id=\"ub3150797\" id=\"ub3150797\"> 发送一个单独的文件并导出 </span><code data-lake-id=\"ua9390010\" id=\"ua9390010\"><span data-lake-id=\"ubb5fe81f\" id=\"ubb5fe81f\">URL</span></code><span data-lake-id=\"u9b82675f\" id=\"u9b82675f\">，用来替代 </span><code data-lake-id=\"udfd4c6ec\" id=\"udfd4c6ec\"><span data-lake-id=\"uc869c67c\" id=\"uc869c67c\">file-loader</span></code></li><li fid=\"u5cc32ecb\" data-lake-id=\"u08269f1c\" id=\"u08269f1c\"><code data-lake-id=\"uaedc074c\" id=\"uaedc074c\"><span data-lake-id=\"u3d62d5f3\" id=\"u3d62d5f3\">asset/inline</span></code><span data-lake-id=\"u411934ee\" id=\"u411934ee\"> 导出一个资源的 </span><code data-lake-id=\"uf24ebc4a\" id=\"uf24ebc4a\"><span data-lake-id=\"u2b1c36d5\" id=\"u2b1c36d5\">data URI</span></code><span data-lake-id=\"u3d393393\" id=\"u3d393393\">，用来替代 </span><code data-lake-id=\"u54b5b639\" id=\"u54b5b639\"><span data-lake-id=\"uf512520e\" id=\"uf512520e\">url-loader</span></code></li><li fid=\"u5cc32ecb\" data-lake-id=\"u785afd93\" id=\"u785afd93\"><code data-lake-id=\"u962e9e0e\" id=\"u962e9e0e\"><span data-lake-id=\"u94555e0e\" id=\"u94555e0e\">asset/source</span></code><span data-lake-id=\"u1a8ce560\" id=\"u1a8ce560\"> 导出资源的源代码，用来替代  </span><code data-lake-id=\"u8ebee441\" id=\"u8ebee441\"><span data-lake-id=\"u95e55e3e\" id=\"u95e55e3e\">raw-loader</span></code></li><li fid=\"u5cc32ecb\" data-lake-id=\"ub6c282fc\" id=\"ub6c282fc\"><code data-lake-id=\"u6cc9f8e1\" id=\"u6cc9f8e1\"><span data-lake-id=\"u1955e6ad\" id=\"u1955e6ad\">asset</span></code><span data-lake-id=\"ufe3a3dcf\" id=\"ufe3a3dcf\"> 在导出一个 </span><code data-lake-id=\"u80fc72ab\" id=\"u80fc72ab\"><span data-lake-id=\"udf1923dd\" id=\"udf1923dd\">data URI</span></code><span data-lake-id=\"u648a1d30\" id=\"u648a1d30\"> 和发送一个单独的文件之间自动选择，之前通过使用 </span><code data-lake-id=\"u7aa54a2a\" id=\"u7aa54a2a\"><span data-lake-id=\"uaf677688\" id=\"uaf677688\">url-loader</span></code><span data-lake-id=\"uf724768c\" id=\"uf724768c\">，并且配置</span></li></ul><h2 data-lake-id=\"mm9My\" id=\"mm9My\"><span data-lake-id=\"u6a2fd512\" id=\"u6a2fd512\">构建速度优化</span></h2><p data-lake-id=\"u6e059ded\" id=\"u6e059ded\"><span data-lake-id=\"u3fc24c71\" id=\"u3fc24c71\">在 </span><code data-lake-id=\"u5389df40\" id=\"u5389df40\"><span data-lake-id=\"u2d022153\" id=\"u2d022153\">webpack v4</span></code><span data-lake-id=\"u96b80f45\" id=\"u96b80f45\"> 中，为了让我们的构建速度更快，通常需要借助一些插件或者额外的配置来达到目的。</span></p><ol list=\"u6a29237d\"><li fid=\"u90ef84e6\" data-lake-id=\"u6e5754f1\" id=\"u6e5754f1\"><code data-lake-id=\"u8bc128b2\" id=\"u8bc128b2\"><span data-lake-id=\"u44ce6bcd\" id=\"u44ce6bcd\">cache-loader</span></code><card type=\"inline\" name=\"label\" value=\"data:%7B%22label%22%3A%22webpack5%E4%B8%8D%E6%8E%A8%E8%8D%90%22%2C%22colorIndex%22%3A0%2C%22id%22%3A%22EdM2J%22%7D\"></card><span data-lake-id=\"uefc231ef\" id=\"uefc231ef\">：针对于一些耗时的工作进行缓存，如：缓存 </span><code data-lake-id=\"uf6ee6f89\" id=\"uf6ee6f89\"><span data-lake-id=\"u06aac197\" id=\"u06aac197\">babel-loader</span></code><span data-lake-id=\"u104c0d9b\" id=\"u104c0d9b\"> 的工作</span></li><li fid=\"u90ef84e6\" data-lake-id=\"ub1535eca\" id=\"ub1535eca\"><code data-lake-id=\"u2c1b7c94\" id=\"u2c1b7c94\"><span data-lake-id=\"u07cc7859\" id=\"u07cc7859\">terser-webpack-plugin</span></code><card type=\"inline\" name=\"label\" value=\"data:%7B%22label%22%3A%22webpack5%E6%8E%A8%E8%8D%90%22%2C%22colorIndex%22%3A2%2C%22id%22%3A%22G4Sdm%22%7D\"></card><span data-lake-id=\"ud9d31b50\" id=\"ud9d31b50\"> / </span><code data-lake-id=\"uc4df5b7c\" id=\"uc4df5b7c\"><span data-lake-id=\"u330ba8a2\" id=\"u330ba8a2\">uglifyjs-webpack-plugin</span></code><card type=\"inline\" name=\"label\" value=\"data:%7B%22label%22%3A%22webpack5%E4%B8%8D%E6%8E%A8%E8%8D%90%22%2C%22colorIndex%22%3A0%2C%22id%22%3A%22yCmpM%22%7D\"></card><span data-lake-id=\"u555e448d\" id=\"u555e448d\"> 的 </span><code data-lake-id=\"ude6929ed\" id=\"ude6929ed\"><span data-lake-id=\"u43dde750\" id=\"u43dde750\">cache</span></code><span data-lake-id=\"u8f0a43fa\" id=\"u8f0a43fa\">、</span><code data-lake-id=\"u015b4327\" id=\"u015b4327\"><span data-lake-id=\"uf82d6444\" id=\"uf82d6444\">parallel</span></code></li></ol><p data-lake-id=\"u7a07925c\" id=\"u7a07925c\"><span data-lake-id=\"udb5819eb\" id=\"udb5819eb\">​</span><br></p><p data-lake-id=\"u5f292bf4\" id=\"u5f292bf4\"><span data-lake-id=\"u6a3218cb\" id=\"u6a3218cb\">我们会借助 </span><code data-lake-id=\"u0d4e67c7\" id=\"u0d4e67c7\"><span data-lake-id=\"u603c735a\" id=\"u603c735a\">cache-loader</span></code><span data-lake-id=\"u69e978b8\" id=\"u69e978b8\"> 去对我们构建过程中消耗性能比较大的部分进行缓存，缓存会存放到硬盘中的 </span><code data-lake-id=\"u386514c1\" id=\"u386514c1\"><span data-lake-id=\"u2c3f73d3\" id=\"u2c3f73d3\">node_modules/.cache/cache-loader</span></code><span data-lake-id=\"u60c5bf33\" id=\"u60c5bf33\">，缓存的读取和存储是会消耗性能的，所以只推荐用在性能开销大的地方。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22module.exports%20%3D%20%7B%5Cn%20%20module%3A%20%7B%5Cn%20%20%20%20rules%3A%20%5B%5Cn%20%20%20%20%20%20%7B%5Cn%20%20%20%20%20%20%20%20test%3A%20%2F.js%24%2F%2C%5Cn%20%20%20%20%20%20%20%20use%3A%20%5B'cache-loader'%2C%20'babel-loader'%5D%2C%5Cn%20%20%20%20%20%20%20%20include%3A%20path.resolve('src')%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%5D%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%E5%AF%B9%20babel-loader%20%E7%9A%84%E5%B7%A5%E4%BD%9C%E8%BF%9B%E8%A1%8C%E7%BC%93%E5%AD%98%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22c2J7y%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u3f8cfe5f\" id=\"u3f8cfe5f\"><code data-lake-id=\"u0fd9dfa7\" id=\"u0fd9dfa7\"><span data-lake-id=\"u8b3488d3\" id=\"u8b3488d3\">terserPlugin</span></code><span data-lake-id=\"ud678a5fb\" id=\"ud678a5fb\"> 继承自 </span><code data-lake-id=\"u3e04cd35\" id=\"u3e04cd35\"><span data-lake-id=\"u9939c9b4\" id=\"u9939c9b4\">uglifyjsPlugin</span></code><span data-lake-id=\"ufa077f15\" id=\"ufa077f15\">，可以通过开启插件的 </span><code data-lake-id=\"u5834c401\" id=\"u5834c401\"><span data-lake-id=\"u4a085ece\" id=\"u4a085ece\">cache</span></code><span data-lake-id=\"u3aa8a166\" id=\"u3aa8a166\"> 以及 </span><code data-lake-id=\"u6b43c3d4\" id=\"u6b43c3d4\"><span data-lake-id=\"u9a682087\" id=\"u9a682087\">parallel</span></code><span data-lake-id=\"udf93bb70\" id=\"udf93bb70\"> 特性来加快压缩(</span><code data-lake-id=\"u8377d3bd\" id=\"u8377d3bd\"><span data-lake-id=\"u715fee82\" id=\"u715fee82\">terserPlugin</span></code><span data-lake-id=\"u8d826005\" id=\"u8d826005\"> 是 </span><code data-lake-id=\"u169879b3\" id=\"u169879b3\"><span data-lake-id=\"ubafbc590\" id=\"ubafbc590\">webpack</span></code><span data-lake-id=\"ufce5155e\" id=\"ufce5155e\"> 推荐及内置的压缩插件，</span><code data-lake-id=\"u90a982bb\" id=\"u90a982bb\"><span data-lake-id=\"u73ba6136\" id=\"u73ba6136\">cache</span></code><span data-lake-id=\"u62174c8b\" id=\"u62174c8b\"> 与 </span><code data-lake-id=\"u296ab0ee\" id=\"u296ab0ee\"><span data-lake-id=\"u4cea37d4\" id=\"u4cea37d4\">parallel</span></code><span data-lake-id=\"u217812c1\" id=\"u217812c1\"> 默认为开启状态)，缓存路径在 </span><code data-lake-id=\"ud5865e02\" id=\"ud5865e02\"><span data-lake-id=\"uafe882ea\" id=\"uafe882ea\">node_modules/.cache/terser-webpack-plugin</span></code></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22module.exports%20%3D%20%7B%5Cn%20%20minimizer%3A%20%7B%5Cn%20%20%20%20new%20TerserPlugin(%7B%5Cn%20%20%20%20%20%20cache%3A%20true%2C%20%2F%2F%20%E5%BC%80%E5%90%AF%E8%AF%A5%E6%8F%92%E4%BB%B6%E7%9A%84%E7%BC%93%E5%AD%98%EF%BC%8C%E9%BB%98%E8%AE%A4%E7%BC%93%E5%AD%98%E5%88%B0%20node_modules%2F.cache%5Cn%20%20%20%20%20%20parallel%3A%20true%2C%20%2F%2F%20%E5%BC%80%E5%90%AF%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%8E%8B%E7%BC%A9%EF%BC%8C%E6%8F%90%E9%AB%98%E5%8E%8B%E7%BC%A9%E6%95%88%E7%8E%87%5Cn%20%20%20%20%20%20exclude%3A%20%2Fnode_modules%2F%5Cn%20%20%20%20%7D)%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22AHgHz%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ud785d70b\" id=\"ud785d70b\"><span data-lake-id=\"u43111765\" id=\"u43111765\">到了 </span><code data-lake-id=\"u2ed253a1\" id=\"u2ed253a1\"><span data-lake-id=\"ub6c9d20c\" id=\"ub6c9d20c\">webpack5</span></code><span data-lake-id=\"u11ee67f3\" id=\"u11ee67f3\">，可以通过 </span><code data-lake-id=\"uf9ba334d\" id=\"uf9ba334d\"><span data-lake-id=\"uf9bcfeb5\" id=\"uf9bcfeb5\">cache</span></code><span data-lake-id=\"ud1d8fd37\" id=\"ud1d8fd37\"> 特性来将 </span><code data-lake-id=\"u702972d8\" id=\"u702972d8\"><span data-lake-id=\"uc31450bd\" id=\"uc31450bd\">webpack</span></code><span data-lake-id=\"ufcc7d6ca\" id=\"ufcc7d6ca\"> 工作缓存到硬盘中，存放的路径为 </span><code data-lake-id=\"u37b33261\" id=\"u37b33261\"><span data-lake-id=\"udddd0eeb\" id=\"udddd0eeb\">node_modules/.cache/webpack</span></code></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22module.exports%20%3D%20%7B%5Cn%20%20cache%3A%20%7B%5Cn%20%20%20%20%2F%2F%201.%20%E5%B0%86%E7%BC%93%E5%AD%98%E7%B1%BB%E5%9E%8B%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%5Cn%20%20%20%20type%3A%20'filesystem'%2C%20%2F%2F%20%E9%BB%98%E8%AE%A4%E6%98%AF%20memory%5Cn%20%20%20%20%2F%2F%202.%20%E5%B0%86%E7%BC%93%E5%AD%98%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D%E4%B8%BA%20.temp_cache%2C%20%E9%BB%98%E8%AE%A4%E8%B7%AF%E5%BE%84%E6%98%AF%20node_modules%2F.cache%2Fwebpack%5Cn%20%20%20%20cacheDirectory%3A%20path.resolve(__dirname%2C%20'.temp_cache')%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22webpack.config.js%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22PbNed%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"iQnAq\" id=\"iQnAq\"><span data-lake-id=\"u80c88143\" id=\"u80c88143\">包代码体积优化</span></h2><h3 data-lake-id=\"hsi64\" id=\"hsi64\"><span data-lake-id=\"ue9ceb636\" id=\"ue9ceb636\">代码分割</span></h3><p data-lake-id=\"u6959783b\" id=\"u6959783b\" style=\"text-indent: 2em\"><span data-lake-id=\"u3e34bcda\" id=\"u3e34bcda\">为了让我们打出来的包体积更加小，颗粒度更加明确。我们经常会用到 </span><code data-lake-id=\"u60a69043\" id=\"u60a69043\"><span data-lake-id=\"u80bae6f4\" id=\"u80bae6f4\">webpack</span></code><span data-lake-id=\"uba3e444a\" id=\"uba3e444a\"> 的代码分割 </span><code data-lake-id=\"u44f7a423\" id=\"u44f7a423\"><span data-lake-id=\"ubd4b8aab\" id=\"ubd4b8aab\">split chunk</span></code><span data-lake-id=\"udc03f331\" id=\"udc03f331\"> 以及 </span><code data-lake-id=\"uf39ef714\" id=\"uf39ef714\"><span data-lake-id=\"u27d9f753\" id=\"u27d9f753\">tree shaking</span></code><span data-lake-id=\"u1e481706\" id=\"u1e481706\">。</span></p><p data-lake-id=\"u024027f1\" id=\"u024027f1\" style=\"text-indent: 2em\"><span data-lake-id=\"u53a7107f\" id=\"u53a7107f\">在 </span><code data-lake-id=\"u1fecffd2\" id=\"u1fecffd2\"><span data-lake-id=\"u50ced2de\" id=\"u50ced2de\">webpack5</span></code><span data-lake-id=\"ua7214c1a\" id=\"ua7214c1a\"> 中，这两者也得到了优化与加强。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22module.exports%20%3D%20%7B%5Cn%20%20optimization%3A%20%7B%5Cn%20%20%20%20splitChunks%3A%20%7B%5Cn%20%20%20%20%20%20chunks%3A%20'async'%2C%20%2F%2F%20%E5%8F%AA%E5%AF%B9%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%E7%9A%84%E6%A8%A1%E5%9D%97%E8%BF%9B%E8%A1%8C%E5%A4%84%E7%90%86%5Cn%20%20%20%20%20%20minSize%3A%20%7B%5Cn%20%20%20%20%20%20%20%20javascript%3A%2030000%2C%20%2F%2F%20%E6%A8%A1%E5%9D%97%E8%A6%81%E5%A4%A7%E4%BA%8E%2030kb%20%E6%89%8D%E4%BC%9A%E8%BF%9B%E8%A1%8C%E6%8F%90%E5%8F%96%5Cn%20%20%20%20%20%20%20%20style%3A%2050000%2C%20%2F%2F%20%E6%A8%A1%E5%9D%97%E8%A6%81%E5%A4%A7%E4%BA%8E%2050kb%20%E6%89%8D%E4%BC%9A%E8%BF%9B%E8%A1%8C%E6%8F%90%E5%8F%96%5Cn%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20minRemainingSize%3A%200%2C%20%2F%2F%20%E4%BB%A3%E7%A0%81%E5%88%86%E5%89%B2%E5%90%8E%EF%BC%8C%E6%96%87%E4%BB%B6%20size%20%E5%BF%85%E9%A1%BB%E5%A4%A7%E4%BA%8E%E8%AF%A5%E5%80%BC%5Cn%20%20%20%20%20%20maxSize%3A%200%2C%5Cn%20%20%20%20%20%20minChunks%3A%201%2C%20%2F%2F%20%E8%A2%AB%E6%8F%90%E5%8F%96%E7%9A%84%E6%A8%A1%E5%9D%97%E5%BF%85%E9%A1%BB%E8%A2%AB%E5%BC%95%E7%94%A8%201%20%E6%AC%A1%5Cn%20%20%20%20%20%20maxAsyncRequests%3A%206%2C%20%2F%2F%20%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%E4%BB%A3%E7%A0%81%E6%97%B6%E5%90%8C%E6%97%B6%E8%BF%9B%E8%A1%8C%E7%9A%84%E6%9C%80%E5%A4%A7%E8%AF%B7%E6%B1%82%E6%95%B0%E4%B8%8D%E5%BE%97%E8%B6%85%E8%BF%87%206%20%E4%B8%AA%5Cn%20%20%20%20%20%20maxInitialRequests%3A%204%2C%20%2F%2F%20%E5%85%A5%E5%8F%A3%E6%96%87%E4%BB%B6%E5%8A%A0%E8%BD%BD%E6%97%B6%E6%9C%80%E5%A4%A7%E5%90%8C%E6%97%B6%E8%AF%B7%E6%B1%82%E6%95%B0%E4%B8%8D%E5%BE%97%E8%B6%85%E8%BF%87%204%20%E4%B8%AA%5Cn%20%20%20%20%20%20automaticNameDelimiter%3A%20'~'%2C%20%2F%2F%20%E6%A8%A1%E5%9D%97%E6%96%87%E4%BB%B6%E5%90%8D%E7%A7%B0%E5%89%8D%E7%BC%80%5Cn%20%20%20%20%20%20cacheGroups%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%88%86%E7%BB%84%EF%BC%8C%E5%8F%AF%E7%BB%A7%E6%89%BF%E6%88%96%E8%A6%86%E7%9B%96%E5%A4%96%E5%B1%82%E9%85%8D%E7%BD%AE%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E6%9D%A5%E8%87%AA%20node_modules%20%E7%9A%84%E6%A8%A1%E5%9D%97%E6%8F%90%E5%8F%96%E5%88%B0%E4%B8%80%E4%B8%AA%E5%85%AC%E5%85%B1%E6%96%87%E4%BB%B6%E4%B8%AD(%E7%94%B1%20v4%20%E7%9A%84%20vendors%20%E6%94%B9%E5%90%8D%E8%80%8C%E6%9D%A5)%5Cn%20%20%20%20%20%20%20%20defaultVendors%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20test%3A%20%2F%5B%5C%5C%5C%5C%2F%5Dnode_modules%5B%5C%5C%5C%5C%2F%5D%2F%2C%5Cn%20%20%20%20%20%20%20%20%20%20priority%3A%20-10%5Cn%20%20%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%85%B6%E4%BB%96%E4%B8%8D%E6%98%AF%20node_modules%20%E4%B8%AD%E7%9A%84%E6%A8%A1%E5%9D%97%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%9C%89%E8%A2%AB%E5%BC%95%E7%94%A8%E4%B8%8D%E5%B0%91%E4%BA%8E%202%20%E6%AC%A1%EF%BC%8C%E9%82%A3%E4%B9%88%E4%B9%9F%E6%8F%90%E5%8F%96%E5%87%BA%E6%9D%A5%5Cn%20%20%20%20%20%20%20%20default%3A%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20minChunks%3A%202%2C%5Cn%20%20%20%20%20%20%20%20%20%20priority%3A%20-20%2C%5Cn%20%20%20%20%20%20%20%20%20%20reuseExistingChunk%3A%20true%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22wWNZX%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h3 data-lake-id=\"Qiftp\" id=\"Qiftp\"><span data-lake-id=\"uf972c1d7\" id=\"uf972c1d7\">Tree shaking</span></h3><p data-lake-id=\"u93c2b2c7\" id=\"u93c2b2c7\"><code data-lake-id=\"u289ad794\" id=\"u289ad794\"><span data-lake-id=\"u7b5982a5\" id=\"u7b5982a5\">webpack</span></code><span data-lake-id=\"ud31cd2da\" id=\"ud31cd2da\"> 不能 </span><code data-lake-id=\"u49c326fd\" id=\"u49c326fd\"><span data-lake-id=\"ua4a07a5d\" id=\"ua4a07a5d\">100%</span></code><span data-lake-id=\"uf6720f0f\" id=\"uf6720f0f\"> 安全地进行 </span><code data-lake-id=\"u95788870\" id=\"u95788870\"><span data-lake-id=\"u791ff48a\" id=\"u791ff48a\">tree-shaking</span></code><span data-lake-id=\"uc2f1a020\" id=\"uc2f1a020\">，</span><code data-lake-id=\"u8cfb57ff\" id=\"u8cfb57ff\"><strong><span data-lake-id=\"ua603cde9\" id=\"ua603cde9\">webpack v4</span></strong></code><strong><span data-lake-id=\"u5cd1907f\" id=\"u5cd1907f\"> 有些场景是不能将无用代码剔除的</span></strong><span data-lake-id=\"u9234334f\" id=\"u9234334f\">。有些模块导入，只要被引入，就会对应用程序产生重要的影响。一个很好的例子：全局样式表、设置全局配置的 </span><code data-lake-id=\"u4f97f367\" id=\"u4f97f367\"><span data-lake-id=\"u04c2e19f\" id=\"u04c2e19f\">javaScript</span></code><span data-lake-id=\"u68e9e85b\" id=\"u68e9e85b\"> 文件。</span></p><p data-lake-id=\"u22cda552\" id=\"u22cda552\"><span data-lake-id=\"ubafef35d\" id=\"ubafef35d\">​</span><br></p><p data-lake-id=\"ube0dc931\" id=\"ube0dc931\"><code data-lake-id=\"u2204a474\" id=\"u2204a474\"><span data-lake-id=\"u43fbe159\" id=\"u43fbe159\">webpack</span></code><span data-lake-id=\"u5bbba12a\" id=\"u5bbba12a\"> 认为这样的文件有 &quot;副作用&quot;。具有副作用的文件不应该做 </span><code data-lake-id=\"ubf842aa4\" id=\"ubf842aa4\"><span data-lake-id=\"u6a5c156c\" id=\"u6a5c156c\">tree-shaking</span></code><span data-lake-id=\"ud3385ebe\" id=\"ud3385ebe\">，因为这将破坏整个应用程序。</span><code data-lake-id=\"uda6b0a2a\" id=\"uda6b0a2a\"><span data-lake-id=\"u96add5a5\" id=\"u96add5a5\">webpack</span></code><span data-lake-id=\"u653b0de6\" id=\"u653b0de6\"> 的设计者清楚地认识到：不知道哪些文件有副作用的情况下打包代码的风险，因此 </span><code data-lake-id=\"ua7f2f39d\" id=\"ua7f2f39d\"><span data-lake-id=\"u51f011e6\" id=\"u51f011e6\">webpack4</span></code><span data-lake-id=\"u6bf044e3\" id=\"u6bf044e3\"> 默认地将所有代码视为有副作用。这可以保护你免于删除必要的文件，但这意味着 </span><code data-lake-id=\"u91aa3807\" id=\"u91aa3807\"><span data-lake-id=\"ub63f5551\" id=\"ub63f5551\">webpack</span></code><span data-lake-id=\"uce3d32d7\" id=\"uce3d32d7\"> 的默认行为实际上是不进行 </span><code data-lake-id=\"u605b88b4\" id=\"u605b88b4\"><span data-lake-id=\"uc0530b20\" id=\"uc0530b20\">tree-shaking</span></code><span data-lake-id=\"u0912252c\" id=\"u0912252c\">。</span></p><blockquote data-lake-id=\"u36762465\" id=\"u36762465\" class=\"lake-alert lake-alert-info\"><p data-lake-id=\"ufa26a6a1\" id=\"ufa26a6a1\"><code data-lake-id=\"uc308148a\" id=\"uc308148a\"><span data-lake-id=\"u0ea20b9f\" id=\"u0ea20b9f\">webpack v5</span></code><span data-lake-id=\"u4414484b\" id=\"u4414484b\"> 默认会进行 </span><code data-lake-id=\"u70493517\" id=\"u70493517\"><span data-lake-id=\"u1d03bcc6\" id=\"u1d03bcc6\">tree-shaking</span></code></p></blockquote><p data-lake-id=\"uaa5edaa5\" id=\"uaa5edaa5\"><br></p><h4 data-lake-id=\"Hl4o5\" id=\"Hl4o5\"><span data-lake-id=\"u1784f1d3\" id=\"u1784f1d3\">内部模块 tree shaking</span></h4><p data-lake-id=\"u5cc61881\" id=\"u5cc61881\"><code data-lake-id=\"u39558496\" id=\"u39558496\"><span data-lake-id=\"u24bb2d6b\" id=\"u24bb2d6b\">webpack v4</span></code><span data-lake-id=\"u08463aa1\" id=\"u08463aa1\"> 没有分析模块的导出和导入之间的依赖关系。</span><code data-lake-id=\"u446e4a77\" id=\"u446e4a77\"><span data-lake-id=\"u3650d860\" id=\"u3650d860\">webpack v5</span></code><span data-lake-id=\"u3ea0dd6b\" id=\"u3ea0dd6b\"> 有一个新选项 </span><code data-lake-id=\"uf31c4e6c\" id=\"uf31c4e6c\"><span data-lake-id=\"uc7aa771b\" id=\"uc7aa771b\">optimization.innerGraph</span></code><span data-lake-id=\"uff611146\" id=\"uff611146\">，它在生产模式下默认启用，它对模块中的符号运行分析以找出从导出到导入的依赖关系。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22import%20%7B%20something%20%7D%20from%20'.%2Fsomething'%5Cn%5Cnfunction%20usingSomething()%20%7B%5Cn%20%20return%20something%5Cn%7D%5Cn%5Cnexport%20function%20test()%20%7B%5Cn%20%20return%20useingSomething()%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22yacWi%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u5939a2e6\" id=\"u5939a2e6\"><code data-lake-id=\"u087b8f88\" id=\"u087b8f88\"><span data-lake-id=\"u03420db0\" id=\"u03420db0\">innerGraph</span></code><span data-lake-id=\"u3d62a168\" id=\"u3d62a168\"> 将计算出 </span><code data-lake-id=\"u63e03d64\" id=\"u63e03d64\"><span data-lake-id=\"uca87e4e2\" id=\"uca87e4e2\">something</span></code><span data-lake-id=\"u772b95cf\" id=\"u772b95cf\"> 仅在使用 </span><code data-lake-id=\"ucd3a52db\" id=\"ucd3a52db\"><span data-lake-id=\"u0959f10d\" id=\"u0959f10d\">test</span></code><span data-lake-id=\"ud48525ee\" id=\"ud48525ee\"> 导出时使用。这允许将更多导出标记为未使用并从包中省略更多代码。</span></p><p data-lake-id=\"u776c43a8\" id=\"u776c43a8\"><span data-lake-id=\"u75e8466c\" id=\"u75e8466c\">当 </span><code data-lake-id=\"ub4b0ae82\" id=\"ub4b0ae82\"><span data-lake-id=\"uf80bb96c\" id=\"uf80bb96c\">&quot;sideEffects&quot;: false</span></code><span data-lake-id=\"ubb61a07c\" id=\"ubb61a07c\"> 设置，这允许省略甚至更多的模块。在此示例中，</span><code data-lake-id=\"u3994eb5b\" id=\"u3994eb5b\"><span data-lake-id=\"u208913ec\" id=\"u208913ec\">./something</span></code><span data-lake-id=\"u25049c54\" id=\"u25049c54\"> 当 </span><code data-lake-id=\"u470129e4\" id=\"u470129e4\"><span data-lake-id=\"u27cc4b2f\" id=\"u27cc4b2f\">test</span></code><span data-lake-id=\"u0fcc5f1a\" id=\"u0fcc5f1a\"> 导出未使用时将被省略。</span></p><h4 data-lake-id=\"TVQ03\" id=\"TVQ03\"><span data-lake-id=\"u6a7fa376\" id=\"u6a7fa376\">commonjs tree shaking</span></h4><p data-lake-id=\"uaa69f9bd\" id=\"uaa69f9bd\"><code data-lake-id=\"u59d39898\" id=\"u59d39898\"><span data-lake-id=\"u778b2e0b\" id=\"u778b2e0b\">webpack4</span></code><span data-lake-id=\"uebc54cf2\" id=\"uebc54cf2\"> 曾经不进行对 </span><code data-lake-id=\"ub4ebdf77\" id=\"ub4ebdf77\"><span data-lake-id=\"u96c3a55b\" id=\"u96c3a55b\">commonjs</span></code><span data-lake-id=\"u61736735\" id=\"u61736735\"> 导出和 </span><code data-lake-id=\"ub9b7b1b1\" id=\"ub9b7b1b1\"><span data-lake-id=\"udff6bca8\" id=\"udff6bca8\">require</span></code><span data-lake-id=\"ufbaf1a4e\" id=\"ufbaf1a4e\"> 调用时的导出使用分析。</span><code data-lake-id=\"u745607e3\" id=\"u745607e3\"><span data-lake-id=\"u8e951f8f\" id=\"u8e951f8f\">webpack5</span></code><span data-lake-id=\"ua30a67a2\" id=\"ua30a67a2\"> 增加了对一些 </span><code data-lake-id=\"uae40283e\" id=\"uae40283e\"><span data-lake-id=\"uc7b0887c\" id=\"uc7b0887c\">commonjs</span></code><span data-lake-id=\"u0f7a271b\" id=\"u0f7a271b\"> 构造的支持，允许消除未使用的 </span><code data-lake-id=\"u24e82b76\" id=\"u24e82b76\"><span data-lake-id=\"u2ac84376\" id=\"u2ac84376\">commonjs</span></code><span data-lake-id=\"uda9750d9\" id=\"uda9750d9\"> 导出，并从 </span><code data-lake-id=\"ue8bbd031\" id=\"ue8bbd031\"><span data-lake-id=\"uc779b58f\" id=\"uc779b58f\">require</span></code><span data-lake-id=\"u9446b575\" id=\"u9446b575\"> 调用中跟踪引用的导出名称。</span></p><h3 data-lake-id=\"AYeHi\" id=\"AYeHi\"><span data-lake-id=\"u651eec4f\" id=\"u651eec4f\">剔除 npm 包内部针对 node.js 模块自动引用的 polyfills</span></h3><p data-lake-id=\"u3cd58fd3\" id=\"u3cd58fd3\"><code data-lake-id=\"u99e7a2b1\" id=\"u99e7a2b1\"><span data-lake-id=\"ufe82a7d5\" id=\"ufe82a7d5\">webpack v4</span></code><span data-lake-id=\"u15cdf20d\" id=\"u15cdf20d\"> 编译引入 </span><code data-lake-id=\"u1949f374\" id=\"u1949f374\"><span data-lake-id=\"u9c746d44\" id=\"u9c746d44\">npm</span></code><span data-lake-id=\"uae0262c0\" id=\"uae0262c0\"> 包，有些 </span><code data-lake-id=\"u0156f070\" id=\"u0156f070\"><span data-lake-id=\"u981c07eb\" id=\"u981c07eb\">npm</span></code><span data-lake-id=\"u4242a0c3\" id=\"u4242a0c3\"> 包里面包含针对 </span><code data-lake-id=\"uff1cb651\" id=\"uff1cb651\"><span data-lake-id=\"ufc6709ac\" id=\"ufc6709ac\">nodejs</span></code><span data-lake-id=\"ub600ea0c\" id=\"ub600ea0c\"> 的 </span><code data-lake-id=\"udc1539dc\" id=\"udc1539dc\"><span data-lake-id=\"u7aa63fcc\" id=\"u7aa63fcc\">polyfills</span></code><span data-lake-id=\"u3b23b401\" id=\"u3b23b401\">，实际上前端浏览器是不需要的。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22import%20CryptoJS%20from%20'crypto-js'%5Cnconst%20md5Password%20%3D%20CryptoJS.MD5('123123')%5Cnconsole.log(md5Password)%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22index.js%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22XUOM5%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u56c940af\" id=\"u56c940af\"><code data-lake-id=\"u7298ad9a\" id=\"u7298ad9a\"><span data-lake-id=\"uafec6608\" id=\"uafec6608\">webpack v4</span></code><span data-lake-id=\"ufeadd498\" id=\"ufeadd498\"> 引入 </span><code data-lake-id=\"u5fdc52e0\" id=\"u5fdc52e0\"><span data-lake-id=\"u07e7d461\" id=\"u07e7d461\">crypto-js</span></code><span data-lake-id=\"u85b93893\" id=\"u85b93893\"> 模块会自动引入 </span><code data-lake-id=\"u010496bc\" id=\"u010496bc\"><span data-lake-id=\"ueb916a8c\" id=\"ueb916a8c\">polyfill：crypto-browerify</span></code><span data-lake-id=\"uf9026b68\" id=\"uf9026b68\">，但是部分代码是不需要的，</span><code data-lake-id=\"u8819fe1f\" id=\"u8819fe1f\"><span data-lake-id=\"u06b5c9db\" id=\"u06b5c9db\">webpack v5</span></code><span data-lake-id=\"u4cdeb45c\" id=\"u4cdeb45c\"> 默认会自动剔除</span></p><p data-lake-id=\"u520cb5c7\" id=\"u520cb5c7\"><span data-lake-id=\"u824e0af4\" id=\"u824e0af4\">​</span><br></p><p data-lake-id=\"ufe8a51ec\" id=\"ufe8a51ec\"><code data-lake-id=\"u58dfea3d\" id=\"u58dfea3d\"><span data-lake-id=\"u625298a6\" id=\"u625298a6\">webpack v5</span></code><span data-lake-id=\"u9babfe4b\" id=\"u9babfe4b\"> 编译中，会出现 </span><code data-lake-id=\"u3d562fa4\" id=\"u3d562fa4\"><span data-lake-id=\"u17ac4ae2\" id=\"u17ac4ae2\">polyfill</span></code><span data-lake-id=\"u684c1fca\" id=\"u684c1fca\"> 添加提示，如果不需要 </span><code data-lake-id=\"u765ebd67\" id=\"u765ebd67\"><span data-lake-id=\"ue9529f11\" id=\"ue9529f11\">node polufill</span></code><span data-lake-id=\"uf6ded609\" id=\"uf6ded609\">，按照提示 </span><code data-lake-id=\"u0243b361\" id=\"u0243b361\"><span data-lake-id=\"u977f9dd4\" id=\"u977f9dd4\">alias</span></code><span data-lake-id=\"u6ac25780\" id=\"u6ac25780\"> 设置为 </span><code data-lake-id=\"u4c6b36df\" id=\"u4c6b36df\"><span data-lake-id=\"u781c6e77\" id=\"u781c6e77\">false</span></code><span data-lake-id=\"ub8a499b6\" id=\"ub8a499b6\"> 即可</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22module.exports%20%3D%20%7B%5Cn%20%20resolve%3A%20%7B%5Cn%20%20%20%20%2F%2F%201.%20%E4%B8%8D%E9%9C%80%E8%A6%81%20node%20polyfills%5Cn%20%20%20%20alias%3A%20%7B%5Cn%20%20%20%20%20%20crypto%3A%20false%5Cn%20%20%20%20%7D%2C%5Cn%20%20%20%20%2F%2F%202.%20%E6%89%8B%E5%8A%A8%E6%B7%BB%E5%8A%A0%20polyfills%5Cn%20%20%20%20%2F%2F%20fallback%3A%20%7B%5Cn%20%20%20%20%2F%2F%20%20%20crypto%3A%20require.resolve('crypto-browserify')%5Cn%20%20%20%20%2F%2F%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22webpack.config.js%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22QgqKe%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ue7919d8d\" id=\"ue7919d8d\"><span data-lake-id=\"u95d85e50\" id=\"u95d85e50\">到了 </span><code data-lake-id=\"u7040f75f\" id=\"u7040f75f\"><span data-lake-id=\"u52ed7e98\" id=\"u52ed7e98\">webpack v5</span></code><span data-lake-id=\"u47969471\" id=\"u47969471\">，我们需要清楚自己的项目需要引入哪些 </span><code data-lake-id=\"ub6cabbe4\" id=\"ub6cabbe4\"><span data-lake-id=\"u5777008d\" id=\"u5777008d\">node polyfill</span></code><span data-lake-id=\"uab0f83c4\" id=\"uab0f83c4\">。</span></p><h2 data-lake-id=\"GWjtc\" id=\"GWjtc\"><span data-lake-id=\"u9fa8fc64\" id=\"u9fa8fc64\">持久化缓存</span></h2><h4 data-lake-id=\"hbKWt\" id=\"hbKWt\"><span data-lake-id=\"u11427dd0\" id=\"u11427dd0\">内容哈希</span></h4><p data-lake-id=\"ua569cbd4\" id=\"ua569cbd4\"><span data-lake-id=\"u08a9b1fd\" id=\"u08a9b1fd\">在 </span><code data-lake-id=\"u7ea4ce40\" id=\"u7ea4ce40\"><span data-lake-id=\"u8ad7344a\" id=\"u8ad7344a\">webpack v4</span></code><span data-lake-id=\"u80a45880\" id=\"u80a45880\"> 是</span><strong><span data-lake-id=\"u71af5888\" id=\"u71af5888\">根据代码的结构</span></strong><span data-lake-id=\"uffe9ba7b\" id=\"uffe9ba7b\">生成 </span><code data-lake-id=\"u18710a71\" id=\"u18710a71\"><span data-lake-id=\"u8fab80bc\" id=\"u8fab80bc\">chunkhash</span></code><span data-lake-id=\"u1fbc7570\" id=\"u1fbc7570\">，现在 </span><code data-lake-id=\"u8a984b13\" id=\"u8a984b13\"><span data-lake-id=\"u90d6ede4\" id=\"u90d6ede4\">webpack v5</span></code><span data-lake-id=\"ud22e98ed\" id=\"ud22e98ed\"> 将完全根据内容生成 </span><code data-lake-id=\"u29629e09\" id=\"u29629e09\"><span data-lake-id=\"uaed5c0e0\" id=\"uaed5c0e0\">chunkhash</span></code><span data-lake-id=\"uda4bd58a\" id=\"uda4bd58a\">，比如修改了内容的注释或者变量则不会引起 </span><code data-lake-id=\"u86bf8b25\" id=\"u86bf8b25\"><span data-lake-id=\"udcc8b2fb\" id=\"udcc8b2fb\">chunkhash</span></code><span data-lake-id=\"u5920511c\" id=\"u5920511c\"> 的变化，让浏览器继续使用缓存</span></p><h4 data-lake-id=\"BOOGe\" id=\"BOOGe\"><span data-lake-id=\"u915d4a79\" id=\"u915d4a79\">默认启用长期缓存算法</span></h4><p data-lake-id=\"u6264ff46\" id=\"u6264ff46\"><span data-lake-id=\"u180143be\" id=\"u180143be\">在 </span><code data-lake-id=\"uea6dac9c\" id=\"uea6dac9c\"><span data-lake-id=\"uf368af98\" id=\"uf368af98\">webpack v4</span></code><span data-lake-id=\"ua3c7958a\" id=\"ua3c7958a\"> 中，</span><code data-lake-id=\"u826116fe\" id=\"u826116fe\"><span data-lake-id=\"u5070976b\" id=\"u5070976b\">chunkId</span></code><span data-lake-id=\"uec5f1b57\" id=\"uec5f1b57\"> 与 </span><code data-lake-id=\"u5483d7ad\" id=\"u5483d7ad\"><span data-lake-id=\"ub2b7cb4f\" id=\"ub2b7cb4f\">moduleId</span></code><span data-lake-id=\"uaf9d2317\" id=\"uaf9d2317\"> 都是</span><strong><span data-lake-id=\"u04f5a02e\" id=\"u04f5a02e\">自增 id</span></strong><span data-lake-id=\"u9271db24\" id=\"u9271db24\">。也就是只要我们新增一个模块，那么代码中 </span><code data-lake-id=\"ufa1cb8ed\" id=\"ufa1cb8ed\"><span data-lake-id=\"u70e7ca22\" id=\"u70e7ca22\">module</span></code><span data-lake-id=\"u217e296a\" id=\"u217e296a\"> 的数量就会发生变化，从而导致 </span><code data-lake-id=\"ucf27009f\" id=\"ucf27009f\"><span data-lake-id=\"u0d79d496\" id=\"u0d79d496\">moduleId</span></code><span data-lake-id=\"u535e89db\" id=\"u535e89db\"> 发生变化，于是文件内容就发生了变化。</span><code data-lake-id=\"u2ac6dc61\" id=\"u2ac6dc61\"><span data-lake-id=\"ufdab6aa0\" id=\"ufdab6aa0\">chunkId</span></code><span data-lake-id=\"u2a61308a\" id=\"u2a61308a\"> 也是如此，新增一个入口的时候，</span><code data-lake-id=\"u554f4536\" id=\"u554f4536\"><span data-lake-id=\"u4e0d0468\" id=\"u4e0d0468\">chunk</span></code><span data-lake-id=\"u0049347a\" id=\"u0049347a\"> 数量的变化造成了 </span><code data-lake-id=\"uf2ae7e97\" id=\"uf2ae7e97\"><span data-lake-id=\"u85f99b9a\" id=\"u85f99b9a\">chunkId</span></code><span data-lake-id=\"ubf02da82\" id=\"ubf02da82\"> 的变化，导致了文件内容变化。</span></p><p data-lake-id=\"uc2631483\" id=\"uc2631483\"><span data-lake-id=\"ud5965d56\" id=\"ud5965d56\">​</span><br></p><p data-lake-id=\"ub0345d5c\" id=\"ub0345d5c\"><code data-lake-id=\"u17f34318\" id=\"u17f34318\"><span data-lake-id=\"u1110d97d\" id=\"u1110d97d\">webpack v4</span></code><span data-lake-id=\"u0ce4bd43\" id=\"u0ce4bd43\"> 可以通过设置 </span><code data-lake-id=\"uc6d2f17f\" id=\"uc6d2f17f\"><span data-lake-id=\"u7204dfe1\" id=\"u7204dfe1\">optimization.moduleIds = &quot;hashed&quot;</span></code><span data-lake-id=\"u02175325\" id=\"u02175325\"> 与 </span><code data-lake-id=\"u782e13ce\" id=\"u782e13ce\"><span data-lake-id=\"ud2467d74\" id=\"ud2467d74\">optimization.namedChunks = true</span></code><span data-lake-id=\"ub93c4687\" id=\"ub93c4687\"> 来解决 这些问题，但是都存在性能损耗等副作用。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22module.exports%20%3D%20%7B%5Cn%20%20moduleIds%3A%20'hashed'%2C%5Cn%20%20namedChunks%3A%20true%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22dMSQm%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"uc8be5244\" id=\"uc8be5244\"><span data-lake-id=\"u791e2822\" id=\"u791e2822\">而 </span><code data-lake-id=\"u4cfe6239\" id=\"u4cfe6239\"><span data-lake-id=\"ua7baf43c\" id=\"ua7baf43c\">webpack v5</span></code><span data-lake-id=\"uc78ee40b\" id=\"uc78ee40b\"> 在 </span><code data-lake-id=\"u6a7b0f45\" id=\"u6a7b0f45\"><span data-lake-id=\"uf931bd14\" id=\"uf931bd14\">production</span></code><span data-lake-id=\"ub615c51e\" id=\"ub615c51e\"> 模式下 </span><code data-lake-id=\"u523689a7\" id=\"u523689a7\"><span data-lake-id=\"u2ebdf2e0\" id=\"u2ebdf2e0\">optimization.chunkIds</span></code><span data-lake-id=\"ubab7a9e7\" id=\"ubab7a9e7\"> 和 </span><code data-lake-id=\"u4b80075d\" id=\"u4b80075d\"><span data-lake-id=\"u596cf365\" id=\"u596cf365\">optimization.moduleIds</span></code><span data-lake-id=\"u7838bb13\" id=\"u7838bb13\"> 默认会设为 </span><code data-lake-id=\"ucbb2fbf7\" id=\"ucbb2fbf7\"><span data-lake-id=\"u14e34cfc\" id=\"u14e34cfc\">'deterministic'</span></code><span data-lake-id=\"u0880bb4a\" id=\"u0880bb4a\">，</span><code data-lake-id=\"u478296c8\" id=\"u478296c8\"><span data-lake-id=\"u4027ed3a\" id=\"u4027ed3a\">webpack</span></code><span data-lake-id=\"ua0847273\" id=\"ua0847273\"> 会采用新的算法来计算确定性的 </span><code data-lake-id=\"ud2ee72a5\" id=\"ud2ee72a5\"><span data-lake-id=\"u855c861b\" id=\"u855c861b\">chunkId</span></code><span data-lake-id=\"u8d930170\" id=\"u8d930170\"> 和 </span><code data-lake-id=\"u7888ad87\" id=\"u7888ad87\"><span data-lake-id=\"u799ab5a7\" id=\"u799ab5a7\">moduleId</span></code><span data-lake-id=\"u3a92dd84\" id=\"u3a92dd84\">。</span></p><h2 data-lake-id=\"wkxmn\" id=\"wkxmn\"><span data-lake-id=\"u0a881034\" id=\"u0a881034\">模块联邦</span></h2><p data-lake-id=\"udf01e38c\" id=\"udf01e38c\"><span data-lake-id=\"u217ef68c\" id=\"u217ef68c\">模块联邦制，使 </span><code data-lake-id=\"ufcbd6796\" id=\"ufcbd6796\"><span data-lake-id=\"u2aa8ce3d\" id=\"u2aa8ce3d\">javaScript</span></code><span data-lake-id=\"u3643a8b9\" id=\"u3643a8b9\"> 应用得以从另一个 </span><code data-lake-id=\"u17457705\" id=\"u17457705\"><span data-lake-id=\"uc7eb3f67\" id=\"uc7eb3f67\">javaScript</span></code><span data-lake-id=\"u11d1afe4\" id=\"u11d1afe4\"> 应用中动态地加载代码 --- 同时共享依赖。项目分为：消费者 </span><code data-lake-id=\"ua62f46d0\" id=\"ua62f46d0\"><span data-lake-id=\"u898d05f7\" id=\"u898d05f7\">Host</span></code><span data-lake-id=\"ua801796b\" id=\"ua801796b\">，被消费者 </span><code data-lake-id=\"u6592e87f\" id=\"u6592e87f\"><span data-lake-id=\"ua7a7851c\" id=\"ua7a7851c\">Remote</span></code><span data-lake-id=\"u0d1afabe\" id=\"u0d1afabe\">。功能实现主要依靠 </span><code data-lake-id=\"u27a23845\" id=\"u27a23845\"><span data-lake-id=\"u1744bb02\" id=\"u1744bb02\">ModuleFederationPlugin</span></code><span data-lake-id=\"uadf2ad29\" id=\"uadf2ad29\"> 插件。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22new%20ModuleFedrationPlugin(%7B%5Cn%20%20name%3A%20''%2C%20%2F%2F%20%E5%90%8D%E7%A7%B0%EF%BC%8C%E5%94%AF%E4%B8%80%20id%5Cn%20%20library%3A%20%7B%7D%2C%20%2F%2F%20%E4%BB%A5%E4%BB%80%E4%B9%88%E5%BD%A2%E5%BC%8F%E6%9A%B4%E9%9C%B2%EF%BC%8C%E6%AF%94%E5%A6%82%20umd%5Cn%20%20filename%3A%20''%2C%20%20%2F%2F%20%E8%BE%93%E5%87%BA%E7%9A%84%E5%85%A5%E5%8F%A3%E6%96%87%E4%BB%B6%E5%90%8D%E7%A7%B0%5Cn%20%20exporse%3A%20%7B%7D%2C%20%2F%2F%20%E8%A6%81%E8%BE%93%E5%87%BA%E7%9A%84%E7%BB%84%E4%BB%B6%E6%88%96%E6%96%B9%E6%B3%95%5Cn%20%20shared%3A%20%5B%5D%20%2F%2F%20%E8%A6%81%E5%85%B1%E4%BA%AB%E7%9A%84%E4%BE%9D%E8%B5%96%5Cn%7D)%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ki2db%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20HtmlWebpackPlugin%20%3D%20require('html-webpack-plugin')%5Cnconst%20ModuleFederationPlugin%20%3D%20require('webpack%2Flib%2Fcontainer%2FModuleFederationPlugin')%5Cn%5Cnmodule.exports%20%3D%20%7B%5Cn%20%20%2F%2F%20...%5Cn%20%20plugins%3A%20%5B%5Cn%20%20%20%20new%20ModuleFederationPlugin(%7B%5Cn%20%20%20%20%20%20%2F%2F%201.%20name%20%E5%BD%93%E5%89%8D%E5%BA%94%E7%94%A8%E5%90%8D%E7%A7%B0%EF%BC%8C%E9%9C%80%E8%A6%81%E5%85%A8%E5%B1%80%E5%94%AF%E4%B8%80%5Cn%20%20%20%20%20%20name%3A%20'app_one_remote'%2C%5Cn%20%20%20%20%20%20%2F%2F%202.%20remotes%20%E5%8F%AF%E4%BB%A5%E8%AE%B2%E5%85%B6%E4%BB%96%E9%A1%B9%E7%9B%AE%E7%9A%84%20name%20%E6%98%A0%E5%B0%84%E5%88%B0%E5%BD%93%E5%89%8D%E9%A1%B9%E7%9B%AE%E4%B8%AD%5Cn%20%20%20%20%20%20remotes%3A%20%7B%5Cn%20%20%20%20%20%20%20%20app_two%3A%20'app_two_remote'%2C%5Cn%20%20%20%20%20%20%20%20app_three%3A%20'app_three_remote'%5Cn%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20%2F%2F%203.%20exposes%20%E8%A1%A8%E7%A4%BA%E5%AF%BC%E5%87%BA%E7%9A%84%E6%A8%A1%E5%9D%97%EF%BC%8C%E5%8F%AA%E6%9C%89%E5%9C%A8%E6%AD%A4%E5%A3%B0%E6%98%8E%E7%9A%84%E6%A8%A1%E5%9D%97%E6%89%8D%E5%8F%AF%E4%BB%A5%E4%BD%9C%E4%B8%BA%E8%BF%9C%E7%A8%8B%E4%BE%9D%E8%B5%96%E8%A2%AB%E4%BD%BF%E7%94%A8%5Cn%20%20%20%20%20%20exposes%3A%20%7B%5Cn%20%20%20%20%20%20%20%20AppContainer%3A%20'.%2Fsrc%2FApp'%5Cn%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20%2F%2F%204.%20shared%20%E5%8F%AF%E4%BB%A5%E8%AE%A9%E8%BF%9C%E7%A8%8B%E5%8A%A0%E8%BD%BD%E7%9A%84%E6%A8%A1%E5%9D%97%E5%AF%B9%E5%BA%94%E4%BE%9D%E8%B5%96%E6%94%B9%E4%B8%BA%E4%BD%BF%E7%94%A8%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E7%9A%84%20react%2Freact-dom%5Cn%20%20%20%20%20%20shard%3A%20%5B'react'%2C%20'react-dom'%2C%20'react-router-dom'%5D%5Cn%20%20%20%20%7D)%2C%5Cn%20%20%20%20new%20HtmlWebpackPlugin(%7B%5Cn%20%20%20%20%20%20template%3A%20'.%2Fpublic%2Findex.html'%2C%5Cn%20%20%20%20%20%20chunks%3A%20%5B'main'%5D%5Cn%20%20%20%20%7D)%5Cn%20%20%5D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%E6%A8%A1%E5%9D%97%E8%81%94%E9%82%A6%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22PJ0W4%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ueac4dd6c\" id=\"ueac4dd6c\"><span data-lake-id=\"ucdc04206\" id=\"ucdc04206\">如果设置了 </span><code data-lake-id=\"uda4c729c\" id=\"uda4c729c\"><span data-lake-id=\"ufe6b629c\" id=\"ufe6b629c\">remotes: { app_two: 'app_two_remote' }</span></code><span data-lake-id=\"u3a5c0227\" id=\"u3a5c0227\">，在代码中就可以直接利用以下方式直接从对方应用调用模块</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22import%20%7B%20Search%20%7D%20from%20'app_two%2FSearch'%5Cn%2F%2F%20app_two%2FSearch%20%E6%9D%A5%E8%87%AA%E4%BA%8E%20app_two%20%E7%9A%84%E9%85%8D%E7%BD%AE%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22jWI6r%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22export%20default%20%7B%5Cn%20%20plugins%3A%20%5B%5Cn%20%20%20%20new%20ModuleFederationPlugin(%7B%5Cn%20%20%20%20%20%20name%3A%20'app_two'%2C%5Cn%20%20%20%20%20%20library%3A%20%7B%5Cn%20%20%20%20%20%20%20%20type%3A%20'var'%2C%5Cn%20%20%20%20%20%20%20%20name%3A%20'app_two'%5Cn%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20filename%3A%20'remoteEntry.js'%2C%5Cn%20%20%20%20%20%20exposes%3A%20%7B%5Cn%20%20%20%20%20%20%20%20Search%3A%20'.%2Fsrc%2FSearch'%5Cn%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20shared%3A%20%5B'react'%2C%20'react-dom'%5D%5Cn%20%20%20%20%7D)%5Cn%20%20%5D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22app_two%20%E7%9A%84%20webpack%20%E9%85%8D%E7%BD%AE%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22KOxcT%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u7f6dda63\" id=\"u7f6dda63\"><span data-lake-id=\"u989083a3\" id=\"u989083a3\">正因为 </span><code data-lake-id=\"u3d0871f3\" id=\"u3d0871f3\"><span data-lake-id=\"u7388127d\" id=\"u7388127d\">Search</span></code><span data-lake-id=\"u7a3bede3\" id=\"u7a3bede3\"> 被 </span><code data-lake-id=\"u24072d8a\" id=\"u24072d8a\"><span data-lake-id=\"u22b72b35\" id=\"u22b72b35\">exposes</span></code><span data-lake-id=\"ud736a69c\" id=\"ud736a69c\"> 被导出，因此可以使用 </span><code data-lake-id=\"ubb2e9c03\" id=\"ubb2e9c03\"><span data-lake-id=\"ue7401f33\" id=\"ue7401f33\">[name]/[exposes_name]</span></code><span data-lake-id=\"u6c3c4ef2\" id=\"u6c3c4ef2\"> 这个模块，这个模块对于被引用应用来说是一个本地模块。实际上是直接将一个应用的 </span><code data-lake-id=\"u25cf3ca6\" id=\"u25cf3ca6\"><span data-lake-id=\"uc4fb1718\" id=\"uc4fb1718\">bundle</span></code><span data-lake-id=\"u68d24bb3\" id=\"u68d24bb3\">，应用于另一个应用，动态分发 </span><code data-lake-id=\"u92eaad62\" id=\"u92eaad62\"><span data-lake-id=\"ud91a0044\" id=\"ud91a0044\">runtime</span></code><span data-lake-id=\"ub8bc25a6\" id=\"ub8bc25a6\"> 自模块给其他应用。</span></p><h3 data-lake-id=\"SAqZk\" id=\"SAqZk\"><span data-lake-id=\"uf9c05b9c\" id=\"uf9c05b9c\">结论</span></h3><p data-lake-id=\"uee391b7a\" id=\"uee391b7a\"><code data-lake-id=\"ua49e5089\" id=\"ua49e5089\"><span data-lake-id=\"u68f370e6\" id=\"u68f370e6\">webpack v5</span></code><span data-lake-id=\"ud6ee8c0c\" id=\"ud6ee8c0c\"> 的模块联邦让 </span><code data-lake-id=\"u7a868e78\" id=\"u7a868e78\"><span data-lake-id=\"u636e15d2\" id=\"u636e15d2\">webpack</span></code><span data-lake-id=\"u450b6213\" id=\"u450b6213\"> 达到了线上 </span><code data-lake-id=\"uebb96e6f\" id=\"uebb96e6f\"><span data-lake-id=\"u4120db20\" id=\"u4120db20\">runtime</span></code><span data-lake-id=\"u3a2ba947\" id=\"u3a2ba947\"> 的效果，让代码直接在项目间利用 </span><code data-lake-id=\"uaf480b97\" id=\"uaf480b97\"><span data-lake-id=\"u7999ce94\" id=\"u7999ce94\">cdn</span></code><span data-lake-id=\"u5d5bf8b9\" id=\"u5d5bf8b9\"> 直接共享，不再需要本地安装 </span><code data-lake-id=\"u4eb3dc76\" id=\"u4eb3dc76\"><span data-lake-id=\"u061f4796\" id=\"u061f4796\">npm</span></code><span data-lake-id=\"ud17530bc\" id=\"ud17530bc\"> 包、构建再发布了。</span></p><h3 data-lake-id=\"QCqbH\" id=\"QCqbH\"><span data-lake-id=\"u5baaaa8b\" id=\"u5baaaa8b\">微前端架构存在的问题</span></h3><p data-lake-id=\"ub783f76c\" id=\"ub783f76c\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1648046099220-3f4e6738-7bab-465b-af99-22d0f2dfd0e3.png%22%2C%22taskId%22%3A%22u5d3c0195-789e-46be-9c5b-c470018991a%22%2C%22clientId%22%3A%22u9a0f9fd2-2ae0-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1304%2C%22height%22%3A928%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A543589%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1304%2C%22originHeight%22%3A928%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22JS%E6%B2%99%E7%AE%B1%20%E5%AD%90%E5%BA%94%E7%94%A8%E5%B9%B6%E8%A1%8C%20%E5%AD%90%E5%BA%94%E7%94%A8%E4%B9%8B%E9%97%B4%E4%BA%92%E4%B8%8D%E5%BD%B1%E5%93%8D%20CSS%E9%9A%94%E7%A6%BB%20%E5%8C%85%E6%8B%AC%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%2C%E4%BA%8B%E4%BB%B6%E7%AD%89%E5%A4%84%E7%90%86%20%E5%A4%9A%E4%B8%AA%E5%BE%AE%E5%89%8D%E7%AB%AF%E5%A6%82%E4%BD%95%E5%90%8C%E6%97%B6%E5%AD%98%E5%9C%A8%20%E5%AD%90%E5%BA%94%E7%94%A8%E4%B9%8B%E9%97%B4%E6%A0%B7%E5%BC%8F%E4%BA%92%E4%B8%8D%E5%BD%B1%E5%93%8D%20%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95%20%E5%88%87%E6%8D%A2%E6%97%B6%E8%A3%85%E8%BD%BD%E5%92%8C%E5%8D%B8%E8%BD%BD%20%E5%AD%90%E5%BA%94%E7%94%A8%E5%B5%8C%E5%A5%97%20HTML%20ENTRY%20CONFIG%20ENTRY%20%E7%9A%84%E8%BF%9B%E9%98%B6%E7%89%88%20%E5%BE%AE%E5%89%8D%E7%AB%AF%E5%A6%82%E4%BD%95%E5%B5%8C%E5%BE%AE%E5%89%8D%E7%AB%AF%20%E7%AE%80%E5%8C%96%E5%BC%80%E5%8F%91%E8%80%85%E4%BD%BF%E7%94%A8%20%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95%20%E4%BD%86%E6%8A%8A%E8%A7%A3%E6%9E%90%E6%B6%88%E8%80%97%E7%95%99%E7%BB%99%E4%BA%86%E7%94%A8%E6%88%B7%20%E5%BE%AE%E5%89%8D%E7%AB%AF%20%E7%88%B6%E5%AD%90%E5%BA%94%E7%94%A8%E9%80%9A%E8%AE%AF%20CONFIG%20ENTRY%20%E5%AD%90%E5%BA%94%E7%94%A8%E5%A6%82%E4%BD%95%E8%B0%83%E7%88%B6%E5%BA%94%E7%94%A8%E6%96%B9%E6%B3%95%20%E9%85%8D%E7%BD%AE%E6%AF%8F%E4%B8%AA%E5%AD%90%E5%BA%94%E7%94%A8%E7%9A%84JS%E5%92%8CCSS%20%E7%88%B6%E5%BA%94%E7%94%A8%E5%A6%82%E4%BD%95%E4%B8%8B%E5%8F%91%E7%8A%B6%E6%80%81%20%E5%8C%85%E6%8B%AC%E5%86%85%E8%81%94%E7%9A%84%E9%82%A3%E4%BA%9B%20%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD%20%E9%A2%84%E5%8A%A0%E8%BD%BD%20%E5%85%AC%E5%85%B1%E4%BE%9D%E8%B5%96%E5%8A%A0%E8%BD%BD%20%E7%A9%BA%E9%97%B2%E6%97%B6%E5%8A%A0%E8%BD%BD%E5%AD%90%E5%BA%94%E7%94%A8%E8%B5%84%E6%BA%90%20%E5%88%87%E6%8D%A2%E5%88%B0%E9%A1%B5%E9%9D%A2%E6%97%B6%E6%89%8D%E5%8A%A0%E8%BD%BD%20%E7%9B%B8%E5%BA%94%E7%9A%84HTML%2CCSS%E5%92%8CJS%20%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E6%95%B0%E6%8D%AE%E6%94%AF%E6%8C%81%20%E5%A4%A7%E9%83%A8%E5%88%86%E5%AD%90%E5%BA%94%E7%94%A8%E9%83%BD%E7%94%A8%E5%88%B0%E7%9A%84%E8%B5%84%E6%BA%90%20%E6%80%8E%E4%B9%88%E5%A4%84%E7%90%86%20%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A525.6469%2C%22y%22%3A3.4700627%2C%22width%22%3A129.49104%2C%22height%22%3A38.7832373%2C%22text%22%3A%22JS%E6%B2%99%E7%AE%B1%22%7D%2C%7B%22x%22%3A209.94885%2C%22y%22%3A75.942406%2C%22width%22%3A178.68349999999998%2C%22height%22%3A37.986334%2C%22text%22%3A%22%E5%AD%90%E5%BA%94%E7%94%A8%E5%B9%B6%E8%A1%8C%22%7D%2C%7B%22x%22%3A484.8538%2C%22y%22%3A76.49597%2C%22width%22%3A214.55854999999997%2C%22height%22%3A26.874864000000002%2C%22text%22%3A%22%E5%AD%90%E5%BA%94%E7%94%A8%E4%B9%8B%E9%97%B4%E4%BA%92%E4%B8%8D%E5%BD%B1%E5%93%8D%22%7D%2C%7B%22x%22%3A811.05005%2C%22y%22%3A86.1381%2C%22width%22%3A158.13954999999999%2C%22height%22%3A35.836690000000004%2C%22text%22%3A%22CSS%E9%9A%94%E7%A6%BB%22%7D%2C%7B%22x%22%3A445.73154%2C%22y%22%3A107.18322%2C%22width%22%3A289.56566%2C%22height%22%3A28.00238999999999%2C%22text%22%3A%22%E5%8C%85%E6%8B%AC%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%2C%E4%BA%8B%E4%BB%B6%E7%AD%89%E5%A4%84%E7%90%86%22%7D%2C%7B%22x%22%3A166.92944%2C%22y%22%3A149.11316%2C%22width%22%3A263.42051%2C%22height%22%3A25.80206000000001%2C%22text%22%3A%22%E5%A4%9A%E4%B8%AA%E5%BE%AE%E5%89%8D%E7%AB%AF%E5%A6%82%E4%BD%95%E5%90%8C%E6%97%B6%E5%AD%98%E5%9C%A8%22%7D%2C%7B%22x%22%3A752.297%2C%22y%22%3A156.85402%2C%22width%22%3A263.93584999999996%2C%22height%22%3A27.217240000000004%2C%22text%22%3A%22%E5%AD%90%E5%BA%94%E7%94%A8%E4%B9%8B%E9%97%B4%E6%A0%B7%E5%BC%8F%E4%BA%92%E4%B8%8D%E5%BD%B1%E5%93%8D%22%7D%2C%7B%22x%22%3A248.6494%2C%22y%22%3A182.71535%2C%22width%22%3A100.13646%2C%22height%22%3A25.265989999999988%2C%22text%22%3A%22%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95%22%7D%2C%7B%22x%22%3A788.6622%2C%22y%22%3A190.95535%2C%22width%22%3A192.06033000000002%2C%22height%22%3A24.34778%2C%22text%22%3A%22%E5%88%87%E6%8D%A2%E6%97%B6%E8%A3%85%E8%BD%BD%E5%92%8C%E5%8D%B8%E8%BD%BD%22%7D%2C%7B%22x%22%3A104.7937%2C%22y%22%3A273.50095%2C%22width%22%3A183.41226%2C%22height%22%3A41.75152000000003%2C%22text%22%3A%22%E5%AD%90%E5%BA%94%E7%94%A8%E5%B5%8C%E5%A5%97%22%7D%2C%7B%22x%22%3A936.2989%2C%22y%22%3A290.62628%2C%22width%22%3A209.14460000000008%2C%22height%22%3A34.59622000000002%2C%22text%22%3A%22HTML%20ENTRY%22%7D%2C%7B%22x%22%3A916.24603%2C%22y%22%3A344.60803%2C%22width%22%3A242.72207000000003%2C%22height%22%3A24.263800000000003%2C%22text%22%3A%22CONFIG%20ENTRY%20%E7%9A%84%E8%BF%9B%E9%98%B6%E7%89%88%22%7D%2C%7B%22x%22%3A86.57589%2C%22y%22%3A348.338%2C%22width%22%3A218.39909%2C%22height%22%3A25.107370000000003%2C%22text%22%3A%22%E5%BE%AE%E5%89%8D%E7%AB%AF%E5%A6%82%E4%BD%95%E5%B5%8C%E5%BE%AE%E5%89%8D%E7%AB%AF%22%7D%2C%7B%22x%22%3A953.4719%2C%22y%22%3A375.32498%2C%22width%22%3A169.3239000000001%2C%22height%22%3A25.80155000000002%2C%22text%22%3A%22%E7%AE%80%E5%8C%96%E5%BC%80%E5%8F%91%E8%80%85%E4%BD%BF%E7%94%A8%22%7D%2C%7B%22x%22%3A150.70381%2C%22y%22%3A382.74716%2C%22width%22%3A94.18134%2C%22height%22%3A23.810609999999997%2C%22text%22%3A%22%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95%22%7D%2C%7B%22x%22%3A905.0861%2C%22y%22%3A408.8569%2C%22width%22%3A263.8606%2C%22height%22%3A27.399699999999996%2C%22text%22%3A%22%E4%BD%86%E6%8A%8A%E8%A7%A3%E6%9E%90%E6%B6%88%E8%80%97%E7%95%99%E7%BB%99%E4%BA%86%E7%94%A8%E6%88%B7%22%7D%2C%7B%22x%22%3A462.4997%2C%22y%22%3A492.48175%2C%22width%22%3A255.44159999999994%2C%22height%22%3A79.28935000000007%2C%22text%22%3A%22%E5%BE%AE%E5%89%8D%E7%AB%AF%22%7D%2C%7B%22x%22%3A73.309456%2C%22y%22%3A501.65765%2C%22width%22%3A218.44289399999997%2C%22height%22%3A37.71398999999997%2C%22text%22%3A%22%E7%88%B6%E5%AD%90%E5%BA%94%E7%94%A8%E9%80%9A%E8%AE%AF%22%7D%2C%7B%22x%22%3A889.95074%2C%22y%22%3A511.73843%2C%22width%22%3A220.52106000000003%2C%22height%22%3A41.17976999999996%2C%22text%22%3A%22CONFIG%20ENTRY%22%7D%2C%7B%22x%22%3A52.254757%2C%22y%22%3A575.4418%2C%22width%22%3A263.393283%2C%22height%22%3A24.157140000000027%2C%22text%22%3A%22%E5%AD%90%E5%BA%94%E7%94%A8%E5%A6%82%E4%BD%95%E8%B0%83%E7%88%B6%E5%BA%94%E7%94%A8%E6%96%B9%E6%B3%95%22%7D%2C%7B%22x%22%3A840.5536%2C%22y%22%3A580.8544%2C%22width%22%3A316.69859999999994%2C%22height%22%3A26.28713999999991%2C%22text%22%3A%22%E9%85%8D%E7%BD%AE%E6%AF%8F%E4%B8%AA%E5%AD%90%E5%BA%94%E7%94%A8%E7%9A%84JS%E5%92%8CCSS%22%7D%2C%7B%22x%22%3A75.1777%2C%22y%22%3A608.16547%2C%22width%22%3A215.95139999999998%2C%22height%22%3A24.59209999999996%2C%22text%22%3A%22%E7%88%B6%E5%BA%94%E7%94%A8%E5%A6%82%E4%BD%95%E4%B8%8B%E5%8F%91%E7%8A%B6%E6%80%81%22%7D%2C%7B%22x%22%3A917.1521%2C%22y%22%3A614.07935%2C%22width%22%3A166.27330000000006%2C%22height%22%3A25.08445000000006%2C%22text%22%3A%22%E5%8C%85%E6%8B%AC%E5%86%85%E8%81%94%E7%9A%84%E9%82%A3%E4%BA%9B%22%7D%2C%7B%22x%22%3A787.7214%2C%22y%22%3A694.6973%2C%22width%22%3A148.47135000000003%2C%22height%22%3A39.38144%2C%22text%22%3A%22%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD%22%7D%2C%7B%22x%22%3A285.6138%2C%22y%22%3A694.74585%2C%22width%22%3A107.85891999999996%2C%22height%22%3A39.17414999999994%2C%22text%22%3A%22%E9%A2%84%E5%8A%A0%E8%BD%BD%22%7D%2C%7B%22x%22%3A490.3583%2C%22y%22%3A765.3963%2C%22width%22%3A215.45505000000003%2C%22height%22%3A41.839200000000005%2C%22text%22%3A%22%E5%85%AC%E5%85%B1%E4%BE%9D%E8%B5%96%E5%8A%A0%E8%BD%BD%22%7D%2C%7B%22x%22%3A221.48154%2C%22y%22%3A768.4979%2C%22width%22%3A240.88824%2C%22height%22%3A26.770500000000084%2C%22text%22%3A%22%E7%A9%BA%E9%97%B2%E6%97%B6%E5%8A%A0%E8%BD%BD%E5%AD%90%E5%BA%94%E7%94%A8%E8%B5%84%E6%BA%90%22%7D%2C%7B%22x%22%3A753.51196%2C%22y%22%3A769.0941%2C%22width%22%3A218.25293999999997%2C%22height%22%3A24.766599999999926%2C%22text%22%3A%22%E5%88%87%E6%8D%A2%E5%88%B0%E9%A1%B5%E9%9D%A2%E6%97%B6%E6%89%8D%E5%8A%A0%E8%BD%BD%22%7D%2C%7B%22x%22%3A719.4005%2C%22y%22%3A799.81726%2C%22width%22%3A288.1344%2C%22height%22%3A26.679869999999937%2C%22text%22%3A%22%E7%9B%B8%E5%BA%94%E7%9A%84HTML%2CCSS%E5%92%8CJS%22%7D%2C%7B%22x%22%3A243.63942%2C%22y%22%3A801.96967%2C%22width%22%3A193.97675999999998%2C%22height%22%3A25.33630000000005%2C%22text%22%3A%22%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E6%95%B0%E6%8D%AE%E6%94%AF%E6%8C%81%22%7D%2C%7B%22x%22%3A454.77115%2C%22y%22%3A838.40155%2C%22width%22%3A286.63365000000005%2C%22height%22%3A29.22960999999998%2C%22text%22%3A%22%E5%A4%A7%E9%83%A8%E5%88%86%E5%AD%90%E5%BA%94%E7%94%A8%E9%83%BD%E7%94%A8%E5%88%B0%E7%9A%84%E8%B5%84%E6%BA%90%22%7D%2C%7B%22x%22%3A548.64856%2C%22y%22%3A872.0801%2C%22width%22%3A97.31694000000005%2C%22height%22%3A25.734500000000025%2C%22text%22%3A%22%E6%80%8E%E4%B9%88%E5%A4%84%E7%90%86%22%7D%2C%7B%22x%22%3A1132.5278%2C%22y%22%3A882.0826%2C%22width%22%3A148.35669999999982%2C%22height%22%3A20.867349999999988%2C%22text%22%3A%22%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22ud0a3e2bb%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"ufa0a653a\" id=\"ufa0a653a\" style=\"text-indent: 2em\"><span data-lake-id=\"u5ddbfe8d\" id=\"u5ddbfe8d\">在当前的为前端架构中，通过了许多技术手段，如：应用分离、</span><code data-lake-id=\"u579270e4\" id=\"u579270e4\"><span data-lake-id=\"uf54e8f7c\" id=\"uf54e8f7c\">js</span></code><span data-lake-id=\"u418914a4\" id=\"u418914a4\"> 沙箱、</span><code data-lake-id=\"uf90baf96\" id=\"uf90baf96\"><span data-lake-id=\"u70393a51\" id=\"u70393a51\">css</span></code><span data-lake-id=\"uab761bbb\" id=\"uab761bbb\"> 隔离、预加载等实现了整个架构的使用。但对于公共依赖加载目前并没有非常好的解决方案。</span></p><p data-lake-id=\"u7f00fbb5\" id=\"u7f00fbb5\" style=\"text-indent: 2em\"><span data-lake-id=\"u11370d54\" id=\"u11370d54\">通常处理公共依赖的方式是使用 </span><code data-lake-id=\"u5ccabfd3\" id=\"u5ccabfd3\"><span data-lake-id=\"u6b758bfa\" id=\"u6b758bfa\">npm</span></code><span data-lake-id=\"u0c5f2dc8\" id=\"u0c5f2dc8\">，将依赖抽离作为 </span><code data-lake-id=\"u496f8f34\" id=\"u496f8f34\"><span data-lake-id=\"uec58c8bb\" id=\"uec58c8bb\">lib</span></code><span data-lake-id=\"u1e661006\" id=\"u1e661006\"> 公共库进行管理。应用之中使用到 </span><code data-lake-id=\"ue5ff0111\" id=\"ue5ff0111\"><span data-lake-id=\"ud8be6706\" id=\"ud8be6706\">lib</span></code><span data-lake-id=\"u03b9f802\" id=\"u03b9f802\">，将其安装到项目中，再通过 </span><code data-lake-id=\"u1c455b3b\" id=\"u1c455b3b\"><span data-lake-id=\"uac9f7332\" id=\"uac9f7332\">webpack</span></code><span data-lake-id=\"uc7d240ab\" id=\"uc7d240ab\"> 打包上线</span></p><p data-lake-id=\"ub53df518\" id=\"ub53df518\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1648046818769-a678e047-0cd2-4a27-bda7-251fbfd2e2de.png%22%2C%22taskId%22%3A%22u97514bbc-5ece-4811-93a3-29b574293f0%22%2C%22clientId%22%3A%22u9a0f9fd2-2ae0-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1304%2C%22height%22%3A798%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A264513%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1304%2C%22originHeight%22%3A798%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22SEARCH%20HOME%20LIBRARY%20%40%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%20%E5%8C%85%E7%A8%80%E5%9C%9F%E7%93%B6%E9%87%91%E6%8A%80%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A887.46106%2C%22y%22%3A7.2480154%2C%22width%22%3A159.85154%2C%22height%22%3A47.9603546%2C%22text%22%3A%22SEARCH%22%7D%2C%7B%22x%22%3A172.3681%2C%22y%22%3A9.942361%2C%22width%22%3A134.3857%2C%22height%22%3A44.844611%2C%22text%22%3A%22HOME%22%7D%2C%7B%22x%22%3A533.2841%2C%22y%22%3A733.3516%2C%22width%22%3A142.50700000000006%2C%22height%22%3A44.08750000000009%2C%22text%22%3A%22LIBRARY%22%7D%2C%7B%22x%22%3A1124.385%2C%22y%22%3A754.6453%2C%22width%22%3A157.01160000000004%2C%22height%22%3A20.407600000000002%2C%22text%22%3A%22%40%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%22%7D%2C%7B%22x%22%3A1242.9961%2C%22y%22%3A774.364%2C%22width%22%3A57.95209999999997%2C%22height%22%3A13.41879999999992%2C%22text%22%3A%22%E5%8C%85%E7%A8%80%E5%9C%9F%E7%93%B6%E9%87%91%E6%8A%80%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22u64ed7e29%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"u12f1e570\" id=\"u12f1e570\" style=\"text-indent: 2em\"><span data-lake-id=\"udd976ce6\" id=\"udd976ce6\">这种方式虽然解决了公共依赖问题，但还是需要走本地编译，无法做到项目运行时 </span><code data-lake-id=\"ucf06df62\" id=\"ucf06df62\"><span data-lake-id=\"ub1f0297d\" id=\"ub1f0297d\">runtime</span></code><span data-lake-id=\"u7358f738\" id=\"u7358f738\"> 调用。</span></p><p data-lake-id=\"u399adaaf\" id=\"u399adaaf\" style=\"text-indent: 2em\"><span data-lake-id=\"u3f0deb90\" id=\"u3f0deb90\">​</span><br></p><p data-lake-id=\"ub02b07c5\" id=\"ub02b07c5\" style=\"text-indent: 2em\"><span data-lake-id=\"u85bd7982\" id=\"u85bd7982\">使用 </span><code data-lake-id=\"u1743a00f\" id=\"u1743a00f\"><span data-lake-id=\"ud809cc1e\" id=\"ud809cc1e\">webpack v5</span></code><span data-lake-id=\"u5b0ffc90\" id=\"u5b0ffc90\"> 模块联邦就可以解决这一问题。</span></p><p data-lake-id=\"ud0e3bba7\" id=\"ud0e3bba7\" style=\"text-indent: 2em\"><span data-lake-id=\"u6d880daa\" id=\"u6d880daa\">​</span><br></p><p data-lake-id=\"ubc98cf2d\" id=\"ubc98cf2d\" style=\"text-indent: 2em\"><span data-lake-id=\"ua9ebf035\" id=\"ua9ebf035\">将公共依赖配置成一个远程模块，子应用只需要根据需求动态加载。这种方式可以做到运行时调用，不用考虑本地编译问题。</span></p><p data-lake-id=\"u8802f259\" id=\"u8802f259\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1648046937650-f14035db-aa15-4b12-9e45-75aba0982b0d.png%22%2C%22taskId%22%3A%22u3995fc2e-53b9-42d2-9b2d-0ce0470641f%22%2C%22clientId%22%3A%22u9a0f9fd2-2ae0-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1304%2C%22height%22%3A813%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A259883%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1304%2C%22originHeight%22%3A813%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22SEARCH%20HOME%20FEDERATED%20MODULES%20%40%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%20%40%E7%A8%80%E5%9C%9F%E6%92%AE%E9%87%91%E6%8A%80%E6%9C%AF%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A863.6447%2C%22y%22%3A7.915789%2C%22width%22%3A166.5611%2C%22height%22%3A47.71491399999999%2C%22text%22%3A%22SEARCH%22%7D%2C%7B%22x%22%3A137.58397%2C%22y%22%3A10.005485%2C%22width%22%3A135.19944999999998%2C%22height%22%3A44.757767%2C%22text%22%3A%22HOME%22%7D%2C%7B%22x%22%3A456.74515%2C%22y%22%3A128.17807%2C%22width%22%3A237.68635%2C%22height%22%3A49.07489000000001%2C%22text%22%3A%22FEDERATED%22%7D%2C%7B%22x%22%3A474.19675%2C%22y%22%3A199.70111%2C%22width%22%3A205.04685%2C%22height%22%3A51.07918000000001%2C%22text%22%3A%22MODULES%22%7D%2C%7B%22x%22%3A1119.7759%2C%22y%22%3A768.8509%2C%22width%22%3A164.2898%2C%22height%22%3A21.423599999999965%2C%22text%22%3A%22%40%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%22%7D%2C%7B%22x%22%3A1212.7745%2C%22y%22%3A789.9951%2C%22width%22%3A88.03600000000006%2C%22height%22%3A13.218500000000063%2C%22text%22%3A%22%40%E7%A8%80%E5%9C%9F%E6%92%AE%E9%87%91%E6%8A%80%E6%9C%AF%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22ud7712ff1%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"ube75bc30\" id=\"ube75bc30\"><span data-lake-id=\"ufd59dccf\" id=\"ufd59dccf\">这就衍生出一种新的应用形态：中心应用，这个应用具备模块输出的能力，可以在线动态的分发运行时的子模块。</span></p><p data-lake-id=\"uf691a06e\" id=\"uf691a06e\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1648046989783-976f1257-96f2-4bc8-8a3f-d46007ca1227.png%22%2C%22taskId%22%3A%22u0196dd1e-7bbb-45a1-b464-d142c77f902%22%2C%22clientId%22%3A%22u9a0f9fd2-2ae0-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1204%2C%22height%22%3A1238%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A337511%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1204%2C%22originHeight%22%3A1238%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22CONSUMER%20OTHER%20APPLICATIONS%20OTHER%20APPLICATIONS%20%40%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A439.75912%2C%22y%22%3A20.710566%2C%22width%22%3A323.45218000000006%2C%22height%22%3A61.805424%2C%22text%22%3A%22CONSUMER%22%7D%2C%7B%22x%22%3A1040.521%2C%22y%22%3A416.90906%2C%22width%22%3A93.40470000000005%2C%22height%22%3A593.7384%2C%22text%22%3A%22OTHER%20APPLICATIONS%22%7D%2C%7B%22x%22%3A41.54421%2C%22y%22%3A445.5254%2C%22width%22%3A80.74241%2C%22height%22%3A604.8286%2C%22text%22%3A%22OTHER%20APPLICATIONS%22%7D%2C%7B%22x%22%3A1010.75195%2C%22y%22%3A1186.9607%2C%22width%22%3A165.94065000000012%2C%22height%22%3A21.856899999999996%2C%22text%22%3A%22%40%E7%A8%80%E5%9C%9F%E6%8E%98%E9%87%91%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22u6c3ca203%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><blockquote data-lake-id=\"u913659d7\" id=\"u913659d7\" class=\"lake-alert lake-alert-info\"><p data-lake-id=\"uaf4440e9\" id=\"uaf4440e9\"><span data-lake-id=\"u9c65623b\" id=\"u9c65623b\">模块联邦在一定程度上弥补了为前端架构中的不足，让为前端架构日益趋向成熟。在可以预见的未来，前端工程化将进入一个新的阶段。</span></p></blockquote><h2 data-lake-id=\"Cp2Ww\" id=\"Cp2Ww\"><span data-lake-id=\"u12aca14d\" id=\"u12aca14d\">对 web 平台功能的全新支持</span></h2><h4 data-lake-id=\"ZrL4Q\" id=\"ZrL4Q\"><span data-lake-id=\"u8155b86c\" id=\"u8155b86c\">JSON 模块</span></h4><ul list=\"u67d8f450\"><li fid=\"u2ca31d4d\" data-lake-id=\"ua262c8ab\" id=\"ua262c8ab\"><span data-lake-id=\"ude4dc321\" id=\"ude4dc321\">使用自定义的 </span><code data-lake-id=\"u4f20f8d1\" id=\"u4f20f8d1\"><span data-lake-id=\"ub47c9849\" id=\"ub47c9849\">JSON</span></code><span data-lake-id=\"u6eab11e2\" id=\"u6eab11e2\"> 解析器：</span><code data-lake-id=\"udf81c8ff\" id=\"udf81c8ff\"><span data-lake-id=\"ub76876b0\" id=\"ub76876b0\">Rule.parser.parse</span></code><span data-lake-id=\"u1f7b76c8\" id=\"u1f7b76c8\"> 中指定</span></li><li fid=\"u2ca31d4d\" data-lake-id=\"u0f4d91d1\" id=\"u0f4d91d1\"><span data-lake-id=\"ub93c3733\" id=\"ub93c3733\">未使用的属性也会被 </span><code data-lake-id=\"u78a53dea\" id=\"u78a53dea\"><span data-lake-id=\"ub267f612\" id=\"ub267f612\">optimization.usedExports</span></code><span data-lake-id=\"u671aca77\" id=\"u671aca77\"> 优化丢弃</span></li><li fid=\"u2ca31d4d\" data-lake-id=\"u25b80a02\" id=\"u25b80a02\"><span data-lake-id=\"u14a8c7b1\" id=\"u14a8c7b1\">属性会被 </span><code data-lake-id=\"u6c87b97f\" id=\"u6c87b97f\"><span data-lake-id=\"u0ef62537\" id=\"u0ef62537\">optimization.mangleExports</span></code><span data-lake-id=\"u8a9af390\" id=\"u8a9af390\"> 优化打乱</span></li></ul><h4 data-lake-id=\"kwUCJ\" id=\"kwUCJ\"><span data-lake-id=\"u9b85e9d9\" id=\"u9b85e9d9\">ProgressPlugin 插件的优化</span></h4><p data-lake-id=\"u9df446a7\" id=\"u9df446a7\"><span data-lake-id=\"u0f48df95\" id=\"u0f48df95\">不仅可以统计模块编译的进度，也可以统计 </span><strong><span data-lake-id=\"u0776c03c\" id=\"u0776c03c\">入口</span></strong><span data-lake-id=\"ub6b8caae\" id=\"ub6b8caae\"> 和 </span><strong><span data-lake-id=\"u528928c4\" id=\"u528928c4\">依赖</span></strong></p><h4 data-lake-id=\"ZOl0x\" id=\"ZOl0x\"><span data-lake-id=\"uf0942aa4\" id=\"uf0942aa4\">自动添加唯一命名</span></h4><p data-lake-id=\"u103f3517\" id=\"u103f3517\"><code data-lake-id=\"u53c77944\" id=\"u53c77944\"><span data-lake-id=\"u7206ec37\" id=\"u7206ec37\">webpack v4</span></code><span data-lake-id=\"u9db7ea19\" id=\"u9db7ea19\"> 中，多个 </span><code data-lake-id=\"u794e74ff\" id=\"u794e74ff\"><span data-lake-id=\"u2a64059d\" id=\"u2a64059d\">webpack</span></code><span data-lake-id=\"udbe45752\" id=\"udbe45752\"> 同时运行时可能会在同一个 </span><code data-lake-id=\"u1f7e58f3\" id=\"u1f7e58f3\"><span data-lake-id=\"uc72ed651\" id=\"uc72ed651\">html</span></code><span data-lake-id=\"u8a2d028a\" id=\"u8a2d028a\"> 页面上发生冲突，这时候会在 </span><code data-lake-id=\"ufbe60ef2\" id=\"ufbe60ef2\"><span data-lake-id=\"u54837a0a\" id=\"u54837a0a\">output.jsonpFunction</span></code><span data-lake-id=\"u3ac9e0d9\" id=\"u3ac9e0d9\"> 配置提供一个自定义的。</span></p><p data-lake-id=\"u5086dead\" id=\"u5086dead\"><span data-lake-id=\"ub6e6bb18\" id=\"ub6e6bb18\">​</span><br></p><p data-lake-id=\"u0aaeb024\" id=\"u0aaeb024\"><code data-lake-id=\"uf7de3651\" id=\"uf7de3651\"><span data-lake-id=\"ud5a73098\" id=\"ud5a73098\">webpack v5</span></code><span data-lake-id=\"u4897f803\" id=\"u4897f803\"> 中，会从 </span><code data-lake-id=\"uc9cf65f7\" id=\"uc9cf65f7\"><span data-lake-id=\"ud1336317\" id=\"ud1336317\">package.json name</span></code><span data-lake-id=\"u89a31842\" id=\"u89a31842\"> 中自动推断出一个唯一的构建名称，并将其作为 </span><code data-lake-id=\"u0f1bfa79\" id=\"u0f1bfa79\"><span data-lake-id=\"ufd478d73\" id=\"ufd478d73\">output.uniqueName</span></code><span data-lake-id=\"u47bc18aa\" id=\"u47bc18aa\"> 的默认值，可将 </span><code data-lake-id=\"ufc264aa2\" id=\"ufc264aa2\"><span data-lake-id=\"u95f39d66\" id=\"u95f39d66\">output.jsonpFunction</span></code><span data-lake-id=\"ufd4e9880\" id=\"ufd4e9880\"> 删除。</span></p><h4 data-lake-id=\"Cl9b2\" id=\"Cl9b2\"><span data-lake-id=\"uf1a9baa1\" id=\"uf1a9baa1\">TypeScript 类型</span></h4><p data-lake-id=\"u06e923f2\" id=\"u06e923f2\"><code data-lake-id=\"u09cd34b3\" id=\"u09cd34b3\"><span data-lake-id=\"u7b78f14c\" id=\"u7b78f14c\">webpack v5</span></code><span data-lake-id=\"ua9bed0b2\" id=\"ua9bed0b2\"> 可以从源码中生成 </span><code data-lake-id=\"u9b539a34\" id=\"u9b539a34\"><span data-lake-id=\"ue8f924e1\" id=\"ue8f924e1\">typescript</span></code><span data-lake-id=\"uf644d084\" id=\"uf644d084\"> 类型，并通过 </span><code data-lake-id=\"u611ae6cd\" id=\"u611ae6cd\"><span data-lake-id=\"u79cdeb54\" id=\"u79cdeb54\">npm</span></code><span data-lake-id=\"u9e0343b8\" id=\"u9e0343b8\"> 包暴露它们</span></p><h2 data-lake-id=\"vOwNF\" id=\"vOwNF\"><span data-lake-id=\"u12ebbc87\" id=\"u12ebbc87\">​</span><br></h2>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:33:34.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:33:34.000Z",
  "updated_at": "2022-05-10T15:12:36.000Z",
  "published_at": "2022-04-04T11:33:34.000Z",
  "first_published_at": "2022-04-04T11:33:33.942Z",
  "word_count": 2844,
  "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1648046099220-3f4e6738-7bab-465b-af99-22d0f2dfd0e3.png",
  "description": "内置静态资源构建能力 Asset Modules在 webpack v5 之前，通常使用：raw-loader 将文件导入为字符串url-loader 将文件作为 data URI 内联到 bundle 中file-loader 将文件发送到输出目录资源模块类型 asset module ty...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}