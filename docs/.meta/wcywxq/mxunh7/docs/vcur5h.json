{
  "id": 72212029,
  "slug": "vcur5h",
  "title": "vue3 优化的关键点",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"rftep\"></a>\n## 响应式核心 api 替换\n\n将响应式核心的 api 从 Object.defineProperty 更换为 Proxy，重构了 Vue 的响应式系统；解决了 Vue2 中存在的响应式问题。\n<a name=\"czlmC\"></a>\n### Object.defineProperty 的问题\n\n- 无法监听数组的变化\n\n在 vue2 中，通过重写数组原型链上的 push、pop、shift、unshift、splice、sort、reverse 7个方法来解决这个问题\n\n- 无法监听嵌套对象属性的变化\n\n针对嵌套对象，使用 Vue.set 来解决这一问题\n<a name=\"P9Jnu\"></a>\n### proxy 的优势\n\n- 拦截对象\n\n针对整个对象，而不是对象的某个属性，因此不需要对 keys 进行遍历(即：不需要深层遍历嵌套对象)\n\n- 拦截数组\n\nproxy 不需要对数组方法进行重载，从而减少了维护成本\n\n- 拦截器 api 更丰富\n\nproxy 第 2 个参数支持 13 种拦截方法，比 Object.defineProperty 更丰富\n\n- 对于 Map、Set、WeakMap、WeakSet 的支持\n<a name=\"iTe9L\"></a>\n## 全局 api 的修改\nvue2 中是导出全局的 vue 对象，在单元测试中，很容易污染全局环境以及带来冲突；<br />vue3 中通过 createApp 创建 app 实例，一切操作修改直接转变为操作 vue 实例子\n<a name=\"fgIly\"></a>\n## 更好的 tree-shaking，使代码按需编译，代码体积缩小\n:::info\ntree-shaking 其实就是把无用的模块进行 \"剪枝\"，很多没有用的 api 就不需要打包到最后的包中\n:::\nvue3 代码结构调整，把 vue 本身当作一个对象去操作，这样的结果是：使得一些可能不会用到的功能就会被 tree-shaking 掉，从而使代码体积变的更小\n<a name=\"FKYza\"></a>\n## 模版的变化\n\n- 作用域插槽，2.x 的机制导致作用域插槽变了，父组件会重新渲染，而 3.0 把作用域插槽改成了函数的方式，这样只会影响子组件的重新渲染，提升了渲染的性能。\n- 同时，对于 render 函数的方面，vue3.0 也会进行一系列更改来方便习惯直接使用 api 来生成 vdom\n<a name=\"a9BYt\"></a>\n## 支持了 composition api\ncomposition api 专门用于解决功能、数据和业务逻辑分散的问题，使项目更益于模块化开发以及后期维护\n\n它的核心是 setup 函数，这样做的好处是：当应用变得复杂一点时，可以将功能对应的数据和业务逻辑抽离出来，方便更好的逻辑复用和代码组织\n<a name=\"APIsv\"></a>\n## 更全面的 typescript 类型支持\n<a name=\"qeqn1\"></a>\n## 组件渲染优化\nvue2 父组件渲染时，子组件也会渲染；<br />vue3 支持单独渲染父组件、子组件\n<a name=\"Az2wB\"></a>\n## 更加先进的组件实现 (fragment、telport、suspense)\nfragment：虚拟容器，使 template 支持多个根节点<br />telport：传送门，使 vue 创建的组件可以在挂载到全局根节点外<br />suspense：等待异步组件时渲染一些额外内容，配合 defineAsyncComponent 使用\n<a name=\"H2YdG\"></a>\n## 优化虚拟 DOM\n\n- 模版编译时优化，在创建虚拟 dom 时增加了静态标记，从而提升效率\n- slot 优化，将 slot 编译为 lazy 函数，将 slot 渲染的决定权交给子组件\n- 模版中内联事件的提取并重用(原本每次渲染都重新生成内联函数)\n<a name=\"bY40V\"></a>\n### diff 算法的优化\n<a name=\"yUedh\"></a>\n#### 案例\n以下图为例，vue2 中的虚拟 dom 通过模版创建虚拟节点(js 对象)，然后使用虚拟节点和上一次缓存的虚拟节点进行全量对比<br />在 vue3 中做了改进，可以看到图中左侧动态绑定的 msg 和 span 有一处注释，官方叫它 patch flag，在与上次虚拟节点进行对比的时候 ，只要对比带有 patch flag 的节点，并且可以通过 flag 的信息得知当前节点要对比的具体内容，以图中为例，要对比的就是 text 和 props 中的 id<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1647147332285-b516a919-a81e-4165-984b-c38bebd423a9.png#clientId=u90745465-1311-4&from=paste&height=531&id=uec671ee9&originHeight=531&originWidth=1280&originalType=binary&ratio=1&size=390722&status=done&style=none&taskId=u0e676074-ef16-4c14-81d3-80b8ebdf81c&width=1280)\n<a name=\"bv32C\"></a>\n### 静态提升 hoistStatic (静态树、静态属性提升)\n\n- vue2 中，在更新时，元素即使没有变化，也会重新创建进行渲染\n- vue3 中，不参与更新的元素，会静态提升，只创建一次，下次渲染将直接复用\n<a name=\"ohY0R\"></a>\n#### 案例\n把静态的节点进行提升，以下图为例，可以看到所有的静态 span 都被拿到了渲染函数体外面，也就是说应用在第一次的启动被创建了一次后，之后这些虚拟节点会在每次渲染的时候被不停的复用，这样就免去了重复的创建节点，大型应用会受益于这个改动，免去了重复的创建操作，优化了运行时的内存占用<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1647147497835-f2dbf997-dfaf-4ae7-8bcd-4418a3a12685.png#clientId=u90745465-1311-4&from=paste&height=574&id=u5e5eb106&originHeight=574&originWidth=1280&originalType=binary&ratio=1&size=405945&status=done&style=none&taskId=ub3f81a87-cb97-4167-8b11-bb59d92ebed&width=1280)\n<a name=\"bEnfr\"></a>\n### 事件侦听器缓存 cacheHandles\n\n下图是不使用 cacheHandlers，onClick 需要看成是一个动态的绑定，因为绑定的函数可能会被改变，例如：fn 原本是 data 中返回的，之后如果把它替换掉了，这在实际运行过程中是需要进行一次更新的<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1647147660922-02aa0dfb-32f4-47b4-9d79-3b56b177c679.png#clientId=u90745465-1311-4&from=paste&height=418&id=u61f22aa1&originHeight=418&originWidth=1012&originalType=binary&ratio=1&size=116915&status=done&style=none&taskId=u582e311a-39dc-48eb-a714-b36271fa5a3&width=1012)<br />下图是使用 cacheHandlers，在第一次渲染时会生成一个内联的函数，在内联函数里引用当前的 fn，然后把内联函数 cache 起来，后续的更新会从缓存中读取同一个函数，因为是同一个函数，因此没有必要追踪变化，这样就神奇的把 span 变成了静态的。手写的内联函数也会被 cache 起来，这样就会避免一些没有必要的更新\n\n当我们在组件上使用内联函数，会受益于这个改动<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/732231/1647147841764-4e445d61-0d9a-478a-9131-0c597ee0566b.png#clientId=u90745465-1311-4&from=paste&height=418&id=u31ea0aca&originHeight=418&originWidth=1012&originalType=binary&ratio=1&size=301985&status=done&style=none&taskId=u8d28ef77-3007-4bd6-8971-b586ebcac76&width=1012)\n<a name=\"UylpV\"></a>\n## 对外暴露了一些自定义渲染的 api\n<a name=\"IeGew\"></a>\n## 支持 fragement(多个根节点)\n",
  "body_draft": "",
  "body_html": "<!doctype html><h2 id=\"rftep\"><span>响应式核心 api 替换</span></h2><p data-lake-id=\"u27a73811\"><span>​</span><br /></p><p data-lake-id=\"ufbe4d3d7\"><span>将响应式核心的 api 从 Object.defineProperty 更换为 Proxy，重构了 Vue 的响应式系统；解决了 Vue2 中存在的响应式问题。</span></p><h3 id=\"czlmC\"><span>Object.defineProperty 的问题</span></h3><ul><li><span>无法监听数组的变化</span></li></ul><p data-lake-id=\"ub9d4434e\"><span>在 vue2 中，通过重写数组原型链上的 </span><span class=\"lake-fontsize-12\" style=\"color: #212529;\">push、pop、shift、unshift、splice、sort、reverse 7个方法来解决这个问题</span></p><ul><li><span>无法监听嵌套对象属性的变化</span></li></ul><p data-lake-id=\"u27ff6f54\"><span>针对嵌套对象，使用 Vue.set 来解决这一问题</span></p><h3 id=\"P9Jnu\"><span>proxy 的优势</span></h3><p data-lake-id=\"u75344af6\"><br /></p><ul><li><span>拦截对象</span></li></ul><p data-lake-id=\"uec7e4fa4\"><span>针对整个对象，而不是对象的某个属性，因此不需要对 keys 进行遍历(即：不需要深层遍历嵌套对象)</span></p><ul><li><span>拦截数组</span></li></ul><p data-lake-id=\"u8ffd79b1\"><span>proxy 不需要对数组方法进行重载，从而减少了维护成本</span></p><ul><li><span>拦截器 api 更丰富</span></li></ul><p data-lake-id=\"u0c2758c1\"><span>proxy 第 2 个参数支持 13 种拦截方法，比 Object.defineProperty 更丰富</span></p><ul><li><span>对于 Map、Set、WeakMap、WeakSet 的支持</span></li></ul><h2 id=\"iTe9L\"><span>全局 api 的修改</span></h2><p data-lake-id=\"uc72ac4f0\"><span>vue2 中是导出全局的 vue 对象，在单元测试中，很容易污染全局环境以及带来冲突；</span></p><p data-lake-id=\"u25228a70\"><span>vue3 中通过 createApp 创建 app 实例，一切操作修改直接转变为操作 vue 实例子</span></p><h2 id=\"fgIly\"><span>更好的 tree-shaking，使代码按需编译，代码体积缩小</span></h2><blockquote class=\"lake-alert lake-alert-info\"><p data-lake-id=\"u77fdc426\"><span>tree-shaking 其实就是把无用的模块进行 &quot;剪枝&quot;，很多没有用的 api 就不需要打包到最后的包中</span></p></blockquote><p data-lake-id=\"ub0f4881d\"><span>vue3 代码结构调整，把 vue 本身当作一个对象去操作，这样的结果是：使得一些可能不会用到的功能就会被 tree-shaking 掉，从而使代码体积变的更小</span></p><h2 id=\"FKYza\"><span>模版的变化</span></h2><ul><li><span>作用域插槽，2.x 的机制导致作用域插槽变了，父组件会重新渲染，而 3.0 把作用域插槽改成了函数的方式，这样只会影响子组件的重新渲染，提升了渲染的性能。</span></li><li><span>同时，对于 render 函数的方面，vue3.0 也会进行一系列更改来方便习惯直接使用 api 来生成 vdom</span></li></ul><h2 id=\"a9BYt\"><span>支持了 composition api</span></h2><p data-lake-id=\"ud4a30547\"><span>composition api 专门用于解决功能、数据和业务逻辑分散的问题，使项目更益于模块化开发以及后期维护</span></p><p data-lake-id=\"u5fed3f92\"><span>​</span><br /></p><p data-lake-id=\"u257364fd\"><span>它的核心是 setup 函数，这样做的好处是：当应用变得复杂一点时，可以将功能对应的数据和业务逻辑抽离出来，方便更好的逻辑复用和代码组织</span></p><h2 id=\"APIsv\"><span>更全面的 typescript 类型支持</span></h2><h2 id=\"qeqn1\"><span>组件渲染优化</span></h2><p data-lake-id=\"u8817b2cd\"><span>vue2 父组件渲染时，子组件也会渲染；</span></p><p data-lake-id=\"u30a5299c\"><span>vue3 支持单独渲染父组件、子组件</span></p><h2 id=\"Az2wB\"><span>更加先进的组件实现 (fragment、telport、suspense)</span></h2><p data-lake-id=\"u6ef8e6ee\"><span>fragment：虚拟容器，使 template 支持多个根节点</span></p><p data-lake-id=\"ub1ed78e0\"><span>telport：传送门，使 vue 创建的组件可以在挂载到全局根节点外</span></p><p data-lake-id=\"ubfa50750\"><span>suspense：等待异步组件时渲染一些额外内容，配合 defineAsyncComponent 使用</span></p><h2 id=\"H2YdG\"><span>优化虚拟 DOM</span></h2><ul><li><span>模版编译时优化，在创建虚拟 dom 时增加了静态标记，从而提升效率</span></li><li><span>slot 优化，将 slot 编译为 lazy 函数，将 slot 渲染的决定权交给子组件</span></li><li><span>模版中内联事件的提取并重用(原本每次渲染都重新生成内联函数)</span></li></ul><h3 id=\"bY40V\"><span>diff 算法的优化</span></h3><h4 id=\"yUedh\"><span>案例</span></h4><p data-lake-id=\"uc1d3eca9\"><span>以下图为例，vue2 中的虚拟 dom 通过模版创建虚拟节点(js 对象)，然后使用虚拟节点和上一次缓存的虚拟节点进行全量对比</span></p><p data-lake-id=\"ua3ec7237\"><span>在 vue3 中做了改进，可以看到图中左侧动态绑定的 msg 和 span 有一处注释，官方叫它 patch flag，在与上次虚拟节点进行对比的时候 ，只要对比带有 patch flag 的节点，并且可以通过 flag 的信息得知当前节点要对比的具体内容，以图中为例，要对比的就是 text 和 props 中的 id</span></p><p data-lake-id=\"uca7f5177\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1647147332285-b516a919-a81e-4165-984b-c38bebd423a9.png#clientId=u90745465-1311-4&amp;from=paste&amp;height=531&amp;id=uec671ee9&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=531&amp;originWidth=1280&amp;originalType=binary&amp;ratio=1&amp;size=390722&amp;status=done&amp;style=none&amp;taskId=u0e676074-ef16-4c14-81d3-80b8ebdf81c&amp;width=1280\" style=\"max-width: 600px; width: 1280px;\" /></p><h3 id=\"bv32C\"><span>静态提升 hoistStatic (静态树、静态属性提升)</span></h3><ul><li><span>vue2 中，在更新时，元素即使没有变化，也会重新创建进行渲染</span></li><li><span>vue3 中，不参与更新的元素，会静态提升，只创建一次，下次渲染将直接复用</span></li></ul><h4 id=\"ohY0R\"><span>案例</span></h4><p data-lake-id=\"ufe88d1ce\"><span>把静态的节点进行提升，以下图为例，可以看到所有的静态 span 都被拿到了渲染函数体外面，也就是说应用在第一次的启动被创建了一次后，之后这些虚拟节点会在每次渲染的时候被不停的复用，这样就免去了重复的创建节点，大型应用会受益于这个改动，免去了重复的创建操作，优化了运行时的内存占用</span></p><p data-lake-id=\"u367eaaa0\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1647147497835-f2dbf997-dfaf-4ae7-8bcd-4418a3a12685.png#clientId=u90745465-1311-4&amp;from=paste&amp;height=574&amp;id=u5e5eb106&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=574&amp;originWidth=1280&amp;originalType=binary&amp;ratio=1&amp;size=405945&amp;status=done&amp;style=none&amp;taskId=ub3f81a87-cb97-4167-8b11-bb59d92ebed&amp;width=1280\" style=\"max-width: 600px; width: 1280px;\" /></p><h3 id=\"bEnfr\"><span>事件侦听器缓存 cacheHandles</span></h3><p data-lake-id=\"u01bc4c52\"><br /></p><p data-lake-id=\"u37812083\"><span>下图是不使用 cacheHandlers，onClick 需要看成是一个动态的绑定，因为绑定的函数可能会被改变，例如：fn 原本是 data 中返回的，之后如果把它替换掉了，这在实际运行过程中是需要进行一次更新的</span></p><p data-lake-id=\"u37ada6ac\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1647147660922-02aa0dfb-32f4-47b4-9d79-3b56b177c679.png#clientId=u90745465-1311-4&amp;from=paste&amp;height=418&amp;id=u61f22aa1&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=418&amp;originWidth=1012&amp;originalType=binary&amp;ratio=1&amp;size=116915&amp;status=done&amp;style=none&amp;taskId=u582e311a-39dc-48eb-a714-b36271fa5a3&amp;width=1012\" style=\"max-width: 600px; width: 1012px;\" /></p><p data-lake-id=\"u3c579213\"><span>下图是使用 cacheHandlers，在第一次渲染时会生成一个内联的函数，在内联函数里引用当前的 fn，然后把内联函数 cache 起来，后续的更新会从缓存中读取同一个函数，因为是同一个函数，因此没有必要追踪变化，这样就神奇的把 span 变成了静态的。手写的内联函数也会被 cache 起来，这样就会避免一些没有必要的更新</span></p><p data-lake-id=\"ue7465e6e\"><span>​</span><br /></p><p data-lake-id=\"u589b2c2d\"><span>当我们在组件上使用内联函数，会受益于这个改动</span></p><p data-lake-id=\"ua9805106\"><img alt=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2022/png/732231/1647147841764-4e445d61-0d9a-478a-9131-0c597ee0566b.png#clientId=u90745465-1311-4&amp;from=paste&amp;height=418&amp;id=u31ea0aca&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=418&amp;originWidth=1012&amp;originalType=binary&amp;ratio=1&amp;size=301985&amp;status=done&amp;style=none&amp;taskId=u8d28ef77-3007-4bd6-8971-b586ebcac76&amp;width=1012\" style=\"max-width: 600px; width: 1012px;\" /></p><h2 id=\"UylpV\"><span>对外暴露了一些自定义渲染的 api</span></h2><h2 id=\"IeGew\"><span>支持 fragement(多个根节点)</span></h2>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"rftep\" id=\"rftep\"><span data-lake-id=\"u3b202ebf\" id=\"u3b202ebf\">响应式核心 api 替换</span></h2><p data-lake-id=\"u27a73811\" id=\"u27a73811\"><span data-lake-id=\"ue14cb6d1\" id=\"ue14cb6d1\">​</span><br></p><p data-lake-id=\"ufbe4d3d7\" id=\"ufbe4d3d7\"><span data-lake-id=\"ufa20fa2d\" id=\"ufa20fa2d\">将响应式核心的 api 从 Object.defineProperty 更换为 Proxy，重构了 Vue 的响应式系统；解决了 Vue2 中存在的响应式问题。</span></p><h3 data-lake-id=\"czlmC\" id=\"czlmC\"><span data-lake-id=\"u673d2df7\" id=\"u673d2df7\">Object.defineProperty 的问题</span></h3><ul list=\"u59d32e90\"><li fid=\"uae5e27c8\" data-lake-id=\"u6b6afdd1\" id=\"u6b6afdd1\"><span data-lake-id=\"ue45fc40b\" id=\"ue45fc40b\">无法监听数组的变化</span></li></ul><p data-lake-id=\"ub9d4434e\" id=\"ub9d4434e\"><span data-lake-id=\"u3c480ccb\" id=\"u3c480ccb\">在 vue2 中，通过重写数组原型链上的 </span><span data-lake-id=\"u98d2b828\" id=\"u98d2b828\" class=\"lake-fontsize-12\" style=\"color: rgb(33, 37, 41)\">push、pop、shift、unshift、splice、sort、reverse 7个方法来解决这个问题</span></p><ul list=\"ubde3f4f4\"><li fid=\"u945ee3e8\" data-lake-id=\"u984d04b8\" id=\"u984d04b8\"><span data-lake-id=\"uda0e5440\" id=\"uda0e5440\">无法监听嵌套对象属性的变化</span></li></ul><p data-lake-id=\"u27ff6f54\" id=\"u27ff6f54\"><span data-lake-id=\"u00bc39ed\" id=\"u00bc39ed\">针对嵌套对象，使用 Vue.set 来解决这一问题</span></p><h3 data-lake-id=\"P9Jnu\" id=\"P9Jnu\"><span data-lake-id=\"u6d7da13e\" id=\"u6d7da13e\">proxy 的优势</span></h3><p data-lake-id=\"u75344af6\" id=\"u75344af6\"><br></p><ul list=\"u3e640009\"><li fid=\"u285004f0\" data-lake-id=\"u4d1c9987\" id=\"u4d1c9987\"><span data-lake-id=\"ub89de7a8\" id=\"ub89de7a8\">拦截对象</span></li></ul><p data-lake-id=\"uec7e4fa4\" id=\"uec7e4fa4\"><span data-lake-id=\"u1ec7d44e\" id=\"u1ec7d44e\">针对整个对象，而不是对象的某个属性，因此不需要对 keys 进行遍历(即：不需要深层遍历嵌套对象)</span></p><ul list=\"u3e640009\" start=\"2\"><li fid=\"u285004f0\" data-lake-id=\"u669f78fb\" id=\"u669f78fb\"><span data-lake-id=\"u7e2ba9ab\" id=\"u7e2ba9ab\">拦截数组</span></li></ul><p data-lake-id=\"u8ffd79b1\" id=\"u8ffd79b1\"><span data-lake-id=\"u810cc35c\" id=\"u810cc35c\">proxy 不需要对数组方法进行重载，从而减少了维护成本</span></p><ul list=\"u3e640009\" start=\"3\"><li fid=\"u285004f0\" data-lake-id=\"ud372ae65\" id=\"ud372ae65\"><span data-lake-id=\"ue1dc70cb\" id=\"ue1dc70cb\">拦截器 api 更丰富</span></li></ul><p data-lake-id=\"u0c2758c1\" id=\"u0c2758c1\"><span data-lake-id=\"u24d0e51a\" id=\"u24d0e51a\">proxy 第 2 个参数支持 13 种拦截方法，比 Object.defineProperty 更丰富</span></p><ul list=\"uc3e00964\"><li fid=\"u8a769c9f\" data-lake-id=\"u55ede718\" id=\"u55ede718\"><span data-lake-id=\"u77780298\" id=\"u77780298\">对于 Map、Set、WeakMap、WeakSet 的支持</span></li></ul><h2 data-lake-id=\"iTe9L\" id=\"iTe9L\"><span data-lake-id=\"ucdf56cd0\" id=\"ucdf56cd0\">全局 api 的修改</span></h2><p data-lake-id=\"uc72ac4f0\" id=\"uc72ac4f0\"><span data-lake-id=\"uacffb555\" id=\"uacffb555\">vue2 中是导出全局的 vue 对象，在单元测试中，很容易污染全局环境以及带来冲突；</span></p><p data-lake-id=\"u25228a70\" id=\"u25228a70\"><span data-lake-id=\"u1bcf438a\" id=\"u1bcf438a\">vue3 中通过 createApp 创建 app 实例，一切操作修改直接转变为操作 vue 实例子</span></p><h2 data-lake-id=\"fgIly\" id=\"fgIly\"><span data-lake-id=\"u20702bb8\" id=\"u20702bb8\">更好的 tree-shaking，使代码按需编译，代码体积缩小</span></h2><blockquote data-lake-id=\"u7cc7708d\" id=\"u7cc7708d\" class=\"lake-alert lake-alert-info\"><p data-lake-id=\"u77fdc426\" id=\"u77fdc426\"><span data-lake-id=\"u802e3677\" id=\"u802e3677\">tree-shaking 其实就是把无用的模块进行 &quot;剪枝&quot;，很多没有用的 api 就不需要打包到最后的包中</span></p></blockquote><p data-lake-id=\"ub0f4881d\" id=\"ub0f4881d\"><span data-lake-id=\"u3901ab3b\" id=\"u3901ab3b\">vue3 代码结构调整，把 vue 本身当作一个对象去操作，这样的结果是：使得一些可能不会用到的功能就会被 tree-shaking 掉，从而使代码体积变的更小</span></p><h2 data-lake-id=\"FKYza\" id=\"FKYza\"><span data-lake-id=\"ub4b42b8a\" id=\"ub4b42b8a\">模版的变化</span></h2><ul list=\"u6e989e10\"><li fid=\"u2d0b2d86\" data-lake-id=\"u60a4a9bf\" id=\"u60a4a9bf\"><span data-lake-id=\"u58ab7b7a\" id=\"u58ab7b7a\">作用域插槽，2.x 的机制导致作用域插槽变了，父组件会重新渲染，而 3.0 把作用域插槽改成了函数的方式，这样只会影响子组件的重新渲染，提升了渲染的性能。</span></li><li fid=\"u2d0b2d86\" data-lake-id=\"u77be34fc\" id=\"u77be34fc\"><span data-lake-id=\"u8a35f212\" id=\"u8a35f212\">同时，对于 render 函数的方面，vue3.0 也会进行一系列更改来方便习惯直接使用 api 来生成 vdom</span></li></ul><h2 data-lake-id=\"a9BYt\" id=\"a9BYt\"><span data-lake-id=\"u9c3e34d1\" id=\"u9c3e34d1\">支持了 composition api</span></h2><p data-lake-id=\"ud4a30547\" id=\"ud4a30547\"><span data-lake-id=\"ue2000840\" id=\"ue2000840\">composition api 专门用于解决功能、数据和业务逻辑分散的问题，使项目更益于模块化开发以及后期维护</span></p><p data-lake-id=\"u5fed3f92\" id=\"u5fed3f92\"><span data-lake-id=\"u1f3ca0f8\" id=\"u1f3ca0f8\">​</span><br></p><p data-lake-id=\"u257364fd\" id=\"u257364fd\"><span data-lake-id=\"u72d271e2\" id=\"u72d271e2\">它的核心是 setup 函数，这样做的好处是：当应用变得复杂一点时，可以将功能对应的数据和业务逻辑抽离出来，方便更好的逻辑复用和代码组织</span></p><h2 data-lake-id=\"APIsv\" id=\"APIsv\"><span data-lake-id=\"ud0fd5872\" id=\"ud0fd5872\">更全面的 typescript 类型支持</span></h2><h2 data-lake-id=\"qeqn1\" id=\"qeqn1\"><span data-lake-id=\"u13cba423\" id=\"u13cba423\">组件渲染优化</span></h2><p data-lake-id=\"u8817b2cd\" id=\"u8817b2cd\"><span data-lake-id=\"uc6fae8ee\" id=\"uc6fae8ee\">vue2 父组件渲染时，子组件也会渲染；</span></p><p data-lake-id=\"u30a5299c\" id=\"u30a5299c\"><span data-lake-id=\"u2ee88c1b\" id=\"u2ee88c1b\">vue3 支持单独渲染父组件、子组件</span></p><h2 data-lake-id=\"Az2wB\" id=\"Az2wB\"><span data-lake-id=\"u3c352a73\" id=\"u3c352a73\">更加先进的组件实现 (fragment、telport、suspense)</span></h2><p data-lake-id=\"u6ef8e6ee\" id=\"u6ef8e6ee\"><span data-lake-id=\"u82ad6978\" id=\"u82ad6978\">fragment：虚拟容器，使 template 支持多个根节点</span></p><p data-lake-id=\"ub1ed78e0\" id=\"ub1ed78e0\"><span data-lake-id=\"ua017f5e7\" id=\"ua017f5e7\">telport：传送门，使 vue 创建的组件可以在挂载到全局根节点外</span></p><p data-lake-id=\"ubfa50750\" id=\"ubfa50750\"><span data-lake-id=\"u5b0d5008\" id=\"u5b0d5008\">suspense：等待异步组件时渲染一些额外内容，配合 defineAsyncComponent 使用</span></p><h2 data-lake-id=\"H2YdG\" id=\"H2YdG\"><span data-lake-id=\"u155df88f\" id=\"u155df88f\">优化虚拟 DOM</span></h2><ul list=\"u1c75f84c\"><li fid=\"u2e627e62\" data-lake-id=\"u1b022bc6\" id=\"u1b022bc6\"><span data-lake-id=\"uef11af04\" id=\"uef11af04\">模版编译时优化，在创建虚拟 dom 时增加了静态标记，从而提升效率</span></li><li fid=\"u2e627e62\" data-lake-id=\"u3024f612\" id=\"u3024f612\"><span data-lake-id=\"u6161d102\" id=\"u6161d102\">slot 优化，将 slot 编译为 lazy 函数，将 slot 渲染的决定权交给子组件</span></li><li fid=\"u2e627e62\" data-lake-id=\"u0b72253b\" id=\"u0b72253b\"><span data-lake-id=\"u0f7ca208\" id=\"u0f7ca208\">模版中内联事件的提取并重用(原本每次渲染都重新生成内联函数)</span></li></ul><h3 data-lake-id=\"bY40V\" id=\"bY40V\"><span data-lake-id=\"u4f971d9d\" id=\"u4f971d9d\">diff 算法的优化</span></h3><h4 data-lake-id=\"yUedh\" id=\"yUedh\"><span data-lake-id=\"ub604e238\" id=\"ub604e238\">案例</span></h4><p data-lake-id=\"uc1d3eca9\" id=\"uc1d3eca9\"><span data-lake-id=\"u42c7663b\" id=\"u42c7663b\">以下图为例，vue2 中的虚拟 dom 通过模版创建虚拟节点(js 对象)，然后使用虚拟节点和上一次缓存的虚拟节点进行全量对比</span></p><p data-lake-id=\"ua3ec7237\" id=\"ua3ec7237\"><span data-lake-id=\"ub924daa2\" id=\"ub924daa2\">在 vue3 中做了改进，可以看到图中左侧动态绑定的 msg 和 span 有一处注释，官方叫它 patch flag，在与上次虚拟节点进行对比的时候 ，只要对比带有 patch flag 的节点，并且可以通过 flag 的信息得知当前节点要对比的具体内容，以图中为例，要对比的就是 text 和 props 中的 id</span></p><p data-lake-id=\"uca7f5177\" id=\"uca7f5177\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1647147332285-b516a919-a81e-4165-984b-c38bebd423a9.png%22%2C%22taskId%22%3A%22u0e676074-ef16-4c14-81d3-80b8ebdf81c%22%2C%22clientId%22%3A%22u90745465-1311-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1280%2C%22height%22%3A531%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A390722%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1280%2C%22originHeight%22%3A531%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22VUE%203%20TEMPLATE%20EXPLORER%40%20%40D63DAAF%20HISTORY.%20OPTIONS%20IMPORT%20(%20CREATEWNODE%20AS%20-CREATEWNODE%2C%20TODISPLAYSTRING%20AS%20-TODISPLAYSTRING%2C%20OF%20%3CDIV%3E%2012345678%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%20EXPORT%20FUNCTION%20RENDER(_CTX%2C_CACHE)%20%7B%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%204%20RETURN%20(_OPENBLOCK()%2C%20_CREATEBLOCK(%5C%22DIV%5C%22%2C%20NULL%2C%20%5B%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%205%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%20_CREATEVNODE(%5C%22SPAN%5C%22%2CNUTL%2C%5C%22PENGXIANG%5C%22%5C%22)%2C%206%20_CREATEVNODE(%5C%22SPAN%5C%22%2CNUTL%2C%5C%22PENGXIANG%5C%22)%2C%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%207%20_CREATEVNODE(%5C%22SPAN'%2CNULL%2C%5C%22PENGXIANG%5C%22)%2C%20DIV%3E%208%20N%20%3AID-%5C%22HELLO%5C%22%20CLASS-%5C%22FOO%5C%22S(%7B%20MSG%20%7D%7D%3C%2FSPAN%3E%208%20_CREATEVNODE(%5C%22SPAN%5C%22%2CNULL%2C%5C%22PENGXIANG%5C%22)%2C%20SPAN%206%209%20_CREATEVNODE(%5C%22SPAN%5C%22%2CNULL%2C%5C%22PENGXIANG%5C%22)%2C%20%3C%2FDIV%3E%2010%20_CREATEVNODE(%5C%22DIV%5C%22%2C%20NULL%2C%5B%2010%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%20172%2011%20%3CSPAN%3EPENGXIANG%3CSPAN%3E%20_CREATEVNODE(%5C%22SPAN%5C%22%2C%7B%2012%20ID%3A%20CTX.HELLO%2C%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%2013%2013%20CLASS%3A%20'FOO%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%20%5D%2C%20_TODISPLAYSTRING(_CTX.MSG)%2C%209%20%2F*%20TEXT%2C%20PROPS%20*%2F%2C%20%5B%5C%22ID%5C%22%5D)%2014%2014%20%3C%2FDIV%3E%2015%20J)%2C%2016%20_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%5C%22PENGXIANG%5C%22)%2C%2017%20_CREATEVNODE(%5C%22SPAN%5C%22%2CNULL%2C%5C%22PENGXIANG%5C%22)%2C%2018%20_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%20%5C%22PENGXIANG%5C%22)%2C%2019%20-CREATEVNODE('SPAN%5C%22%2C%20NULL%2C%5C%22PENGXIANG%5C%22)%2020223%20%5D))%20HTTPS%3A%2F%2FBLOG.CSDN.NET%2FWEIXIN_39364136%20%2F%20CHECK%20THE%20CONSOLE%20FOR%20THE%20AST%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A19.317558%2C%22y%22%3A6.821411%2C%22width%22%3A225.212932%2C%22height%22%3A20.255233999999998%2C%22text%22%3A%22VUE%203%20TEMPLATE%20EXPLORER%40%22%7D%2C%7B%22x%22%3A225.32712%2C%22y%22%3A9.702751%2C%22width%22%3A90.46527999999998%2C%22height%22%3A16.789239000000002%2C%22text%22%3A%22%40D63DAAF%22%7D%2C%7B%22x%22%3A330.27634%2C%22y%22%3A11.332413%2C%22width%22%3A56.318719999999985%2C%22height%22%3A14.98336%2C%22text%22%3A%22HISTORY.%22%7D%2C%7B%22x%22%3A1198.9349%2C%22y%22%3A11.162273%2C%22width%22%3A67.99299999999994%2C%22height%22%3A15.754319%2C%22text%22%3A%22OPTIONS%22%7D%2C%7B%22x%22%3A646.7249%2C%22y%22%3A50.685173%2C%22width%22%3A630.4016%2C%22height%22%3A16.688713%2C%22text%22%3A%22IMPORT%20(%20CREATEWNODE%20AS%20-CREATEWNODE%2C%20TODISPLAYSTRING%20AS%20-TODISPLAYSTRING%2C%20OF%22%7D%2C%7B%22x%22%3A62.11429%2C%22y%22%3A51.32041%2C%22width%22%3A43.598510000000005%2C%22height%22%3A13.72119%2C%22text%22%3A%22%3CDIV%3E%22%7D%2C%7B%22x%22%3A26.7916%2C%22y%22%3A55.069626%2C%22width%22%3A13.526129999999998%2C%22height%22%3A142.653874%2C%22text%22%3A%2212345678%22%7D%2C%7B%22x%22%3A79.49145%2C%22y%22%3A72.1133%2C%22width%22%3A181.89565%2C%22height%22%3A13.858180000000004%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A646.18823%2C%22y%22%3A90.13035%2C%22width%22%3A315.03417%2C%22height%22%3A17.410549999999986%2C%22text%22%3A%22EXPORT%20FUNCTION%20RENDER(_CTX%2C_CACHE)%20%7B%22%7D%2C%7B%22x%22%3A78.76437%2C%22y%22%3A93.01003%2C%22width%22%3A182.5448%2C%22height%22%3A13.454149999999998%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A612.13324%2C%22y%22%3A109.45561%2C%22width%22%3A11.59105999999997%2C%22height%22%3A18.738420000000005%2C%22text%22%3A%224%22%7D%2C%7B%22x%22%3A671.96313%2C%22y%22%3A109.26225%2C%22width%22%3A401.75877%2C%22height%22%3A23.124250000000018%2C%22text%22%3A%22RETURN%20(_OPENBLOCK()%2C%20_CREATEBLOCK(%5C%22DIV%5C%22%2C%20NULL%2C%20%5B%22%7D%2C%7B%22x%22%3A79.29586%2C%22y%22%3A113.54355%2C%22width%22%3A182.49189%2C%22height%22%3A15.457139999999995%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A611.9449%2C%22y%22%3A129.35161%2C%22width%22%3A11.145250000000033%2C%22height%22%3A19.288110000000017%2C%22text%22%3A%225%22%7D%2C%7B%22x%22%3A78.31786%2C%22y%22%3A132.74579%2C%22width%22%3A183.74617%2C%22height%22%3A17.39276000000001%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A684.91315%2C%22y%22%3A133.99965%2C%22width%22%3A325.39195000000007%2C%22height%22%3A18.03228999999999%2C%22text%22%3A%22_CREATEVNODE(%5C%22SPAN%5C%22%2CNUTL%2C%5C%22PENGXIANG%5C%22%5C%22)%2C%22%7D%2C%7B%22x%22%3A611.1779%2C%22y%22%3A150.52647%2C%22width%22%3A12.531759999999963%2C%22height%22%3A18.99003000000002%2C%22text%22%3A%226%22%7D%2C%7B%22x%22%3A683.074%2C%22y%22%3A154.75623%2C%22width%22%3A326.13840000000005%2C%22height%22%3A15.91055%2C%22text%22%3A%22_CREATEVNODE(%5C%22SPAN%5C%22%2CNUTL%2C%5C%22PENGXIANG%5C%22)%2C%22%7D%2C%7B%22x%22%3A81.68725%2C%22y%22%3A155.78374%2C%22width%22%3A178.7201%2C%22height%22%3A13.577330000000018%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A611.573%2C%22y%22%3A170.75467%2C%22width%22%3A11.26150000000007%2C%22height%22%3A17.400389999999987%2C%22text%22%3A%227%22%7D%2C%7B%22x%22%3A681.66266%2C%22y%22%3A173.7631%2C%22width%22%3A327.29014000000006%2C%22height%22%3A18.65289999999999%2C%22text%22%3A%22_CREATEVNODE(%5C%22SPAN'%2CNULL%2C%5C%22PENGXIANG%5C%22)%2C%22%7D%2C%7B%22x%22%3A87.7768%2C%22y%22%3A175.00003%2C%22width%22%3A33.49474000000001%2C%22height%22%3A13.639949999999999%2C%22text%22%3A%22DIV%3E%22%7D%2C%7B%22x%22%3A26.999996%2C%22y%22%3A189.24442%2C%22width%22%3A12.000000000000004%2C%22height%22%3A24.75558000000001%2C%22text%22%3A%228%22%7D%2C%7B%22x%22%3A139.36636%2C%22y%22%3A189.85176%2C%22width%22%3A338.64734%2C%22height%22%3A20.219449999999995%2C%22text%22%3A%22N%20%3AID-%5C%22HELLO%5C%22%20CLASS-%5C%22FOO%5C%22S(%7B%20MSG%20%7D%7D%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A611.5819%2C%22y%22%3A192.51628%2C%22width%22%3A11.988899999999944%2C%22height%22%3A17.88614000000001%2C%22text%22%3A%228%22%7D%2C%7B%22x%22%3A682.7839%2C%22y%22%3A195.28348%2C%22width%22%3A324.02279999999996%2C%22height%22%3A15.831780000000009%2C%22text%22%3A%22_CREATEVNODE(%5C%22SPAN%5C%22%2CNULL%2C%5C%22PENGXIANG%5C%22)%2C%22%7D%2C%7B%22x%22%3A98.434944%2C%22y%22%3A195.30023%2C%22width%22%3A42.543386%2C%22height%22%3A14.136869999999988%2C%22text%22%3A%22SPAN%22%7D%2C%7B%22x%22%3A27.017042%2C%22y%22%3A213.84792%2C%22width%22%3A10.743447999999997%2C%22height%22%3A17.631770000000017%2C%22text%22%3A%226%22%7D%2C%7B%22x%22%3A611.4844%2C%22y%22%3A214.15082%2C%22width%22%3A13.071399999999926%2C%22height%22%3A14.775599999999997%2C%22text%22%3A%229%22%7D%2C%7B%22x%22%3A683.24115%2C%22y%22%3A214.58142%2C%22width%22%3A327.1355000000001%2C%22height%22%3A17.303349999999995%2C%22text%22%3A%22_CREATEVNODE(%5C%22SPAN%5C%22%2CNULL%2C%5C%22PENGXIANG%5C%22)%2C%22%7D%2C%7B%22x%22%3A76.90141%2C%22y%22%3A215.62737%2C%22width%22%3A49.3369%2C%22height%22%3A13.638029999999986%2C%22text%22%3A%22%3C%2FDIV%3E%22%7D%2C%7B%22x%22%3A22.012167%2C%22y%22%3A233.98645%2C%22width%22%3A16.493807%2C%22height%22%3A23.801570000000027%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A686.19354%2C%22y%22%3A233.93454%2C%22width%22%3A224.00061000000005%2C%22height%22%3A19.15485000000001%2C%22text%22%3A%22_CREATEVNODE(%5C%22DIV%5C%22%2C%20NULL%2C%5B%22%7D%2C%7B%22x%22%3A605.0188%2C%22y%22%3A235.13817%2C%22width%22%3A19.66954999999996%2C%22height%22%3A14.106529999999992%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A79.76721%2C%22y%22%3A236.80103%2C%22width%22%3A180.36792%2C%22height%22%3A13.434719999999999%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A20.274426%2C%22y%22%3A251.0838%2C%22width%22%3A18.437278%2C%22height%22%3A42.25146999999998%2C%22text%22%3A%22172%22%7D%2C%7B%22x%22%3A604.9885%2C%22y%22%3A255.68289%2C%22width%22%3A18.856199999999944%2C%22height%22%3A15.228330000000028%2C%22text%22%3A%2211%22%7D%2C%7B%22x%22%3A81.303406%2C%22y%22%3A256.6346%2C%22width%22%3A180.72384399999999%2C%22height%22%3A16.36482000000001%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3CSPAN%3E%22%7D%2C%7B%22x%22%3A703.2499%2C%22y%22%3A254.38422%2C%22width%22%3A176.5389%2C%22height%22%3A23.163080000000008%2C%22text%22%3A%22_CREATEVNODE(%5C%22SPAN%5C%22%2C%7B%22%7D%2C%7B%22x%22%3A604.5548%2C%22y%22%3A276.78772%2C%22width%22%3A18.650300000000016%2C%22height%22%3A15.136960000000045%2C%22text%22%3A%2212%22%7D%2C%7B%22x%22%3A713.143%2C%22y%22%3A278.78445%2C%22width%22%3A122.66199999999992%2C%22height%22%3A12.657050000000027%2C%22text%22%3A%22ID%3A%20CTX.HELLO%2C%22%7D%2C%7B%22x%22%3A79.3653%2C%22y%22%3A279.19202%2C%22width%22%3A182.2677%2C%22height%22%3A13.657879999999977%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A19.839333%2C%22y%22%3A296.47073%2C%22width%22%3A19.656668999999997%2C%22height%22%3A16.618899999999996%2C%22text%22%3A%2213%22%7D%2C%7B%22x%22%3A604.0748%2C%22y%22%3A296.78806%2C%22width%22%3A19.343169999999986%2C%22height%22%3A15.93676000000005%2C%22text%22%3A%2213%22%7D%2C%7B%22x%22%3A713.0688%2C%22y%22%3A298.95264%2C%22width%22%3A98.54319999999996%2C%22height%22%3A13.364260000000002%2C%22text%22%3A%22CLASS%3A%20'FOO%22%7D%2C%7B%22x%22%3A78.7661%2C%22y%22%3A299.8837%2C%22width%22%3A183.10041999999999%2C%22height%22%3A13.78564%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A693.0127%2C%22y%22%3A314.98764%2C%22width%22%3A490.80590000000007%2C%22height%22%3A20.191100000000006%2C%22text%22%3A%22%5D%2C%20_TODISPLAYSTRING(_CTX.MSG)%2C%209%20%2F*%20TEXT%2C%20PROPS%20*%2F%2C%20%5B%5C%22ID%5C%22%5D)%22%7D%2C%7B%22x%22%3A19.793598%2C%22y%22%3A317.9364%2C%22width%22%3A20.093369%2C%22height%22%3A14.084600000000023%2C%22text%22%3A%2214%22%7D%2C%7B%22x%22%3A604.7552%2C%22y%22%3A318.14352%2C%22width%22%3A17.942100000000096%2C%22height%22%3A13.655399999999986%2C%22text%22%3A%2214%22%7D%2C%7B%22x%22%3A64.39322%2C%22y%22%3A319.02908%2C%22width%22%3A45.261596%2C%22height%22%3A13.635499999999979%2C%22text%22%3A%22%3C%2FDIV%3E%22%7D%2C%7B%22x%22%3A603.4588%2C%22y%22%3A338.008%2C%22width%22%3A19.03660000000002%2C%22height%22%3A15.694099999999992%2C%22text%22%3A%2215%22%7D%2C%7B%22x%22%3A679.4966%2C%22y%22%3A338.8418%2C%22width%22%3A28.897440000000074%2C%22height%22%3A15.546199999999999%2C%22text%22%3A%22J)%2C%22%7D%2C%7B%22x%22%3A604.3277%2C%22y%22%3A359.1715%2C%22width%22%3A18.189300000000003%2C%22height%22%3A14.096080000000029%2C%22text%22%3A%2216%22%7D%2C%7B%22x%22%3A679.0367%2C%22y%22%3A359.58496%2C%22width%22%3A331.11390000000006%2C%22height%22%3A17.766969999999958%2C%22text%22%3A%22_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%5C%22PENGXIANG%5C%22)%2C%22%7D%2C%7B%22x%22%3A604.3923%2C%22y%22%3A379.1979%2C%22width%22%3A18.02854000000002%2C%22height%22%3A15.253120000000024%2C%22text%22%3A%2217%22%7D%2C%7B%22x%22%3A683.07025%2C%22y%22%3A380.08997%2C%22width%22%3A327.78381%2C%22height%22%3A18.22583000000003%2C%22text%22%3A%22_CREATEVNODE(%5C%22SPAN%5C%22%2CNULL%2C%5C%22PENGXIANG%5C%22)%2C%22%7D%2C%7B%22x%22%3A605.01447%2C%22y%22%3A399.99304%2C%22width%22%3A17.929190000000062%2C%22height%22%3A14.249329999999986%2C%22text%22%3A%2218%22%7D%2C%7B%22x%22%3A682.0876%2C%22y%22%3A398.4796%2C%22width%22%3A327.1197400000001%2C%22height%22%3A19.40640000000002%2C%22text%22%3A%22_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%20%5C%22PENGXIANG%5C%22)%2C%22%7D%2C%7B%22x%22%3A603.6987%2C%22y%22%3A419.2959%2C%22width%22%3A19.310600000000022%2C%22height%22%3A15.864319999999964%2C%22text%22%3A%2219%22%7D%2C%7B%22x%22%3A684.8175%2C%22y%22%3A419.0418%2C%22width%22%3A320.15405999999996%2C%22height%22%3A20.391179999999963%2C%22text%22%3A%22-CREATEVNODE('SPAN%5C%22%2C%20NULL%2C%5C%22PENGXIANG%5C%22)%22%7D%2C%7B%22x%22%3A602.483%2C%22y%22%3A438.40167%2C%22width%22%3A22.186000000000035%2C%22height%22%3A78.05968999999999%2C%22text%22%3A%2220223%22%7D%2C%7B%22x%22%3A663.5249%2C%22y%22%3A439.07303%2C%22width%22%3A25.539800000000014%2C%22height%22%3A17.80523999999997%2C%22text%22%3A%22%5D))%22%7D%2C%7B%22x%22%3A994.9621%2C%22y%22%3A501.1656%2C%22width%22%3A277.35799999999995%2C%22height%22%3A19.67894000000007%2C%22text%22%3A%22HTTPS%3A%2F%2FBLOG.CSDN.NET%2FWEIXIN_39364136%22%7D%2C%7B%22x%22%3A661.44885%2C%22y%22%3A501.9088%2C%22width%22%3A254.14075000000003%2C%22height%22%3A15.958699999999965%2C%22text%22%3A%22%2F%20CHECK%20THE%20CONSOLE%20FOR%20THE%20AST%22%7D%5D%2C%22id%22%3A%22uec671ee9%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><h3 data-lake-id=\"bv32C\" id=\"bv32C\"><span data-lake-id=\"u8d97c472\" id=\"u8d97c472\">静态提升 hoistStatic (静态树、静态属性提升)</span></h3><ul list=\"uf57bfe40\"><li fid=\"u5818e39a\" data-lake-id=\"u1bd72516\" id=\"u1bd72516\"><span data-lake-id=\"ua9eba9e6\" id=\"ua9eba9e6\">vue2 中，在更新时，元素即使没有变化，也会重新创建进行渲染</span></li><li fid=\"u5818e39a\" data-lake-id=\"udfb9cbe5\" id=\"udfb9cbe5\"><span data-lake-id=\"ubd714177\" id=\"ubd714177\">vue3 中，不参与更新的元素，会静态提升，只创建一次，下次渲染将直接复用</span></li></ul><h4 data-lake-id=\"ohY0R\" id=\"ohY0R\"><span data-lake-id=\"u374be7dd\" id=\"u374be7dd\">案例</span></h4><p data-lake-id=\"ufe88d1ce\" id=\"ufe88d1ce\"><span data-lake-id=\"u00a62230\" id=\"u00a62230\">把静态的节点进行提升，以下图为例，可以看到所有的静态 span 都被拿到了渲染函数体外面，也就是说应用在第一次的启动被创建了一次后，之后这些虚拟节点会在每次渲染的时候被不停的复用，这样就免去了重复的创建节点，大型应用会受益于这个改动，免去了重复的创建操作，优化了运行时的内存占用</span></p><p data-lake-id=\"u367eaaa0\" id=\"u367eaaa0\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1647147497835-f2dbf997-dfaf-4ae7-8bcd-4418a3a12685.png%22%2C%22taskId%22%3A%22ub3f81a87-cb97-4167-8b11-bb59d92ebed%22%2C%22clientId%22%3A%22u90745465-1311-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1280%2C%22height%22%3A574%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A405945%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1280%2C%22originHeight%22%3A574%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22VUE%203%20TEMPLATE%20EXPLORER%20%40D63DAAF%20HISTORY%20OPTIONS%20(%20CREATEWNODE%20AS%20-CREATEVNODE%2C%20TODISPLAYSTRING%20AS%20-TODISPLAYSTRING%2C%2012345%20%3CDIV%3E%20IMPORT%2023456%E4%B8%80%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%20_HOISTED_1%20-%20%2F*%23_PURE_*%2F_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%20%5C%22PENGXIANG%5C%22%2C%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%20CONST%20_HOISTED_2%20-%20%2F*%23%20_PURE_*%2F_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%20%5C%22PENGXIANG%5C%22%2C%20CONST%20IANG%5C%22%2C-1%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%20-HOISTED_3%20-%20%2F*%23_PURE_*%2F_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%20%5C%22PENGXIANG%5C%22%2C%20-1%20%2C-1%20CONST%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%206%20-HOISTED_4%20-%20%2F*%23_PURE_*%2F_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%20%5C%22PENGXIANG%5C%22%2C%20-1%20%2F*%20%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%20CONST%207%20%5C%22%2C-1%2F*%20-HOISTED_5%20%2F*%23%20PURE_*%2F_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%20NULL%2C%5C%22PENGXIANG%5C%22%2C%20%3CDIV%3E%20CONST%208%20CLASS%5C%22FOO%5C%22%3E%7B%7B%20MSG%20%7D%7D%3C%2FSPAN%3E%208%20%3CSPAN%209%20EXPORT%20FUNCTION%20RENDER(_CTX%2C%20_CACHE)%7B%209%20%3C%2FDIV%3E%2010%2010%20RETURN%20(_OPENBLOCK()%2C%20_CREATEBLOCK(%5C%22DIV%5C%22%2C%20NULL%2C%20%5B%2011%20HOISTED.1%2012%20_HOISTED_2%2C%2013%20_HOISTED_3%2C%2014%20_HOISTED_4%2C%20_HOISTED_5%2C%2015%2016%20_CREATEVNODE(%5C%22DIV%5C%22%2CNULL%2C%5B%2017%20_CREATEVNODE('SPAN''%2C%7B%2018%20ID%3A_CTX.HELLO%2C%20JB20.00%20CLASS%3A%5C%22FOO%5C%22%20%5D%2C%20-TODISPLAYSTRING(_CTX.MSG)%2C%209%20%2F*%20TEXT%2C%20PROPS%20*%2F%2C%20%5B%5C%22ID%5C%22%5D)%20%5D)%20%5D)%20HTTPS%3A%2F%2FBLOG.CSDN.NET%2FWEIXIN_39364136%20CHECK%20THE%20CONSOLE%20FOR%20THE%20AST%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A19.093847%2C%22y%22%3A11.5839615%2C%22width%22%3A207.20699299999998%2C%22height%22%3A18.3738405%2C%22text%22%3A%22VUE%203%20TEMPLATE%20EXPLORER%22%7D%2C%7B%22x%22%3A239.78894%2C%22y%22%3A13.584141%2C%22width%22%3A75.76795999999999%2C%22height%22%3A15.838799%2C%22text%22%3A%22%40D63DAAF%22%7D%2C%7B%22x%22%3A326.73734%2C%22y%22%3A14.019239%2C%22width%22%3A58.629939999999976%2C%22height%22%3A16.046189%2C%22text%22%3A%22HISTORY%22%7D%2C%7B%22x%22%3A1199.0717%2C%22y%22%3A15.133289%2C%22width%22%3A60.58590000000004%2C%22height%22%3A15.018921%2C%22text%22%3A%22OPTIONS%22%7D%2C%7B%22x%22%3A713.53564%2C%22y%22%3A53.745728%2C%22width%22%3A544.8437600000001%2C%22height%22%3A18.082012000000006%2C%22text%22%3A%22(%20CREATEWNODE%20AS%20-CREATEVNODE%2C%20TODISPLAYSTRING%20AS%20-TODISPLAYSTRING%2C%22%7D%2C%7B%22x%22%3A609.2149%2C%22y%22%3A54.15567%2C%22width%22%3A13.167850000000044%2C%22height%22%3A99.43588000000001%2C%22text%22%3A%2212345%22%7D%2C%7B%22x%22%3A56.20636%2C%22y%22%3A54.108223%2C%22width%22%3A45.79648000000001%2C%22height%22%3A13.077966999999994%2C%22text%22%3A%22%3CDIV%3E%22%7D%2C%7B%22x%22%3A645.6326%2C%22y%22%3A54.991653%2C%22width%22%3A49.496369999999956%2C%22height%22%3A13.937016999999997%2C%22text%22%3A%22IMPORT%22%7D%2C%7B%22x%22%3A24.092558%2C%22y%22%3A73.063416%2C%22width%22%3A13.391701999999999%2C%22height%22%3A102.477054%2C%22text%22%3A%2223456%E4%B8%80%22%7D%2C%7B%22x%22%3A80.261024%2C%22y%22%3A75.78462%2C%22width%22%3A179.20345599999996%2C%22height%22%3A15.335984999999994%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A697.0553%2C%22y%22%3A88.58262%2C%22width%22%3A531.1611%2C%22height%22%3A26.911999999999992%2C%22text%22%3A%22_HOISTED_1%20-%20%2F*%23_PURE_*%2F_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%20%5C%22PENGXIANG%5C%22%2C%22%7D%2C%7B%22x%22%3A83.66128%2C%22y%22%3A96.575775%2C%22width%22%3A175.86461999999997%2C%22height%22%3A14.851455000000001%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A643.5474%2C%22y%22%3A95.845535%2C%22width%22%3A43.51295999999991%2C%22height%22%3A15.154465000000002%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A697.8989%2C%22y%22%3A115.1236%2C%22width%22%3A538.3395999999999%2C%22height%22%3A16.545910000000006%2C%22text%22%3A%22_HOISTED_2%20-%20%2F*%23%20_PURE_*%2F_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%20%5C%22PENGXIANG%5C%22%2C%22%7D%2C%7B%22x%22%3A643.00037%2C%22y%22%3A115.68004%2C%22width%22%3A44.30138999999997%2C%22height%22%3A14.611569999999986%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A1185.0009%2C%22y%22%3A116.50624%2C%22width%22%3A71.87689999999998%2C%22height%22%3A14.548760000000001%2C%22text%22%3A%22IANG%5C%22%2C-1%22%7D%2C%7B%22x%22%3A78.261246%2C%22y%22%3A117.270004%2C%22width%22%3A181.813034%2C%22height%22%3A13.775966000000011%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A696.6927%2C%22y%22%3A133.4552%2C%22width%22%3A558.4921%2C%22height%22%3A25.43765000000002%2C%22text%22%3A%22-HOISTED_3%20-%20%2F*%23_PURE_*%2F_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%20%5C%22PENGXIANG%5C%22%2C%20-1%22%7D%2C%7B%22x%22%3A1218.9716%2C%22y%22%3A135.12883%2C%22width%22%3A40.7657999999999%2C%22height%22%3A17.934169999999995%2C%22text%22%3A%22%2C-1%22%7D%2C%7B%22x%22%3A644.3207%2C%22y%22%3A136.60844%2C%22width%22%3A42.79110000000003%2C%22height%22%3A13.9469%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A78.71702%2C%22y%22%3A137.18771%2C%22width%22%3A181.72161%2C%22height%22%3A14.895109999999988%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A611%2C%22y%22%3A151%2C%22width%22%3A11%2C%22height%22%3A20%2C%22text%22%3A%226%22%7D%2C%7B%22x%22%3A697.0653%2C%22y%22%3A152.83606%2C%22width%22%3A581.249%2C%22height%22%3A26.868619999999993%2C%22text%22%3A%22-HOISTED_4%20-%20%2F*%23_PURE_*%2F_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%20%5C%22PENGXIANG%5C%22%2C%20-1%20%2F*%22%7D%2C%7B%22x%22%3A78.63871%2C%22y%22%3A156.8427%2C%22width%22%3A181.53643%2C%22height%22%3A14.831699999999984%2C%22text%22%3A%22%3CSPAN%3EPENGXIANG%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A644.02344%2C%22y%22%3A158.06523%2C%22width%22%3A42.88986%2C%22height%22%3A12.591949999999997%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A610.67615%2C%22y%22%3A174.28941%2C%22width%22%3A11.159790000000044%2C%22height%22%3A17.808809999999994%2C%22text%22%3A%227%22%7D%2C%7B%22x%22%3A1216.8867%2C%22y%22%3A174.32382%2C%22width%22%3A62.77369999999996%2C%22height%22%3A20.80709999999999%2C%22text%22%3A%22%5C%22%2C-1%2F*%22%7D%2C%7B%22x%22%3A694.16345%2C%22y%22%3A174.96872%2C%22width%22%3A543.3696500000001%2C%22height%22%3A20.968170000000015%2C%22text%22%3A%22-HOISTED_5%20%2F*%23%20PURE_*%2F_CREATEVNODE(%5C%22SPAN%5C%22%2C%20NULL%2C%20NULL%2C%5C%22PENGXIANG%5C%22%2C%22%7D%2C%7B%22x%22%3A77.284294%2C%22y%22%3A178.00006%2C%22width%22%3A39.576446000000004%2C%22height%22%3A13.03116%2C%22text%22%3A%22%3CDIV%3E%22%7D%2C%7B%22x%22%3A645.1962%2C%22y%22%3A179.00003%2C%22width%22%3A40.23559999999998%2C%22height%22%3A13.56232%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A25.075918%2C%22y%22%3A195.1729%2C%22width%22%3A11.842149999999997%2C%22height%22%3A16.93762000000001%2C%22text%22%3A%228%22%7D%2C%7B%22x%22%3A245.66583%2C%22y%22%3A195.93816%2C%22width%22%3A228.39154%2C%22height%22%3A18.181449999999984%2C%22text%22%3A%22CLASS%5C%22FOO%5C%22%3E%7B%7B%20MSG%20%7D%7D%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A611.00006%2C%22y%22%3A197%2C%22width%22%3A10%2C%22height%22%3A14%2C%22text%22%3A%228%22%7D%2C%7B%22x%22%3A96.93818%2C%22y%22%3A199.19527%2C%22width%22%3A38.56945%2C%22height%22%3A12.103970000000004%2C%22text%22%3A%22%3CSPAN%22%7D%2C%7B%22x%22%3A609.8716%2C%22y%22%3A215.13336%2C%22width%22%3A11.84680000000003%2C%22height%22%3A17.462859999999978%2C%22text%22%3A%229%22%7D%2C%7B%22x%22%3A643.22925%2C%22y%22%3A215.95116%2C%22width%22%3A316.12585%2C%22height%22%3A18.665280000000024%2C%22text%22%3A%22EXPORT%20FUNCTION%20RENDER(_CTX%2C%20_CACHE)%7B%22%7D%2C%7B%22x%22%3A23.765055%2C%22y%22%3A216.06453%2C%22width%22%3A14.724118999999998%2C%22height%22%3A17.742550000000023%2C%22text%22%3A%229%22%7D%2C%7B%22x%22%3A77.687485%2C%22y%22%3A217.60841%2C%22width%22%3A47.875961000000004%2C%22height%22%3A13.91004000000001%2C%22text%22%3A%22%3C%2FDIV%3E%22%7D%2C%7B%22x%22%3A18.642286%2C%22y%22%3A237.13469%2C%22width%22%3A19.448931%2C%22height%22%3A16.87764999999999%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A603.9799%2C%22y%22%3A237.91882%2C%22width%22%3A17.344139999999925%2C%22height%22%3A13.623539999999991%2C%22text%22%3A%2210%22%7D%2C%7B%22x%22%3A664.06396%2C%22y%22%3A233.99222%2C%22width%22%3A405.0417400000001%2C%22height%22%3A27.149280000000005%2C%22text%22%3A%22RETURN%20(_OPENBLOCK()%2C%20_CREATEBLOCK(%5C%22DIV%5C%22%2C%20NULL%2C%20%5B%22%7D%2C%7B%22x%22%3A603.2573%2C%22y%22%3A258.76053%2C%22width%22%3A17.53665000000001%2C%22height%22%3A14.214049999999986%2C%22text%22%3A%2211%22%7D%2C%7B%22x%22%3A681.2607%2C%22y%22%3A259.9087%2C%22width%22%3A83.48839999999996%2C%22height%22%3A14.093250000000012%2C%22text%22%3A%22HOISTED.1%22%7D%2C%7B%22x%22%3A603.3271%2C%22y%22%3A278.91565%2C%22width%22%3A17.929700000000025%2C%22height%22%3A14.810969999999998%2C%22text%22%3A%2212%22%7D%2C%7B%22x%22%3A677.75214%2C%22y%22%3A280.30774%2C%22width%22%3A88.86888999999996%2C%22height%22%3A16.60705999999999%2C%22text%22%3A%22_HOISTED_2%2C%22%7D%2C%7B%22x%22%3A603.1731%2C%22y%22%3A299.54514%2C%22width%22%3A18.744500000000016%2C%22height%22%3A15.302610000000016%2C%22text%22%3A%2213%22%7D%2C%7B%22x%22%3A678.2174%2C%22y%22%3A299.99982%2C%22width%22%3A88.41065000000003%2C%22height%22%3A17.478330000000028%2C%22text%22%3A%22_HOISTED_3%2C%22%7D%2C%7B%22x%22%3A603.1222%2C%22y%22%3A319.78973%2C%22width%22%3A17.96079999999995%2C%22height%22%3A15.122500000000002%2C%22text%22%3A%2214%22%7D%2C%7B%22x%22%3A678.5953%2C%22y%22%3A318.77563%2C%22width%22%3A89.14610000000005%2C%22height%22%3A18.718770000000006%2C%22text%22%3A%22_HOISTED_4%2C%22%7D%2C%7B%22x%22%3A679.1257%2C%22y%22%3A339.93542%2C%22width%22%3A89.50739999999996%2C%22height%22%3A18.719179999999994%2C%22text%22%3A%22_HOISTED_5%2C%22%7D%2C%7B%22x%22%3A603.1647%2C%22y%22%3A341.0155%2C%22width%22%3A17.81359999999995%2C%22height%22%3A14.920050000000003%2C%22text%22%3A%2215%22%7D%2C%7B%22x%22%3A602.46716%2C%22y%22%3A361.82706%2C%22width%22%3A19.598999999999933%2C%22height%22%3A15.446589999999958%2C%22text%22%3A%2216%22%7D%2C%7B%22x%22%3A680.62866%2C%22y%22%3A361.00238%2C%22width%22%3A221.87110000000007%2C%22height%22%3A20.014279999999985%2C%22text%22%3A%22_CREATEVNODE(%5C%22DIV%5C%22%2CNULL%2C%5B%22%7D%2C%7B%22x%22%3A603.4001%2C%22y%22%3A381.9267%2C%22width%22%3A17.874130000000036%2C%22height%22%3A15.24860000000001%2C%22text%22%3A%2217%22%7D%2C%7B%22x%22%3A696.4469%2C%22y%22%3A382.19586%2C%22width%22%3A181.28125%2C%22height%22%3A18.532470000000046%2C%22text%22%3A%22_CREATEVNODE('SPAN''%2C%7B%22%7D%2C%7B%22x%22%3A602.81586%2C%22y%22%3A402.1061%2C%22width%22%3A18.166740000000004%2C%22height%22%3A16.42212999999998%2C%22text%22%3A%2218%22%7D%2C%7B%22x%22%3A707.0685%2C%22y%22%3A403.23932%2C%22width%22%3A127.93799999999999%2C%22height%22%3A16.899659999999983%2C%22text%22%3A%22ID%3A_CTX.HELLO%2C%22%7D%2C%7B%22x%22%3A601.8696%2C%22y%22%3A421.23767%2C%22width%22%3A19.416039999999953%2C%22height%22%3A46.02583000000004%2C%22text%22%3A%22JB20.00%22%7D%2C%7B%22x%22%3A710.45374%2C%22y%22%3A422.79672%2C%22width%22%3A100.26026000000002%2C%22height%22%3A16.291139999999984%2C%22text%22%3A%22CLASS%3A%5C%22FOO%5C%22%22%7D%2C%7B%22x%22%3A696.3481%2C%22y%22%3A441.7564%2C%22width%22%3A484.4128999999999%2C%22height%22%3A19.06067999999999%2C%22text%22%3A%22%5D%2C%20-TODISPLAYSTRING(_CTX.MSG)%2C%209%20%2F*%20TEXT%2C%20PROPS%20*%2F%2C%20%5B%5C%22ID%5C%22%5D)%22%7D%2C%7B%22x%22%3A677.5294%2C%22y%22%3A462.84427%2C%22width%22%3A16.30589999999995%2C%22height%22%3A16.728580000000022%2C%22text%22%3A%22%5D)%22%7D%2C%7B%22x%22%3A661.3985%2C%22y%22%3A484.20303%2C%22width%22%3A24.733499999999935%2C%22height%22%3A16.292069999999967%2C%22text%22%3A%22%5D)%22%7D%2C%7B%22x%22%3A994.258%2C%22y%22%3A542.46674%2C%22width%22%3A277.03739999999993%2C%22height%22%3A21.96789000000001%2C%22text%22%3A%22HTTPS%3A%2F%2FBLOG.CSDN.NET%2FWEIXIN_39364136%22%7D%2C%7B%22x%22%3A667.2405%2C%22y%22%3A545.88025%2C%22width%22%3A244.2373%2C%22height%22%3A16.164449999999988%2C%22text%22%3A%22CHECK%20THE%20CONSOLE%20FOR%20THE%20AST%22%7D%5D%2C%22id%22%3A%22u5e5eb106%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><h3 data-lake-id=\"bEnfr\" id=\"bEnfr\"><span data-lake-id=\"u14830487\" id=\"u14830487\">事件侦听器缓存 cacheHandles</span></h3><p data-lake-id=\"u01bc4c52\" id=\"u01bc4c52\"><br></p><p data-lake-id=\"u37812083\" id=\"u37812083\"><span data-lake-id=\"u2617de4a\" id=\"u2617de4a\">下图是不使用 cacheHandlers，onClick 需要看成是一个动态的绑定，因为绑定的函数可能会被改变，例如：fn 原本是 data 中返回的，之后如果把它替换掉了，这在实际运行过程中是需要进行一次更新的</span></p><p data-lake-id=\"u37ada6ac\" id=\"u37ada6ac\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1647147660922-02aa0dfb-32f4-47b4-9d79-3b56b177c679.png%22%2C%22taskId%22%3A%22u582e311a-39dc-48eb-a714-b36271fa5a3%22%2C%22clientId%22%3A%22u90745465-1311-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1012%2C%22height%22%3A418%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A116915%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1012%2C%22originHeight%22%3A418%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22_OPENBLOCK%2CCREATEBLOCK%20A%20IMPORT%20_CREATEBLOCK%20CREATEVNODE%2COPENBLOCK%20CREATEVNODE%20AS%20AS%20AS%20ION%20RENDER(_CTX%2C_CACHE)%7B%20EXPORT%20FUNCTION%20(_OPENBLOCK()%2C_CREATEBLOCK(%5C%22DIV%5C%22%2CNULL%2C%5B%20RETURN%20%2F*%20PROPS%20*%2F%2C%5B%5C%22ONCLICK%5C%22%5D)%20-CREATEVNODE(%5C%22SPAN%5C%22%2C%7B%20ONCLICK%3A%20-CTX.ONCLICK%20)%2C%5C%22PENGXIANG%5C%22%2C%208%20%2F*%20PROPS%201))%20%2F%2FCHECK%20THE%20CONSOLE%20FOR%20THE%20AST%20HTTPS%3A%2F%2FBLOG.CSDN.NET%2FWEIXIN_39364136%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A572.66327%2C%22y%22%3A2.3175735%2C%22width%22%3A258.97402999999997%2C%22height%22%3A18.729591499999998%2C%22text%22%3A%22_OPENBLOCK%2CCREATEBLOCK%20A%22%7D%2C%7B%22x%22%3A20.894258%2C%22y%22%3A3.1241186%2C%22width%22%3A65.47438199999999%2C%22height%22%3A18.6309014%2C%22text%22%3A%22IMPORT%22%7D%2C%7B%22x%22%3A865.61395%2C%22y%22%3A3.2723336%2C%22width%22%3A127.22674999999992%2C%22height%22%3A18.1814894%2C%22text%22%3A%22_CREATEBLOCK%22%7D%2C%7B%22x%22%3A285.9623%2C%22y%22%3A3.3801146%2C%22width%22%3A240.01479999999992%2C%22height%22%3A16.5268064%2C%22text%22%3A%22CREATEVNODE%2COPENBLOCK%22%7D%2C%7B%22x%22%3A114.647354%2C%22y%22%3A4.954897%2C%22width%22%3A119.69970599999999%2C%22height%22%3A14.851227000000002%2C%22text%22%3A%22CREATEVNODE%22%7D%2C%7B%22x%22%3A824.63055%2C%22y%22%3A5.996077%2C%22width%22%3A21.30695000000003%2C%22height%22%3A13.89566%2C%22text%22%3A%22AS%22%7D%2C%7B%22x%22%3A245.59969%2C%22y%22%3A6.5101066%2C%22width%22%3A19.374950000000013%2C%22height%22%3A13.834429400000001%2C%22text%22%3A%22AS%22%7D%2C%7B%22x%22%3A531.2974%2C%22y%22%3A6.7959204%2C%22width%22%3A25.034449999999993%2C%22height%22%3A13.2504646%2C%22text%22%3A%22AS%22%7D%2C%7B%22x%22%3A159.21404%2C%22y%22%3A53.53017%2C%22width%22%3A269.38621%2C%22height%22%3A20.60994000000001%2C%22text%22%3A%22ION%20RENDER(_CTX%2C_CACHE)%7B%22%7D%2C%7B%22x%22%3A17.99275%2C%22y%22%3A54.550972%2C%22width%22%3A159.1724%2C%22height%22%3A17.811747999999994%2C%22text%22%3A%22EXPORT%20FUNCTION%22%7D%2C%7B%22x%22%3A125.97008%2C%22y%22%3A79.32945%2C%22width%22%3A444.18432%2C%22height%22%3A21.999415%2C%22text%22%3A%22(_OPENBLOCK()%2C_CREATEBLOCK(%5C%22DIV%5C%22%2CNULL%2C%5B%22%7D%2C%7B%22x%22%3A40.575733%2C%22y%22%3A82.02104%2C%22width%22%3A70.756321%2C%22height%22%3A16.86596%2C%22text%22%3A%22RETURN%22%7D%2C%7B%22x%22%3A742.50287%2C%22y%22%3A102.66205%2C%22width%22%3A266.79612999999995%2C%22height%22%3A21.95586%2C%22text%22%3A%22%2F*%20PROPS%20*%2F%2C%5B%5C%22ONCLICK%5C%22%5D)%22%7D%2C%7B%22x%22%3A65.71607%2C%22y%22%3A105.88638%2C%22width%22%3A763.5324700000001%2C%22height%22%3A17.771959999999993%2C%22text%22%3A%22-CREATEVNODE(%5C%22SPAN%5C%22%2C%7B%20ONCLICK%3A%20-CTX.ONCLICK%20)%2C%5C%22PENGXIANG%5C%22%2C%208%20%2F*%20PROPS%22%7D%2C%7B%22x%22%3A41.53441%2C%22y%22%3A130.1824%2C%22width%22%3A31.702764999999992%2C%22height%22%3A21.22072%2C%22text%22%3A%221))%22%7D%2C%7B%22x%22%3A16.11962%2C%22y%22%3A207.1315%2C%22width%22%3A350.19975%2C%22height%22%3A29.60008000000002%2C%22text%22%3A%22%2F%2FCHECK%20THE%20CONSOLE%20FOR%20THE%20AST%22%7D%2C%7B%22x%22%3A727.80743%2C%22y%22%3A389.00266%2C%22width%22%3A276.27723000000003%2C%22height%22%3A18.480140000000006%2C%22text%22%3A%22HTTPS%3A%2F%2FBLOG.CSDN.NET%2FWEIXIN_39364136%22%7D%5D%2C%22id%22%3A%22u61f22aa1%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"u3c579213\" id=\"u3c579213\"><span data-lake-id=\"u4c5e54c9\" id=\"u4c5e54c9\">下图是使用 cacheHandlers，在第一次渲染时会生成一个内联的函数，在内联函数里引用当前的 fn，然后把内联函数 cache 起来，后续的更新会从缓存中读取同一个函数，因为是同一个函数，因此没有必要追踪变化，这样就神奇的把 span 变成了静态的。手写的内联函数也会被 cache 起来，这样就会避免一些没有必要的更新</span></p><p data-lake-id=\"ue7465e6e\" id=\"ue7465e6e\"><span data-lake-id=\"ua916a21b\" id=\"ua916a21b\">​</span><br></p><p data-lake-id=\"u589b2c2d\" id=\"u589b2c2d\"><span data-lake-id=\"ufdec25e8\" id=\"ufdec25e8\">当我们在组件上使用内联函数，会受益于这个改动</span></p><p data-lake-id=\"ua9805106\" id=\"ua9805106\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F732231%2F1647147841764-4e445d61-0d9a-478a-9131-0c597ee0566b.png%22%2C%22taskId%22%3A%22u8d28ef77-3007-4bd6-8971-b586ebcac76%22%2C%22clientId%22%3A%22u90745465-1311-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1012%2C%22height%22%3A418%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A301985%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1012%2C%22originHeight%22%3A418%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22IMPORT%20(%20TODISPLAYSTRING%20AS%20_TODISPLAYSTRING%2C%20CREATEVNODE%20_CREATEVNODE%2COPEN%20AS%20ORT%20FUNCTION%20RENDER(_CTX%2C%20_CACHE)%20%7B%20EXPORT%20FU%20_CREATEBLOCK(%5C%22DIV%5C%22%2C%20NULL%2C%20%5B%20%20RETURN%20(_OPENBLOCK()%2C%20-CREATEVNODE(%5C%22SPAN%5C%22%2C%7B%20RGS)%20-%3E%20(_TX.ONCLICK(....ARGS)))%20(_CACHE%5B1%5D%20-%20(...ARGS)%20ONCLICK%3A%20-CACHE%5B1%5D%20TODISPLAYSTRING(_CTX.MSG)%2C%201%20%2F*%20TEXT%20*%2F)%20%E5%AD%90%20CHECK%20THE%20CONSOLE%20FOR%20THE%20AST%20HTTPS%3A%2F%2FBLOG.CSDN.NET%2FWEIXIN_39364136%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A19.381678%2C%22y%22%3A3.2400472%2C%22width%22%3A714.340422%2C%22height%22%3A25.6524258%2C%22text%22%3A%22IMPORT%20(%20TODISPLAYSTRING%20AS%20_TODISPLAYSTRING%2C%20CREATEVNODE%22%7D%2C%7B%22x%22%3A792.9778%2C%22y%22%3A8.665111%2C%22width%22%3A215.91340000000002%2C%22height%22%3A20.900597%2C%22text%22%3A%22_CREATEVNODE%2COPEN%22%7D%2C%7B%22x%22%3A741.08655%2C%22y%22%3A8.73798%2C%22width%22%3A37.65665000000001%2C%22height%22%3A17.71988%2C%22text%22%3A%22AS%22%7D%2C%7B%22x%22%3A64.22384%2C%22y%22%3A63.241554%2C%22width%22%3A434.03394000000003%2C%22height%22%3A29.417005999999994%2C%22text%22%3A%22ORT%20FUNCTION%20RENDER(_CTX%2C%20_CACHE)%20%7B%22%7D%2C%7B%22x%22%3A18.26197%2C%22y%22%3A69.66171%2C%22width%22%3A102.52207999999999%2C%22height%22%3A20.55014%2C%22text%22%3A%22EXPORT%20FU%22%7D%2C%7B%22x%22%3A326.36197%2C%22y%22%3A96.35764%2C%22width%22%3A333.65707000000003%2C%22height%22%3A26.220550000000003%2C%22text%22%3A%22_CREATEBLOCK(%5C%22DIV%5C%22%2C%20NULL%2C%20%5B%22%7D%2C%7B%22x%22%3A44.62138%2C%22y%22%3A96.56159%2C%22width%22%3A257.90947%2C%22height%22%3A29.066330000000008%2C%22text%22%3A%22%20RETURN%20(_OPENBLOCK()%2C%22%7D%2C%7B%22x%22%3A67.64807%2C%22y%22%3A128.68317%2C%22width%22%3A279.16506999999996%2C%22height%22%3A30.241330000000005%2C%22text%22%3A%22-CREATEVNODE(%5C%22SPAN%5C%22%2C%7B%22%7D%2C%7B%22x%22%3A611.2242%2C%22y%22%3A160.3108%2C%22width%22%3A383.91984%2C%22height%22%3A25.14760000000001%2C%22text%22%3A%22RGS)%20-%3E%20(_TX.ONCLICK(....ARGS)))%22%7D%2C%7B%22x%22%3A387.53946%2C%22y%22%3A160.07773%2C%22width%22%3A261.59504%2C%22height%22%3A25.561109999999985%2C%22text%22%3A%22(_CACHE%5B1%5D%20-%20(...ARGS)%22%7D%2C%7B%22x%22%3A93.15998%2C%22y%22%3A163.45087%2C%22width%22%3A102.54065999999999%2C%22height%22%3A19.53909999999999%2C%22text%22%3A%22ONCLICK%3A%22%7D%2C%7B%22x%22%3A206.72212%2C%22y%22%3A160.89362%2C%22width%22%3A112.88091%2C%22height%22%3A27.14090999999999%2C%22text%22%3A%22-CACHE%5B1%5D%22%7D%2C%7B%22x%22%3A116.81669%2C%22y%22%3A193.93056%2C%22width%22%3A503.56271000000004%2C%22height%22%3A23.661269999999973%2C%22text%22%3A%22TODISPLAYSTRING(_CTX.MSG)%2C%201%20%2F*%20TEXT%20*%2F)%22%7D%2C%7B%22x%22%3A17.514765%2C%22y%22%3A253.87378%2C%22width%22%3A13.633219%2C%22height%22%3A24.09341999999998%2C%22text%22%3A%22%E5%AD%90%22%7D%2C%7B%22x%22%3A54.759647%2C%22y%22%3A313.21432%2C%22width%22%3A370.975273%2C%22height%22%3A30.65548000000001%2C%22text%22%3A%22CHECK%20THE%20CONSOLE%20FOR%20THE%20AST%22%7D%2C%7B%22x%22%3A727.95917%2C%22y%22%3A389.8546%2C%22width%22%3A276.63053%2C%22height%22%3A17.497270000000015%2C%22text%22%3A%22HTTPS%3A%2F%2FBLOG.CSDN.NET%2FWEIXIN_39364136%22%7D%5D%2C%22id%22%3A%22u31ea0aca%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><h2 data-lake-id=\"UylpV\" id=\"UylpV\"><span data-lake-id=\"ua4fb9027\" id=\"ua4fb9027\">对外暴露了一些自定义渲染的 api</span></h2><h2 data-lake-id=\"IeGew\" id=\"IeGew\"><span data-lake-id=\"u873b70cb\" id=\"u873b70cb\">支持 fragement(多个根节点)</span></h2>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:32:37.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:32:37.000Z",
  "updated_at": "2022-05-10T15:12:43.000Z",
  "published_at": "2022-04-04T11:32:37.000Z",
  "first_published_at": "2022-04-04T11:32:37.406Z",
  "word_count": 1508,
  "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647147332285-b516a919-a81e-4165-984b-c38bebd423a9.png",
  "description": "响应式核心 api 替换将响应式核心的 api 从 Object.defineProperty 更换为 Proxy，重构了 Vue 的响应式系统；解决了 Vue2 中存在的响应式问题。Object.defineProperty 的问题无法监听数组的变化在 vue2 中，通过重写数组原型链上的 ...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}