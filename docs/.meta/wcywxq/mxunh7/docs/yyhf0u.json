{
  "id": 72212225,
  "slug": "yyhf0u",
  "title": "assets 和 static 的区别",
  "book_id": 26225124,
  "book": {
    "id": 26225124,
    "type": "Book",
    "slug": "mxunh7",
    "name": "八股文 eight-part essay writing",
    "user_id": 732231,
    "description": "前端八股文",
    "creator_id": 732231,
    "public": 0,
    "items_count": 239,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:57.023Z",
    "updated_at": "2023-11-11T18:15:57.000Z",
    "created_at": "2022-04-04T11:31:45.000Z",
    "namespace": "wcywxq/mxunh7",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "**相同点：**assets 和 static 两个都是存放静态资源文件。项目中所需要的资源文件图片，字体图标，样式文件等都可以放在这两个文件下，这是相同点\n\n**不相同点：**assets 中存放的静态资源文件在项目打包时，也就是运行 npm run build 时会将 assets 中放置的静态资源文件进行打包上传，所谓打包简单点可以理解为压缩体积，代码格式化。而压缩后的静态资源文件最终也都会放置在 static 文件中跟着 index.html 一同上传至服务器。static 中放置的静态资源文件就不会要走打包压缩格式化等流程，而是直接进入打包好的目录，直接上传至服务器。因为避免了压缩直接进行上传，在打包时会提高一定的效率，但是 static 中的资源文件由于没有进行压缩等操作，所以文件的体积也就相对于 assets 中打包后的文件提交较大点。在服务器中就会占据更大的空间。\n\n**建议：** 将项目中 template需要的样式文件js文件等都可以放置在 assets 中，走打包这一流程。减少体积。而项目中引入的第三方的资源文件如iconfoont.css 等文件可以放置在 static 中，因为这些引入的第三方文件已经经过处理，不再需要处理，直接上传。\n",
  "body_draft": "",
  "body_html": "<!doctype html><p data-lake-id=\"u10a4e68f\"><strong><span>相同点：</span></strong><span>assets</span><span> 和 </span><span>static</span><span> 两个都是存放静态资源文件。项目中所需要的资源文件图片，字体图标，样式文件等都可以放在这两个文件下，这是相同点</span></p><p data-lake-id=\"u17543a50\"><span>​</span><br /></p><p data-lake-id=\"u1b20fa1c\"><strong><span>不相同点：</span></strong><span>assets</span><span> 中存放的静态资源文件在项目打包时，也就是运行 </span><span>npm run build</span><span> 时会将 </span><span>assets</span><span> 中放置的静态资源文件进行打包上传，所谓打包简单点可以理解为压缩体积，代码格式化。而压缩后的静态资源文件最终也都会放置在 </span><span>static</span><span> 文件中跟着 </span><span>index.html</span><span> 一同上传至服务器。</span><span>static</span><span> 中放置的静态资源文件就不会要走打包压缩格式化等流程，而是直接进入打包好的目录，直接上传至服务器。因为避免了压缩直接进行上传，在打包时会提高一定的效率，但是 </span><span>static</span><span> 中的资源文件由于没有进行压缩等操作，所以文件的体积也就相对于 </span><span>assets</span><span> 中打包后的文件提交较大点。在服务器中就会占据更大的空间。</span></p><p data-lake-id=\"u71e98910\"><span>​</span><br /></p><p data-lake-id=\"u7cf6be55\"><strong><span>建议：</span></strong><span> 将项目中 template需要的样式文件js文件等都可以放置在 assets 中，走打包这一流程。减少体积。而项目中引入的第三方的资源文件如iconfoont.css 等文件可以放置在 static 中，因为这些引入的第三方文件已经经过处理，不再需要处理，直接上传。</span></p>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><p data-lake-id=\"u10a4e68f\" id=\"u10a4e68f\"><strong><span data-lake-id=\"u22d5a9ca\" id=\"u22d5a9ca\">相同点：</span></strong><span data-lake-id=\"u2e838a0f\" id=\"u2e838a0f\">assets</span><span data-lake-id=\"u33f4c57c\" id=\"u33f4c57c\"> 和 </span><span data-lake-id=\"u8d687df8\" id=\"u8d687df8\">static</span><span data-lake-id=\"u10dae477\" id=\"u10dae477\"> 两个都是存放静态资源文件。项目中所需要的资源文件图片，字体图标，样式文件等都可以放在这两个文件下，这是相同点</span></p><p data-lake-id=\"u17543a50\" id=\"u17543a50\"><span data-lake-id=\"u1efe6ab3\" id=\"u1efe6ab3\">​</span><br></p><p data-lake-id=\"u1b20fa1c\" id=\"u1b20fa1c\"><strong><span data-lake-id=\"u533c5704\" id=\"u533c5704\">不相同点：</span></strong><span data-lake-id=\"u054e1b32\" id=\"u054e1b32\">assets</span><span data-lake-id=\"u059d2f8f\" id=\"u059d2f8f\"> 中存放的静态资源文件在项目打包时，也就是运行 </span><span data-lake-id=\"u0a741513\" id=\"u0a741513\">npm run build</span><span data-lake-id=\"u176de061\" id=\"u176de061\"> 时会将 </span><span data-lake-id=\"u010ee6e7\" id=\"u010ee6e7\">assets</span><span data-lake-id=\"uca7fc801\" id=\"uca7fc801\"> 中放置的静态资源文件进行打包上传，所谓打包简单点可以理解为压缩体积，代码格式化。而压缩后的静态资源文件最终也都会放置在 </span><span data-lake-id=\"ua770bf3b\" id=\"ua770bf3b\">static</span><span data-lake-id=\"u9a82d624\" id=\"u9a82d624\"> 文件中跟着 </span><span data-lake-id=\"uaa0f8f68\" id=\"uaa0f8f68\">index.html</span><span data-lake-id=\"u2578f90c\" id=\"u2578f90c\"> 一同上传至服务器。</span><span data-lake-id=\"uf49369bf\" id=\"uf49369bf\">static</span><span data-lake-id=\"u86d6e75d\" id=\"u86d6e75d\"> 中放置的静态资源文件就不会要走打包压缩格式化等流程，而是直接进入打包好的目录，直接上传至服务器。因为避免了压缩直接进行上传，在打包时会提高一定的效率，但是 </span><span data-lake-id=\"uabe238d5\" id=\"uabe238d5\">static</span><span data-lake-id=\"u4b74ab06\" id=\"u4b74ab06\"> 中的资源文件由于没有进行压缩等操作，所以文件的体积也就相对于 </span><span data-lake-id=\"u92be53e8\" id=\"u92be53e8\">assets</span><span data-lake-id=\"u28f104ac\" id=\"u28f104ac\"> 中打包后的文件提交较大点。在服务器中就会占据更大的空间。</span></p><p data-lake-id=\"u71e98910\" id=\"u71e98910\"><span data-lake-id=\"u61936145\" id=\"u61936145\">​</span><br></p><p data-lake-id=\"u7cf6be55\" id=\"u7cf6be55\"><strong><span data-lake-id=\"u4f123c71\" id=\"u4f123c71\">建议：</span></strong><span data-lake-id=\"ufd0cc8c5\" id=\"ufd0cc8c5\"> 将项目中 template需要的样式文件js文件等都可以放置在 assets 中，走打包这一流程。减少体积。而项目中引入的第三方的资源文件如iconfoont.css 等文件可以放置在 static 中，因为这些引入的第三方文件已经经过处理，不再需要处理，直接上传。</span></p>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:33:44.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:33:44.000Z",
  "updated_at": "2022-05-10T15:12:34.000Z",
  "published_at": "2022-04-04T11:33:44.000Z",
  "first_published_at": "2022-04-04T11:33:43.521Z",
  "word_count": 409,
  "cover": null,
  "description": "相同点：assets 和 static 两个都是存放静态资源文件。项目中所需要的资源文件图片，字体图标，样式文件等都可以放在这两个文件下，这是相同点不相同点：assets 中存放的静态资源文件在项目打包时，也就是运行 npm run build 时会将 assets 中放置的静态资源文件进行打...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}