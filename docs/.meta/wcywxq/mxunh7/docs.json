[
  {
    "id": 88490090,
    "slug": "fpmvpg",
    "title": "http 请求的 method",
    "description": "各个 http 版本所支持的 methodGETPOSTHEADPUTDELETEPATCHOPTIONSCONNECTTRACEhttp/1.0✅✅✅❌❌❌❌❌❌http/1.1✅✅✅✅✅✅✅✅✅http 各个 method 介绍GETHTTP GET 方法请求指定的资源。使用 GET 的请...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-08-04T03:42:16.000Z",
    "created_at": "2022-08-04T03:06:54.000Z",
    "updated_at": "2022-08-04T03:42:16.000Z",
    "published_at": "2022-08-04T03:42:16.000Z",
    "first_published_at": "2022-08-04T03:11:39.850Z",
    "draft_version": 24,
    "last_editor_id": 732231,
    "word_count": 2308,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 81946525,
    "slug": "cmegik",
    "title": "vue3 新特性",
    "description": "https://juejin.cn/post/7106374777601785893",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-30T07:37:32.000Z",
    "created_at": "2022-06-30T07:37:17.000Z",
    "updated_at": "2022-06-30T07:37:32.000Z",
    "published_at": "2022-06-30T07:37:32.000Z",
    "first_published_at": "2022-06-30T07:37:31.527Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 1,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 81946293,
    "slug": "diavmt",
    "title": "vue diff 算法",
    "description": "diff 算法解决的问题vnode 更新，diff 算法寻求最佳性能同步更新真实 dom。必须明确 old vnode 和 old 真实 dom 是过去时，new vnode 对应的 new 真实 dom 是我们最终想要的。基于 old，得到 new，如果让性能最好？最简单粗暴就是把 old ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-30T07:35:50.000Z",
    "created_at": "2022-06-30T07:35:36.000Z",
    "updated_at": "2022-06-30T07:35:50.000Z",
    "published_at": "2022-06-30T07:35:50.000Z",
    "first_published_at": "2022-06-30T07:35:49.868Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 1244,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 81944011,
    "slug": "gn5mcc",
    "title": "lru 缓存机制",
    "description": "LRU 缓存机制，即采用最近最少使用的缓存策略。它的原则是，如果一个数据最近没有被访问到，那么它将来被访问的几率也很小，也就是说当限定的内存空间已没有其他空间可用时，应该把最久没有访问到的数据去除掉。",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-30T07:21:20.000Z",
    "created_at": "2022-06-30T07:21:04.000Z",
    "updated_at": "2022-06-30T07:21:20.000Z",
    "published_at": "2022-06-30T07:21:20.000Z",
    "first_published_at": "2022-06-30T07:21:20.184Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 97,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 81941261,
    "slug": "bl6emu",
    "title": "jwt",
    "description": "https://juejin.cn/post/7113802655381585927",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-30T07:03:11.000Z",
    "created_at": "2022-06-30T07:03:04.000Z",
    "updated_at": "2022-06-30T07:03:12.000Z",
    "published_at": "2022-06-30T07:03:11.000Z",
    "first_published_at": "2022-06-30T07:03:11.447Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 1,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 81931436,
    "slug": "hcf3l8",
    "title": "for await ... of",
    "description": "for await...of 语句创建一个循环，该循环遍历异步可迭代对象以及同步可迭代对象，包括: 内置的 String、Array，类似数组对象 (例如 arguments 或 NodeList)、TypedArray、Map、Set 和用户定义的异步/同步迭代器。它使用对象的每个不同属性的...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-30T06:17:56.000Z",
    "created_at": "2022-06-30T06:13:49.000Z",
    "updated_at": "2022-06-30T06:17:56.000Z",
    "published_at": "2022-06-30T06:17:56.000Z",
    "first_published_at": "2022-06-30T06:15:17.950Z",
    "draft_version": 4,
    "last_editor_id": 732231,
    "word_count": 567,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 81366952,
    "slug": "bk9qnc",
    "title": "cookie、session、localStorage和sessionStorage",
    "description": "cookie由于 http 是一种无状态的协议，服务器单从网络连接上是无法知道客户身份的。这时候服务器就需要给客户端颁发一个 cookie，用来确认用户的身份。简单的说，cookie 就是客户端保存用户信息的一种机制，用来记录用户的一些信息。cookie 用于数据存储，同时 cookie 存放...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-30T07:05:24.000Z",
    "created_at": "2022-06-24T08:37:38.000Z",
    "updated_at": "2022-06-30T07:05:24.000Z",
    "published_at": "2022-06-30T07:05:24.000Z",
    "first_published_at": "2022-06-24T08:40:49.300Z",
    "draft_version": 29,
    "last_editor_id": 732231,
    "word_count": 2704,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77463729,
    "slug": "gnn51p",
    "title": "小程序的生命周期函数",
    "description": "onLoad 页面加载时触发，一个页面只会调用一次，可以在 onLoad 的参数中获取打开当前页面路径中的参数onShow 页面显示/切入前台时触发onReady 页面初次渲染完成时触发，一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互onHide 页面隐藏/切入后台时触发，如...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T17:16:08.000Z",
    "created_at": "2022-05-15T17:13:16.000Z",
    "updated_at": "2022-05-15T17:16:08.000Z",
    "published_at": "2022-05-15T17:16:08.000Z",
    "first_published_at": "2022-05-15T17:13:39.701Z",
    "draft_version": 3,
    "last_editor_id": 732231,
    "word_count": 155,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77463586,
    "slug": "lgfegn",
    "title": "小程序页面间传递数据的方法",
    "description": "使用全局变量实现数据传递在 app.js 文件中定义全局变量 globalData，将需要存储的信息存放在里面// app.js App({   // 全局变量   globalData: {     userInfo: null   } })使用的时候，直接使用 getApp() 拿到存储的...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T17:13:08.000Z",
    "created_at": "2022-05-15T17:07:44.000Z",
    "updated_at": "2022-05-15T17:13:10.000Z",
    "published_at": "2022-05-15T17:13:10.000Z",
    "first_published_at": "2022-05-15T17:10:20.288Z",
    "draft_version": 4,
    "last_editor_id": 732231,
    "word_count": 172,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77463281,
    "slug": "rugmeb",
    "title": "小程序相关文件类型",
    "description": "微信小程序项目结构主要有四个文件类型WXML（WeiXin Markup Language）是框架设计的一套标签语言，结合基础组件、事件系统，可以构建出页面的结构。内部主要是微信自己定义的一套组件WXSS (WeiXin Style Sheets)是一套样式语言，用于描述 WXML 的组件样式...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T16:59:23.000Z",
    "created_at": "2022-05-15T16:59:07.000Z",
    "updated_at": "2022-05-15T16:59:27.000Z",
    "published_at": "2022-05-15T16:59:27.000Z",
    "first_published_at": "2022-05-15T16:59:23.462Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 297,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77463131,
    "slug": "rm2ldf",
    "title": "小程序性能优化",
    "description": "独立分包渲染性能优化(合理使用 setData)避免不合理使用 onPageScroll使用自定义组件",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T16:58:18.000Z",
    "created_at": "2022-05-15T16:54:44.000Z",
    "updated_at": "2022-05-15T16:58:18.000Z",
    "published_at": "2022-05-15T16:58:18.000Z",
    "first_published_at": "2022-05-15T16:57:54.184Z",
    "draft_version": 2,
    "last_editor_id": 732231,
    "word_count": 31,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77463054,
    "slug": "yid7ry",
    "title": "小程序授权获取用户信息流程",
    "description": "session_key 有有效期，有效期并没有被告知开发者，只知道用户越频繁使用小程序，session_key 有效期越长在调用 wx.login 时会直接更新 session_key，导致旧 session_key 失效小程序内先调用 wx.checkSession 检查登录态，并保证没有过...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T16:54:15.000Z",
    "created_at": "2022-05-15T16:52:44.000Z",
    "updated_at": "2022-05-15T16:54:15.000Z",
    "published_at": "2022-05-15T16:54:15.000Z",
    "first_published_at": "2022-05-15T16:54:15.222Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 363,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1652633588725-b52dafa1-8e92-40d7-8efe-dc5317c05983.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77462972,
    "slug": "dt36ib",
    "title": "小程序尺寸单位 rpx",
    "description": "rpx（responsive pixel）: 可以根据屏幕宽度进行自适应。规定屏幕宽为 750rpx。公式：const dsWidth = 750  export const screenHeightOfRpx = function () {   return 750 / env.screen...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T16:50:57.000Z",
    "created_at": "2022-05-15T16:50:20.000Z",
    "updated_at": "2022-05-15T16:50:57.000Z",
    "published_at": "2022-05-15T16:50:57.000Z",
    "first_published_at": "2022-05-15T16:50:56.788Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 77,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77461717,
    "slug": "ykzhe6",
    "title": "小程序登陆",
    "description": "登陆流程登录流程是调 wx.login 获取 code 传给后台服务器获取微信用户唯一标识 openid 及本次登录的会话密钥（session_key）等）。拿到开发者服务器传回来的会话密钥（session_key）之后，前端要保存 wx.setStorageSync('sessionKey'...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T17:27:56.000Z",
    "created_at": "2022-05-15T16:20:00.000Z",
    "updated_at": "2022-05-15T17:27:56.000Z",
    "published_at": "2022-05-15T17:27:56.000Z",
    "first_published_at": "2022-05-15T16:22:22.262Z",
    "draft_version": 12,
    "last_editor_id": 732231,
    "word_count": 1361,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77460672,
    "slug": "xxds30",
    "title": "vue 组件通信方式",
    "description": "",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T15:59:24.000Z",
    "created_at": "2022-05-15T15:59:00.000Z",
    "updated_at": "2022-05-15T15:59:33.000Z",
    "published_at": "2022-05-15T15:59:24.000Z",
    "first_published_at": "2022-05-15T15:59:23.651Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1652630361674-81dd0551-9d6f-4fe7-b494-63c2c47b2cf9.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77457654,
    "slug": "uxfa80",
    "title": "h5 跳转小程序的几种方式",
    "description": "外部浏览器运行的 h5 页面通过 URL Scheme 的方式来拉起微信打开指定小程序，其核心代码实现为：location.href = 'weixin://dl/business/?t= *TICKET*' ，其中，TICKET 的值为一个字符串，获取途径有三种方式iOS 在浏览器可以直接使...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T15:34:19.000Z",
    "created_at": "2022-05-15T15:17:19.000Z",
    "updated_at": "2022-05-15T15:34:19.000Z",
    "published_at": "2022-05-15T15:34:19.000Z",
    "first_published_at": "2022-05-15T15:22:07.189Z",
    "draft_version": 8,
    "last_editor_id": 732231,
    "word_count": 477,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1652628347076-3bc9f46b-7be7-40f4-979a-2bd4bdd2944b.png",
    "custom_cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1652628347076-3bc9f46b-7be7-40f4-979a-2bd4bdd2944b.png",
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77457485,
    "slug": "zy41fo",
    "title": "小程序关联微信公众号如何确定用户的唯一性",
    "description": "使用 wx.getUserInfo 方法，在设置 withCredentials 为 true 时，可获取 enecryptedData，该对象内部包含 union_id，union_id 需要传递给服务端进行对称解密",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T15:16:55.000Z",
    "created_at": "2022-05-15T15:15:16.000Z",
    "updated_at": "2022-05-15T15:16:56.000Z",
    "published_at": "2022-05-15T15:16:55.000Z",
    "first_published_at": "2022-05-15T15:16:19.621Z",
    "draft_version": 2,
    "last_editor_id": 732231,
    "word_count": 43,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77457391,
    "slug": "vtacoq",
    "title": "小程序中 bindtap 和 catchtap 的区别",
    "description": "相同点：首先他们都是作为点击事件函数，就是点击时触发，在这个作用上他们是一样的，可以不做区分不同点：他们的不同点主要是 bindtap 是不会阻止冒泡事件的，catchtap 是阻止冒泡的",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T17:25:39.000Z",
    "created_at": "2022-05-15T15:13:58.000Z",
    "updated_at": "2022-05-15T17:25:39.000Z",
    "published_at": "2022-05-15T17:25:39.000Z",
    "first_published_at": "2022-05-15T15:14:48.660Z",
    "draft_version": 3,
    "last_editor_id": 732231,
    "word_count": 78,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77457211,
    "slug": "qk3yad",
    "title": "小程序中如何实现下拉刷新",
    "description": "在 app.json 或 page.json 中的 window 配置 enablePullDownRefresh: true在 page 中定义 onPullDownRefresh 钩子函数，该函数将在下拉刷新时执行在下拉刷新执行时发起数据请求，请求返回后，通过调用 wx.stopPullD...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T17:24:05.000Z",
    "created_at": "2022-05-15T15:12:09.000Z",
    "updated_at": "2022-05-15T17:24:05.000Z",
    "published_at": "2022-05-15T17:24:05.000Z",
    "first_published_at": "2022-05-15T15:13:12.928Z",
    "draft_version": 4,
    "last_editor_id": 732231,
    "word_count": 69,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77456951,
    "slug": "df386q",
    "title": "小程序原理",
    "description": "小程序分为两个部分webview：用来展示 UIappService：用来处理业务逻辑、数据及接口调用同时，以上两个部分分别在小程序的渲染线程和逻辑线程中分别运行，通信方式则通过系统层的 JSBridge 来实现通信，完成 UI 渲染、事件处理等",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T16:49:41.000Z",
    "created_at": "2022-05-15T15:09:13.000Z",
    "updated_at": "2022-05-15T16:49:41.000Z",
    "published_at": "2022-05-15T16:49:41.000Z",
    "first_published_at": "2022-05-15T15:09:36.061Z",
    "draft_version": 5,
    "last_editor_id": 732231,
    "word_count": 94,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1652633379710-fe2690f9-d688-4906-b629-fc55b6ded06b.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77456810,
    "slug": "itwfg1",
    "title": "小程序的优缺点",
    "description": "优点无需下载打开速度快开发成本低为用户提供良好的安全保障，发布有一套严格的审查流程，不能通过审查的程序无法发布上线缺点依托于微信，不能开发后台管理功能主包大小限制不能超过 2M，分包总计不能超过 8M不能打开超过 10 个层级的页面",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T17:16:44.000Z",
    "created_at": "2022-05-15T15:07:37.000Z",
    "updated_at": "2022-05-15T17:16:44.000Z",
    "published_at": "2022-05-15T17:16:44.000Z",
    "first_published_at": "2022-05-15T15:08:48.259Z",
    "draft_version": 5,
    "last_editor_id": 732231,
    "word_count": 109,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77456427,
    "slug": "lgdk49",
    "title": "小程序中页面跳转的几种方式",
    "description": "wx.navigateTo：保留当前页面，跳转到应用内的某个页面，但是无法跳转到 tabBar 页面（参数必须为字符串）wx.redirectTo：关闭当前页面，跳转到应用内的某个页面，但是无法跳转到 tabBar 页面wx.switchTab：跳转到 tabBar 页面，并关闭其他所有非 t...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T15:07:02.000Z",
    "created_at": "2022-05-15T15:03:24.000Z",
    "updated_at": "2022-05-15T15:07:02.000Z",
    "published_at": "2022-05-15T15:07:02.000Z",
    "first_published_at": "2022-05-15T15:06:31.342Z",
    "draft_version": 2,
    "last_editor_id": 732231,
    "word_count": 165,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77456254,
    "slug": "pfeofq",
    "title": "小程序的双向绑定与 vue 的异同",
    "description": "小程序使用 this.data 更新属性是无法直接同步到视图的，必须通过调用 this.setData() 来更新才行",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T15:02:37.000Z",
    "created_at": "2022-05-15T15:01:06.000Z",
    "updated_at": "2022-05-15T15:02:37.000Z",
    "published_at": "2022-05-15T15:02:37.000Z",
    "first_published_at": "2022-05-15T15:02:27.411Z",
    "draft_version": 2,
    "last_editor_id": 732231,
    "word_count": 34,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76725286,
    "slug": "yms8mi",
    "title": "verdaccio",
    "description": "verdaccio 是一个 Node.js 创建的轻量的私有 npm proxy registrydocker 部署 verdaccio# 拉取verdaccio docker镜像 $ docker pull verdaccio/verdaccio:nightly-master  # 查看do...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-09T14:25:02.000Z",
    "created_at": "2022-05-09T14:07:17.000Z",
    "updated_at": "2022-05-09T14:25:02.000Z",
    "published_at": "2022-05-09T14:25:02.000Z",
    "first_published_at": "2022-05-09T14:07:56.072Z",
    "draft_version": 5,
    "last_editor_id": 732231,
    "word_count": 938,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76722698,
    "slug": "gugo43",
    "title": "rollup 优缺点",
    "description": "优点输出结果更加扁平，执行效率更高配置简单，打包速度快自动移除未引用的代码（内置 tree shaking）打包结果依然完全可读缺点浏览器环境中，代码拆分功能必须使用 Require.js 这样的 AMD 库加载非 ESM 的第三方模块比较复杂因为模块最终都被打包到全局中，所以无法实现 HMR",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-09T16:27:48.000Z",
    "created_at": "2022-05-09T13:43:02.000Z",
    "updated_at": "2022-05-09T16:27:48.000Z",
    "published_at": "2022-05-09T16:27:48.000Z",
    "first_published_at": "2022-05-09T13:44:00.346Z",
    "draft_version": 3,
    "last_editor_id": 732231,
    "word_count": 114,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76721975,
    "slug": "kggg6d",
    "title": "rollup 常用插件",
    "description": "rollup-plugin-json：可以从 json 文件中读取数据rollup-plugin-commonjs：转换 commonjsrollup-plugin-vue：解析 vue 文件rollup-plugin-postcss：解析、转换、提取 css 文件rollup-plugin-...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-09T13:41:23.000Z",
    "created_at": "2022-05-09T13:36:12.000Z",
    "updated_at": "2022-05-09T13:41:23.000Z",
    "published_at": "2022-05-09T13:41:23.000Z",
    "first_published_at": "2022-05-09T13:37:38.737Z",
    "draft_version": 3,
    "last_editor_id": 732231,
    "word_count": 87,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76721509,
    "slug": "xx4xp9",
    "title": "rollup 概念",
    "description": "Rollup 是一款 ES Modules 打包器。它也可以将项目中散落的细小模块打包为整块代码，从而使得这些划分的模块可以更好地运行在浏览器环境或者 Node.js 环境。Rollup 自身支持 ES6 模块化规范，因此不需要进行额外配置即可进行 Tree Shaking",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-09T16:50:09.000Z",
    "created_at": "2022-05-09T13:32:22.000Z",
    "updated_at": "2022-05-09T16:50:09.000Z",
    "published_at": "2022-05-09T16:50:09.000Z",
    "first_published_at": "2022-05-09T13:32:47.620Z",
    "draft_version": 5,
    "last_editor_id": 732231,
    "word_count": 92,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76189714,
    "slug": "wfdzgn",
    "title": "CSS 中可继承和不可继承的元素",
    "description": "不可继承的：display、margin、border、padding、background、height、min-height、max-height、width、min-width、max-width、overflow、position、left、right、top、bottom、z-ind...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T10:33:46.000Z",
    "created_at": "2022-05-05T10:33:08.000Z",
    "updated_at": "2022-05-05T10:33:52.000Z",
    "published_at": "2022-05-05T10:33:46.000Z",
    "first_published_at": "2022-05-05T10:33:45.727Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 127,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76189695,
    "slug": "ag74vy",
    "title": "CSS3的新特性",
    "description": "transition：过渡transform: 旋转、缩放、移动或倾斜animation: 动画gradient: 渐变box-shadow: 阴影border-radius: 圆角word-break: normal|break-all|keep-all; 文字换行(默认规则|单词也可以换行...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T10:34:12.000Z",
    "created_at": "2022-05-05T10:32:51.000Z",
    "updated_at": "2022-05-05T10:34:12.000Z",
    "published_at": "2022-05-05T10:34:12.000Z",
    "first_published_at": "2022-05-05T10:33:09.341Z",
    "draft_version": 2,
    "last_editor_id": 732231,
    "word_count": 125,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76189255,
    "slug": "uh8e2o",
    "title": "koa",
    "description": "Logger 功能Koa 的最大特色，也是最重要的一个设计，就是中间件（middleware）。为了理解中间件，我们先看一下 Logger （打印日志）功能的实现中间件的概念\"中间件\"（middleware），它处在 HTTP Request 和 HTTP Response 中间，用来实现某种...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2023-11-09T16:51:31.000Z",
    "created_at": "2022-05-05T10:28:17.000Z",
    "updated_at": "2023-11-09T16:51:32.000Z",
    "published_at": "2023-11-09T16:51:31.000Z",
    "first_published_at": "2022-05-05T10:30:00.093Z",
    "draft_version": 13,
    "last_editor_id": 732231,
    "word_count": 696,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1652114238935-e6c47451-975b-4dcc-9eef-fc46a6d7ba00.png",
    "custom_cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1652114238935-e6c47451-975b-4dcc-9eef-fc46a6d7ba00.png",
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76180642,
    "slug": "fyibny",
    "title": "文档",
    "description": "https://juejin.cn/post/6993113960564129822https://interview2.poetries.top/principle-docs/comprehensive/10-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-09T16:47:43.000Z",
    "created_at": "2022-05-05T09:27:00.000Z",
    "updated_at": "2022-05-09T16:47:44.000Z",
    "published_at": "2022-05-09T16:47:43.000Z",
    "first_published_at": "2022-05-05T09:27:05.599Z",
    "draft_version": 2,
    "last_editor_id": 732231,
    "word_count": 2,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76179418,
    "slug": "cy8e47",
    "title": "position",
    "description": "position: sticky ：粘性布局，是基于用户的滚动位置来定位的。它会在 position: relative 和 position:fixed 之间进行切换position: fixed：固定定位，可以通过 position: absolute 实现，因为 position: ab...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T09:21:40.000Z",
    "created_at": "2022-05-05T09:19:05.000Z",
    "updated_at": "2022-05-05T09:21:40.000Z",
    "published_at": "2022-05-05T09:21:40.000Z",
    "first_published_at": "2022-05-05T09:20:56.429Z",
    "draft_version": 2,
    "last_editor_id": 732231,
    "word_count": 70,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76176536,
    "slug": "hxcsv4",
    "title": "常见的 css 布局单位",
    "description": "常见的布局单位包括 px(像素)、%(百分比)、em、rem、vw/vh像素 px： 是页面布局的基础，一个像素表示终端(电脑、手机、平板等)屏幕所能显示的最小的区域，像素分为两种类型：css 像素和物理像素：css 像素：为 web 开发者提供，在 css 中使用的一个抽象单位物理像素：只与...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T09:12:42.000Z",
    "created_at": "2022-05-05T09:02:41.000Z",
    "updated_at": "2022-05-05T09:12:42.000Z",
    "published_at": "2022-05-05T09:12:42.000Z",
    "first_published_at": "2022-05-05T09:03:56.250Z",
    "draft_version": 3,
    "last_editor_id": 732231,
    "word_count": 570,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76166645,
    "slug": "zgnzmd",
    "title": "隐藏元素的方法有哪些",
    "description": "display: none：渲染树不会包含该渲染对象，因此该元素不会在页面中占据位置，也不会响应绑定的监听事件。visibility: hidden：元素在页面中仍占据空间，但是不会响应绑定的监听事件。opacity: 0：将元素的透明度设置为 0，以此来实现元素的隐藏。元素在页面中仍然占据空...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T08:15:56.000Z",
    "created_at": "2022-05-05T08:14:00.000Z",
    "updated_at": "2022-05-05T08:15:56.000Z",
    "published_at": "2022-05-05T08:15:56.000Z",
    "first_published_at": "2022-05-05T08:15:08.116Z",
    "draft_version": 3,
    "last_editor_id": 732231,
    "word_count": 292,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158659,
    "slug": "ckmwol",
    "title": "中间件",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:34:23.000Z",
    "created_at": "2022-05-05T07:34:23.000Z",
    "updated_at": "2022-05-05T07:34:30.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158637,
    "slug": "dd1zkg",
    "title": "链模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:34:16.000Z",
    "created_at": "2022-05-05T07:34:16.000Z",
    "updated_at": "2022-05-05T07:34:21.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158605,
    "slug": "iuz8cq",
    "title": "模块模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:34:07.000Z",
    "created_at": "2022-05-05T07:34:07.000Z",
    "updated_at": "2022-05-05T07:34:14.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158563,
    "slug": "fsq7zk",
    "title": "MVC、MVP、MVVM",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:33:54.000Z",
    "created_at": "2022-05-05T07:33:54.000Z",
    "updated_at": "2022-05-05T07:34:06.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158479,
    "slug": "ogglev",
    "title": "中介者模式：找媒人介绍对象",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:33:28.000Z",
    "created_at": "2022-05-05T07:33:28.000Z",
    "updated_at": "2022-05-05T07:33:51.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158417,
    "slug": "foznxz",
    "title": "职责链模式：领导，我想请个假",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:33:10.000Z",
    "created_at": "2022-05-05T07:33:10.000Z",
    "updated_at": "2022-05-05T07:33:26.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158383,
    "slug": "ro2iu8",
    "title": "命令模式：江湖通缉令",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:32:56.000Z",
    "created_at": "2022-05-05T07:32:56.000Z",
    "updated_at": "2022-05-05T07:33:07.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158339,
    "slug": "grf92w",
    "title": "迭代器模式：银行的点钞机",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:32:41.000Z",
    "created_at": "2022-05-05T07:32:41.000Z",
    "updated_at": "2022-05-05T07:32:54.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158262,
    "slug": "vtvg1m",
    "title": "模版方法模式：咖啡厅制作咖啡",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:32:17.000Z",
    "created_at": "2022-05-05T07:32:17.000Z",
    "updated_at": "2022-05-05T07:32:39.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158219,
    "slug": "psug0t",
    "title": "状态模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:32:02.000Z",
    "created_at": "2022-05-05T07:32:02.000Z",
    "updated_at": "2022-05-05T07:32:08.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158179,
    "slug": "rm1d8m",
    "title": "策略模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:31:49.000Z",
    "created_at": "2022-05-05T07:31:49.000Z",
    "updated_at": "2022-05-05T07:31:59.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158148,
    "slug": "pdlrcu",
    "title": "发布-订阅模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:31:40.000Z",
    "created_at": "2022-05-05T07:31:40.000Z",
    "updated_at": "2022-05-05T07:31:45.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158107,
    "slug": "yk1n51",
    "title": "桥接模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:31:27.000Z",
    "created_at": "2022-05-05T07:31:27.000Z",
    "updated_at": "2022-05-05T07:31:32.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158077,
    "slug": "agqniz",
    "title": "组合模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:31:19.000Z",
    "created_at": "2022-05-05T07:31:19.000Z",
    "updated_at": "2022-05-05T07:31:23.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76158039,
    "slug": "staee7",
    "title": "外观模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:31:09.000Z",
    "created_at": "2022-05-05T07:31:09.000Z",
    "updated_at": "2022-05-05T07:31:16.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76157988,
    "slug": "wze6cu",
    "title": "装饰者模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:30:58.000Z",
    "created_at": "2022-05-05T07:30:58.000Z",
    "updated_at": "2022-05-05T07:31:07.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76157968,
    "slug": "amee0r",
    "title": "适配器模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:30:49.000Z",
    "created_at": "2022-05-05T07:30:49.000Z",
    "updated_at": "2022-05-05T07:30:55.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76157912,
    "slug": "mvrd51",
    "title": "享元模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:30:34.000Z",
    "created_at": "2022-05-05T07:30:34.000Z",
    "updated_at": "2022-05-05T07:30:46.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76157876,
    "slug": "emgn4g",
    "title": "代理模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:30:24.000Z",
    "created_at": "2022-05-05T07:30:24.000Z",
    "updated_at": "2022-05-05T07:30:32.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76157841,
    "slug": "um62o3",
    "title": "建造者模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:30:13.000Z",
    "created_at": "2022-05-05T07:30:13.000Z",
    "updated_at": "2022-05-05T07:30:21.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76157793,
    "slug": "lb85cd",
    "title": "抽象工厂模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:29:59.000Z",
    "created_at": "2022-05-05T07:29:59.000Z",
    "updated_at": "2022-05-05T07:30:11.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76157741,
    "slug": "yilldv",
    "title": "工厂模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:29:44.000Z",
    "created_at": "2022-05-05T07:29:44.000Z",
    "updated_at": "2022-05-05T07:29:49.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76157711,
    "slug": "greg09",
    "title": "单例模式",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:29:34.000Z",
    "created_at": "2022-05-05T07:29:34.000Z",
    "updated_at": "2022-05-05T07:29:41.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 76155221,
    "slug": "ucwzqf",
    "title": "面向对象的三大特征和六大原则",
    "description": "三大特征封装继承多态六大原则单一职责原则 (SRP)：对一个类(方法、对象)来说，应该仅有一个引起它变化的原因，也就是说：一个对象只做一件事开放封闭原则 (OCP)：一个模块在扩展性方面应该是开放的，而在更改性方面应该是封闭的，也就是对扩展开放，对修改封闭里式替换原则 (LSP)：使用接口时，...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T07:27:17.000Z",
    "created_at": "2022-05-05T07:16:13.000Z",
    "updated_at": "2022-05-05T07:27:17.000Z",
    "published_at": "2022-05-05T07:27:17.000Z",
    "first_published_at": "2022-05-05T07:17:15.675Z",
    "draft_version": 9,
    "last_editor_id": 732231,
    "word_count": 292,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 75890758,
    "slug": "gg150b",
    "title": "this 指向",
    "description": "作为构造函数被 new 调用：this 指向当前类实例作为对象的方法使用：this 指向当前对象作为函数直接调用：在非严格模式下，this 会绑定到全局对象(浏览器下是 window、node 环境是 global)严格模式下，this 会绑定到 undefined，因为严格模式下不允许 th...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-08-04T06:06:44.000Z",
    "created_at": "2022-05-02T15:34:24.000Z",
    "updated_at": "2022-08-04T06:06:44.000Z",
    "published_at": "2022-08-04T06:06:44.000Z",
    "first_published_at": "2022-05-02T15:38:15.485Z",
    "draft_version": 23,
    "last_editor_id": 732231,
    "word_count": 634,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 75323990,
    "slug": "gehkyv",
    "title": "ts 中 enum 类型转 type",
    "description": "enum test {   A1,   A2,   A3 }  type Test = keyof typeof test",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-27T11:08:33.000Z",
    "created_at": "2022-04-27T11:07:38.000Z",
    "updated_at": "2022-04-28T16:12:48.000Z",
    "published_at": "2022-04-28T16:12:48.000Z",
    "first_published_at": "2022-04-27T11:08:33.408Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 13,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 75215602,
    "slug": "kifv58",
    "title": "开发过程中的问题",
    "description": "",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-26T17:48:50.000Z",
    "created_at": "2022-04-26T17:47:36.000Z",
    "updated_at": "2022-04-26T17:48:51.000Z",
    "published_at": "2022-04-26T17:48:50.000Z",
    "first_published_at": "2022-04-26T17:48:50.425Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": "https://cdn.nlark.com/yuque/0/2022/jpeg/732231/1650995315784-11499758-b844-4505-a68b-5981fc76c553.jpeg",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 75214621,
    "slug": "cqgawt",
    "title": "ts 中类型保护",
    "description": "类型保护方法in 关键字interface Admin {   name: string;   privileges: string[]; }  interface Employee {   name: string;   startDate: Date; }  type UnknownEmp...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-26T11:58:24.000Z",
    "created_at": "2022-04-26T17:32:50.000Z",
    "updated_at": "2022-06-26T11:58:24.000Z",
    "published_at": "2022-06-26T11:58:24.000Z",
    "first_published_at": "2022-04-26T17:41:04.070Z",
    "draft_version": 4,
    "last_editor_id": 732231,
    "word_count": 235,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 75214600,
    "slug": "ba7and",
    "title": "ts 中常用内置工具类型有哪些",
    "description": "Partialtype Partial<T> = {   [P in keyof T]?: T[P] }/**  * Make all properties in T required  */ type Required<T> = {     [P in keyof T]-?: T[P]; }...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-11T15:00:24.000Z",
    "created_at": "2022-04-26T17:31:45.000Z",
    "updated_at": "2022-06-11T15:00:24.000Z",
    "published_at": "2022-06-11T15:00:24.000Z",
    "first_published_at": "2022-04-26T17:32:40.188Z",
    "draft_version": 4,
    "last_editor_id": 732231,
    "word_count": 339,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 74888813,
    "slug": "nt0p86",
    "title": "事件相关",
    "description": "on 和 addEventListener 区别addEventListener 可以给一个事件注册多个 listener，而 on 在同一时间只能指向唯一对象addEventListener 对任何 DOM 都是有效的，而 onclick 仅限于 htmlon 事件解绑需要将其设置为 non...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-08-03T08:52:11.000Z",
    "created_at": "2022-04-24T14:08:33.000Z",
    "updated_at": "2022-08-03T08:52:11.000Z",
    "published_at": "2022-08-03T08:52:11.000Z",
    "first_published_at": "2022-04-24T14:09:11.548Z",
    "draft_version": 9,
    "last_editor_id": 732231,
    "word_count": 502,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212318,
    "slug": "qthk0m",
    "title": "AMD、CMD、UMD、CJS、ESM",
    "description": "AMD这种方案采用异步加载的方式来加载模块，模块的加载不加载后面语句的执行，所有依赖这个模块的语句都定义在一个回调函数里，等到加载完成后再执行回调函数。require.js实现了AMD规范// AMD 推崇依赖前置 define(\"alpha\", [\"require\", \"exports\", ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:13.000Z",
    "created_at": "2022-04-04T11:34:13.000Z",
    "updated_at": "2022-05-10T15:12:30.000Z",
    "published_at": "2022-04-04T11:34:13.000Z",
    "first_published_at": "2022-04-04T11:34:12.805Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1288,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212317,
    "slug": "kvz3ia",
    "title": "NodeJS",
    "description": "一、Node 基础概念1.1 Node 是什么Node.js 是一个开源与跨平台的 JavaScript 运行时环境。在浏览器外运行 V8 JavaScript 引擎（Google Chrome 的内核），利用事件驱动、非阻塞和异步输入输出模型等技术提高性能。我们可以理解为：Node.js 就...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2023-11-09T16:35:46.000Z",
    "created_at": "2022-04-04T11:34:12.000Z",
    "updated_at": "2023-11-09T16:35:47.000Z",
    "published_at": "2023-11-09T16:35:46.000Z",
    "first_published_at": "2022-04-04T11:34:12.073Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 10139,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212315,
    "slug": "ug5vit",
    "title": "ts 的模块加载机制",
    "description": "假设有一个导入语句 import { a } from \"moduleA\"首先，编译器会尝试定位需要导入的模块文件，通过绝对或者相对的路径查找方式如果上面的解析失败了，没有查找到对应的模块，编译器会尝试定位一个外部模块声明（.d.ts）最后，如果编译器还是不能解析这个模块，则会抛出一个错误 e...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:11.000Z",
    "created_at": "2022-04-04T11:34:11.000Z",
    "updated_at": "2022-05-10T15:12:30.000Z",
    "published_at": "2022-04-04T11:34:11.000Z",
    "first_published_at": "2022-04-04T11:34:11.124Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 125,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212314,
    "slug": "ld83ko",
    "title": "ts 中的 this 和 js 中的 this 有什么差异",
    "description": "TypeScript：nolmplicitThis: true的情况下，必须去声明this的类型，才能在函数或者对象中使用thisTypeScript中箭头函数的this和ES6中箭头函数中的this是一致的",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:11.000Z",
    "created_at": "2022-04-04T11:34:11.000Z",
    "updated_at": "2022-05-10T15:12:30.000Z",
    "published_at": "2022-04-04T11:34:11.000Z",
    "first_published_at": "2022-04-04T11:34:10.617Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 54,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212313,
    "slug": "ycg3n9",
    "title": "什么是 TypeScript",
    "description": "TypeScript 是一个强类型的 JavaScript 超集，支持 ES6 语法，支持面向对象编程的概念，如：类、继承、泛型等。TypeScript 并不直接在浏览器上运行，需要编译器编译成纯 JavaScript 来运行。",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:10.000Z",
    "created_at": "2022-04-04T11:34:10.000Z",
    "updated_at": "2022-05-10T15:12:30.000Z",
    "published_at": "2022-04-04T11:34:10.000Z",
    "first_published_at": "2022-04-04T11:34:10.178Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 68,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212310,
    "slug": "bvhrsb",
    "title": "复杂类型推导内容",
    "description": "implement UnionToIntersectiontype A = UnionToIntersection<{ a: string } | { b: string } | { c: string }> // { a: string } & { b: string } & { c: st...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:10.000Z",
    "created_at": "2022-04-04T11:34:10.000Z",
    "updated_at": "2022-05-10T15:12:30.000Z",
    "published_at": "2022-04-04T11:34:10.000Z",
    "first_published_at": "2022-04-04T11:34:09.630Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 2395,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212309,
    "slug": "lnqu18",
    "title": "如何在 window 扩展类型",
    "description": "declare global {   interface Window {     myCustomFn: () => void   } }",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:09.000Z",
    "created_at": "2022-04-04T11:34:09.000Z",
    "updated_at": "2022-05-10T15:12:30.000Z",
    "published_at": "2022-04-04T11:34:09.000Z",
    "first_published_at": "2022-04-04T11:34:09.104Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 12,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212308,
    "slug": "sagma3",
    "title": "ts 关键字间的区别",
    "description": "const 和 readonly 的区别const 用于变量，readonly 用于属性const 在运行时检查，readonly 在编译时检查使用 const 变量保存的数组，可以使用 push、pop 等方法。但是如果使用 ReadonlyArray<number> 声明的数组不能使用 p...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-11T14:53:24.000Z",
    "created_at": "2022-04-04T11:34:09.000Z",
    "updated_at": "2022-06-11T14:53:24.000Z",
    "published_at": "2022-06-11T14:53:24.000Z",
    "first_published_at": "2022-04-04T11:34:08.573Z",
    "draft_version": 4,
    "last_editor_id": 732231,
    "word_count": 797,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212305,
    "slug": "xgt0bn",
    "title": "const 断言",
    "description": "const断言，typescript会为变量添加一个自身的字面量类型对象字面量的属性，获得readonly的属性，成为只读属性数组字面量成为readonlytunple只读元组字面量类型不能被扩展(比如从hello类型到string类型)// type '\"Hello\"' let x = \"h...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:08.000Z",
    "created_at": "2022-04-04T11:34:08.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:08.000Z",
    "first_published_at": "2022-04-04T11:34:08.144Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 115,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212304,
    "slug": "hct7os",
    "title": "ts 是基于结构类型兼容的",
    "description": "typeScript的类型兼容是基于结构的，不是基于名义的。下面的代码在 ts中是完全可行的，同样的代码在 jav等基于名义的语言则会抛错。interface Named {   name: string }  class Person {   name: string }  let p: N...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:08.000Z",
    "created_at": "2022-04-04T11:34:08.000Z",
    "updated_at": "2022-05-10T15:12:30.000Z",
    "published_at": "2022-04-04T11:34:08.000Z",
    "first_published_at": "2022-04-04T11:34:07.656Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 77,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212301,
    "slug": "vwkgu7",
    "title": "-?、-readonly 的含义是什么",
    "description": "用于删除修饰符，-? 移除可选属性中的 ?、-readonly 移除只读属性type A = {   a: string   b: number }  type B = {   [K in keyof A]?: A[K] }  type C = {   [K in keyof B]-?: B[...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:07.000Z",
    "created_at": "2022-04-04T11:34:07.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:07.000Z",
    "first_published_at": "2022-04-04T11:34:07.135Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 77,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212298,
    "slug": "uaxegb",
    "title": "什么是泛型",
    "description": "泛型用来创建可重用的组件，一个组件可以支持多种类型的数据。这样用户就可以以自己的数据类型来使用组件，也就是说，泛型就是把类型当成参数。",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:07.000Z",
    "created_at": "2022-04-04T11:34:07.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:07.000Z",
    "first_published_at": "2022-04-04T11:34:06.669Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 67,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212297,
    "slug": "qthgtd",
    "title": "ts 如何自动生成库包的声明文件",
    "description": "可以配置 tsconfig.json文件中的declaration和outDirdeclaration: true，将会自动生成声明文件outDir: \"\"，指定目录",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:06.000Z",
    "created_at": "2022-04-04T11:34:06.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:06.000Z",
    "first_published_at": "2022-04-04T11:34:06.198Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 32,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212295,
    "slug": "wprnb4",
    "title": "如何使 ts 项目引入并识别编译为 js 的 npm 库包",
    "description": "npm install @types/xxx自己添加描述文件",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:06.000Z",
    "created_at": "2022-04-04T11:34:06.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:06.000Z",
    "first_published_at": "2022-04-04T11:34:05.707Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 11,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212294,
    "slug": "vwk8ta",
    "title": "ts 中同名的 interface 或者同名的 interface 和 class 可以合并么",
    "description": "interface 会合并class 不可以合并",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:05.000Z",
    "created_at": "2022-04-04T11:34:05.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:05.000Z",
    "first_published_at": "2022-04-04T11:34:05.224Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 10,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212293,
    "slug": "ttipbo",
    "title": "什么是抗变、双变、协变和逆变",
    "description": "Convariant协变、TS对象兼容性是协变，父类 <=子类，是可以的。子类 <=父类，错误。Contravariant逆变，禁用 strictFunctionTypes编译，函数参数类型是逆变的，父类 <=子类，是错误。子类 <= 父类，是可以的。Brivariant双向协变，函数参数的类...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:05.000Z",
    "created_at": "2022-04-04T11:34:05.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:05.000Z",
    "first_published_at": "2022-04-04T11:34:04.621Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 119,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212291,
    "slug": "lyezty",
    "title": "ts 中 ?.、??、!.、_、** 等符号的含义",
    "description": "?.：可选链??：?? 类似与短路或，?? 避免了一些意外情况 0，NaN 以及 \"\"，false 被视为 false 值。只有 undefind，null 被视为 false 值。!.：在变量名后添加 !，可以断言排除 undefined 和 null 类型_ ：声明该函数将被传递一个参数，...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:04.000Z",
    "created_at": "2022-04-04T11:34:04.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:04.000Z",
    "first_published_at": "2022-04-04T11:34:04.151Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 156,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212289,
    "slug": "ly5v3x",
    "title": "ts 中如何枚举联合类型的 key",
    "description": "type Name = { name: string } type Age = { age: number } type Union = Name | Age  type UnionKey<P> = P extends infer P ? keyof P : never type T = Un...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:04.000Z",
    "created_at": "2022-04-04T11:34:04.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:04.000Z",
    "first_published_at": "2022-04-04T11:34:03.666Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 36,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212288,
    "slug": "eb4bg0",
    "title": "ts 中的 this 和 js 中的 this 有什么差异",
    "description": null,
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:04.000Z",
    "created_at": "2022-04-04T11:34:04.000Z",
    "updated_at": "2022-04-04T11:34:15.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212286,
    "slug": "ona7hl",
    "title": "ts 中的 interface 可以给 Function/Array/Class 做声明么",
    "description": "// 函数类型 interface SearchFunc {   (source: string, subString: string): boolean } let mySearch: SearchFunc mySearch = function(source: string, subStr...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:03.000Z",
    "created_at": "2022-04-04T11:34:03.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:03.000Z",
    "first_published_at": "2022-04-04T11:34:03.044Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 95,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212284,
    "slug": "ku85bk",
    "title": "ts 中的访问修饰符",
    "description": "public，任何地方private，只能在类内部访问protected，能在类的内部访问和子类中访问readonly，属性设置为只读",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:03.000Z",
    "created_at": "2022-04-04T11:34:03.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:03.000Z",
    "first_published_at": "2022-04-04T11:34:02.614Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 41,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212282,
    "slug": "oznghr",
    "title": "ts 中枚举和常量枚举(const枚举)的区别",
    "description": "枚举会被编译时会编译成一个对象，可以被当作对象使用const 枚举会在 ts 编译期间被删除，避免额外的性能开销// 普通枚举 enum Witcher {   Ciri = 'Queen',   Geralt = 'Geralt of Rivia' }  type Obj = {   [ke...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:02.000Z",
    "created_at": "2022-04-04T11:34:02.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:02.000Z",
    "first_published_at": "2022-04-04T11:34:02.170Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 121,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212279,
    "slug": "qg8cut",
    "title": "计算机网络精选",
    "description": "传输层传输层协议主要是为不同主机上的不同进程间提供了逻辑通信的功能。传输层只工作在端系统中。多路复用与多路分解将传输层报文段中的数据交付到正确的套接字的工作被称为多路分解。在源主机上从不同的套接字中收集数据，封装头信息生成报文段后，将报文段传递到网络层，这个过程被称为多路复用。无连接的多路复用...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:02.000Z",
    "created_at": "2022-04-04T11:34:02.000Z",
    "updated_at": "2022-05-10T15:12:31.000Z",
    "published_at": "2022-04-04T11:34:02.000Z",
    "first_published_at": "2022-04-04T11:34:01.675Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 5893,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647358828647-a5fcf4e0-a755-4189-ac81-8563aca79f9e.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212277,
    "slug": "ofgykz",
    "title": "JavaScript 精选",
    "description": "1. 介绍 js 的基本数据类型。js 一共有六种基本数据类型，分别是 Undefined、Null、Boolean、Number、String，还有在 ES6 中新增的 Symbol 和 ES10 中新增的 BigInt 类型。 Symbol 代表创建后独一无二且不可变的数据类型，它的出现我...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:01.000Z",
    "created_at": "2022-04-04T11:34:01.000Z",
    "updated_at": "2022-05-10T15:12:32.000Z",
    "published_at": "2022-04-04T11:34:01.000Z",
    "first_published_at": "2022-04-04T11:34:00.502Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 47442,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212275,
    "slug": "tdmwtw",
    "title": "Html 精选",
    "description": "1. DOCTYPE 的作用是什么？相关知识点：IE5.5 引入了文档模式的概念，而这个概念是通过使用文档类型（DOCTYPE）切换实现的。  <!DOCTYPE>声明位于 HTML 文档中的第一行，处于 <html> 标签之前。告知浏览器的解析器用什么文档标准解析这个文档。  DOCTYPE...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:34:00.000Z",
    "created_at": "2022-04-04T11:34:00.000Z",
    "updated_at": "2022-05-10T15:12:32.000Z",
    "published_at": "2022-04-04T11:34:00.000Z",
    "first_published_at": "2022-04-04T11:33:59.580Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 16555,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1648738878099-d78585b9-a251-4785-a6d9-774341da2576.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212272,
    "slug": "tf1yfg",
    "title": "Css 精选",
    "description": "1.介绍一下标准的 CSS 的盒子模型？低版本 IE 的盒子模型有什么不同的？相关知识点：（1）有两种盒子模型：IE盒模型（border-box）、W3C标准盒模型（content-box） （2）盒模型：分为内容（content）、填充（padding）、边界（margin）、边框（bord...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:59.000Z",
    "created_at": "2022-04-04T11:33:59.000Z",
    "updated_at": "2022-05-10T15:12:32.000Z",
    "published_at": "2022-04-04T11:33:59.000Z",
    "first_published_at": "2022-04-04T11:33:58.613Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 30407,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1648738863271-1c01fdd0-35b3-4c78-beee-8d67b87396e2.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212270,
    "slug": "tqxxpv",
    "title": "操作系统精选",
    "description": "第一章 引论1. 操作系统定义操作系统是运行在内核态的软件，它执行两个基本上独立的任务。隐藏计算机底层硬件的实现，为用户及应用程序提供一个资源集的清晰抽象。管理计算机硬件资源。任何操作系统的核心是它可处理的系统调用集。这些系统带欧阳真实地说明了操作系统做的工作。2. 计算机运行模式多数计算机有...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:58.000Z",
    "created_at": "2022-04-04T11:33:58.000Z",
    "updated_at": "2022-05-10T15:12:32.000Z",
    "published_at": "2022-04-04T11:33:58.000Z",
    "first_published_at": "2022-04-04T11:33:57.644Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 12922,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647358712354-28baa2f7-a6d8-40cb-8ed0-62b316515dd7.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212269,
    "slug": "nvbtiy",
    "title": "npm、yarn、pnpm",
    "description": "npmpackage-lock.json采用的是JSON的结构npm v2npm v2会安装每一个包所依赖的所有依赖项，然而这个结构可能会很长。这对于基于unix的操作系统来说只不过是一个小烦恼，但对于windows来说是个破坏性的东西，因为有很多程序无法处理超过260个字符的文件路径名npm...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-08-09T10:27:03.000Z",
    "created_at": "2022-04-04T11:33:57.000Z",
    "updated_at": "2022-08-09T10:27:03.000Z",
    "published_at": "2022-08-09T10:27:03.000Z",
    "first_published_at": "2022-04-04T11:33:57.159Z",
    "draft_version": 2,
    "last_editor_id": 732231,
    "word_count": 759,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212268,
    "slug": "xgnw24",
    "title": "Monorepo",
    "description": "大型项目管理  Monorepo背景一个体系庞大的代码库拆分成多个单独的具有独立版本的 package，对于开发实际的代码共享非常有用。数量较少的时候，多个仓库维护不会有太大问题，但是当独立 package 数量越来越多的时候，就会暴露出很多开发困扰的问题：跨越很多代码存储库，修改代码很麻烦i...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-09T16:14:37.000Z",
    "created_at": "2022-04-04T11:33:56.000Z",
    "updated_at": "2022-05-09T16:14:38.000Z",
    "published_at": "2022-05-09T16:14:37.000Z",
    "first_published_at": "2022-04-04T11:33:56.374Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 6761,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1648745861879-4f0cfeac-98d9-4bb6-976c-ce3d58870495.png",
    "custom_cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1648745861879-4f0cfeac-98d9-4bb6-976c-ce3d58870495.png",
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212267,
    "slug": "zbte28",
    "title": "ESM 、 esbuild、rollup",
    "description": "ESMESM 是 es6 出现后，浏览器支持的一种模块化方案，允许在浏览器实现模块化。与 CommonJS、AMD 不同，ESM 对外借口只是一种静态定义，为编译时记载，遇到模块加载命令 import，就会生成一个只读引用。等脚本真正执行时，再根据这个只读引用，到被加载的那个模块内取值。由于 ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:56.000Z",
    "created_at": "2022-04-04T11:33:56.000Z",
    "updated_at": "2022-05-10T15:12:32.000Z",
    "published_at": "2022-04-04T11:33:56.000Z",
    "first_published_at": "2022-04-04T11:33:55.824Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 656,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1648048044646-2af9cb9a-e215-4d1b-b63f-b40ea00780e7.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212266,
    "slug": "qyb5qk",
    "title": "webpack 中的 module 是什么",
    "description": "webpack 支持 ESmodule、CommonJS、AMD、Assets(image、font、video、audio、json)",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:55.000Z",
    "created_at": "2022-04-04T11:33:55.000Z",
    "updated_at": "2022-05-10T15:12:32.000Z",
    "published_at": "2022-04-04T11:33:55.000Z",
    "first_published_at": "2022-04-04T11:33:55.284Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 21,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212265,
    "slug": "oop1cx",
    "title": "简易 vite 实现",
    "description": "const Koa = require(\"koa\") const fs = require(\"fs\") const path = require(\"path\") const compilerSfc = require(\"@vue/compiler-sfc\") const compilerDom...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:55.000Z",
    "created_at": "2022-04-04T11:33:55.000Z",
    "updated_at": "2022-05-10T15:12:33.000Z",
    "published_at": "2022-04-04T11:33:55.000Z",
    "first_published_at": "2022-04-04T11:33:54.802Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 377,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212261,
    "slug": "hpfp18",
    "title": "vite 如何兼容非 commonjs 模块",
    "description": "业界是有一些如 lebab 的方法可以将 commjs 代码快速转化为 esm 的，但是对于一些格式不规范的代码，可能还是需要单独处理。",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:54.000Z",
    "created_at": "2022-04-04T11:33:54.000Z",
    "updated_at": "2022-05-10T15:12:33.000Z",
    "published_at": "2022-04-04T11:33:54.000Z",
    "first_published_at": "2022-04-04T11:33:54.259Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 51,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212260,
    "slug": "gw29gz",
    "title": "组件嵌套层级过深，是否会影响 vite 速度",
    "description": "看到请求 lodash 时 651 个请求只耗时 1.53s。这个耗时是完全可以接受的Vite 是完全按需加载的，在页面初始化时只会请求初始化页面的一些组件，也就是说即使层级深，但如果未展示可以不加载缓存可以降低耗时",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:54.000Z",
    "created_at": "2022-04-04T11:33:54.000Z",
    "updated_at": "2022-05-10T15:12:33.000Z",
    "published_at": "2022-04-04T11:33:54.000Z",
    "first_published_at": "2022-04-04T11:33:53.807Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 88,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212258,
    "slug": "de75ab",
    "title": "vite 的热更新原理",
    "description": "Vite 的热加载原理，其实就是在客户端与服务端建立了一个 websocket 连接，当代码被修改时，服务端发送消息通知客户端去请求修改模块的代码，完成热更新。服务端：服务端做的就是监听代码文件的改变，在合适的时机向客户端发送 websocket 信息通知客户端去请求新的模块代码。客户端：Vi...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:53.000Z",
    "created_at": "2022-04-04T11:33:53.000Z",
    "updated_at": "2022-05-10T15:12:33.000Z",
    "published_at": "2022-04-04T11:33:53.000Z",
    "first_published_at": "2022-04-04T11:33:53.355Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 523,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212257,
    "slug": "xqi8st",
    "title": "vite 的优缺点",
    "description": "优点：快速的冷启动: 采用 No Bundle 和 esbuild 预构建，速度远快于 Webpack高效的热更新：基于 ESM 实现，同时利用 HTTP 头来加速整个页面的重新加载，增加缓存策略真正的按需加载: 基于浏览器 ESM 的支持，实现真正的按需加载缺点：生产环境由于 esbuild...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:53.000Z",
    "created_at": "2022-04-04T11:33:53.000Z",
    "updated_at": "2022-05-10T15:12:33.000Z",
    "published_at": "2022-04-04T11:33:53.000Z",
    "first_published_at": "2022-04-04T11:33:52.906Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 313,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212256,
    "slug": "wfsv84",
    "title": "vite 生产环境使用了 rollup，是否能在生产环境使用 esm",
    "description": "如果项目不需要兼容 IE11 等低版本的浏览器，自然是可以使用的。但更通用的方案可能还是类似 ployfill.io 的原理实现， 提前构建好 bundle.js 与 es module 两个版本的代码，根据浏览器的实际兼容性去动态选择导入哪个模块。",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:52.000Z",
    "created_at": "2022-04-04T11:33:52.000Z",
    "updated_at": "2022-05-10T15:12:33.000Z",
    "published_at": "2022-04-04T11:33:52.000Z",
    "first_published_at": "2022-04-04T11:33:52.485Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 88,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212255,
    "slug": "goy7xw",
    "title": "构建工具和打包工具的区别",
    "description": "构建过程注重 预编译、语法检查、词法检查、依赖处理、文件合并、文件压缩、单元测试、版本管理 等 。打包工具更注重打包这一过程，主要包括 依赖管理 和 版本管理。",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:52.000Z",
    "created_at": "2022-04-04T11:33:52.000Z",
    "updated_at": "2022-05-10T15:12:33.000Z",
    "published_at": "2022-04-04T11:33:52.000Z",
    "first_published_at": "2022-04-04T11:33:51.992Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 74,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212253,
    "slug": "qi5rpw",
    "title": "symbol",
    "description": "创建 symbollet s = Symbol('foo')Symbol 函数每次调用会创建一个新的唯一值console.log(Symbol() === Symbol()) // false共享 symbol要创建一个共享的 symbol，要使用 Symbol.for() 函数，而不是 Sy...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:52.000Z",
    "created_at": "2022-04-04T11:33:52.000Z",
    "updated_at": "2022-05-10T15:12:33.000Z",
    "published_at": "2022-04-04T11:33:52.000Z",
    "first_published_at": "2022-04-04T11:33:51.505Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 170,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212250,
    "slug": "qa0ptd",
    "title": "vite 的实现原理",
    "description": "vite 的基本实现原理，就是启动一个 Koa 服务器拦截由浏览器请求 ESM 的请求。通过请求的路径找到目录下对应的文件做一定的处理最终以 ESM 的格式返回给客户端。依赖处理vite 通过在一开始将应用中的模块区分为依赖和源码两类，改进了开发服务器启动时间。依赖大多为在开发时不会变动的纯 ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:51.000Z",
    "created_at": "2022-04-04T11:33:51.000Z",
    "updated_at": "2022-05-10T15:12:33.000Z",
    "published_at": "2022-04-04T11:33:51.000Z",
    "first_published_at": "2022-04-04T11:33:50.928Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1474,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212248,
    "slug": "dxfgvc",
    "title": "transition 和 animation 的区别",
    "description": "animation 可以用 name 设置动画的名称，用 duration 设置动画完成的周期，用 timing-function 设置动画的速度曲线，delay 设置动画什么时候开始，iteration-count 设置动画播放的次数，direction 规定下一个周期是否逆向的播放，pla...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:50.000Z",
    "created_at": "2022-04-04T11:33:50.000Z",
    "updated_at": "2022-05-10T15:12:33.000Z",
    "published_at": "2022-04-04T11:33:50.000Z",
    "first_published_at": "2022-04-04T11:33:50.461Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 521,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212247,
    "slug": "vc6k8l",
    "title": "promise",
    "description": "基本过程：初始化 Promise 状态（pending）立即执行 Promise 中传入的 fn 函数，将Promise 内部 resolve、reject 函数作为参数传递给 fn ，按事件机制时机处理执行 then(..) 注册回调处理数组（then 方法可被同一个 promise 调用多...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-24T11:12:02.000Z",
    "created_at": "2022-04-04T11:33:50.000Z",
    "updated_at": "2022-04-24T11:12:02.000Z",
    "published_at": "2022-04-24T11:12:02.000Z",
    "first_published_at": "2022-04-04T11:33:49.999Z",
    "draft_version": 4,
    "last_editor_id": 732231,
    "word_count": 474,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212245,
    "slug": "bcw1ix",
    "title": "udp 协议",
    "description": "UDP是传输层的协议，功能即为在IP的数据报服务之上增加了最基本的服务：复用和分用以及差错检测。UDP提供不可靠服务，具有 TCP 所没有的优势：UDP无连接，时间上不存在建立连接需要的时延。空间上，TCP需要在端系统中维护连接状态，需要一定的开销。此连接装入包括接收和发送缓存，拥塞控制参数和...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:50.000Z",
    "created_at": "2022-04-04T11:33:50.000Z",
    "updated_at": "2022-05-10T15:12:33.000Z",
    "published_at": "2022-04-04T11:33:50.000Z",
    "first_published_at": "2022-04-04T11:33:49.523Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 828,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212244,
    "slug": "lfb4ol",
    "title": "html5 拖拽 api",
    "description": "dragstart：事件主体是被拖放元素，在开始拖放被拖放元素时触发。darg：事件主体是被拖放元素，在正在拖放被拖放元素时触发。dragenter：事件主体是目标元素，在被拖放元素进入某元素时触发。dragover：事件主体是目标元素，在被拖放在某元素内移动时触发。dragleave：事件主...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:49.000Z",
    "created_at": "2022-04-04T11:33:49.000Z",
    "updated_at": "2022-05-10T15:12:33.000Z",
    "published_at": "2022-04-04T11:33:49.000Z",
    "first_published_at": "2022-04-04T11:33:49.040Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 192,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212243,
    "slug": "lefokp",
    "title": "html5 离线储存相关问题",
    "description": "html5 离线存储使用方式和原理离线存储指的是：在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。原理：HTML5的离线存储是基于一个新建的 .appcache 文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:49.000Z",
    "created_at": "2022-04-04T11:33:49.000Z",
    "updated_at": "2022-05-10T15:12:34.000Z",
    "published_at": "2022-04-04T11:33:49.000Z",
    "first_published_at": "2022-04-04T11:33:48.569Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 946,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212241,
    "slug": "qtgnxp",
    "title": "<script>标签",
    "description": "内联和外部引用的区别内联代码加载在同一页面中，因此不需要触发另一个请求立即被执行async 和 defer 属性无效使用服务端动态渲染时会很有帮助外部脚本文件更好滴分离关注点和可维护性async 和 defer 属性有效，因此如果存在此属性，脚本将更改默认行为下载外部脚本后，浏览器会将其存储在...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-08-25T03:21:54.000Z",
    "created_at": "2022-04-04T11:33:48.000Z",
    "updated_at": "2022-08-25T03:21:56.000Z",
    "published_at": "2022-08-25T03:21:54.000Z",
    "first_published_at": "2022-04-04T11:33:48.080Z",
    "draft_version": 24,
    "last_editor_id": 732231,
    "word_count": 577,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647787938122-fc0ec65e-ea76-4f88-9779-0ac34cd18417.png",
    "custom_cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647787938122-fc0ec65e-ea76-4f88-9779-0ac34cd18417.png",
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212240,
    "slug": "orgrng",
    "title": "web worker",
    "description": "在 HTML 页面中，如果在执行脚本时，页面的状态是不可相应的，直到脚本执行完成后，页面才变成可相应。web worker 是运行在后台的 js，独立于其他脚本，不会影响页面的性能。 并且通过 postMessage 将结果回传到主线程。这样在进行复杂操作的时候，就不会阻塞主线程了。如何创建 ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:48.000Z",
    "created_at": "2022-04-04T11:33:48.000Z",
    "updated_at": "2022-05-10T15:12:34.000Z",
    "published_at": "2022-04-04T11:33:48.000Z",
    "first_published_at": "2022-04-04T11:33:47.607Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 154,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212238,
    "slug": "iiw9gy",
    "title": "行内元素、块元素、空元素",
    "description": "行内元素有：a b span img input select strong；块级元素有：div ul ol li dl dt dd h1 h2 h3 h4 h5 h6 p；空元素，即没有内容的HTML元素。空元素是在开始标签中关闭的，也就是空元素没有闭合标签：常见的有：<br>、<hr>、<...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:47.000Z",
    "created_at": "2022-04-04T11:33:47.000Z",
    "updated_at": "2022-05-10T15:12:34.000Z",
    "published_at": "2022-04-04T11:33:47.000Z",
    "first_published_at": "2022-04-04T11:33:47.138Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 120,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212235,
    "slug": "wi8m4d",
    "title": "DOM 和 BOM",
    "description": "DOM 指的是文档对象模型，它指的是把文档当做一个对象，这个对象主要定义了处理网页内容的方法和接口。BOM 指的是浏览器对象模型，它指的是把浏览器当做一个对象来对待，这个对象主要定义了与浏览器进行交互的法和接口。BOM的核心是 window，而 window 对象具有双重角色，它既是通过 js...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:47.000Z",
    "created_at": "2022-04-04T11:33:47.000Z",
    "updated_at": "2022-05-10T15:12:34.000Z",
    "published_at": "2022-04-04T11:33:47.000Z",
    "first_published_at": "2022-04-04T11:33:46.700Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 236,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212232,
    "slug": "kbmg21",
    "title": "escape、encodeURI、encodeURIComponent 的区别",
    "description": "encodeURI 是对整个 URI 进行转义，将 URI 中的非法字符转换为合法字符，所以对于一些在 URI 中有特殊意义的字符不会进行转义。encodeURIComponent 是对 URI 的组成部分进行转义，所以一些特殊字符也会得到转义。escape 和 encodeURI 的作用相同...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:46.000Z",
    "created_at": "2022-04-04T11:33:46.000Z",
    "updated_at": "2022-05-10T15:12:34.000Z",
    "published_at": "2022-04-04T11:33:46.000Z",
    "first_published_at": "2022-04-04T11:33:46.154Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 155,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212231,
    "slug": "bqhdyg",
    "title": "for...in 和 for...of 的区别",
    "description": "for ... in一般用于遍历对象的可枚举属性，以及对象从构造函数原型中继承的属性，对于每个不同的属性，语句都会被执行不适用于对数组的遍历，因为输出的顺序是不固定的如果迭代的对象的变量值是 null 或 undefined，for ... in 将不会执行循环体，建议在使用 for ... ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-08-03T06:46:40.000Z",
    "created_at": "2022-04-04T11:33:46.000Z",
    "updated_at": "2022-08-03T06:46:40.000Z",
    "published_at": "2022-08-03T06:46:40.000Z",
    "first_published_at": "2022-04-04T11:33:45.691Z",
    "draft_version": 8,
    "last_editor_id": 732231,
    "word_count": 391,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212229,
    "slug": "wzg6fe",
    "title": "什么是 JavaScript 中的包装类型？",
    "description": "在 JavaScript 中，基本类型是没有属性和方法的，但是为了便于操作基本类型的值，在调用基本类型的属性或方法时 JavaScript 会在后台隐式地将基本类型的值转换为对象，如：const a = \"abc\"; a.length; // 3 a.toUpperCase(); // \"AB...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:45.000Z",
    "created_at": "2022-04-04T11:33:45.000Z",
    "updated_at": "2022-05-10T15:12:34.000Z",
    "published_at": "2022-04-04T11:33:45.000Z",
    "first_published_at": "2022-04-04T11:33:45.231Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 270,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212227,
    "slug": "iz1yst",
    "title": "常见的位运算符有哪些, 其计算规则是什么",
    "description": "现代计算机中数据都是以二进制的形式存储的，即 0、1 两种状态，计算机对二进制数据进行的运算加减乘除等都是叫位运算，即将符号位共同参与运算的运算。常见的位运算有以下几种：运算符描述运算规则&与两个位都为 1 时，结果才为 1|或^异或两个位相同为 0，相异为 1~取反0 变 1，1 变 0<<...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:44.000Z",
    "created_at": "2022-04-04T11:33:45.000Z",
    "updated_at": "2022-05-10T15:12:34.000Z",
    "published_at": "2022-04-04T11:33:44.000Z",
    "first_published_at": "2022-04-04T11:33:44.485Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1409,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212226,
    "slug": "es6bst",
    "title": "Unicode、UTF-8、UTF-16、UTF-32有什么区别",
    "description": "Unicode 是编码字符集（字符集），而UTF-8、UTF-16、UTF-32是字符集编码（编码规则）；UTF-16 使用变长码元序列的编码方式，相较于定长码元序列的UTF-32算法更复杂，甚至比同样是变长码元序列的UTF-8也更为复杂，因为其引入了独特的代理对这样的代理机制；UTF-8需要...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:44.000Z",
    "created_at": "2022-04-04T11:33:44.000Z",
    "updated_at": "2022-05-10T15:12:34.000Z",
    "published_at": "2022-04-04T11:33:44.000Z",
    "first_published_at": "2022-04-04T11:33:43.987Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 285,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212225,
    "slug": "yyhf0u",
    "title": "assets 和 static 的区别",
    "description": "相同点：assets 和 static 两个都是存放静态资源文件。项目中所需要的资源文件图片，字体图标，样式文件等都可以放在这两个文件下，这是相同点不相同点：assets 中存放的静态资源文件在项目打包时，也就是运行 npm run build 时会将 assets 中放置的静态资源文件进行打...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:44.000Z",
    "created_at": "2022-04-04T11:33:44.000Z",
    "updated_at": "2022-05-10T15:12:34.000Z",
    "published_at": "2022-04-04T11:33:44.000Z",
    "first_published_at": "2022-04-04T11:33:43.521Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 409,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212224,
    "slug": "pshmo2",
    "title": "单页应用与多页应用的区别",
    "description": "概念：SPA单页面应用（SinglePage Web Application），指只有一个主页面的应用，一开始只需要加载一次js、css等相关资源。所有内容都包含在主页面，对每一个功能模块组件化。单页应用跳转，就是切换相关组件，仅仅刷新局部资源。MPA多页面应用 （MultiPage Appl...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:43.000Z",
    "created_at": "2022-04-04T11:33:43.000Z",
    "updated_at": "2022-05-10T15:12:34.000Z",
    "published_at": "2022-04-04T11:33:43.000Z",
    "first_published_at": "2022-04-04T11:33:43.016Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 156,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647785477985-4424687e-b30a-4031-9041-00549d710797.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212223,
    "slug": "kdnt9x",
    "title": "composition API 与 react hook 区别",
    "description": "从React Hook的实现角度看，React Hook是根据useState调用的顺序来确定下一次重渲染时的state是来源于哪个useState，所以出现了以下限制不能在循环、条件、嵌套函数中调用Hook必须确保总是在你的React函数的顶层调用HookuseEffect、useMemo等...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:43.000Z",
    "created_at": "2022-04-04T11:33:43.000Z",
    "updated_at": "2022-05-10T15:12:34.000Z",
    "published_at": "2022-04-04T11:33:43.000Z",
    "first_published_at": "2022-04-04T11:33:42.502Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 343,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212222,
    "slug": "nm61qs",
    "title": "vue 和 react 的对比",
    "description": "相似之处：都将注意力集中保持在核心库，而将其他功能如路由和全局状态管理交给相关的库都有自己的构建工具，能让你得到一个根据最佳实践设置的项目模板。都使用了 Virtual DOM（虚拟 DOM）提高重绘性能都有 props 的概念，允许组件间的数据传递都鼓励组件化应用，将应用分拆成一个个功能明确...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-28T16:50:32.000Z",
    "created_at": "2022-04-04T11:33:42.000Z",
    "updated_at": "2022-04-28T16:50:32.000Z",
    "published_at": "2022-04-28T16:50:32.000Z",
    "first_published_at": "2022-04-04T11:33:41.914Z",
    "draft_version": 2,
    "last_editor_id": 732231,
    "word_count": 767,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212221,
    "slug": "glhczw",
    "title": "props.children 和 React.Children 的区别",
    "description": "在 React 中，当涉及组件嵌套，在父组件中使用 props.children 把所有子组件显示出来。如下：function ParentComponent(props){ \treturn ( \t\t<div> \t\t\t{props.children} \t\t</div> \t) }如果想把父组件中...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-29T20:43:42.000Z",
    "created_at": "2022-04-04T11:33:41.000Z",
    "updated_at": "2022-05-29T20:43:42.000Z",
    "published_at": "2022-05-29T20:43:42.000Z",
    "first_published_at": "2022-04-04T11:33:41.420Z",
    "draft_version": 5,
    "last_editor_id": 732231,
    "word_count": 427,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212219,
    "slug": "egaslg",
    "title": "服务端渲染 ssr",
    "description": "服务端渲染是数据与模版组成的html，即 HTML = 数据 ＋ 模版。将组件或页面通过服务器生成html字符串，再发送到浏览器，最后将静态标记\"混合\"为客户端上完全交互的应用程序。页面没使用服务渲染，当请求页面时，返回的body里为空，之后执行js将html结构注入到body里，结合css显...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:41.000Z",
    "created_at": "2022-04-04T11:33:41.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:41.000Z",
    "first_published_at": "2022-04-04T11:33:40.830Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 905,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647784581274-cf1fcb04-07fb-486e-a598-0fd9e3f0306f.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212218,
    "slug": "wethcy",
    "title": "实现原理",
    "description": "客户端路由实现的思想：基于 hash 的路由：通过监听hashchange事件，感知 hash 的变化 改变 hash 可以直接通过 location.hash=xxx基于 H5 history 路由： 改变 url 可以通过 history.pushState 和 resplaceState...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:40.000Z",
    "created_at": "2022-04-04T11:33:40.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:40.000Z",
    "first_published_at": "2022-04-04T11:33:40.268Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 192,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212216,
    "slug": "qy4smk",
    "title": "哪些方法会触发 react 重渲染",
    "description": "setState 方法被调用。(setState 传入 null 时，并不会触发 render)父组件重新渲染",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:40.000Z",
    "created_at": "2022-04-04T11:33:40.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:40.000Z",
    "first_published_at": "2022-04-04T11:33:39.770Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 26,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212215,
    "slug": "aopf74",
    "title": "props 相关问题",
    "description": "state 和 props 有什么区别propsprops 是一个从外部传进组件的参数，主要作用就是从父组件向子组件传递数据，它具有可读性和不可变性，只能通过外部组件主动传入新的 props 来重新渲染子组件，否则子组件的 props 以及展现形式不会改变。statestate 的主要作用是用...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:39.000Z",
    "created_at": "2022-04-04T11:33:39.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:39.000Z",
    "first_published_at": "2022-04-04T11:33:39.255Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1124,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212214,
    "slug": "dasmdx",
    "title": "Fragment 的理解和使用场景",
    "description": "在 React 中，组件返回的元素只能有一个根元素。为了不添加多余的 DOM 节点，我们可以使用 Fragment 标签来包裹所有的元素，Fragment 标签不会渲染出任何元素。React 官方对 Fragment 的解释：React 中的一个常见模式是一个组件返回多个元素。Fragment...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:39.000Z",
    "created_at": "2022-04-04T11:33:39.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:39.000Z",
    "first_published_at": "2022-04-04T11:33:38.794Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 167,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212210,
    "slug": "biktsf",
    "title": "context 相关问题",
    "description": "对 React context 的理解在React中，数据传递一般使用props传递数据，维持单向数据流，这样可以让组件之间的关系变得简单且可预测，但是单项数据流在某些场景中并不适用。单纯一对的父子组件传递并无问题，但要是组件之间层层依赖深入，props就需要层层传递显然，这样做太繁琐了。Co...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:38.000Z",
    "created_at": "2022-04-04T11:33:38.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:38.000Z",
    "first_published_at": "2022-04-04T11:33:38.260Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 777,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212208,
    "slug": "bgt6ta",
    "title": "受控组件和非受控组件",
    "description": "页面中所有输入类的DOM如果是现用现取的称为非受控组件，而通过setState将输入的值维护到了state中，需要时再从state中取出，这里的数据就受到了state的控制，称为受控组件。受控组件 在使用表单来收集用户输入时，例如<input><select><textearea>等元素都要绑...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:38.000Z",
    "created_at": "2022-04-04T11:33:38.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:38.000Z",
    "first_published_at": "2022-04-04T11:33:37.610Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 746,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212207,
    "slug": "ypfivt",
    "title": "Component 和 PureComponent 的区别",
    "description": "PureComponent 表示一个纯组件，可以用来优化 React 程序，减少 render 函数执行的次数，从而提高组件的性能。在 React 中，当 prop 或者 state 发生变化时，可以通过在 shouldComponentUpdate 生命周期函数中执行 return fals...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:37.000Z",
    "created_at": "2022-04-04T11:33:37.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:37.000Z",
    "first_published_at": "2022-04-04T11:33:37.125Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 331,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212205,
    "slug": "pwqm3y",
    "title": "setState 相关问题",
    "description": "setState 之后发生了什么简单版本react 利用状态队列机制实现了 setState 的\"异步\"更新，避免频繁的重复更新 state。首先将新的 state 合并到状态更新队列中，然后根据更新队列和 shouldComponentUpdate 的状态来判断是否需要更新组件。复杂版本en...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:37.000Z",
    "created_at": "2022-04-04T11:33:37.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:37.000Z",
    "first_published_at": "2022-04-04T11:33:36.610Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1484,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647436689950-e2481d82-ba34-4444-999d-6394d138a83c.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212203,
    "slug": "gbrvz9",
    "title": "有状态组件和无状态组件的理解及使用场景",
    "description": "有状态组件特点：是类组件有继承可以使用this可以使用react的生命周期使用较多，容易频繁触发生命周期钩子函数，影响性能内部使用 state，维护自身状态的变化，有状态组件根据外部组件传入的 props 和自身的 state进行渲染。使用场景：需要使用到状态的。需要使用状态操作组件的（无状态...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:36.000Z",
    "created_at": "2022-04-04T11:33:36.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:36.000Z",
    "first_published_at": "2022-04-04T11:33:35.975Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 641,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212202,
    "slug": "sg5qwg",
    "title": "服务端性能优化 cdn、ssr",
    "description": "cdn 服务器cdn 概念CDN（Content Delivery Network，内容分发网络）是指一种通过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。网站通常将...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:35.000Z",
    "created_at": "2022-04-04T11:33:35.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:35.000Z",
    "first_published_at": "2022-04-04T11:33:35.476Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 3105,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647629486677-efc0fdaf-02cd-49d5-8ec2-916cf60607f8.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212201,
    "slug": "nnwww9",
    "title": "MVVM、MVC、MVP 的区别",
    "description": "MVC 代表模型、视图、控制器，视图可以直接访问模型。所以，视图里面会包含模型信息，MVC 关注的是模型不变，所以 MVC 中，模型不依赖视图，但是视图依赖模型。MVVM 代表模型、视图和 VM，VM 作为模型和视图之间的桥梁，当模型层数据发生改变，VM 会检测到并通知视图层进行响应的修改。M...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:35.000Z",
    "created_at": "2022-04-04T11:33:35.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:35.000Z",
    "first_published_at": "2022-04-04T11:33:34.999Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 951,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647784994188-a3981c03-8c9b-4993-bc11-a0dd3f2f8602.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212199,
    "slug": "ki7zks",
    "title": "template 和 jsx 的区别",
    "description": "template 和 jsx 都是 render 的一种表达形式。不同的是：jsx 相对于 template 而言，具有更高的灵活性，在复杂组件中，更具有优势而 template 虽然显得有些呆滞。但是 template 在代码结构上更符合视图与逻辑分离的习惯，更简单、更直接、更好维护。",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:35.000Z",
    "created_at": "2022-04-04T11:33:35.000Z",
    "updated_at": "2022-05-10T15:12:35.000Z",
    "published_at": "2022-04-04T11:33:35.000Z",
    "first_published_at": "2022-04-04T11:33:34.536Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 95,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212197,
    "slug": "gwyegl",
    "title": "webpack 5 和 webpack 4 的区别",
    "description": "内置静态资源构建能力 Asset Modules在 webpack v5 之前，通常使用：raw-loader 将文件导入为字符串url-loader 将文件作为 data URI 内联到 bundle 中file-loader 将文件发送到输出目录资源模块类型 asset module ty...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:34.000Z",
    "created_at": "2022-04-04T11:33:34.000Z",
    "updated_at": "2022-05-10T15:12:36.000Z",
    "published_at": "2022-04-04T11:33:34.000Z",
    "first_published_at": "2022-04-04T11:33:33.942Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 2844,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1648046099220-3f4e6738-7bab-465b-af99-22d0f2dfd0e3.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212195,
    "slug": "bgudpr",
    "title": "实现原理",
    "description": "vue-router 通过 hash 和 history 两种方式实现前端路由。更新视图但不重新请求页面，而是前端路由原理的核心之一。hash 模式和 history 模式hash 采用了 window.location.hash 的值来获取 URL 中 # 后面的内容。hash 特点：has...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:33.000Z",
    "created_at": "2022-04-04T11:33:33.000Z",
    "updated_at": "2022-05-10T15:12:36.000Z",
    "published_at": "2022-04-04T11:33:33.000Z",
    "first_published_at": "2022-04-04T11:33:33.348Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 392,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212194,
    "slug": "tqdy3a",
    "title": "函数式编程的理解",
    "description": "函数式编程有两个核心概念数据不可变(无副作用)：它要求你所有的数据都是不可变的，这意味着如果你想修改一个对象，那你应该创建一个新的对象用来修改，而不是修改已有的对象。无状态：主要是强调对于一个函数，不管你何时运行，它都应该像第一次运行一样，给定相同的输入，给出相同的输出，完全不依赖外部状态的变...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:33.000Z",
    "created_at": "2022-04-04T11:33:33.000Z",
    "updated_at": "2022-05-10T15:12:36.000Z",
    "published_at": "2022-04-04T11:33:33.000Z",
    "first_published_at": "2022-04-04T11:33:32.868Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 359,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212193,
    "slug": "tbg0o2",
    "title": "简述 0.1 + 0.2 !== 0.3 的原因",
    "description": "原因总结进制转换 ：js 在做数字计算的时候，0.1 和 0.2 都会被转成二进制后无限循环 ，但是 js 采用的 IEEE 754 二进制浮点运算，最大可以存储 53 位有效数字，于是大于 53 位后面的会全部截掉，将导致精度丢失。对阶运算 ：由于指数位数不相同，运算时需要对阶运算，阶小的尾...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:32.000Z",
    "created_at": "2022-04-04T11:33:32.000Z",
    "updated_at": "2022-05-10T15:12:36.000Z",
    "published_at": "2022-04-04T11:33:32.000Z",
    "first_published_at": "2022-04-04T11:33:32.347Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 388,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212191,
    "slug": "ov3l3t",
    "title": "line-height 继承",
    "description": "父元素的 line-height 写了具体数值，比如 30px，则子元素 line-height 继承该值。父元素的 line-height 写了比例，比如 1.5 或 2，则子元素 line-height 也是继承该比例。父元素的 line-height 写了百分比，比如 200%，则子元素...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:32.000Z",
    "created_at": "2022-04-04T11:33:32.000Z",
    "updated_at": "2022-05-10T15:12:36.000Z",
    "published_at": "2022-04-04T11:33:32.000Z",
    "first_published_at": "2022-04-04T11:33:31.879Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 92,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212190,
    "slug": "vm3nkg",
    "title": "重排(回流) reflow 和重绘 repaint",
    "description": "概念重排(回流)当渲染树中部分或者全部元素的尺寸、结构或者属性发生变化时，浏览器会重新渲染部分或者全部文档的过程就称为回流。导致重排(回流)的操作页面的首次渲染浏览器的窗口发生变化元素的内容发生变化元素的尺寸或者位置发生变化元素的字体大小发生变化激活 css 伪类查询某些属性或者调用某些方法添...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:31.000Z",
    "created_at": "2022-04-04T11:33:31.000Z",
    "updated_at": "2022-05-10T15:12:36.000Z",
    "published_at": "2022-04-04T11:33:31.000Z",
    "first_published_at": "2022-04-04T11:33:31.399Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 773,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212187,
    "slug": "px9dg8",
    "title": "bfc 块级格式化上下文",
    "description": "概念bfc 是块级格式化上下文，根据盒模型可知，每个元素都被定义为一个矩形盒子，然而盒子的布局会受到尺寸、定位、盒子的子元素或兄弟元素、视窗的尺寸等因素来决定。因此浏览器会有一个计算的过程，计算的规则是由一个叫做视觉格式化模型的东西所定义的，bfc 就是来自这个概念，它是 css 视觉渲染的一...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:31.000Z",
    "created_at": "2022-04-04T11:33:31.000Z",
    "updated_at": "2022-05-10T15:12:36.000Z",
    "published_at": "2022-04-04T11:33:31.000Z",
    "first_published_at": "2022-04-04T11:33:30.935Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 338,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212185,
    "slug": "krwdmg",
    "title": "布局相关",
    "description": "水平居中和垂直居中的方法总结：内联元素居中布局：水平居中行内元素可设置：text-align: center;flex布局设置父元素：display: flex; justify-content: center;垂直居中单行文本父元素确认高度：height === line-height多行文...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:30.000Z",
    "created_at": "2022-04-04T11:33:30.000Z",
    "updated_at": "2022-05-10T15:12:36.000Z",
    "published_at": "2022-04-04T11:33:30.000Z",
    "first_published_at": "2022-04-04T11:33:30.325Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1385,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212183,
    "slug": "fvfmxc",
    "title": "preload、prefetch、preconnect 以及 dns-prefetch",
    "description": "<link> 是一种 html 标签，用于加载外部资源。最常见的用法，就是加载 css 样式文件，写法如下：<link rel='stylesheet' href='./index.css'>rel 属性是 \"关系\" 的意思，它的值 stylesheet 表示使用的是样式表href 表示资源的...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:30.000Z",
    "created_at": "2022-04-04T11:33:30.000Z",
    "updated_at": "2022-05-10T15:12:36.000Z",
    "published_at": "2022-04-04T11:33:30.000Z",
    "first_published_at": "2022-04-04T11:33:29.836Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 924,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647495479371-f4e3b244-94eb-4791-8b72-c2e45099b5b3.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212182,
    "slug": "cthggr",
    "title": "盒模型",
    "description": "css3 中盒模型分两种：标准盒模型、ie 盒模型标准盒模型：宽度 = contentie 盒模型：宽度 = content + padding + border可以通过使用 box-sizing 来改变元素的盒模型box-sizing：content-box 标准盒模型(默认值)box-si...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:29.000Z",
    "created_at": "2022-04-04T11:33:29.000Z",
    "updated_at": "2022-05-10T15:12:36.000Z",
    "published_at": "2022-04-04T11:33:29.000Z",
    "first_published_at": "2022-04-04T11:33:29.348Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 78,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212180,
    "slug": "aywgrn",
    "title": "观察者模式和发布订阅模式的对比",
    "description": "发布订阅模式属于广义的观察者模式观察者模式：直接订阅目标事件发布订阅模式：中件多了一层调度中心，整体流程为：发布者 -> 调度中心 -> 调度者",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:29.000Z",
    "created_at": "2022-04-04T11:33:29.000Z",
    "updated_at": "2022-05-10T15:12:36.000Z",
    "published_at": "2022-04-04T11:33:29.000Z",
    "first_published_at": "2022-04-04T11:33:28.847Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 66,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212179,
    "slug": "wm4ok4",
    "title": "Link 和 a 标签的区别",
    "description": "对比 a 标签，Link 标签避免了不必要的重渲染react-router 接管了其默认的链接跳转行为，区别于传统的页面跳转，Link 的\"跳转\"行为只会触发相匹配的对应页面内容更新，而不会刷新整个页面。Link 跳转做了三件事：有 onclick 的时候会直接执行click 的时候阻止了 a...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:28.000Z",
    "created_at": "2022-04-04T11:33:28.000Z",
    "updated_at": "2022-05-10T15:12:36.000Z",
    "published_at": "2022-04-04T11:33:28.000Z",
    "first_published_at": "2022-04-04T11:33:28.367Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 184,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212178,
    "slug": "op7dg1",
    "title": "diff 算法",
    "description": "diff 算法策略diff 算法的三个策略(观察的规律)dom 节点的跨层级移动操作特别少，可以忽略不计拥有相同类的两个组件将会生成相似的树形结构，拥有不同类的两个组件将会生成不同的树形结构对于同一层级的一组子节点，可以通过唯一的 id(key) 进行区分tree diff因为以上三个策略中的...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-30T07:35:04.000Z",
    "created_at": "2022-04-04T11:33:28.000Z",
    "updated_at": "2022-06-30T07:35:04.000Z",
    "published_at": "2022-06-30T07:35:04.000Z",
    "first_published_at": "2022-04-04T11:33:27.871Z",
    "draft_version": 26,
    "last_editor_id": 732231,
    "word_count": 2024,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212177,
    "slug": "fv22gd",
    "title": "前端项目性能指标",
    "description": "白屏时间首屏时间用户可操作时间页面总下载时间三大核心指标Google 在20年五月提出了网站用户体验的三大核心指标，分别为：LCPFIDCLSLCP 代表了页面的速度指标，虽然还存在其他的一些体现速度的指标，但是上文也说过 LCP 能体现的东西更多一些。一是指标实时更新，数据更精确，二是代表着...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2023-11-11T18:13:42.000Z",
    "created_at": "2022-04-04T11:33:27.000Z",
    "updated_at": "2023-11-11T18:13:42.000Z",
    "published_at": "2023-11-11T18:13:42.000Z",
    "first_published_at": "2022-04-04T11:33:27.211Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 1975,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647676498591-5d689706-90bd-4d15-bb4a-4ab8c41cf5d4.png",
    "custom_cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647676498591-5d689706-90bd-4d15-bb4a-4ab8c41cf5d4.png",
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212175,
    "slug": "vg2cmd",
    "title": "创建组件的几种方式",
    "description": "React.createClassReact.createClass 是 react 最传统、兼容性最好的方法。该方法构建一个组件对象，当组件被调用时，就会创建几个组件实例ES6 class 关键字与 createClass 类似，只是从调用内部方法变成了使用类的方式来实现无状态函数创建时始终...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:27.000Z",
    "created_at": "2022-04-04T11:33:27.000Z",
    "updated_at": "2022-05-10T15:12:37.000Z",
    "published_at": "2022-04-04T11:33:27.000Z",
    "first_published_at": "2022-04-04T11:33:26.685Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 109,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212173,
    "slug": "puabgz",
    "title": "fullhash、chunkhash 和 contenthash 的区别",
    "description": "fullhash 模式只要修改一个文件，整个项目的文件命名都会改变，不能进行缓存chunkhash 模式根据入口文件进行命名contenthash 模式根据内容进行命名，进行缓存",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:26.000Z",
    "created_at": "2022-04-04T11:33:26.000Z",
    "updated_at": "2022-05-10T15:12:37.000Z",
    "published_at": "2022-04-04T11:33:26.000Z",
    "first_published_at": "2022-04-04T11:33:26.164Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 61,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212171,
    "slug": "on0xtf",
    "title": "vite 的构建速度快的原因",
    "description": "部分文件设置了强缓存，每次都会在本地读取采用了 esbuildesbuild 使用 go 语言编写，速度更快，打包会快 10 ～ 100 倍大量使用了并发算法",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:26.000Z",
    "created_at": "2022-04-04T11:33:26.000Z",
    "updated_at": "2022-05-10T15:12:37.000Z",
    "published_at": "2022-04-04T11:33:26.000Z",
    "first_published_at": "2022-04-04T11:33:25.687Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 55,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212170,
    "slug": "nny1iy",
    "title": "babel",
    "description": "Babel 处理步骤babel 大概分为三个部分：解析 parse、转换 transform、生成 generate解析 parse将代码转换为 ast 抽象语法树词法分析将字符串形式的代码转换为令牌 token 流，即语法片段组成的数组n * n  [   { type: { ... }, ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-26T15:34:58.000Z",
    "created_at": "2022-04-04T11:33:25.000Z",
    "updated_at": "2022-04-26T15:35:12.000Z",
    "published_at": "2022-04-26T15:35:12.000Z",
    "first_published_at": "2022-04-04T11:33:25.145Z",
    "draft_version": 31,
    "last_editor_id": 732231,
    "word_count": 1642,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647834450045-c103406c-5882-49c4-8610-f3dcea673daf.png",
    "custom_cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647834450045-c103406c-5882-49c4-8610-f3dcea673daf.png",
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212169,
    "slug": "gkdarc",
    "title": "webpack 概念",
    "description": "webpack 是一款模块打包工具，它的设计思想是：万物皆模块。巧妙的实现了整个前端项目的模块化。在 webpack 的理念中，前端项目中的任何资源都可以看作一个模块，任何模块都可以经过 loader 进行处理，最终再被打包到一起。",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:25.000Z",
    "created_at": "2022-04-04T11:33:25.000Z",
    "updated_at": "2022-05-10T15:12:37.000Z",
    "published_at": "2022-04-04T11:33:25.000Z",
    "first_published_at": "2022-04-04T11:33:24.660Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 94,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212166,
    "slug": "aft935",
    "title": "优化 webpack 的构建速度",
    "description": "使用高版本的 webpack 和 node.jswebpack v4 优点：v8 带来的优化(for...of 代替了 forEach、Map 和 Set 代替了 Object、includes 代替了 indexOf)默认使用更快的 md4 hash算法，去替代md5webpack ast可...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:24.000Z",
    "created_at": "2022-04-04T11:33:24.000Z",
    "updated_at": "2022-05-10T15:12:37.000Z",
    "published_at": "2022-04-04T11:33:24.000Z",
    "first_published_at": "2022-04-04T11:33:24.118Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1080,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212165,
    "slug": "yse9bt",
    "title": "热更新原理",
    "description": "webpack 的热更新又叫做热替换、hmr。这个机制可以做到不用刷新浏览器就可以将新变更的模块替换掉旧的模块hmr 的核心是客户端从服务器拉取更新后的文件，准确的说就是 chunk diff ( chunk 需要更新的部分)，实际上 wds(无线分布式系统) 与浏览器之间维护了一个 webs...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:24.000Z",
    "created_at": "2022-04-04T11:33:24.000Z",
    "updated_at": "2022-05-10T15:12:37.000Z",
    "published_at": "2022-04-04T11:33:24.000Z",
    "first_published_at": "2022-04-04T11:33:23.612Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 225,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212163,
    "slug": "pdp2uz",
    "title": "代码分割的本质",
    "description": "在 webpack 中，代码分割的本质：在源代码上线 和 打包成唯一脚本 main.bundle.js 这两种极端方案之间的一种更适合时机场景的中间状态。优点是利用可接受的服务器性能压力增加来换取更好的用户体验。源代码直接上线：过程可控，但 http 请求多，性能开销大打包成唯一脚本：服务器压...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:23.000Z",
    "created_at": "2022-04-04T11:33:23.000Z",
    "updated_at": "2022-05-10T15:12:37.000Z",
    "published_at": "2022-04-04T11:33:23.000Z",
    "first_published_at": "2022-04-04T11:33:23.125Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 136,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212160,
    "slug": "iohxdb",
    "title": "模块打包原理",
    "description": "webpack 实际上为各个模块创造了一个可以导出和导入的环境，本质上并没有修改代码的执行逻辑，代码的执行顺序和模块的加载顺序也完全一致",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:23.000Z",
    "created_at": "2022-04-04T11:33:23.000Z",
    "updated_at": "2022-05-10T15:12:37.000Z",
    "published_at": "2022-04-04T11:33:23.000Z",
    "first_published_at": "2022-04-04T11:33:22.538Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 61,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212157,
    "slug": "hl39v0",
    "title": "loader 和 plugin",
    "description": "loader概念：loader 本质是一个函数，loader runner 会调用这个函数，该函数接收一个参数，参数是：上一个 loader 产生的结果 或者 资源文件内容，然后进行转换，返回转换后的结果。函数的 this 上下文将由 webpack 填充，并且 loader runner 具...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-27T08:10:09.000Z",
    "created_at": "2022-04-04T11:33:22.000Z",
    "updated_at": "2022-04-27T08:12:21.000Z",
    "published_at": "2022-04-27T08:12:20.000Z",
    "first_published_at": "2022-04-04T11:33:21.887Z",
    "draft_version": 15,
    "last_editor_id": 732231,
    "word_count": 5210,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212156,
    "slug": "dtf17x",
    "title": "sourceMap",
    "description": "sourceMap 是将编译、打包、压缩后的代码映射回源代码的过程。打包压缩后的代码不具备良好的可读性，想要调试源码就需要 sourceMap。map 文件只要不打开开发者工具，浏览器是不会加载的线上环境一般有三种处理方案：hidden-source-map：借助第三方错误监控平台 Sentr...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:21.000Z",
    "created_at": "2022-04-04T11:33:21.000Z",
    "updated_at": "2022-05-10T15:12:37.000Z",
    "published_at": "2022-04-04T11:33:21.000Z",
    "first_published_at": "2022-04-04T11:33:21.395Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 159,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212154,
    "slug": "wh1m7t",
    "title": "webpack 与 其他构建工具的异同",
    "description": "bundle 类构建工具描述gulpgulp是一个自动化构建工具，主要用来设定程序自动处理静态资源的工作。简单的说，gulp就是用来打包项目的。gulp是一个基于任务的工具，gulp规定不管做什么功能，都用统一的接口管理，必须去注册一个任务，然后去执行这个任务，在任务代码中去做想做的功能。gr...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:20.000Z",
    "created_at": "2022-04-04T11:33:20.000Z",
    "updated_at": "2022-05-10T15:12:38.000Z",
    "published_at": "2022-04-04T11:33:20.000Z",
    "first_published_at": "2022-04-04T11:33:20.397Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 645,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212153,
    "slug": "hg8h4r",
    "title": "chunk 和 bundle 的区别",
    "description": "个人理解：chunk 是过程，bundle 是结果，chunk 在构建完成时呈现为 bundlechunkchunk 是 webpack 打包过程中 modules 的集合，是打包过程中的概念。webpack 的打包是从一个入口模块开始，入口模块引用其他模块，其他模块引用其他模块，这样一直递归...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:20.000Z",
    "created_at": "2022-04-04T11:33:20.000Z",
    "updated_at": "2022-05-10T15:12:38.000Z",
    "published_at": "2022-04-04T11:33:20.000Z",
    "first_published_at": "2022-04-04T11:33:19.826Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 240,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212151,
    "slug": "eshey5",
    "title": "打包构建流程",
    "description": "简述初始化：启动构建，读取与合并配置参数，加载 plugin，实例化 compiler(编译器)编译：从 entry(入口文件)出发，针对每个模块串行调用对应的 loader 去翻译文件的内容，再找到该模块依赖的模块，递归的进行编译处理输出：将编译后的模块组合成 chunk，将 chunk 转...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:19.000Z",
    "created_at": "2022-04-04T11:33:19.000Z",
    "updated_at": "2022-05-10T15:12:38.000Z",
    "published_at": "2022-04-04T11:33:19.000Z",
    "first_published_at": "2022-04-04T11:33:19.194Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 567,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212150,
    "slug": "uhgsm9",
    "title": "npm 打包注意点",
    "description": "支持 CommonJS 规范打包结果应该为 es5，因为可能使用者环境不支持es6，同时若es5是经过转换的，则需要一同上传source-mapnpm 包应该尽量小发布模块不应该将依赖模块一同打包，应该让用户选择性安装，可以避免再次打包时出现底层模块重复打包的情况ui 组件类的模块应将依赖的其...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:19.000Z",
    "created_at": "2022-04-04T11:33:19.000Z",
    "updated_at": "2022-05-10T15:12:38.000Z",
    "published_at": "2022-04-04T11:33:19.000Z",
    "first_published_at": "2022-04-04T11:33:18.674Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 130,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212146,
    "slug": "tcfotb",
    "title": "前端性能优化",
    "description": "性能优化的目的：哪些指标影响了业务，则对应指标就是优化的关键点常见的性能优化关键点首屏渲染时间首次可交互时间(例如：手机验证码的获取)首次有意义内容的渲染时间(例如：主要元素的渲染时间)性能优化-根据类型只获取 所需资源异步加载路由图片的懒加载babel 的 polyfill(低版本下对高版本...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:18.000Z",
    "created_at": "2022-04-04T11:33:18.000Z",
    "updated_at": "2022-05-10T15:12:38.000Z",
    "published_at": "2022-04-04T11:33:18.000Z",
    "first_published_at": "2022-04-04T11:33:18.117Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1041,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212145,
    "slug": "hduwrh",
    "title": "为什么 proxy 不能被 polyfill",
    "description": "class 可用 function 模拟promise 可用 callback 模拟proxy 不能用 Object.defineProperty 模拟",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:18.000Z",
    "created_at": "2022-04-04T11:33:18.000Z",
    "updated_at": "2022-05-10T15:12:38.000Z",
    "published_at": "2022-04-04T11:33:18.000Z",
    "first_published_at": "2022-04-04T11:33:17.620Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 19,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212144,
    "slug": "np50n2",
    "title": "异步编程的实现方式",
    "description": "回调函数事件监听发布订阅模式(观察者模式)promisegeneratorasync/await",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:17.000Z",
    "created_at": "2022-04-04T11:33:17.000Z",
    "updated_at": "2022-05-10T15:12:38.000Z",
    "published_at": "2022-04-04T11:33:17.000Z",
    "first_published_at": "2022-04-04T11:33:17.127Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 24,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212142,
    "slug": "kc3lut",
    "title": "如何实现多个网站之间共享登陆状态",
    "description": "在多个网站之间共享登录状态指的就是单点登录。多个应用系统中，用户只需要登录一次就可以访问所有相互信任的应用系统。\t我认为单点登录可以这样来实现，首先将用户信息的验证中心独立出来，作为一个单独的认证中心，该认证中心的作用是判断客户端发送的账号密码的正确性，然后向客户端返回对应的用户信息，并且返回...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:17.000Z",
    "created_at": "2022-04-04T11:33:17.000Z",
    "updated_at": "2022-05-10T15:12:38.000Z",
    "published_at": "2022-04-04T11:33:17.000Z",
    "first_published_at": "2022-04-04T11:33:16.616Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 291,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212141,
    "slug": "sg1n3n",
    "title": "http 请求方法的 options 方法的作用",
    "description": "OPTIONS 请求与 HEAD 类似，一般也是用于客户端查看服务器的性能。这个方法会请求服务器返回该资源所支持的所有 HTTP 请求方法，该方法会用'\\*'来代替资源名称，向服务器发送 OPTIONS 请求，可以测试服务器功能是否正常。JS 的 XMLHttpRequest 对象进行 COR...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:16.000Z",
    "created_at": "2022-04-04T11:33:16.000Z",
    "updated_at": "2022-05-10T15:12:38.000Z",
    "published_at": "2022-04-04T11:33:16.000Z",
    "first_published_at": "2022-04-04T11:33:16.115Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 145,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212139,
    "slug": "rsxa0f",
    "title": "即时通讯的实现，短轮询、长轮询、SSE 和 WebSocket 间的区别",
    "description": "短轮询和长轮询的目的都是用于实现客户端和服务器端的一个即时通讯。短轮询的基本思路就是浏览器每隔一段时间向浏览器发送 http 请求，服务器端在收到请求后，不论是否有数据更新，都直接进行响应。这种方式实现的即时通信，本质上还是浏览器发送请求，服务器接受请求的一个过程，通过让客户端不断的进行请求，...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:15.000Z",
    "created_at": "2022-04-04T11:33:15.000Z",
    "updated_at": "2022-05-10T15:12:38.000Z",
    "published_at": "2022-04-04T11:33:15.000Z",
    "first_published_at": "2022-04-04T11:33:15.468Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 893,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212138,
    "slug": "kh4w6x",
    "title": "负载平衡的两种实现方式",
    "description": "一种是使用反向代理的方式，用户的请求都发送到反向代理服务上，然后由反向代理服务器来转发请求到真实的服务器上，以此来实现集群的负载平衡。另一种是 DNS 的方式，DNS 可以用于在冗余的服务器上实现负载平衡。因为现在一般的大型网站使用多台服务器提供服务，因此一个域名可能会对应多个服务器地址。当用...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:15.000Z",
    "created_at": "2022-04-04T11:33:15.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:15.000Z",
    "first_published_at": "2022-04-04T11:33:14.962Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 315,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212136,
    "slug": "yo63o7",
    "title": "cdn 服务",
    "description": "cdn 是一个内容分发网络，通过对源网站资源的缓存，利用本身多台位于不同地域、不同运营商的服务器，向用户提供资就近访问的功能。也就是说，用户的请求并不是直接发送给源网站，而是发送给 cdn 服务器，由 cdn 服务器将请求定位到最近的含有该资源的服务器上去请求。这样有利于提高网站的访问速度，同...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:14.000Z",
    "created_at": "2022-04-04T11:33:14.000Z",
    "updated_at": "2022-05-10T15:12:38.000Z",
    "published_at": "2022-04-04T11:33:14.000Z",
    "first_published_at": "2022-04-04T11:33:14.403Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 157,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212135,
    "slug": "vxqwd7",
    "title": "dns 为什么使用 udp 协议作为传输层协议",
    "description": "DNS 使用 UDP 协议作为传输层协议的主要原因是为了避免使用 TCP 协议时造成的连接时延。因为为了得到一个域名的 IP 地址，往往会向多个域名服务器查询，如果使用 TCP 协议，那么每次请求都会存在连接时延，这样使 DNS 服务变得很慢，因为大多数的地址查询请求，都是浏览器请求页面时发出...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:14.000Z",
    "created_at": "2022-04-04T11:33:14.000Z",
    "updated_at": "2022-05-10T15:12:38.000Z",
    "published_at": "2022-04-04T11:33:14.000Z",
    "first_published_at": "2022-04-04T11:33:13.847Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 457,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212134,
    "slug": "ikn00f",
    "title": "正向代理和反向代理",
    "description": "我们常说的代理也就是指正向代理，正向代理的过程，它隐藏了真实的请求客户端，服务端不知道真实的客户端是谁，客户端请求的服务都被代理服务器代替来请求。反向代理隐藏了真实的服务端，当我们请求一个网站的时候，背后可能有成千上万台服务器为我们服务，但具体是哪一台，我们不知道，也不需要知道，我们只需要知道...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:13.000Z",
    "created_at": "2022-04-04T11:33:13.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:13.000Z",
    "first_published_at": "2022-04-04T11:33:13.361Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 203,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212133,
    "slug": "nzhppv",
    "title": "ssl 连接断开后如何恢复",
    "description": "一共有两种方法来恢复断开的 SSL 连接，一种是使用 session ID，一种是 session ticket。使用 session ID 的方式，每一次的会话都有一个编号，当对话中断后，下一次重新连接时，只要客户端给出这个编号，服务器如果有这个编号的记录，那么双方就可以继续使用以前的秘钥，...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:13.000Z",
    "created_at": "2022-04-04T11:33:13.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:13.000Z",
    "first_published_at": "2022-04-04T11:33:12.885Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 336,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212132,
    "slug": "gcggsc",
    "title": "tls/ssl 中为什么一定要用三个随机数，来生成会话密钥？",
    "description": "客户端和服务器都需要生成随机数，以此来保证每次生成的秘钥都不相同。使用三个随机数，是因为 SSL 的协议默认不信任每个主机都能产生完全随机的数，如果只使用一个伪随机的数来生成秘钥，就很容易被破解。通过使用三个随机数的方式，增加了自由度，一个伪随机可能被破解，但是三个伪随机就很接近于随机了，因此...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:12.000Z",
    "created_at": "2022-04-04T11:33:12.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:12.000Z",
    "first_published_at": "2022-04-04T11:33:12.434Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 167,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212131,
    "slug": "am614q",
    "title": "rsa 算法的安全性保障",
    "description": "对极大整数做因数分解的难度决定了 RSA 算法的可靠性。换言之，对一极大整数做因数分解愈困难，RSA 算法愈可靠。现在 1024 位的 RSA 密钥基本安全，2048 位的密钥极其安全。",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:12.000Z",
    "created_at": "2022-04-04T11:33:12.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:12.000Z",
    "first_published_at": "2022-04-04T11:33:11.961Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 73,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212130,
    "slug": "nk4fw8",
    "title": "get 和 post 的区别",
    "description": "get 和 post 是 http 请求的两种方法从应用场景上来说，get 请求是一个幂等的请求，一般 get 请求用于对服务器资源不会产生影响的场景，比如说请求一个网页。而 post 不是一个幂等的请求，一般用于对服务器资源产生影响的情景。比如注册用户这一类的操作。因为不同的应用场景，所以浏...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-08-04T03:42:47.000Z",
    "created_at": "2022-04-04T11:33:11.000Z",
    "updated_at": "2022-08-04T03:42:47.000Z",
    "published_at": "2022-08-04T03:42:47.000Z",
    "first_published_at": "2022-04-04T11:33:11.473Z",
    "draft_version": 3,
    "last_editor_id": 732231,
    "word_count": 625,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212129,
    "slug": "dg4tg1",
    "title": "dns 协议",
    "description": "概要dns 协议提供的是一种主机名到 ip 地址的转换服务，也就是我们常说的域名系统。它是一个由分层的 dns 服务器组成的分布式数据库，是定义了主机如何查询这个分布式数据库的方式的应用层协议。dns 协议运行在 udp 协议之上，使用 53 号端口域名的层级结构域名的层级结构可以如下：主机名...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:11.000Z",
    "created_at": "2022-04-04T11:33:11.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:11.000Z",
    "first_published_at": "2022-04-04T11:33:10.864Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1499,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647677147941-dd073e55-c8ed-42a1-95fa-f34e3629494a.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212127,
    "slug": "elg7s5",
    "title": "redux 和 mobx 对比",
    "description": "Redux 要解决的问题是统一数据流，数据流完全可控并可追踪，要实现该目标，便需要进行相关的约束Redux 由此引出 dispatch action reducer 等概念，对 state 的概念进行强约束，然而对于一些项目来说，太过强，便失去了灵活性。mobx 便是填补此空缺的Redux 将...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:10.000Z",
    "created_at": "2022-04-04T11:33:10.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:10.000Z",
    "first_published_at": "2022-04-04T11:33:10.378Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 409,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212126,
    "slug": "dyi5bf",
    "title": "mobx",
    "description": "mobx 工作流程mobx 数据流向触发 action，在 action 中修改 state，通过 computed 拿到 state 的计算值，自动触发对应的 reactions，这里包含 autorun，渲染视图等有一点需要注意：相对于 react 来说，mobx 没有一个全局的状态树，状...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:10.000Z",
    "created_at": "2022-04-04T11:33:10.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:10.000Z",
    "first_published_at": "2022-04-04T11:33:09.897Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 171,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647328199597-8887aeab-b85f-4f07-b048-f5e59b6a8bb6.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212125,
    "slug": "yr6q8p",
    "title": "react 新版本特性",
    "description": "React 16.x 新特性Time Slicing 时间切片（解决 CPU 速度问题）使得在执行任务的期间可以随时暂停，跑去干别的事情，这个特性使得 react 能在性能极其差的机器跑时，仍然保持有良好的性能Suspense解决网络 IO 问题）和 lazy 配合，实现异步加载组件。能暂停当...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-07-12T15:22:24.000Z",
    "created_at": "2022-04-04T11:33:09.000Z",
    "updated_at": "2022-07-12T15:22:24.000Z",
    "published_at": "2022-07-12T15:22:24.000Z",
    "first_published_at": "2022-04-04T11:33:09.382Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 1512,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212124,
    "slug": "lv63wa",
    "title": "redux",
    "description": "redux 原理通俗解释:首先，用户通过 View 发出 Action，发出方式用到了 Dispatch 方法Store 调用 Reducer，传入两个参数：当前 State 和收到的 Action，Reducer 会返回新的 StateState 一旦有变化，Store 就会调用监听函数，来...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:09.000Z",
    "created_at": "2022-04-04T11:33:09.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:09.000Z",
    "first_published_at": "2022-04-04T11:33:08.837Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1168,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647690613642-27b36729-1d2c-49db-82ea-fa36534369cf.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212123,
    "slug": "rkov84",
    "title": "vue2 性能优化",
    "description": "编码阶段尽量减少 data 中的数据 => data 中的数据都会增加 getter 和 setter，会收集对应的 watcher对象的层级不要过深 => 嵌套过深会造成性能问题不需要响应式的数据不应该放到 data 中 => 可以使用 Object.freeze 冻结v-if/v-show...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:08.000Z",
    "created_at": "2022-04-04T11:33:08.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:08.000Z",
    "first_published_at": "2022-04-04T11:33:08.269Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 371,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212121,
    "slug": "qf0cik",
    "title": "react 性能优化",
    "description": "开发过程中函数式组件使用 React.Memo 来缓存组件避免组件重渲染使用 useMemo 缓存大量计算类组件使用 React.PureComponent，shouldComponentUpdate避免组件重渲染避免使用内联对象避免使用匿名函数延迟加载不是立即需要的组件(React.lazy...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:08.000Z",
    "created_at": "2022-04-04T11:33:08.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:08.000Z",
    "first_published_at": "2022-04-04T11:33:07.773Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 870,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212118,
    "slug": "moqmzb",
    "title": "组件通信的方式",
    "description": "父组件 -> 子组件：props子组件 -> 父组件：props + callback兄弟组件：找到兄弟节点共同的父节点，结合 props 进行通信跨层级通信：context发布订阅模式：eventBus全局状态管理工具：借助 redux、mobx 等全局状态管理工具进行通信，通过维护一个全局...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:07.000Z",
    "created_at": "2022-04-04T11:33:07.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:07.000Z",
    "first_published_at": "2022-04-04T11:33:07.303Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 115,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212116,
    "slug": "zq4s02",
    "title": "computed 相关问题",
    "description": "computed 实现原理computed watcher, 计算属性的监听器computed watcher 持有一个 dep 实例，通过 drity 属性标记计算属性是否需要重新求值当 computed 的依赖值改变后，就会通知订阅的 watcher 进行更新，对于 computed wa...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:07.000Z",
    "created_at": "2022-04-04T11:33:07.000Z",
    "updated_at": "2022-05-10T15:12:39.000Z",
    "published_at": "2022-04-04T11:33:07.000Z",
    "first_published_at": "2022-04-04T11:33:06.842Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 251,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212115,
    "slug": "uh28xg",
    "title": "vue2 数据响应式原理",
    "description": "概述通过数据劫持结合发布-订阅者模式，通过 Object.defineProperty 来拦截各个属性的 getter 和 setter，当数据发生变化时，发布消息给订阅者，触发相应的监听回调在 vue2 中，响应式处理默认是递归的，一旦数据层级太深内存消耗会高，因此数据要尽量扁平化。核心实现...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:06.000Z",
    "created_at": "2022-04-04T11:33:06.000Z",
    "updated_at": "2022-05-10T15:12:40.000Z",
    "published_at": "2022-04-04T11:33:06.000Z",
    "first_published_at": "2022-04-04T11:33:06.323Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 578,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1648097561264-8c56f955-19f3-4a9b-9879-29fec37fd5f0.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212114,
    "slug": "gwzgib",
    "title": "vue3 生命周期",
    "description": "beforeCreated -> setupcreated -> setupbeforeMount -> onBeforeMountmounted -> onMountedbeforeUpdate -> onBeforeUpdateupdated -> onUpdatedbeforeDesto...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:06.000Z",
    "created_at": "2022-04-04T11:33:06.000Z",
    "updated_at": "2022-05-10T15:12:40.000Z",
    "published_at": "2022-04-04T11:33:06.000Z",
    "first_published_at": "2022-04-04T11:33:05.831Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 27,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212111,
    "slug": "ugd6ob",
    "title": "钩子函数和执行顺序",
    "description": "钩子函数的种类分为: 全局守卫、路由守卫、组件守卫完整的导航解析流程导航行为被触发，此时导航未被确认。在失活的组件里调用离开守卫 beforeRouteLeave。调用全局的 beforeEach守卫。在重用的组件里调用 beforeRouteUpdate 守卫(2.2+)。在路由配置里调用 ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:05.000Z",
    "created_at": "2022-04-04T11:33:05.000Z",
    "updated_at": "2022-05-10T15:12:40.000Z",
    "published_at": "2022-04-04T11:33:05.000Z",
    "first_published_at": "2022-04-04T11:33:05.268Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 213,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212110,
    "slug": "oagu14",
    "title": "生命周期相关问题",
    "description": "生命周期beforeCreatecreatedbeforeMountmountedbeforeUpdateupdatedbeforeDestorydestoryedactived(keep-alive)deactived(keep-alive)errorCapturedbeforeCreate...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:05.000Z",
    "created_at": "2022-04-04T11:33:05.000Z",
    "updated_at": "2022-05-10T15:12:40.000Z",
    "published_at": "2022-04-04T11:33:05.000Z",
    "first_published_at": "2022-04-04T11:33:04.697Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 563,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212109,
    "slug": "kwsg4m",
    "title": "组件中 data 为什么是一个函数",
    "description": "复用多次的话，也就会创建多个实例。本质上，这些实例用的都是同一个构造函数。如果 data 是对象的话，对象属于引用类型，会影响到所有的实例。所以为了保证组件不同的实例之间 data 不冲突，data 必须是一个函数。",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:04.000Z",
    "created_at": "2022-04-04T11:33:04.000Z",
    "updated_at": "2022-05-10T15:12:40.000Z",
    "published_at": "2022-04-04T11:33:04.000Z",
    "first_published_at": "2022-04-04T11:33:04.121Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 94,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212106,
    "slug": "dx03eg",
    "title": "2022年哪些前端技术点会火？",
    "description": "以Vite为代表的前端构建工具进入加速赛道ESM 大势所趋，势如破竹，由于 ESM 的普及，而带来的打包工具的革命以及适用于 ESM 下一代 CDN 的发展，业务项目在生产环境开始使用原生的 ESM 代替以前的 Bundle方案，从而导致开发体验及网站速度的大幅提升。核心代码：<script ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:03.000Z",
    "created_at": "2022-04-04T11:33:03.000Z",
    "updated_at": "2022-05-10T15:12:40.000Z",
    "published_at": "2022-04-04T11:33:03.000Z",
    "first_published_at": "2022-04-04T11:33:03.154Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 4795,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647268956093-0e0a3977-36ef-4dbe-970e-b3558f784fa4.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212105,
    "slug": "bvq3i9",
    "title": "关于2022前端趋势总结的总结",
    "description": "“天下大势，浩浩汤汤，顺之者昌，逆之者亡。”以下是对前端各位大佬2021总结的一个汇总总结。希望可以看到一些前端行业的动向，排布。 帮助团队和自身制定未来的规划。内容分为四个部分：基础框架/工程化语言行业趋势底层演进1. 基础框架/工程化随着 jQuery.js 渐渐淡出人们的视野，前端开发框...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:02.000Z",
    "created_at": "2022-04-04T11:33:02.000Z",
    "updated_at": "2022-05-10T15:12:40.000Z",
    "published_at": "2022-04-04T11:33:02.000Z",
    "first_published_at": "2022-04-04T11:33:02.439Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 3464,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647254515449-a5b8296c-28ad-406c-a205-86fd2763f688.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212102,
    "slug": "in6cx4",
    "title": "proxy 和 reflect",
    "description": "proxyProxy 对象用于创建一个对象的代理，从而实现基本操作的拦截和自定义(如属性查找、赋值、枚举、函数调用等)语法const p = new Proxy(target, handler)参数target：要使用 Proxy 包装的目标对象(可以是任何类型的对象，包括原生数组、函数，甚至...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:02.000Z",
    "created_at": "2022-04-04T11:33:02.000Z",
    "updated_at": "2022-05-10T15:12:40.000Z",
    "published_at": "2022-04-04T11:33:02.000Z",
    "first_published_at": "2022-04-04T11:33:01.706Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 862,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212098,
    "slug": "ia89dn",
    "title": "Vue3.2 更新内容",
    "description": "SSR：服务端渲染优化。@vue/server-renderer 包加了一个ES模块创建，与 Node.js 解耦，使在非 Node 环境用 @vue/serve-render做服务端渲染成为可能，比如(Workers、Service Workers)New SFC Features：新的单文...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:01.000Z",
    "created_at": "2022-04-04T11:33:01.000Z",
    "updated_at": "2022-05-10T15:12:40.000Z",
    "published_at": "2022-04-04T11:33:01.000Z",
    "first_published_at": "2022-04-04T11:33:01.064Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 854,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212096,
    "slug": "cgy1qw",
    "title": "vue3 api 的变化",
    "description": "watch 的变化vue3 中的 watch 函数第一个参数为响应式对象，有 getter/setter 的 effect 函数，或者这些类型数组；第二个参数为数据变化时的回调；第三个函数为 watchOption，提供是否立即监听和是否深度监听的配置vue3 可以多次使用 watch 方法w...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:01.000Z",
    "created_at": "2022-04-04T11:33:01.000Z",
    "updated_at": "2022-05-10T15:12:40.000Z",
    "published_at": "2022-04-04T11:33:01.000Z",
    "first_published_at": "2022-04-04T11:33:00.563Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 445,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212095,
    "slug": "yuqbh0",
    "title": "tcp 三次握手四次挥手",
    "description": "建立连接http 和 https 都需要在建立连接的基础上来进行数据传输当客户在浏览器输入网址并按下回车，浏览器会在浏览器 dns 缓存、本地 dns 缓存 以及 host 中寻找对应记录，如果没有获取到则会请求 dns 服务来获取对应 ip获取 ip 后，tcp 连接会进行三次握手建立连接三...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:00.000Z",
    "created_at": "2022-04-04T11:33:00.000Z",
    "updated_at": "2022-05-10T15:12:40.000Z",
    "published_at": "2022-04-04T11:33:00.000Z",
    "first_published_at": "2022-04-04T11:33:00.054Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 811,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647345588824-8b534273-6752-4b0f-b9b5-b07c33cb5495.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212094,
    "slug": "si40mg",
    "title": "高阶组件",
    "description": "高阶组件就是一个函数，且该函数接受一个组件作为参数，并返回一个新的组件属性代理函数返回一个自己定义的组件，然后在 render 函数中返回要包裹的组件，这样就可以代理所有传入的 props，并且决定如何渲染function proxyHoc(WrapperComponent) { \tretur...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:33:00.000Z",
    "created_at": "2022-04-04T11:33:00.000Z",
    "updated_at": "2022-05-10T15:12:40.000Z",
    "published_at": "2022-04-04T11:33:00.000Z",
    "first_published_at": "2022-04-04T11:32:59.552Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 688,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647010293179-c8265b67-90a6-443a-8bb1-20a80e5211f4.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212093,
    "slug": "imp49b",
    "title": "常见的 http 状态码",
    "description": "1XX(代表服务器接收到请求)2XX(Success 成功状态码)200 OK 表明请求已经成功. 默认情况下状态码为200的响应可以被缓存。204 No Content 表示目前请求成功，但客户端不需要更新其现有页面3XX(Redirection 重定向状态码)301 Moved Perma...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:59.000Z",
    "created_at": "2022-04-04T11:32:59.000Z",
    "updated_at": "2022-05-10T15:12:41.000Z",
    "published_at": "2022-04-04T11:32:59.000Z",
    "first_published_at": "2022-04-04T11:32:59.085Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 616,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212089,
    "slug": "ppt4fu",
    "title": "内存和垃圾回收",
    "description": "内存生命周期内存分配声明变量、函数、对象的时候，javaScript 会自动分配内存内存使用调用的时候，使用的时候内存回收javaScript 的垃圾回收机制存储方式栈内存 stack自动分配内存空间，大小固定，会自动释放 堆内存 heap动态分配内存，大小不固定，不会自动释放javaScri...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:59.000Z",
    "created_at": "2022-04-04T11:32:59.000Z",
    "updated_at": "2022-05-10T15:12:41.000Z",
    "published_at": "2022-04-04T11:32:59.000Z",
    "first_published_at": "2022-04-04T11:32:58.563Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 2253,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647015547785-64a07e0f-2f3f-4759-9b81-5ed68b2dbe34.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212088,
    "slug": "gt06mk",
    "title": "事件源",
    "description": "e.target 和 e.currentTarget 的区别e.target 是触发事件的标签，触发者即事件源e.currentTarget 是绑定事件的标签，绑定者即事件源如果绑定的事件所在的组件没有子元素，那么 e.target 与 e.currentTarget 相等；如果事件在父元素绑...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:58.000Z",
    "created_at": "2022-04-04T11:32:58.000Z",
    "updated_at": "2022-05-10T15:12:41.000Z",
    "published_at": "2022-04-04T11:32:58.000Z",
    "first_published_at": "2022-04-04T11:32:58.033Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 184,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212086,
    "slug": "ga86yq",
    "title": "generator 和 async",
    "description": "generator 函数概念Generator 是 ES6 标准引入的新的数据类型，Generator 可以理解为一个状态机，内部封装了很多状态，同时返回一个迭代器 Iterator 对象。可以通过这个迭代器遍历相关的值及状态。Generator 的显著特点是可以多次返回，每次的返回值作为迭代...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:58.000Z",
    "created_at": "2022-04-04T11:32:58.000Z",
    "updated_at": "2022-05-10T15:12:41.000Z",
    "published_at": "2022-04-04T11:32:58.000Z",
    "first_published_at": "2022-04-04T11:32:57.542Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1472,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212085,
    "slug": "zm62x4",
    "title": "http 协议和 https 协议",
    "description": "httphttp 是超文本传输协议，它定义了客户端与服务器之间交换报文的格式和方式，默认使用 80 端口。它使用 tcp 作为传输层协议，保证了数据传输的可靠性http 是一个无状态的协议，http 服务器不会保存关于客户的任何信息http 有两种连接方式，一种是持续连接，另一种是非持续连接。...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-30T07:19:42.000Z",
    "created_at": "2022-04-04T11:32:57.000Z",
    "updated_at": "2022-06-30T07:19:42.000Z",
    "published_at": "2022-06-30T07:19:42.000Z",
    "first_published_at": "2022-04-04T11:32:56.975Z",
    "draft_version": 4,
    "last_editor_id": 732231,
    "word_count": 4950,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647496305663-e32231da-f410-4054-b3bd-0ba0f8a797d4.png",
    "custom_cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647496305663-e32231da-f410-4054-b3bd-0ba0f8a797d4.png",
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212084,
    "slug": "cakiwz",
    "title": "JavaScript 模块化",
    "description": "esmodule 和 commonjs 的区别commonjs 默认采用的是非严格模式esmodule 默认采用严格模式commonjs 模块输出的是一个值的拷贝，esmodule 输出的是值的引用import 和 require 的区别模块的加载时机不同(require: 运行时加载，imp...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:56.000Z",
    "created_at": "2022-04-04T11:32:57.000Z",
    "updated_at": "2022-05-10T15:12:41.000Z",
    "published_at": "2022-04-04T11:32:56.000Z",
    "first_published_at": "2022-04-04T11:32:56.493Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 121,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212083,
    "slug": "xq8v88",
    "title": "从 url 输入到页面渲染整个过程",
    "description": "解析 hostdns 查询，通过域名查找 iptcp 握手解析文件如何进行解码渲染流程，根据 html 代码生成 dom 树，根据 css 代码生成 cssom(css 对象模型) 树，将 dom 树与 cssom 树合并形成渲染树，最终使用渲染树将像素渲染到屏幕上遇到 script 标签则暂...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:56.000Z",
    "created_at": "2022-04-04T11:32:56.000Z",
    "updated_at": "2022-05-10T15:12:41.000Z",
    "published_at": "2022-04-04T11:32:56.000Z",
    "first_published_at": "2022-04-04T11:32:56.002Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1566,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647677110106-e8854865-aae0-4afe-8f6c-6e910df409cb.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212082,
    "slug": "fzwma6",
    "title": "webSocket 协议",
    "description": "webSocket 是一种在单个 tcp 连接上进行全双工通信的协议，webSocket 是基于应用层传输控制协议，它们都是全双工的，区别于普通的 http 请求，发起 webSocket 请求时，会增加一个请求头，用来告诉服务器这是 webSocket 请求",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:55.000Z",
    "created_at": "2022-04-04T11:32:55.000Z",
    "updated_at": "2022-05-10T15:12:41.000Z",
    "published_at": "2022-04-04T11:32:55.000Z",
    "first_published_at": "2022-04-04T11:32:55.446Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 83,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212081,
    "slug": "ae6e6m",
    "title": "前端安全",
    "description": "xss：跨域脚本攻击不需要做任何的登陆认证，它会通过合法的操作(比如在 url 中输入、在评论框中输入)，向你的页面注入脚本代码。会导致：用户的 cookie 被调用、页面正常结构被破坏从而被插入恶意广告、D-doss 攻击等攻击方式反射型发出请求时，xss 代码出现在 url 中，作为输入提...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T09:45:21.000Z",
    "created_at": "2022-04-04T11:32:55.000Z",
    "updated_at": "2022-05-05T09:45:21.000Z",
    "published_at": "2022-05-05T09:45:21.000Z",
    "first_published_at": "2022-04-04T11:32:54.977Z",
    "draft_version": 9,
    "last_editor_id": 732231,
    "word_count": 552,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1651743183816-ed2571e8-fd14-450e-a48f-a2574f26c4e5.png",
    "custom_cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1651743183816-ed2571e8-fd14-450e-a48f-a2574f26c4e5.png",
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212080,
    "slug": "iqsxnp",
    "title": "跨域相关问题",
    "description": "同源策略是一种安全策略。所谓的同源，指的是协议，域名，端口相同。浏览器处于安全方面的考虑，只允许本域名下的接口交互，不同源的客户端脚本，在没有明确授权的情况下，不能读写对方的资源跨域解决方案cors跨域资源共享 CORS 是一种机制，它使用额外的 HTTP 头来告诉浏览器，让运行在一个 ori...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:54.000Z",
    "created_at": "2022-04-04T11:32:54.000Z",
    "updated_at": "2022-05-10T15:12:41.000Z",
    "published_at": "2022-04-04T11:32:54.000Z",
    "first_published_at": "2022-04-04T11:32:54.435Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1329,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212079,
    "slug": "boce40",
    "title": "浏览器缓存",
    "description": "http 缓存浏览器中的缓存作用分为两种情况：需要发送 http 请求 和 不需要发送 http 请求。因此，会依次检查 强缓存策略 和 协商缓存策略。强缓存强缓存表示在缓存期间不需要发送 http 请求，因此它的 http 状态码为 200。强缓存主要通过请求头中的相应字段来进行检查。htt...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-30T07:11:24.000Z",
    "created_at": "2022-04-04T11:32:54.000Z",
    "updated_at": "2022-06-30T07:11:25.000Z",
    "published_at": "2022-06-30T07:11:24.000Z",
    "first_published_at": "2022-04-04T11:32:53.653Z",
    "draft_version": 6,
    "last_editor_id": 732231,
    "word_count": 2419,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647329182885-d009e7fa-9dc1-45ad-9420-27eb01c05b48.png",
    "custom_cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647342652227-761c4858-30be-43b2-93a0-3cf0f0f81648.png",
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212077,
    "slug": "lfs5gz",
    "title": "闭包",
    "description": "闭包指的是有权访问另一个函数作用域中变量的函数，创建闭包最常见的方式就是：在一个函数内部创建另外一个函数(本质就是函数作用域链中保存着对外部函数变量对象的引用)案例修改以下案例var data = []  for (var i = 0; i < 3; i++) {     data[i] = ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:53.000Z",
    "created_at": "2022-04-04T11:32:53.000Z",
    "updated_at": "2022-05-10T15:12:41.000Z",
    "published_at": "2022-04-04T11:32:53.000Z",
    "first_published_at": "2022-04-04T11:32:53.125Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 161,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212076,
    "slug": "irz8zx",
    "title": "ajax、jsonp、fetch",
    "description": "ajax实现 ajax 请求的五个步骤创建 XMLHttpRequest 对象使用 open 方法创建 http 请求，并设置请求地址和请求方式设置发送的数据，用 send 发送请求注册事件获取响应并更新页面function request() { \t// 1 创建 XMLHttpReques...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:53.000Z",
    "created_at": "2022-04-04T11:32:53.000Z",
    "updated_at": "2022-05-10T15:12:41.000Z",
    "published_at": "2022-04-04T11:32:53.000Z",
    "first_published_at": "2022-04-04T11:32:52.668Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 464,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212075,
    "slug": "gc9gp1",
    "title": "weakMap 和 weakSet",
    "description": "weakMap只接受对象作为键名(null 除外)，不接受其他类型的值作为键名键名是弱引用，键值是正常引用。所以键名的弱引用不会被计入垃圾回收机制，键值正常进行垃圾回收无法进行遍历weakSet成员只能是对象weakSet 中的对象都是弱引用，不会被计入垃圾回收机制。因此，若其他对象都不再引用...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:52.000Z",
    "created_at": "2022-04-04T11:32:52.000Z",
    "updated_at": "2022-05-10T15:12:42.000Z",
    "published_at": "2022-04-04T11:32:52.000Z",
    "first_published_at": "2022-04-04T11:32:52.086Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 159,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212068,
    "slug": "licxpw",
    "title": "var、let 和 const",
    "description": "var变量提升 ✅变量定义在函数内部，会将变量提升到函数开头变量生命是一个全局变量，会将变量声明提升到全局作用域的开头作用域：函数级必须设置初始值：❌重复声明：✅let变量提升 ❌作用域：块级(声明的变量只在声明的代码块内有效)必须设置初始值：❌重复声明：❌暂时性死区：✅只要块级作用域内部存在...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:50.000Z",
    "created_at": "2022-04-04T11:32:50.000Z",
    "updated_at": "2022-05-10T15:12:42.000Z",
    "published_at": "2022-04-04T11:32:50.000Z",
    "first_published_at": "2022-04-04T11:32:50.346Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 214,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212066,
    "slug": "gyo93k",
    "title": "new 和 Object.create",
    "description": "new 关键字在使用 new 关键字创建对象的时候，new 关键字会帮助我们做以下四件事情：帮助我们创建一个空对象将新对象的原型 prototype 指向构造函数的原型 prototype执行构造函数, 改变 this，把构造函数的属性添加到新对象返回创建的新对象不能 new 一个箭头函数，因...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-15T15:45:32.000Z",
    "created_at": "2022-04-04T11:32:50.000Z",
    "updated_at": "2022-05-15T15:45:32.000Z",
    "published_at": "2022-05-15T15:45:32.000Z",
    "first_published_at": "2022-04-04T11:32:49.873Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 410,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212065,
    "slug": "sbc1s5",
    "title": "判断数据类型的方式",
    "description": "准确判断 Object.prototype.toString.callObject.prototype.toString.call(1) // [\"object Number\"] Object.prototype.toString.call(\"1\") // [\"object String\"] ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:49.000Z",
    "created_at": "2022-04-04T11:32:49.000Z",
    "updated_at": "2022-05-10T15:12:42.000Z",
    "published_at": "2022-04-04T11:32:49.000Z",
    "first_published_at": "2022-04-04T11:32:49.324Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 183,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212064,
    "slug": "ka9kuf",
    "title": "实现继承的几种方式",
    "description": "原型链继承核心：将父类实例作为子类实例优点：因为方法定义在原型上，所以可以做到方法复用问题：子类实例化时不能给父类构造函数传递参数，原型包含的引用类型的属性将被所有实例所共享function Animal() { \tthis.colors = ['black', white] }  Anima...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:49.000Z",
    "created_at": "2022-04-04T11:32:49.000Z",
    "updated_at": "2022-05-10T15:12:42.000Z",
    "published_at": "2022-04-04T11:32:49.000Z",
    "first_published_at": "2022-04-04T11:32:48.816Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 700,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212063,
    "slug": "bwqx2g",
    "title": "原型和原型链",
    "description": "原型在 javaScript 中，我们使用构造函数新建一个对象，每个构造函数内部都有一个 prototype 属性值，该属性值是一个对象，该对象包含了可以被该构造函数的所有实例所共享的属性和方法当使用构造函数新建立一个对象后，在这个对象的内部将包含一个指针，这个指针会指向构造函数的 proto...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:48.000Z",
    "created_at": "2022-04-04T11:32:48.000Z",
    "updated_at": "2022-05-10T15:12:42.000Z",
    "published_at": "2022-04-04T11:32:48.000Z",
    "first_published_at": "2022-04-04T11:32:48.299Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 365,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1646732589746-4462809c-9dd9-428c-a2c1-6ff3469d9b3e.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212060,
    "slug": "kwodx6",
    "title": "flex 相关内容",
    "description": "flex 的两个轴水平的主轴 (main axis)垂直的交叉轴 (cross axis)flex-flowflex-direction 和 flex-wrap 的集合。默认值：row nowrapalign-content用于控制多行项目的对齐方式，如果项目只有一行则不会起作用order用于...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T09:15:50.000Z",
    "created_at": "2022-04-04T11:32:48.000Z",
    "updated_at": "2022-05-05T09:15:50.000Z",
    "published_at": "2022-05-05T09:15:50.000Z",
    "first_published_at": "2022-04-04T11:32:47.669Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 358,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212059,
    "slug": "kevf5k",
    "title": "事件循环机制(EventLoop)",
    "description": "执行栈执行栈是类似函数调用栈的运行容器，执行栈为空时，javaScript 引擎会检查事件队列是否为空，如果不为空，那么将第一个任务压入执行栈中执行事件队列事件队列就是一个存储着待执行任务的队列，其中的任务严格按照时间顺序来执行，队首的任务率先执行，队尾的任务最后执行。同时每次仅执行一个任务。...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-06-30T07:08:23.000Z",
    "created_at": "2022-04-04T11:32:47.000Z",
    "updated_at": "2022-06-30T07:08:24.000Z",
    "published_at": "2022-06-30T07:08:23.000Z",
    "first_published_at": "2022-04-04T11:32:47.122Z",
    "draft_version": 18,
    "last_editor_id": 732231,
    "word_count": 2256,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1646662274965-6259f561-8bd7-4251-9810-67df3477bbcf.png",
    "custom_cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1646662274965-6259f561-8bd7-4251-9810-67df3477bbcf.png",
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212058,
    "slug": "ho82xg",
    "title": "CSS 选择器优先级",
    "description": "优先级是如何计算的优先级就是分配给指定的 CSS 声明的一个权重，它由 匹配的选择器中的 每一种选择器类型的 数值 决定。而当优先级与多个 CSS 声明中任意一个声明的优先级相等的时候，CSS 中最后的那个声明将会被应用到元素上。当同一个元素有多个声明的时候，优先级才会有意义。因为每一个直接作...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-05T08:11:34.000Z",
    "created_at": "2022-04-04T11:32:47.000Z",
    "updated_at": "2022-05-05T10:33:59.000Z",
    "published_at": "2022-05-05T08:11:34.000Z",
    "first_published_at": "2022-04-04T11:32:46.621Z",
    "draft_version": 5,
    "last_editor_id": 732231,
    "word_count": 298,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212057,
    "slug": "gq900o",
    "title": "react hooks 相关问题",
    "description": "react 解决代码复用的主要方式高阶组件render propsreact hooks对 react hooks 的理解没有提出 hooks 前存在的问题在组件之间复用状态逻辑很难hook 使你在无需修改组件结构的情况下复用状态逻辑复杂组件变得难以理解hook 将组件中相互关联的部分拆分成更...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-29T20:47:37.000Z",
    "created_at": "2022-04-04T11:32:46.000Z",
    "updated_at": "2022-05-29T20:47:37.000Z",
    "published_at": "2022-05-29T20:47:37.000Z",
    "first_published_at": "2022-04-04T11:32:46.025Z",
    "draft_version": 3,
    "last_editor_id": 732231,
    "word_count": 2212,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212055,
    "slug": "fheyn3",
    "title": "react fiber",
    "description": "在 v16 之前的 React 里，是直接递归遍历 vdom，通过 dom api 增删改 dom 的方式来渲染的。但当 vdom 过大，频繁调用 dom api 会比较耗时，而且递归又不能打断，所以有性能问题。后来就引入了 fiber 架构，先把 vdom 树转成 fiber 链表，然后再渲...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:46.000Z",
    "created_at": "2022-04-04T11:32:46.000Z",
    "updated_at": "2022-05-10T15:12:42.000Z",
    "published_at": "2022-04-04T11:32:46.000Z",
    "first_published_at": "2022-04-04T11:32:45.538Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1652,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647511348804-5a7c26da-9b6f-4357-beb4-affab3126a86.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212054,
    "slug": "ttmkd1",
    "title": "生命周期",
    "description": "官方图解执行过程：挂载阶段，首先执行 constructor 构造方法，来创建组件创建完成之后，就会执行 render 方法，该方法会返回需要渲染的内容随后，React 会将需要渲染的内容挂载到 DOM 树上挂载完成之后就会执行 componentDidMount 生命周期函数如果我们给组件创...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-29T20:46:02.000Z",
    "created_at": "2022-04-04T11:32:45.000Z",
    "updated_at": "2022-05-29T20:46:02.000Z",
    "published_at": "2022-05-29T20:46:02.000Z",
    "first_published_at": "2022-04-04T11:32:44.970Z",
    "draft_version": 2,
    "last_editor_id": 732231,
    "word_count": 1659,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1646657266595-d9e4c515-733d-4d3c-ba45-eb78b06b74a5.png",
    "custom_cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1646657266595-d9e4c515-733d-4d3c-ba45-eb78b06b74a5.png",
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212052,
    "slug": "hmvf8u",
    "title": "虚拟 dom",
    "description": "在原生的 JavaScript 程序中，我们直接对 DOM 进行创建和更改，而 DOM 元素通过我们监听的事件和我们的应用程序进行通讯。而 React 会先将你的代码转换成一个 JavaScript 对象，然后这个 JavaScript 对象再转换成真实 DOM。这个 JavaScript 对...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-28T16:48:06.000Z",
    "created_at": "2022-04-04T11:32:44.000Z",
    "updated_at": "2022-04-28T16:48:06.000Z",
    "published_at": "2022-04-28T16:48:06.000Z",
    "first_published_at": "2022-04-04T11:32:44.484Z",
    "draft_version": 6,
    "last_editor_id": 732231,
    "word_count": 543,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212050,
    "slug": "ed4qqb",
    "title": "事件相关问题",
    "description": "事件合成机制react 根据 w3c 规范定义了每个事件处理函数的参数，即合成事件。react 在合成事件中做了两件事：事件委派 和 自动绑定事件委派事件处理程序将会传递 SyntheticEvent(事件合成) 的实例。这是一个跨浏览器原生事件包装器，它具有与浏览器原生事件相同的接口，支持 ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-29T20:46:27.000Z",
    "created_at": "2022-04-04T11:32:44.000Z",
    "updated_at": "2022-05-29T20:46:27.000Z",
    "published_at": "2022-05-29T20:46:27.000Z",
    "first_published_at": "2022-04-04T11:32:43.997Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 839,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212048,
    "slug": "co230y",
    "title": "Vuex",
    "description": "Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。每一个 Vuex 应用的核心就是 store（仓库）。store 基本上就是一个容器，它包含应用中大部分的状态 ( state )。Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:43.000Z",
    "created_at": "2022-04-04T11:32:43.000Z",
    "updated_at": "2022-05-10T15:12:43.000Z",
    "published_at": "2022-04-04T11:32:43.000Z",
    "first_published_at": "2022-04-04T11:32:42.935Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 621,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212046,
    "slug": "bvokpn",
    "title": "vue.use 具体的功能",
    "description": "检查插件是否注册，若已注册，则直接跳出处理入参，将第一个参数之后的参数收集，并将首部塞入 this 上下文执行注册方法，调用定义好的 install 方法，传入处理的参数，若没有 install 方法并且插件本身为 function 则直接进行注册",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:42.000Z",
    "created_at": "2022-04-04T11:32:42.000Z",
    "updated_at": "2022-05-10T15:12:43.000Z",
    "published_at": "2022-04-04T11:32:42.000Z",
    "first_published_at": "2022-04-04T11:32:42.431Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 94,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212045,
    "slug": "wqgptk",
    "title": "组件缓存(keep-alive)",
    "description": "keep-alive 可以实现组件缓存，当组件切换时不会对当前组件进行卸载。常用的两个属性 include/exclude，允许组件有条件的进行缓存。两个生命周期 activated(命中缓存时调用)/deactivated(切换时调用)，用来得知当前组件是否处于活跃状态。同时，beforeD...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:42.000Z",
    "created_at": "2022-04-04T11:32:42.000Z",
    "updated_at": "2022-05-10T15:12:43.000Z",
    "published_at": "2022-04-04T11:32:42.000Z",
    "first_published_at": "2022-04-04T11:32:41.928Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 305,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212043,
    "slug": "pw3v8v",
    "title": "服务端渲染 ssr",
    "description": "SSR 也就是服务端渲染，也就是将 Vue 在客户端把标签渲染成 HTML 的工作放在服务端完成，然后再把 html 直接返回给客户端。SSR 有着更好的 SEO、并且首屏加载速度更快等优点。不过它也有一些缺点，比如我们的开发条件会受到限制，服务器端渲染只支持 beforeCreate 和 c...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:41.000Z",
    "created_at": "2022-04-04T11:32:41.000Z",
    "updated_at": "2022-05-10T15:12:43.000Z",
    "published_at": "2022-04-04T11:32:41.000Z",
    "first_published_at": "2022-04-04T11:32:41.482Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 428,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212042,
    "slug": "ggyg1d",
    "title": "nextTick 相关问题",
    "description": "$nextTick 原理及作用简述：Vue 是异步执行 dom 更新的，一旦观察到数据的变化，就会把同一个 event loop 中的观察数据变化的 watcher 推送进这个队列在下次 DOM 更新循环结束之后执行延迟回调。nextTick 主要使用了宏任务和微任务。根据执行环境分别尝试采用...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:41.000Z",
    "created_at": "2022-04-04T11:32:41.000Z",
    "updated_at": "2022-05-10T15:12:43.000Z",
    "published_at": "2022-04-04T11:32:41.000Z",
    "first_published_at": "2022-04-04T11:32:41.018Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 828,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212041,
    "slug": "fyz5q4",
    "title": "模版编译原理",
    "description": "Vue 的编译过程就是将 template 转化 为 render 函数的过程。会经历以下阶段首先解析模版，生成 AST 语法树(一种用 JavaScript 对象的形式来描述整个模板)使用大量的正则表达式对模板进行解析，遇到标签、文本的时候都会执行对应的钩子进行相关处理Vue 的数据是响应式...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-28T16:51:20.000Z",
    "created_at": "2022-04-04T11:32:40.000Z",
    "updated_at": "2022-04-28T16:51:20.000Z",
    "published_at": "2022-04-28T16:51:20.000Z",
    "first_published_at": "2022-04-04T11:32:40.472Z",
    "draft_version": 3,
    "last_editor_id": 732231,
    "word_count": 234,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212039,
    "slug": "yl9mmz",
    "title": "事件绑定原理",
    "description": "原生事件通过 addEventListener 绑定给真实元素组件事件通过 vue 自定义的 $on 实现；在组件上使用原生事件，需要加 .native 修饰符(相当于父组件中把子组件当作普通的 html 标签, 然后加上原生事件)on、emit 是基于发布订阅模式的, 维护一个事件中心, o...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:40.000Z",
    "created_at": "2022-04-04T11:32:40.000Z",
    "updated_at": "2022-05-10T15:12:43.000Z",
    "published_at": "2022-04-04T11:32:40.000Z",
    "first_published_at": "2022-04-04T11:32:39.986Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 149,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212037,
    "slug": "ycltzx",
    "title": "vue 和 react 中的 key",
    "description": "key 的作用在开发过程中，我们需要保证某个元素的 key 在其统计元素中具有唯一性在 vue 中如果不使用 key，vue 默认会使用一种最大限度减少动态元素并且尽可能的尝试就地修改或者复用相同类型元素的做法key 是 vnode 的唯一标记，用来使 diff 节点的操纵更准确、更便捷更准确...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-28T16:59:59.000Z",
    "created_at": "2022-04-04T11:32:40.000Z",
    "updated_at": "2022-04-28T17:00:00.000Z",
    "published_at": "2022-04-28T16:59:59.000Z",
    "first_published_at": "2022-04-04T11:32:39.496Z",
    "draft_version": 4,
    "last_editor_id": 732231,
    "word_count": 354,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212036,
    "slug": "ghc5e2",
    "title": "vue3 数据响应式原理",
    "description": "采用 Proxy + Reflect 反射的原理，劫持 getter 和 setter，当数据发生变化时，触发代理对象发生变化，此时发布消息给订阅者，触发相应的监听回调在 vue3 中通过 effect 来实现响应式处理和视图更新之间的解耦reactive设置对象为响应式对象。接受一个参数，判...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:39.000Z",
    "created_at": "2022-04-04T11:32:39.000Z",
    "updated_at": "2022-05-10T15:12:43.000Z",
    "published_at": "2022-04-04T11:32:39.000Z",
    "first_published_at": "2022-04-04T11:32:39.015Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 931,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647254315479-a6f6bf50-aa58-42d4-ab91-612b017f6160.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212032,
    "slug": "woi8l3",
    "title": "渲染方式",
    "description": "vue 采用异步渲染。因为 vue 是组件级更新，如果不采用异步更新，那么每次更新数据都会对当前组件重新渲染，为了性能考虑，vue 会在本轮数据更新后，再去异步更新视图",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:38.000Z",
    "created_at": "2022-04-04T11:32:38.000Z",
    "updated_at": "2022-05-10T15:12:43.000Z",
    "published_at": "2022-04-04T11:32:38.000Z",
    "first_published_at": "2022-04-04T11:32:37.969Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 74,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212029,
    "slug": "vcur5h",
    "title": "vue3 优化的关键点",
    "description": "响应式核心 api 替换将响应式核心的 api 从 Object.defineProperty 更换为 Proxy，重构了 Vue 的响应式系统；解决了 Vue2 中存在的响应式问题。Object.defineProperty 的问题无法监听数组的变化在 vue2 中，通过重写数组原型链上的 ...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:37.000Z",
    "created_at": "2022-04-04T11:32:37.000Z",
    "updated_at": "2022-05-10T15:12:43.000Z",
    "published_at": "2022-04-04T11:32:37.000Z",
    "first_published_at": "2022-04-04T11:32:37.406Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1508,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/732231/1647147332285-b516a919-a81e-4165-984b-c38bebd423a9.png",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 72212027,
    "slug": "cw2t02",
    "title": "正则表达式",
    "description": "常用正则表达式// （1）匹配 16 进制颜色值 var regex = /#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})/g;  // （2）匹配日期，如 yyyy-mm-dd 格式 var regex = /^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9...",
    "user_id": 732231,
    "book_id": 26225124,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-04-04T11:32:37.000Z",
    "created_at": "2022-04-04T11:32:37.000Z",
    "updated_at": "2022-05-10T15:12:44.000Z",
    "published_at": "2022-04-04T11:32:37.000Z",
    "first_published_at": "2022-04-04T11:32:36.779Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 342,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  }
]