{
  "id": 68063610,
  "slug": "qf8r3p",
  "title": "React 常见面试题",
  "book_id": 25332296,
  "book": {
    "id": 25332296,
    "type": "Book",
    "slug": "xxble8",
    "name": "前端技术文章",
    "user_id": 732231,
    "description": "记录前端相关的技术性文章",
    "creator_id": 732231,
    "public": 0,
    "items_count": 23,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2022-06-15T01:16:19.043Z",
    "updated_at": "2023-11-11T18:11:38.000Z",
    "created_at": "2022-03-13T09:55:39.000Z",
    "namespace": "wcywxq/xxble8",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"xJ3qc\"></a>\n## React 中 keys 的作用是什么\n\n- 在开发过程中，我们需要保证某个元素的 key 在其同级元素中具有唯一性。\n- 在 react diff 算法中 react 会借助元素的 key 值来判断该元素是新近创建的还是被移动而来的元素，从而减少不必要的重渲染。\n- 此外，react 还要借助 key 值来判断元素与本地状态的关联关系，因此我们绝不可忽视转换函数中 key 的重要性。\n\n<a name=\"pC5bd\"></a>\n## 当调用 setState 时，发生了什么\n\n将传递给 setState 的对象合并到组件的当前状态，这将启动一个和解的过程，构建一个新的 react 元素树，与上一个元素树进行对比(diff)，从而进行最小化的重渲染\n\n<a name=\"nLOYx\"></a>\n## 为什么 setState 的参数是一个 callback 而不是一个对\n\n因为 this.props 和 this.state 的更新可能是异步的，不能依赖他们的值去计算下一个 state\n\n\n\n",
  "body_draft": "",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"xJ3qc\"><span class=\"ne-text\">React 中 keys 的作用是什么</span></h2><p id=\"u87340f26\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uc86f3e15\"><span class=\"ne-text\">在开发过程中，我们需要保证某个元素的 key 在其同级元素中具有唯一性。</span></li></ul><ul class=\"ne-ul\"><li id=\"u0ed0a4d2\"><span class=\"ne-text\">在 react diff 算法中 react 会借助元素的 key 值来判断该元素是新近创建的还是被移动而来的元素，从而减少不必要的重渲染。</span></li></ul><ul class=\"ne-ul\"><li id=\"u04c4a767\"><span class=\"ne-text\">此外，react 还要借助 key 值来判断元素与本地状态的关联关系，因此我们绝不可忽视转换函数中 key 的重要性。</span></li></ul><p id=\"ueb7ba507\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h2 id=\"pC5bd\"><span class=\"ne-text\">当调用 setState 时，发生了什么</span></h2><p id=\"uc864fff8\" class=\"ne-p\"><br></p><p id=\"u5ba28be6\" class=\"ne-p\"><span class=\"ne-text\">将传递给 setState 的对象合并到组件的当前状态，这将启动一个和解的过程，构建一个新的 react 元素树，与上一个元素树进行对比(diff)，从而进行最小化的重渲染</span></p><p id=\"u59a8dd12\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h2 id=\"nLOYx\"><span class=\"ne-text\">为什么 setState 的参数是一个 callback 而不是一个对</span></h2><p id=\"ud6dbfb6f\" class=\"ne-p\"><br></p><p id=\"u6ab1c2a9\" class=\"ne-p\"><span class=\"ne-text\">因为 this.props 和 this.state 的更新可能是异步的，不能依赖他们的值去计算下一个 state</span></p><p id=\"u6b27d895\" class=\"ne-p\"><br></p><p id=\"u50e7034f\" class=\"ne-p\"><br></p><p id=\"u015d08ae\" class=\"ne-p\"><span class=\"ne-text\"></span></p></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"xJ3qc\" id=\"xJ3qc\"><span data-lake-id=\"u7b5b5314\" id=\"u7b5b5314\">React 中 keys 的作用是什么</span></h2><p data-lake-id=\"u87340f26\" id=\"u87340f26\"><br></p><ul list=\"uc13991c8\"><li fid=\"u24b7b694\" data-lake-id=\"uc86f3e15\" id=\"uc86f3e15\"><span data-lake-id=\"u86bb9794\" id=\"u86bb9794\">在开发过程中，我们需要保证某个元素的 key 在其同级元素中具有唯一性。</span></li></ul><ul list=\"u40cf2167\"><li fid=\"udded0c74\" data-lake-id=\"u0ed0a4d2\" id=\"u0ed0a4d2\"><span data-lake-id=\"u9bb80bee\" id=\"u9bb80bee\">在 react diff 算法中 react 会借助元素的 key 值来判断该元素是新近创建的还是被移动而来的元素，从而减少不必要的重渲染。</span></li></ul><ul list=\"u01448137\"><li fid=\"u671f0c6c\" data-lake-id=\"u04c4a767\" id=\"u04c4a767\"><span data-lake-id=\"ufdc5fa91\" id=\"ufdc5fa91\">此外，react 还要借助 key 值来判断元素与本地状态的关联关系，因此我们绝不可忽视转换函数中 key 的重要性。</span></li></ul><p data-lake-id=\"ueb7ba507\" id=\"ueb7ba507\"><span data-lake-id=\"u5910af25\" id=\"u5910af25\">​</span><br></p><h2 data-lake-id=\"pC5bd\" id=\"pC5bd\"><span data-lake-id=\"u3c6582a1\" id=\"u3c6582a1\">当调用 setState 时，发生了什么</span></h2><p data-lake-id=\"uc864fff8\" id=\"uc864fff8\"><br></p><p data-lake-id=\"u5ba28be6\" id=\"u5ba28be6\"><span data-lake-id=\"ua7ade092\" id=\"ua7ade092\">将传递给 setState 的对象合并到组件的当前状态，这将启动一个和解的过程，构建一个新的 react 元素树，与上一个元素树进行对比(diff)，从而进行最小化的重渲染</span></p><p data-lake-id=\"u59a8dd12\" id=\"u59a8dd12\"><span data-lake-id=\"u4c98e7b1\" id=\"u4c98e7b1\">​</span><br></p><h2 data-lake-id=\"nLOYx\" id=\"nLOYx\"><span data-lake-id=\"ud9c020ba\" id=\"ud9c020ba\">为什么 setState 的参数是一个 callback 而不是一个对</span></h2><p data-lake-id=\"ud6dbfb6f\" id=\"ud6dbfb6f\"><br></p><p data-lake-id=\"u6ab1c2a9\" id=\"u6ab1c2a9\"><span data-lake-id=\"u5c236860\" id=\"u5c236860\">因为 this.props 和 this.state 的更新可能是异步的，不能依赖他们的值去计算下一个 state</span></p><p data-lake-id=\"u6b27d895\" id=\"u6b27d895\"><br></p><p data-lake-id=\"u50e7034f\" id=\"u50e7034f\"><br></p><p data-lake-id=\"u015d08ae\" id=\"u015d08ae\"><span data-lake-id=\"u5cf3d1b0\" id=\"u5cf3d1b0\">​</span><br></p>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-03-02T17:01:36.000Z",
  "deleted_at": null,
  "created_at": "2022-03-02T16:38:01.000Z",
  "updated_at": "2022-03-13T09:58:45.000Z",
  "published_at": "2022-03-02T17:01:36.000Z",
  "first_published_at": "2022-03-02T16:40:29.000Z",
  "word_count": 261,
  "cover": null,
  "description": "React 中 keys 的作用是什么在开发过程中，我们需要保证某个元素的 key 在其同级元素中具有唯一性。在 react diff 算法中 react 会借助元素的 key 值来判断该元素是新近创建的还是被移动而来的元素，从而减少不必要的重渲染。此外，react 还要借助 key 值来判断...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}