[
  {
    "id": 77021835,
    "slug": "xycpzl",
    "title": "树转数组",
    "description": "// 对于给定的对象数组结构，描述的是一颗树的节点关系，要求实现一个函数，找出这颗树所有的链路，以二维数组形式输出 // 例如： const list = [     { id: 6 },     { id: 2, children: [5] },     { id: 13 },     { ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:50.000Z",
    "created_at": "2022-05-11T15:02:50.000Z",
    "updated_at": "2022-05-11T15:08:04.000Z",
    "published_at": "2022-05-11T15:02:50.000Z",
    "first_published_at": "2022-05-11T15:02:49.933Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 237,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021833,
    "slug": "bzgequ",
    "title": "数组转树",
    "description": null,
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 0,
    "view_status": 0,
    "read_status": 0,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:49.000Z",
    "created_at": "2022-05-11T15:02:49.000Z",
    "updated_at": "2022-05-11T15:02:56.000Z",
    "published_at": null,
    "first_published_at": null,
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 0,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021830,
    "slug": "vtqbgk",
    "title": "实现 es6 的 extends",
    "description": "function B(name) {   this.name = name }  function A(name, age) {   // 1. 将 A 的原型指向 B   Object.setPrototypeOf(A, B)   // 2. 用 A 的实例作为 this 调用 B，得到继承...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:48.000Z",
    "created_at": "2022-05-11T15:02:48.000Z",
    "updated_at": "2022-05-11T15:08:04.000Z",
    "published_at": "2022-05-11T15:02:48.000Z",
    "first_published_at": "2022-05-11T15:02:47.543Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 99,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021825,
    "slug": "orxq0m",
    "title": "封装一个异步加载图片的方法",
    "description": "function loadImage(url) {   return new Promise((resolve, reject) => {     const img = new Image()     img.onload = function() {       console.log('...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:46.000Z",
    "created_at": "2022-05-11T15:02:46.000Z",
    "updated_at": "2022-05-11T15:08:04.000Z",
    "published_at": "2022-05-11T15:02:46.000Z",
    "first_published_at": "2022-05-11T15:02:46.285Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 48,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021821,
    "slug": "yg55el",
    "title": "Promise 每隔 1s 输出 1、2、3",
    "description": "const arr = [1, 2, 3] arr.reduce((prev, cur) => {   return prev.then(() => {     return new Promise(resolve => {       setTimeout(() => {         r...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:45.000Z",
    "created_at": "2022-05-11T15:02:45.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:45.000Z",
    "first_published_at": "2022-05-11T15:02:45.016Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 29,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021819,
    "slug": "apqplp",
    "title": "实现 mergePromise 函数",
    "description": "实现 mergePromise 函数，把传进去的数组按照顺序先后执行，并且把返回的数据先后放到数组 data 中const time = timer => {   return new Promise(resolve => {     setTimeout(() => {       reso...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:44.000Z",
    "created_at": "2022-05-11T15:02:44.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:44.000Z",
    "first_published_at": "2022-05-11T15:02:43.689Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 196,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021816,
    "slug": "edff3s",
    "title": "通过调用 addRemote 实现 add",
    "description": "描述通过调用下面的addRemote，实现add方法。addRemote仅能计算两个数字之和，add可以传入任意多个数字，返回的是这些数字之和const addRemote = async (a, b) => new Promise(resolve => {   setTimeout(() =...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:42.000Z",
    "created_at": "2022-05-11T15:02:42.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:42.000Z",
    "first_published_at": "2022-05-11T15:02:42.405Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 218,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021810,
    "slug": "uwleof",
    "title": "倒计时",
    "description": "const totalDuration = 10 * 1000; let requestRef = null; let startTime; let prevEndTime; let prevTime; let currentCount = totalDuration; let endTime...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:41.000Z",
    "created_at": "2022-05-11T15:02:41.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:41.000Z",
    "first_published_at": "2022-05-11T15:02:41.092Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 202,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021807,
    "slug": "mnsw3z",
    "title": "明信片问题",
    "description": "聊一个明信片问题吧，你有一个明信片，要寄给一个陌生人，有几个问题你怎么保证不被快递员知道内容？（包上信封,这里埋了个坑，没有联想到另一篇看过的鸽子通信里面，用箱子锁上更加可靠）快递员把信封拆掉呢？（在信的内容里添加线索，在信封外加上线索进行一个解密对应，当时没get到面试官针对上面的提示）信封...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:40.000Z",
    "created_at": "2022-05-11T15:02:40.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:40.000Z",
    "first_published_at": "2022-05-11T15:02:39.809Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 215,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021804,
    "slug": "an017i",
    "title": "简易版 vue3",
    "description": "核心逻辑const isObject = obj => typeof obj === 'object' && obj !== null const hasOwn = (target, key) => target.hasOwnProperty(key)  // 已有代理的存储 let toPr...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:38.000Z",
    "created_at": "2022-05-11T15:02:38.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:38.000Z",
    "first_published_at": "2022-05-11T15:02:38.488Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 500,
    "cover": "https://cdn.nlark.com/yuque/0/2022/jpeg/732231/1648797525903-a645d308-e784-49df-9ab7-5b89c93cd2c5.jpeg",
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021802,
    "slug": "tll6lm",
    "title": "js 通用类型获取",
    "description": "function _typeof(s) {   const r = Object.prototype.toString.call(s)   return r.replace(/\\[object (.*?)\\]/, '$1').toLowerCase() } console.log(   _ty...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:37.000Z",
    "created_at": "2022-05-11T15:02:37.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:37.000Z",
    "first_published_at": "2022-05-11T15:02:37.191Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 26,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021798,
    "slug": "pywta0",
    "title": "二分查找",
    "description": "给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。  示例 1:  输入: nums = [-1,0,3,5,9,12], target = 9  输出: 4  解释: 9...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:36.000Z",
    "created_at": "2022-05-11T15:02:36.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:36.000Z",
    "first_published_at": "2022-05-11T15:02:35.931Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 238,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021795,
    "slug": "dwziom",
    "title": "观察者模式",
    "description": "class Watcher {   constructor(name) {     this.name = name   }   update() {     console.log(this.name)   } }  class Notify {   constructor() {     ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:35.000Z",
    "created_at": "2022-05-11T15:02:35.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:35.000Z",
    "first_published_at": "2022-05-11T15:02:34.665Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 86,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021792,
    "slug": "cynvvd",
    "title": "版本号比较",
    "description": "给你两个版本号 version1 和 version2 ，请你比较它们。  版本号由一个或多个修订号组成，各修订号由一个 '.' 连接。每个修订号由 多位数字 组成，可能包含 前导零 。每个版本号至少包含一个字符。修订号从左到右编号，下标从 0 开始，最左边的修订号下标为 0 ，下一个修订号下...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:33.000Z",
    "created_at": "2022-05-11T15:02:33.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:33.000Z",
    "first_published_at": "2022-05-11T15:02:33.416Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 536,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021789,
    "slug": "tmw2ny",
    "title": "查找二维数组的目标值",
    "description": "var findNumberIn2DArray = function(matrix, target) {     if (matrix == null || matrix.length == 0) {         return false     }     let row = 0    ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:32.000Z",
    "created_at": "2022-05-11T15:02:32.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:32.000Z",
    "first_published_at": "2022-05-11T15:02:32.128Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 61,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021787,
    "slug": "ngwrak",
    "title": "sleep 函数实现",
    "description": "const sleep = (func, delay) => {   return new Promise((resolve) => {     setTimeout(() => {       resolve(func())     }, delay)   }) }  const conso...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:31.000Z",
    "created_at": "2022-05-11T15:02:31.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:31.000Z",
    "first_published_at": "2022-05-11T15:02:30.861Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 84,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021785,
    "slug": "mtoe2n",
    "title": "实现 JSON.stringify",
    "description": "JSON.stringify()  方法将一个 JavaScript 对象或值转换为 JSON 字符串，如果指定了一个 replacer 函数，则可以选择性地替换值，或者指定的 replacer 是数组，则可选择性地仅包含数组指定的属性。MDNconst jsonstringify = dat...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:30.000Z",
    "created_at": "2022-05-11T15:02:30.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:30.000Z",
    "first_published_at": "2022-05-11T15:02:29.576Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1276,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021784,
    "slug": "zzc9k3",
    "title": "实现简单路由",
    "description": "// hash路由 class Route{   constructor(){     // 路由存储对象     this.routes = {}     // 当前hash     this.currentHash = ''     // 绑定this，避免监听时this指向改变     ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:28.000Z",
    "created_at": "2022-05-11T15:02:28.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:28.000Z",
    "first_published_at": "2022-05-11T15:02:28.276Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 81,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021780,
    "slug": "aqw6my",
    "title": "二维数组斜向打印",
    "description": "function printMatrix(arr){   let m = arr.length, n = arr[0].length \tlet res = []      // 左上角，从 0 到 n - 1 列进行打印   for (let k = 0; k < n; k++) {     ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:27.000Z",
    "created_at": "2022-05-11T15:02:27.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:27.000Z",
    "first_published_at": "2022-05-11T15:02:26.899Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 114,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021776,
    "slug": "wyhgfz",
    "title": "循环打印红黄绿",
    "description": "红灯 3s 亮一次，绿灯 1s 亮一次，黄灯 2s 亮一次；如何让三个灯不断交替重复亮灯？三个亮灯函数：function red() {     console.log('red'); } function green() {     console.log('green'); } funct...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:26.000Z",
    "created_at": "2022-05-11T15:02:26.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:26.000Z",
    "first_published_at": "2022-05-11T15:02:25.620Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 252,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021772,
    "slug": "rln2y3",
    "title": "查找文章中出现频率最高的词",
    "description": "function findMostWord(article) {   // 合法性判断   if (!article) return;   // 参数处理   article = article.trim().toLowerCase();   let wordList = article.ma...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:24.000Z",
    "created_at": "2022-05-11T15:02:24.000Z",
    "updated_at": "2022-05-11T15:08:05.000Z",
    "published_at": "2022-05-11T15:02:24.000Z",
    "first_published_at": "2022-05-11T15:02:24.366Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 103,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021768,
    "slug": "phqdmd",
    "title": "判断对象是否存在循环引用",
    "description": "循环引用对象本来没有什么问题，但是序列化的时候就会发生问题，比如调用 JSON.stringify() 对该类对象进行序列化，就会报错: Converting circular structure to JSON.下面方法可以用来判断一个对象中是否已存在循环引用：const isCycleOb...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:23.000Z",
    "created_at": "2022-05-11T15:02:23.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:23.000Z",
    "first_published_at": "2022-05-11T15:02:23.098Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 170,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021764,
    "slug": "rxw8qp",
    "title": "解析 url 参数对象",
    "description": "正则method 1function parseParam(url) {     const reg = /(?:&|\\/?)(\\w+)=([^&$]+)/g   const params = {}   while(result = reg.exec(url)) {   \tparams[res...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2023-01-06T09:17:32.000Z",
    "created_at": "2022-05-11T15:02:22.000Z",
    "updated_at": "2023-01-06T09:17:32.000Z",
    "published_at": "2023-01-06T09:17:32.000Z",
    "first_published_at": "2022-05-11T15:02:21.841Z",
    "draft_version": 1,
    "last_editor_id": 732231,
    "word_count": 66,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021761,
    "slug": "gkoa19",
    "title": "围圈报数问题",
    "description": "有 30 个小孩儿，编号从 1-30，围成一圈依此报数，1、2、3 数到 3 的小孩儿退出这个圈， 然后下一个小孩 重新报数 1、2、3，问最后剩下的那个小孩儿的编号是多少?function childNum(n, m){     let res = 0     for (let i = 2;...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:21.000Z",
    "created_at": "2022-05-11T15:02:21.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:21.000Z",
    "first_published_at": "2022-05-11T15:02:20.575Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 104,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021754,
    "slug": "csgagn",
    "title": "类数组转换为数组",
    "description": "call + sliceArray.prototype.slice.call(arrayLike)apply + concatArray.prototype.concat.apply([], arrayLike)Array.fromArray.from(arrayLike)",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:19.000Z",
    "created_at": "2022-05-11T15:02:19.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:19.000Z",
    "first_published_at": "2022-05-11T15:02:19.241Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 11,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021748,
    "slug": "xlvd0g",
    "title": "实现非负大整数相加",
    "description": "Number.MAX_VALUE // 1.7976931348623157e+308 Number.MAX_SAFE_INTEGER // 9007199254740991 Number.MIN_VALUE // 5e-324 Number.MIN_SAFE_INTEGER // -9007...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:18.000Z",
    "created_at": "2022-05-11T15:02:18.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:18.000Z",
    "first_published_at": "2022-05-11T15:02:17.963Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 358,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021743,
    "slug": "vphpea",
    "title": "将数字千分位用逗号隔开",
    "description": "正则'123456789'.replace(/(?!^)(?=(\\d{3})+$)/g, ',')有小数 let format = n => {     let num = n.toString() // 转成字符串     let decimals = ''         // 判断是否有...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:17.000Z",
    "created_at": "2022-05-11T15:02:17.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:17.000Z",
    "first_published_at": "2022-05-11T15:02:16.610Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 194,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021740,
    "slug": "hxelqc",
    "title": "实现字符串的 repeat 方法",
    "description": "输入字符串 s，以及其重复的次数，输出重复的结果，例如输入 abc，2，输出 abcabc。利用数组function repeat(s, n) {     return (new Array(n + 1)).join(s); }递归实现function repeat(s, n) {     r...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:15.000Z",
    "created_at": "2022-05-11T15:02:15.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:15.000Z",
    "first_published_at": "2022-05-11T15:02:15.318Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 69,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021736,
    "slug": "xw17tv",
    "title": "交换 a、b 的值，不使用临时变量",
    "description": "a = a + b b = a - b a = a - b",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:14.000Z",
    "created_at": "2022-05-11T15:02:14.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:14.000Z",
    "first_published_at": "2022-05-11T15:02:14.052Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 15,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021731,
    "slug": "xlrgnu",
    "title": "实现数组乱序输出",
    "description": "取出数组的第 1 个元素，随机产生一个索引值，将该第 1 个元素和这个索引对应的元素进行交换。第 2 次取出数据数组第 2 个元素，随机产生一个除了索引为 1 的之外的索引值，并将第 2 个元素与该索引值对应的元素进行交换按照上面的规律执行，直到遍历完成var arr = [1, 2, 3, ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:13.000Z",
    "created_at": "2022-05-11T15:02:13.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:13.000Z",
    "first_published_at": "2022-05-11T15:02:12.776Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 156,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021725,
    "slug": "owtewn",
    "title": "数组常用方法",
    "description": "Array.prototype.everyArray.prototype.every = function(cb) {   for (let i = 0; i < this.length; i++) {     if (!cb(this[i], i, this)) return false  ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:11.000Z",
    "created_at": "2022-05-11T15:02:12.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:11.000Z",
    "first_published_at": "2022-05-11T15:02:11.479Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 190,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021715,
    "slug": "ybrsyw",
    "title": "实现 call、apply、bind",
    "description": "call判断调用对象是否为函数，即使我们是定义在函数的原型上的，但是可能出现使用 call 等方式调用的情况。判断传入上下文对象是否存在，如果不存在，则设置为 window 。处理传入的参数，截取第一个参数后的所有参数。将函数作为上下文对象的一个属性。使用上下文对象来调用这个方法，并保存返回结...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:10.000Z",
    "created_at": "2022-05-11T15:02:10.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:10.000Z",
    "first_published_at": "2022-05-11T15:02:10.168Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 531,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021710,
    "slug": "shzfyg",
    "title": "实现日期格式化函数",
    "description": "输入dateFormat(new Date('2020-12-01'), 'yyyy/MM/dd') // 2020/12/01 dateFormat(new Date('2020-04-01'), 'yyyy/MM/dd') // 2020/04/01 dateFormat(new Date...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:09.000Z",
    "created_at": "2022-05-11T15:02:09.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:09.000Z",
    "first_published_at": "2022-05-11T15:02:08.918Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 62,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021706,
    "slug": "pldu2b",
    "title": "实现 new 关键字",
    "description": "在调用 new 的过程中会发生以上 4 件事情：首先创建了一个新的空对象设置原型，将对象的原型设置为函数的 prototype 对象。让函数的 this 指向这个对象，执行构造函数的代码（为这个新对象添加属性）判断函数的返回值类型，如果是值类型，返回创建的对象。如果是引用类型，就返回这个引用类...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:08.000Z",
    "created_at": "2022-05-11T15:02:08.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:02:08.000Z",
    "first_published_at": "2022-05-11T15:02:07.625Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 160,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021704,
    "slug": "myzomg",
    "title": "简易版 vuex",
    "description": "store 注册let Vue  // Vue 插件必须要有 install 函数 export function install(_Vue) { \tVue = _Vue // 拿到 Vue 的构造器，存起来   // 通过 mixin 注入到每一个 vue 实例   Vue.mixin({ ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:06.000Z",
    "created_at": "2022-05-11T15:02:06.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:06.000Z",
    "first_published_at": "2022-05-11T15:02:06.357Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 484,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021700,
    "slug": "kbkc8e",
    "title": "带并发的异步调度器 Scheduler",
    "description": "/*   JS实现一个带并发限制的异步调度器Scheduler，保证同时运行的任务最多有两个。   完善下面代码的Scheduler类，使以下程序能够正常输出：   class Scheduler {     add(promiseCreator) { ... }     // ...   }...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:05.000Z",
    "created_at": "2022-05-11T15:02:05.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:05.000Z",
    "first_published_at": "2022-05-11T15:02:05.091Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 785,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021696,
    "slug": "cq5ws4",
    "title": "实现 ajax",
    "description": "const SERVER_URL = \"/server\"; let xhr = new XMLHttpRequest(); // 创建 Http 请求 xhr.open(\"GET\", SERVER_URL, true); // 设置状态监听函数 xhr.onreadystatechange =...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:04.000Z",
    "created_at": "2022-05-11T15:02:04.000Z",
    "updated_at": "2022-05-11T15:08:06.000Z",
    "published_at": "2022-05-11T15:02:04.000Z",
    "first_published_at": "2022-05-11T15:02:03.794Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 234,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021694,
    "slug": "tmwgql",
    "title": "LRU(最少置换算法)",
    "description": "描述：运用你所掌握的数据结构，设计和实现一个  LRU (最近最少使用) 缓存机制 。 实现 LRUCache 类：LRUCache(int capacity) 以正整数作为容量 capacity 初始化 LRU 缓存int get(int key) 如果关键字 key 存在于缓存中，则返回关...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:03.000Z",
    "created_at": "2022-05-11T15:02:03.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:02:03.000Z",
    "first_published_at": "2022-05-11T15:02:02.509Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1132,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021693,
    "slug": "ln6fpo",
    "title": "大数相加",
    "description": "function add(a, b) {   let res = ''   let temp = 0   a = a.toString().split('')   b = b.toString().split('')   while (a.length || b.length || temp)...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:01.000Z",
    "created_at": "2022-05-11T15:02:01.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:02:01.000Z",
    "first_published_at": "2022-05-11T15:02:01.214Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 45,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021689,
    "slug": "ba4wuo",
    "title": "实现 instanceof",
    "description": "首先获取原型的类型然后获取对象的类型然后一直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型连最终为 nullfunction _instanceOf(target, origin) { \tif (typeof target !== 'object' || target...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:02:00.000Z",
    "created_at": "2022-05-11T15:02:00.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:02:00.000Z",
    "first_published_at": "2022-05-11T15:01:59.952Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 115,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021688,
    "slug": "vhngph",
    "title": "获取两个数之间的任意随机数",
    "description": "通过 JavaScript 的 Math.random() 方法可以获取 0 到 1 之间的任意随机数，那如何获取任意给定的两个数之间的随机数呢？如获取 2 和 5 之间的随机数，5 和 10 之间的随机数等。由于 Math.random() 函数总是返回 0 到 1 之间的一个随机数，我们可...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:59.000Z",
    "created_at": "2022-05-11T15:01:59.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:59.000Z",
    "first_published_at": "2022-05-11T15:01:58.657Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 214,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021687,
    "slug": "tohw0k",
    "title": "洗牌算法",
    "description": "代码模版洗牌算法的正确性原则：产生的结果必须有 n! 种可能，否则就是错误的// 得到一个在闭区间 [min, max] 内的随机整数 int randInt(int min, int max);  // 第一种写法 void shuffle(int[] arr) {     int n = ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:57.000Z",
    "created_at": "2022-05-11T15:01:57.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:57.000Z",
    "first_published_at": "2022-05-11T15:01:57.395Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 752,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021683,
    "slug": "bq7f7e",
    "title": "斐波那契数列",
    "description": "递归function fn(n) { \tif (n === 0) return 0   if (n === 1) return 1   return fn(n - 2) + fn(n - 1) }尾调用function fn(n, a1 = 0, a2 = 1) { \tif (n === 0)...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:56.000Z",
    "created_at": "2022-05-11T15:01:56.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:56.000Z",
    "first_published_at": "2022-05-11T15:01:56.117Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 169,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021679,
    "slug": "sgcusf",
    "title": "Promise 缓存",
    "description": "为了解决 promise 调用常量，每个页面都会调用这个常量，以解决多次调用接口对服务器造成请求的浪费。可以使用 promise 缓存或者全局状态管理。const cacheMap = new Map() function enableCache(target, name, descripto...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:55.000Z",
    "created_at": "2022-05-11T15:01:55.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:55.000Z",
    "first_published_at": "2022-05-11T15:01:54.826Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 119,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021676,
    "slug": "pyig7m",
    "title": "动态规划和贪心算法",
    "description": "动态规划（Dynamic Programming，DP）是一种将复杂问题分解成更小的子问题来解决的优化算法。解题思路：明确 状态 和 选择明确 dp 数组定义状态转移方程伪代码转换为代码下面有一些用动态规划来解决实际问题的算法：最少硬币找零给定一组硬币的面额，以及要找零的钱数，计算出符合找零钱...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:53.000Z",
    "created_at": "2022-05-11T15:01:53.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:53.000Z",
    "first_published_at": "2022-05-11T15:01:53.268Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 3860,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021670,
    "slug": "ivvld9",
    "title": "排序",
    "description": "在计算机编程中，排序算法是最常用的算法之一，本文介绍了几种常见的排序算法以及它们之间的差异和复杂度。冒泡排序冒泡排序应该是最简单的排序算法了，在所有讲解计算机编程和数据结构的课程中，无一例外都会拿冒泡排序作为开篇来讲解排序的原理。冒泡排序理解起来也很容易，就是两个嵌套循环遍历数组，对数组中的元...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:52.000Z",
    "created_at": "2022-05-11T15:01:52.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:52.000Z",
    "first_published_at": "2022-05-11T15:01:51.736Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 4390,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021669,
    "slug": "gx1y1y",
    "title": "计算对象占用的字节数",
    "description": "核心：number 类型：8 字节string 类型：每个字符长度 2 字节boolean 类型：4 字节let ws = new WeakSet() // 存储已经计算过的内存，避免相同引用造成的问题 function calculator(val) {   let type = typeo...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:50.000Z",
    "created_at": "2022-05-11T15:01:50.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:50.000Z",
    "first_published_at": "2022-05-11T15:01:50.463Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 213,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021666,
    "slug": "athu4p",
    "title": "文本中识别敏感词、表情包、链接、数字、字母并高亮",
    "description": "// 匹配等级，从左向右依次降低 var levels = [\"link\", \"emoji\", \"joke\", \"numberalphabet\"]; // 对应规则下的正则，样式和渲染内容 var rulesMap = {   link: {     tag: \"a\",     regex: ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:49.000Z",
    "created_at": "2022-05-11T15:01:49.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:49.000Z",
    "first_published_at": "2022-05-11T15:01:49.115Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 730,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021664,
    "slug": "xz2gy5",
    "title": "图片加载数量限制",
    "description": "考察promise并发控制function limitLoad(urls, handler, limit) { \tconst sequence = [].concat(urls)   let promises = []   promises = sequence.splice(0, limit...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:48.000Z",
    "created_at": "2022-05-11T15:01:48.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:48.000Z",
    "first_published_at": "2022-05-11T15:01:47.850Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 95,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021662,
    "slug": "gd3193",
    "title": "Promise 并发控制",
    "description": "并发控制函数// 模拟异步请求 const request = url => new Promise(resolve => { \tsetTimeout(() => {   \tresolve(`任务 ${url.padEnd(10, ' ')} 完成`)   }, 1000) })  // 并发...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:47.000Z",
    "created_at": "2022-05-11T15:01:47.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:47.000Z",
    "first_published_at": "2022-05-11T15:01:46.561Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 588,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021658,
    "slug": "dm9n4g",
    "title": "给 xhr 添加 hook，实现在各个阶段打印日志",
    "description": "重写 xhr 的属性和方法class XhrHook { \tconstructor(beforeHook = {}, afterHook = {}) {   \tthis.XHR = window.XMLHttpRequest     this.beforeHooks = beforeHook ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:45.000Z",
    "created_at": "2022-05-11T15:01:45.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:45.000Z",
    "first_published_at": "2022-05-11T15:01:45.264Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 254,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021653,
    "slug": "wsmws7",
    "title": "长列表虚拟滚动",
    "description": "Vue 版本<template>     <div class=\"virtual-list\">         <section class=\"container\" ref=\"containerRef\" @scroll=\"scrollView\">             <div class=...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:44.000Z",
    "created_at": "2022-05-11T15:01:44.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:44.000Z",
    "first_published_at": "2022-05-11T15:01:43.995Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 379,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021649,
    "slug": "um4g6z",
    "title": "异步串行输出",
    "description": "实现 createFlow 按照 a、b，延时 1s，c，延时 1s，d，e，done 顺序打印const log = console.log const delay = ms => new Promise(resolve => setTimeout(resolve, ms)) const s...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:43.000Z",
    "created_at": "2022-05-11T15:01:43.000Z",
    "updated_at": "2022-05-11T15:08:07.000Z",
    "published_at": "2022-05-11T15:01:43.000Z",
    "first_published_at": "2022-05-11T15:01:42.703Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 109,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021647,
    "slug": "cwlftq",
    "title": "图片格式转换为 webp",
    "description": "阿里云 oss 支持通过链接后面拼接参数来做图片的格式转换，尝试实现把任意图片格式转换为 webp 格式需要注意 webp 兼容性function checkWebp() { \ttry {   \tconst canvas = document.createElement('canvas')  ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:41.000Z",
    "created_at": "2022-05-11T15:01:41.000Z",
    "updated_at": "2022-05-11T15:08:08.000Z",
    "published_at": "2022-05-11T15:01:41.000Z",
    "first_published_at": "2022-05-11T15:01:41.402Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 133,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021645,
    "slug": "wf9bwg",
    "title": "手动实现定时器",
    "description": "使用 RequestAnimationFrame 实现定时器浏览器默认提供的 setTimeout 和 setInterval 的问题首先在针对浏览器端的默认实现中，setTimeout 和 setInterval 的定时是不准确的，因为我们知道 js 是单线程的，如果前面的代码耗费了较长的时...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:40.000Z",
    "created_at": "2022-05-11T15:01:40.000Z",
    "updated_at": "2022-05-11T15:08:08.000Z",
    "published_at": "2022-05-11T15:01:40.000Z",
    "first_published_at": "2022-05-11T15:01:40.075Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 851,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021640,
    "slug": "ufks1z",
    "title": "浅拷贝和深拷贝",
    "description": "浅拷贝浅拷贝是指，一个新的对象对原始对象的属性值进行精确地拷贝，如果拷贝的是基本数据类型，拷贝的就是基本数据类型的值，如果是引用数据类型，拷贝的就是内存地址。如果其中一个对象的引用内存地址发生改变，另一个对象也会发生变化。对象浅拷贝的一般实现function shallowCopy(obj) ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:39.000Z",
    "created_at": "2022-05-11T15:01:39.000Z",
    "updated_at": "2022-05-11T15:08:08.000Z",
    "published_at": "2022-05-11T15:01:39.000Z",
    "first_published_at": "2022-05-11T15:01:38.763Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 770,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021636,
    "slug": "indxog",
    "title": "简易版 vue2",
    "description": "vue.js入口import Observer from './observer.js' import Compiler from './compiler.js'  /**  * 包括 vue 构造函数，接收各种配置参数等  */ export default class Vue { \tcon...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:37.000Z",
    "created_at": "2022-05-11T15:01:37.000Z",
    "updated_at": "2022-05-11T15:08:08.000Z",
    "published_at": "2022-05-11T15:01:37.000Z",
    "first_published_at": "2022-05-11T15:01:37.436Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 1087,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021634,
    "slug": "yo9cx5",
    "title": "函数柯理化",
    "description": "什么是柯理化函数柯里化指的是一种将使用多个参数的一个函数转换成一系列使用一个参数的函数的技术。(函数柯理化的基础是闭包)实现// es6 实现 function curry(fn, ...args) { \treturn fn.length <= args.length ? fn(...args...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:36.000Z",
    "created_at": "2022-05-11T15:01:36.000Z",
    "updated_at": "2022-05-11T15:08:08.000Z",
    "published_at": "2022-05-11T15:01:36.000Z",
    "first_published_at": "2022-05-11T15:01:36.121Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 854,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021632,
    "slug": "vd2h4l",
    "title": "Promise  常用方法实现",
    "description": "Promise.allPromise.all 方法用于将多个 Promise 实例，包装成一个新的 Promise 实例。如果每个实例都成功，会将所有实例的返回值组成一个数组如果其中一个实例运行失败，则返回最先失败的实例结果（在创建实例的时候，promise.all 内部的实例就已经执行了，无...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:35.000Z",
    "created_at": "2022-05-11T15:01:35.000Z",
    "updated_at": "2022-05-11T15:08:08.000Z",
    "published_at": "2022-05-11T15:01:35.000Z",
    "first_published_at": "2022-05-11T15:01:34.833Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 662,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021626,
    "slug": "griz0t",
    "title": "节流",
    "description": "设置了固定时间触发的时候，在触发高频事件的过程中，如果达到了设置的时间间隔，将执行 1 次常用场景: resize、scroll 等一定会触发的高频事件中初级版第一次立即执行, 时间戳法function throttle(fn, wait) {   let prev = 0   return ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:34.000Z",
    "created_at": "2022-05-11T15:01:34.000Z",
    "updated_at": "2022-05-11T15:08:08.000Z",
    "published_at": "2022-05-11T15:01:34.000Z",
    "first_published_at": "2022-05-11T15:01:33.541Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 404,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021623,
    "slug": "gq2z9n",
    "title": "数组去重实现",
    "description": "利用 filter + indexOf 去重function uniq(arr) { \treturn arr.filter((item, index, array) => array.indexOf(item) === index) }利用 reduce  + includes 去重复func...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:32.000Z",
    "created_at": "2022-05-11T15:01:32.000Z",
    "updated_at": "2022-05-11T15:08:08.000Z",
    "published_at": "2022-05-11T15:01:32.000Z",
    "first_published_at": "2022-05-11T15:01:32.247Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 58,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021620,
    "slug": "fl6cgx",
    "title": "实现 Promise A+",
    "description": "// A+ const PENDING = \"PENDING\" const FULFILLED = \"fulfilled\" const REJECTED = \"rejected\"  class _Promise {   constructor(executor) {     this.stat...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:31.000Z",
    "created_at": "2022-05-11T15:01:31.000Z",
    "updated_at": "2022-05-11T15:08:08.000Z",
    "published_at": "2022-05-11T15:01:31.000Z",
    "first_published_at": "2022-05-11T15:01:30.927Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 637,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021614,
    "slug": "enlngv",
    "title": "防抖",
    "description": "设置了固定时间触发的时候，在触发高频事件后如果达到了设置的时间间隔，将执行 1 次。如果在设置的时间间隔内再次触发，将重新计算时间常用场景: input 输入初级版function debounce(func, wait) { \tlet timeout   return function(.....",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:30.000Z",
    "created_at": "2022-05-11T15:01:30.000Z",
    "updated_at": "2022-05-11T15:08:08.000Z",
    "published_at": "2022-05-11T15:01:30.000Z",
    "first_published_at": "2022-05-11T15:01:29.618Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 165,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021611,
    "slug": "ezcdgo",
    "title": "发布订阅模式",
    "description": "class EventEmitter {   constructor(maxListeners = Infinity) {     this.events = {}     this.maxListeners = maxListeners   }   on(key, cb) {     if ...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:28.000Z",
    "created_at": "2022-05-11T15:01:28.000Z",
    "updated_at": "2022-05-11T15:08:08.000Z",
    "published_at": "2022-05-11T15:01:28.000Z",
    "first_published_at": "2022-05-11T15:01:28.324Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 635,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  },
  {
    "id": 77021607,
    "slug": "doeryg",
    "title": "数组扁平化实现",
    "description": "利用递归的方法实现const flatDeep = arr => { \tlet result = []   for (let i = 0; i < arr.length; i++) {   \tif (arr[i] && arr[i].length) {     \tresult = result...",
    "user_id": 732231,
    "book_id": 27818302,
    "format": "lake",
    "public": 0,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "read_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-05-11T15:01:27.000Z",
    "created_at": "2022-05-11T15:01:27.000Z",
    "updated_at": "2022-05-11T15:08:08.000Z",
    "published_at": "2022-05-11T15:01:27.000Z",
    "first_published_at": "2022-05-11T15:01:27.011Z",
    "draft_version": 0,
    "last_editor_id": 732231,
    "word_count": 100,
    "cover": null,
    "custom_cover": null,
    "custom_description": null,
    "last_editor": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "book": null,
    "_serializer": "v2.doc"
  }
]