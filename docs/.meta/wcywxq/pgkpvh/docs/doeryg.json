{
  "id": 77021607,
  "slug": "doeryg",
  "title": "数组扁平化实现",
  "book_id": 27818302,
  "book": {
    "id": 27818302,
    "type": "Book",
    "slug": "pgkpvh",
    "name": "前端面试知识梳理",
    "user_id": 732231,
    "description": "",
    "creator_id": 732231,
    "public": 0,
    "items_count": 65,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-01-06T09:17:32.188Z",
    "updated_at": "2023-11-11T18:10:33.000Z",
    "created_at": "2022-05-11T14:43:59.000Z",
    "namespace": "wcywxq/pgkpvh",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"AZwX8\"></a>\n## 利用递归的方法实现\n```javascript\nconst flatDeep = arr => {\n\tlet result = []\n  for (let i = 0; i < arr.length; i++) {\n  \tif (arr[i] && arr[i].length) {\n    \tresult = result.concat(flatDeep(arr[i]))\n    } else {\n    \tresult.push(arr[i])\n    }\n  }\n  return result\n}\n```\n<a name=\"OVo9s\"></a>\n## 利用 while + some 方法实现\n```javascript\nconst flatDeep = arr => {\n\twhile (arr.some(item => Array.isArray(item))) {\n  \tarr = [].concat(...arr)\n  }\n  return arr\n}\n```\n<a name=\"VD2nc\"></a>\n## 利用 reduce + 递归 方法实现\n```javascript\nconst flatDeep = arr => {\n\treturn arr.reduce((prev, cur) => prev.concat(Array.isArray(cur) ? flatDeep(cur) : cur), [])\n}\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><h2 id=\"AZwX8\"><span>利用递归的方法实现</span></h2><pre data-lang=\"javascript\"><code>const flatDeep = arr =&gt; {\n\tlet result = []\n  for (let i = 0; i &lt; arr.length; i++) {\n  \tif (arr[i] &amp;&amp; arr[i].length) {\n    \tresult = result.concat(flatDeep(arr[i]))\n    } else {\n    \tresult.push(arr[i])\n    }\n  }\n  return result\n}</code></pre><h2 id=\"OVo9s\"><span>利用 while + some 方法实现</span></h2><pre data-lang=\"javascript\"><code>const flatDeep = arr =&gt; {\n\twhile (arr.some(item =&gt; Array.isArray(item))) {\n  \tarr = [].concat(...arr)\n  }\n  return arr\n}</code></pre><h2 id=\"VD2nc\"><span>利用 reduce + 递归 方法实现</span></h2><pre data-lang=\"javascript\"><code>const flatDeep = arr =&gt; {\n\treturn arr.reduce((prev, cur) =&gt; prev.concat(Array.isArray(cur) ? flatDeep(cur) : cur), [])\n}</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"AZwX8\" id=\"AZwX8\"><span data-lake-id=\"u9b084d1f\" id=\"u9b084d1f\">利用递归的方法实现</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20flatDeep%20%3D%20arr%20%3D%3E%20%7B%5Cn%5Ctlet%20result%20%3D%20%5B%5D%5Cn%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%20arr.length%3B%20i%2B%2B)%20%7B%5Cn%20%20%5Ctif%20(arr%5Bi%5D%20%26%26%20arr%5Bi%5D.length)%20%7B%5Cn%20%20%20%20%5Ctresult%20%3D%20result.concat(flatDeep(arr%5Bi%5D))%5Cn%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%5Ctresult.push(arr%5Bi%5D)%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20return%20result%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22c34Yf%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"OVo9s\" id=\"OVo9s\"><span data-lake-id=\"uab4d9d3c\" id=\"uab4d9d3c\">利用 while + some 方法实现</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20flatDeep%20%3D%20arr%20%3D%3E%20%7B%5Cn%5Ctwhile%20(arr.some(item%20%3D%3E%20Array.isArray(item)))%20%7B%5Cn%20%20%5Ctarr%20%3D%20%5B%5D.concat(...arr)%5Cn%20%20%7D%5Cn%20%20return%20arr%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22lRWOJ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h2 data-lake-id=\"VD2nc\" id=\"VD2nc\"><span data-lake-id=\"ub0630e4d\" id=\"ub0630e4d\">利用 reduce + 递归 方法实现</span></h2><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20flatDeep%20%3D%20arr%20%3D%3E%20%7B%5Cn%5Ctreturn%20arr.reduce((prev%2C%20cur)%20%3D%3E%20prev.concat(Array.isArray(cur)%20%3F%20flatDeep(cur)%20%3A%20cur)%2C%20%5B%5D)%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22eXRNY%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-05-11T15:01:27.000Z",
  "deleted_at": null,
  "created_at": "2022-05-11T15:01:27.000Z",
  "updated_at": "2022-05-11T15:08:08.000Z",
  "published_at": "2022-05-11T15:01:27.000Z",
  "first_published_at": "2022-05-11T15:01:27.011Z",
  "word_count": 100,
  "cover": null,
  "description": "利用递归的方法实现const flatDeep = arr => { \tlet result = []   for (let i = 0; i < arr.length; i++) {   \tif (arr[i] && arr[i].length) {     \tresult = result...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}