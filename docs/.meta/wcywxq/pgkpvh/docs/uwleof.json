{
  "id": 77021810,
  "slug": "uwleof",
  "title": "倒计时",
  "book_id": 27818302,
  "book": {
    "id": 27818302,
    "type": "Book",
    "slug": "pgkpvh",
    "name": "前端面试知识梳理",
    "user_id": 732231,
    "description": "",
    "creator_id": 732231,
    "public": 0,
    "items_count": 65,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-01-06T09:17:32.188Z",
    "updated_at": "2023-11-11T18:10:33.000Z",
    "created_at": "2022-05-11T14:43:59.000Z",
    "namespace": "wcywxq/pgkpvh",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "```javascript\nconst totalDuration = 10 * 1000;\nlet requestRef = null;\nlet startTime;\nlet prevEndTime;\nlet prevTime;\nlet currentCount = totalDuration;\nlet endTime;\nlet timeDifferance = 0; // 每1s倒计时偏差值，单位ms\nlet interval = 1000;\nlet nextTime = interval;\n\nsetInterval(() => {\n  let n = 0;\n  while (n++ < 1000000000);\n}, 0);\n\nconst animate = (timestamp) => {\n  if (prevTime !== undefined) {\n    const deltaTime = timestamp - prevTime;\n    if (deltaTime >= nextTime) {\n      prevTime = timestamp;\n      prevEndTime = endTime;\n      endTime = new Date().getTime();\n      currentCount = currentCount - 1000;\n      console.log(\"currentCount: \", currentCount / 1000);\n      timeDifferance = endTime - startTime - (totalDuration - currentCount);\n      console.log(timeDifferance);\n      nextTime = interval - timeDifferance;\n      // 慢太多了，就立刻执行下一个循环\n      if (nextTime < 0) {\n        nextTime = 0;\n      }\n      console.log(`执行下一次渲染的时间是：${nextTime}ms`);\n      if (currentCount <= 0) {\n        currentCount = 0;\n        cancelAnimationFrame(requestRef);\n        console.log(`累计偏差值： ${endTime - startTime - totalDuration}ms`);\n        return;\n      }\n    }\n  } else {\n    startTime = new Date().getTime();\n    prevTime = timestamp;\n    endTime = new Date().getTime();\n  }\n  requestRef = requestAnimationFrame(animate);\n};\n\nrequestRef = requestAnimationFrame(animate);\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><pre data-lang=\"javascript\"><code>const totalDuration = 10 * 1000;\nlet requestRef = null;\nlet startTime;\nlet prevEndTime;\nlet prevTime;\nlet currentCount = totalDuration;\nlet endTime;\nlet timeDifferance = 0; // 每1s倒计时偏差值，单位ms\nlet interval = 1000;\nlet nextTime = interval;\n\nsetInterval(() =&gt; {\n  let n = 0;\n  while (n++ &lt; 1000000000);\n}, 0);\n\nconst animate = (timestamp) =&gt; {\n  if (prevTime !== undefined) {\n    const deltaTime = timestamp - prevTime;\n    if (deltaTime &gt;= nextTime) {\n      prevTime = timestamp;\n      prevEndTime = endTime;\n      endTime = new Date().getTime();\n      currentCount = currentCount - 1000;\n      console.log(&quot;currentCount: &quot;, currentCount / 1000);\n      timeDifferance = endTime - startTime - (totalDuration - currentCount);\n      console.log(timeDifferance);\n      nextTime = interval - timeDifferance;\n      // 慢太多了，就立刻执行下一个循环\n      if (nextTime &lt; 0) {\n        nextTime = 0;\n      }\n      console.log(`执行下一次渲染的时间是：${nextTime}ms`);\n      if (currentCount &lt;= 0) {\n        currentCount = 0;\n        cancelAnimationFrame(requestRef);\n        console.log(`累计偏差值： ${endTime - startTime - totalDuration}ms`);\n        return;\n      }\n    }\n  } else {\n    startTime = new Date().getTime();\n    prevTime = timestamp;\n    endTime = new Date().getTime();\n  }\n  requestRef = requestAnimationFrame(animate);\n};\n\nrequestRef = requestAnimationFrame(animate);</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20totalDuration%20%3D%2010%20*%201000%3B%5Cnlet%20requestRef%20%3D%20null%3B%5Cnlet%20startTime%3B%5Cnlet%20prevEndTime%3B%5Cnlet%20prevTime%3B%5Cnlet%20currentCount%20%3D%20totalDuration%3B%5Cnlet%20endTime%3B%5Cnlet%20timeDifferance%20%3D%200%3B%20%2F%2F%20%E6%AF%8F1s%E5%80%92%E8%AE%A1%E6%97%B6%E5%81%8F%E5%B7%AE%E5%80%BC%EF%BC%8C%E5%8D%95%E4%BD%8Dms%5Cnlet%20interval%20%3D%201000%3B%5Cnlet%20nextTime%20%3D%20interval%3B%5Cn%5CnsetInterval(()%20%3D%3E%20%7B%5Cn%20%20let%20n%20%3D%200%3B%5Cn%20%20while%20(n%2B%2B%20%3C%201000000000)%3B%5Cn%7D%2C%200)%3B%5Cn%5Cnconst%20animate%20%3D%20(timestamp)%20%3D%3E%20%7B%5Cn%20%20if%20(prevTime%20!%3D%3D%20undefined)%20%7B%5Cn%20%20%20%20const%20deltaTime%20%3D%20timestamp%20-%20prevTime%3B%5Cn%20%20%20%20if%20(deltaTime%20%3E%3D%20nextTime)%20%7B%5Cn%20%20%20%20%20%20prevTime%20%3D%20timestamp%3B%5Cn%20%20%20%20%20%20prevEndTime%20%3D%20endTime%3B%5Cn%20%20%20%20%20%20endTime%20%3D%20new%20Date().getTime()%3B%5Cn%20%20%20%20%20%20currentCount%20%3D%20currentCount%20-%201000%3B%5Cn%20%20%20%20%20%20console.log(%5C%22currentCount%3A%20%5C%22%2C%20currentCount%20%2F%201000)%3B%5Cn%20%20%20%20%20%20timeDifferance%20%3D%20endTime%20-%20startTime%20-%20(totalDuration%20-%20currentCount)%3B%5Cn%20%20%20%20%20%20console.log(timeDifferance)%3B%5Cn%20%20%20%20%20%20nextTime%20%3D%20interval%20-%20timeDifferance%3B%5Cn%20%20%20%20%20%20%2F%2F%20%E6%85%A2%E5%A4%AA%E5%A4%9A%E4%BA%86%EF%BC%8C%E5%B0%B1%E7%AB%8B%E5%88%BB%E6%89%A7%E8%A1%8C%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%BE%AA%E7%8E%AF%5Cn%20%20%20%20%20%20if%20(nextTime%20%3C%200)%20%7B%5Cn%20%20%20%20%20%20%20%20nextTime%20%3D%200%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20console.log(%60%E6%89%A7%E8%A1%8C%E4%B8%8B%E4%B8%80%E6%AC%A1%E6%B8%B2%E6%9F%93%E7%9A%84%E6%97%B6%E9%97%B4%E6%98%AF%EF%BC%9A%24%7BnextTime%7Dms%60)%3B%5Cn%20%20%20%20%20%20if%20(currentCount%20%3C%3D%200)%20%7B%5Cn%20%20%20%20%20%20%20%20currentCount%20%3D%200%3B%5Cn%20%20%20%20%20%20%20%20cancelAnimationFrame(requestRef)%3B%5Cn%20%20%20%20%20%20%20%20console.log(%60%E7%B4%AF%E8%AE%A1%E5%81%8F%E5%B7%AE%E5%80%BC%EF%BC%9A%20%24%7BendTime%20-%20startTime%20-%20totalDuration%7Dms%60)%3B%5Cn%20%20%20%20%20%20%20%20return%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D%20else%20%7B%5Cn%20%20%20%20startTime%20%3D%20new%20Date().getTime()%3B%5Cn%20%20%20%20prevTime%20%3D%20timestamp%3B%5Cn%20%20%20%20endTime%20%3D%20new%20Date().getTime()%3B%5Cn%20%20%7D%5Cn%20%20requestRef%20%3D%20requestAnimationFrame(animate)%3B%5Cn%7D%3B%5Cn%5CnrequestRef%20%3D%20requestAnimationFrame(animate)%3B%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22J6XOM%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-05-11T15:02:41.000Z",
  "deleted_at": null,
  "created_at": "2022-05-11T15:02:41.000Z",
  "updated_at": "2022-05-11T15:08:05.000Z",
  "published_at": "2022-05-11T15:02:41.000Z",
  "first_published_at": "2022-05-11T15:02:41.092Z",
  "word_count": 202,
  "cover": null,
  "description": "const totalDuration = 10 * 1000; let requestRef = null; let startTime; let prevEndTime; let prevTime; let currentCount = totalDuration; let endTime...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}