{
  "id": 77021795,
  "slug": "dwziom",
  "title": "观察者模式",
  "book_id": 27818302,
  "book": {
    "id": 27818302,
    "type": "Book",
    "slug": "pgkpvh",
    "name": "前端面试知识梳理",
    "user_id": 732231,
    "description": "",
    "creator_id": 732231,
    "public": 0,
    "items_count": 65,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-01-06T09:17:32.188Z",
    "updated_at": "2023-11-11T18:10:33.000Z",
    "created_at": "2022-05-11T14:43:59.000Z",
    "namespace": "wcywxq/pgkpvh",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "```javascript\nclass Watcher {\n  constructor(name) {\n    this.name = name\n  }\n  update() {\n    console.log(this.name)\n  }\n}\n\nclass Notify {\n  constructor() {\n    this.observerList = []\n  }\n  add(obj) {\n    this.observerList.push(obj)\n    return this\n  }\n  remove(obj) {\n    const idx = this.observerList.findIndex(o => o === obj)\n    if (idx !== 1) {\n      this.observerList.splice(idx, 1)\n    }\n    return this\n  }\n  notify() {\n    this.observerList.forEach(wather => {\n      wather.update()\n    })\n    return this\n  }\n}\n\nconst notify = new Notify()\nconst stateWatcher = new Watcher(\"state\")\nconst computedWatcher = new Watcher(\"computed\")\nconst watchWatcher = new Watcher(\"watch\")\n\nnotify\n  .add(stateWatcher)\n  .add(computedWatcher)\n  .add(watchWatcher)\n  .notify()\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><pre data-lang=\"javascript\"><code>class Watcher {\n  constructor(name) {\n    this.name = name\n  }\n  update() {\n    console.log(this.name)\n  }\n}\n\nclass Notify {\n  constructor() {\n    this.observerList = []\n  }\n  add(obj) {\n    this.observerList.push(obj)\n    return this\n  }\n  remove(obj) {\n    const idx = this.observerList.findIndex(o =&gt; o === obj)\n    if (idx !== 1) {\n      this.observerList.splice(idx, 1)\n    }\n    return this\n  }\n  notify() {\n    this.observerList.forEach(wather =&gt; {\n      wather.update()\n    })\n    return this\n  }\n}\n\nconst notify = new Notify()\nconst stateWatcher = new Watcher(&quot;state&quot;)\nconst computedWatcher = new Watcher(&quot;computed&quot;)\nconst watchWatcher = new Watcher(&quot;watch&quot;)\n\nnotify\n  .add(stateWatcher)\n  .add(computedWatcher)\n  .add(watchWatcher)\n  .notify()</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22class%20Watcher%20%7B%5Cn%20%20constructor(name)%20%7B%5Cn%20%20%20%20this.name%20%3D%20name%5Cn%20%20%7D%5Cn%20%20update()%20%7B%5Cn%20%20%20%20console.log(this.name)%5Cn%20%20%7D%5Cn%7D%5Cn%5Cnclass%20Notify%20%7B%5Cn%20%20constructor()%20%7B%5Cn%20%20%20%20this.observerList%20%3D%20%5B%5D%5Cn%20%20%7D%5Cn%20%20add(obj)%20%7B%5Cn%20%20%20%20this.observerList.push(obj)%5Cn%20%20%20%20return%20this%5Cn%20%20%7D%5Cn%20%20remove(obj)%20%7B%5Cn%20%20%20%20const%20idx%20%3D%20this.observerList.findIndex(o%20%3D%3E%20o%20%3D%3D%3D%20obj)%5Cn%20%20%20%20if%20(idx%20!%3D%3D%201)%20%7B%5Cn%20%20%20%20%20%20this.observerList.splice(idx%2C%201)%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20this%5Cn%20%20%7D%5Cn%20%20notify()%20%7B%5Cn%20%20%20%20this.observerList.forEach(wather%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20wather.update()%5Cn%20%20%20%20%7D)%5Cn%20%20%20%20return%20this%5Cn%20%20%7D%5Cn%7D%5Cn%5Cnconst%20notify%20%3D%20new%20Notify()%5Cnconst%20stateWatcher%20%3D%20new%20Watcher(%5C%22state%5C%22)%5Cnconst%20computedWatcher%20%3D%20new%20Watcher(%5C%22computed%5C%22)%5Cnconst%20watchWatcher%20%3D%20new%20Watcher(%5C%22watch%5C%22)%5Cn%5Cnnotify%5Cn%20%20.add(stateWatcher)%5Cn%20%20.add(computedWatcher)%5Cn%20%20.add(watchWatcher)%5Cn%20%20.notify()%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22mwjx1%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-05-11T15:02:35.000Z",
  "deleted_at": null,
  "created_at": "2022-05-11T15:02:35.000Z",
  "updated_at": "2022-05-11T15:08:05.000Z",
  "published_at": "2022-05-11T15:02:35.000Z",
  "first_published_at": "2022-05-11T15:02:34.665Z",
  "word_count": 86,
  "cover": null,
  "description": "class Watcher {   constructor(name) {     this.name = name   }   update() {     console.log(this.name)   } }  class Notify {   constructor() {     ...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}