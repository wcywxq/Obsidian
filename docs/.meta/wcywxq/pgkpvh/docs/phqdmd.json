{
  "id": 77021768,
  "slug": "phqdmd",
  "title": "判断对象是否存在循环引用",
  "book_id": 27818302,
  "book": {
    "id": 27818302,
    "type": "Book",
    "slug": "pgkpvh",
    "name": "前端面试知识梳理",
    "user_id": 732231,
    "description": "",
    "creator_id": 732231,
    "public": 0,
    "items_count": 65,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-01-06T09:17:32.188Z",
    "updated_at": "2023-11-11T18:10:33.000Z",
    "created_at": "2022-05-11T14:43:59.000Z",
    "namespace": "wcywxq/pgkpvh",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "循环引用对象本来没有什么问题，但是序列化的时候就会发生问题，比如调用 `JSON.stringify()` 对该类对象进行序列化，就会报错: `Converting circular structure to JSON.`\n\n下面方法可以用来判断一个对象中是否已存在循环引用：\n\n```javascript\nconst isCycleObject = (obj, parent) => {\n    const parentArr = parent || [obj]\n    for (let k in obj) {\n        if (typeof obj[k] === 'object') {\n            let flag = false\n            parentArr.forEach(pObj => {\n                if(pObj === obj[k]){\n                    flag = true\n                }\n            })\n            if (flag) return true\n            flag = isCycleObject(obj[k], [...parentArr, obj[i]])\n            if (flag) return true\n        }\n    }\n    return false\n}\n\n\nconst a = 1\nconst b = { a }\nconst c = { b }\nconst o = { d: { a: 3 }, c }\no.c.b.a = a\n\nconsole.log(isCycleObject(o))\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><p data-lake-id=\"u472c6e08\"><span>循环引用对象本来没有什么问题，但是序列化的时候就会发生问题，比如调用 </span><code><span>JSON.stringify()</span></code><span> 对该类对象进行序列化，就会报错: </span><code><span>Converting circular structure to JSON.</span></code></p><p data-lake-id=\"uc8797f76\"><span>​</span><br /></p><p data-lake-id=\"u3f39f302\"><span>下面方法可以用来判断一个对象中是否已存在循环引用：</span></p><p data-lake-id=\"ua55757c1\"><span>​</span><br /></p><pre data-lang=\"javascript\"><code>const isCycleObject = (obj, parent) =&gt; {\n    const parentArr = parent || [obj]\n    for (let k in obj) {\n        if (typeof obj[k] === 'object') {\n            let flag = false\n            parentArr.forEach(pObj =&gt; {\n                if(pObj === obj[k]){\n                    flag = true\n                }\n            })\n            if (flag) return true\n            flag = isCycleObject(obj[k], [...parentArr, obj[i]])\n            if (flag) return true\n        }\n    }\n    return false\n}\n\n\nconst a = 1\nconst b = { a }\nconst c = { b }\nconst o = { d: { a: 3 }, c }\no.c.b.a = a\n\nconsole.log(isCycleObject(o))</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><p data-lake-id=\"u472c6e08\" id=\"u472c6e08\"><span data-lake-id=\"u83dad8dc\" id=\"u83dad8dc\">循环引用对象本来没有什么问题，但是序列化的时候就会发生问题，比如调用 </span><code data-lake-id=\"u7778b6cf\" id=\"u7778b6cf\"><span data-lake-id=\"u3ac42926\" id=\"u3ac42926\">JSON.stringify()</span></code><span data-lake-id=\"udc3965d6\" id=\"udc3965d6\"> 对该类对象进行序列化，就会报错: </span><code data-lake-id=\"u57838b7c\" id=\"u57838b7c\"><span data-lake-id=\"u66a993d9\" id=\"u66a993d9\">Converting circular structure to JSON.</span></code></p><p data-lake-id=\"uc8797f76\" id=\"uc8797f76\"><span data-lake-id=\"u669b0b82\" id=\"u669b0b82\">​</span><br></p><p data-lake-id=\"u3f39f302\" id=\"u3f39f302\"><span data-lake-id=\"u11013fc2\" id=\"u11013fc2\">下面方法可以用来判断一个对象中是否已存在循环引用：</span></p><p data-lake-id=\"ua55757c1\" id=\"ua55757c1\"><span data-lake-id=\"u1ccdce77\" id=\"u1ccdce77\">​</span><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20isCycleObject%20%3D%20(obj%2C%20parent)%20%3D%3E%20%7B%5Cn%20%20%20%20const%20parentArr%20%3D%20parent%20%7C%7C%20%5Bobj%5D%5Cn%20%20%20%20for%20(let%20k%20in%20obj)%20%7B%5Cn%20%20%20%20%20%20%20%20if%20(typeof%20obj%5Bk%5D%20%3D%3D%3D%20'object')%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20let%20flag%20%3D%20false%5Cn%20%20%20%20%20%20%20%20%20%20%20%20parentArr.forEach(pObj%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if(pObj%20%3D%3D%3D%20obj%5Bk%5D)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20flag%20%3D%20true%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(flag)%20return%20true%5Cn%20%20%20%20%20%20%20%20%20%20%20%20flag%20%3D%20isCycleObject(obj%5Bk%5D%2C%20%5B...parentArr%2C%20obj%5Bi%5D%5D)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(flag)%20return%20true%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20false%5Cn%7D%5Cn%5Cn%5Cnconst%20a%20%3D%201%5Cnconst%20b%20%3D%20%7B%20a%20%7D%5Cnconst%20c%20%3D%20%7B%20b%20%7D%5Cnconst%20o%20%3D%20%7B%20d%3A%20%7B%20a%3A%203%20%7D%2C%20c%20%7D%5Cno.c.b.a%20%3D%20a%5Cn%5Cnconsole.log(isCycleObject(o))%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22YWVJ7%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-05-11T15:02:23.000Z",
  "deleted_at": null,
  "created_at": "2022-05-11T15:02:23.000Z",
  "updated_at": "2022-05-11T15:08:06.000Z",
  "published_at": "2022-05-11T15:02:23.000Z",
  "first_published_at": "2022-05-11T15:02:23.098Z",
  "word_count": 170,
  "cover": null,
  "description": "循环引用对象本来没有什么问题，但是序列化的时候就会发生问题，比如调用 JSON.stringify() 对该类对象进行序列化，就会报错: Converting circular structure to JSON.下面方法可以用来判断一个对象中是否已存在循环引用：const isCycleOb...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}