{
  "id": 81930561,
  "slug": "ir252g",
  "title": "实现 iterator",
  "book_id": 26225252,
  "book": {
    "id": 26225252,
    "type": "Book",
    "slug": "sd8kbc",
    "name": "笔试 written test",
    "user_id": 732231,
    "description": "笔试相关题目\n1. 原生 API 实现\n2. 业务场景相关问题\n3. LeetCode 算法相关问题",
    "creator_id": 732231,
    "public": 0,
    "items_count": 74,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:38.713Z",
    "updated_at": "2023-11-11T18:15:39.000Z",
    "created_at": "2022-04-04T11:34:53.000Z",
    "namespace": "wcywxq/sd8kbc",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "```javascript\n/* \n  这是一个手写的迭代器(Iterator)\n  满足迭代器协议的对象。\n  迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性： \n*/\nvar it = makeIterator([\"a\", \"b\"])\n\nit.next() // { value: \"a\", done: false }\nit.next() // { value: \"b\", done: false }\nit.next() // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n    var nextIndex = 0\n    return {\n        next: function () {\n            return nextIndex < array.length ? { value: array[nextIndex++], done: false } : { value: undefined, done: true }\n        }\n    }\n}\n```\n<a name=\"OSWtv\"></a>\n### 可迭代的迭代器\n```javascript\n/*\n    使迭代器可迭代\n    makeIterator函数生成的迭代器并没有实现可迭代协议\n    所以不能在for...of等语法中使用。\n    可以为该对象实现可迭代协议，在[Symbol.iterator]函数中返回该迭代器自身\n    从新名了下函数名称createIterator\n*/\nfunction createIterator(array) {\n    var nextIndex = 0\n    return {\n        next: function () {\n            return nextIndex < array.length ? { value: array[nextIndex++], done: false } : { value: undefined, done: true }\n        },\n        [Symbol.iterator]: function () {\n            console.log(\"返回的迭代器:\", this)\n            return this // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n        }\n    }\n}\n\nvar iterator = createIterator([1, 2, 3])\nconsole.log(...iterator)\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><pre data-language=\"javascript\" id=\"32284a12\" class=\"ne-codeblock language-javascript\">/* \n  这是一个手写的迭代器(Iterator)\n  满足迭代器协议的对象。\n  迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性： \n*/\nvar it = makeIterator([&quot;a&quot;, &quot;b&quot;])\n\nit.next() // { value: &quot;a&quot;, done: false }\nit.next() // { value: &quot;b&quot;, done: false }\nit.next() // { value: undefined, done: true }\n\nfunction makeIterator(array) {\n    var nextIndex = 0\n    return {\n        next: function () {\n            return nextIndex &lt; array.length ? { value: array[nextIndex++], done: false } : { value: undefined, done: true }\n        }\n    }\n}</pre><h3 id=\"OSWtv\"><span class=\"ne-text\">可迭代的迭代器</span></h3><pre data-language=\"javascript\" id=\"ae0eeb50\" class=\"ne-codeblock language-javascript\">/*\n    使迭代器可迭代\n    makeIterator函数生成的迭代器并没有实现可迭代协议\n    所以不能在for...of等语法中使用。\n    可以为该对象实现可迭代协议，在[Symbol.iterator]函数中返回该迭代器自身\n    从新名了下函数名称createIterator\n*/\nfunction createIterator(array) {\n    var nextIndex = 0\n    return {\n        next: function () {\n            return nextIndex &lt; array.length ? { value: array[nextIndex++], done: false } : { value: undefined, done: true }\n        },\n        [Symbol.iterator]: function () {\n            console.log(&quot;返回的迭代器:&quot;, this)\n            return this // 注意这里是对象调用模式，this 指向的就是上层的对象，迭代器\n        }\n    }\n}\n\nvar iterator = createIterator([1, 2, 3])\nconsole.log(...iterator)</pre></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"paragraphSpacing\" content=\"relax\" /><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F*%20%5Cn%20%20%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E6%89%8B%E5%86%99%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8(Iterator)%5Cn%20%20%E6%BB%A1%E8%B6%B3%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%AF%B9%E8%B1%A1%E3%80%82%5Cn%20%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%8D%8F%E8%AE%AE%3A%20%E5%AF%B9%E8%B1%A1%E7%9A%84%20next%20%E6%96%B9%E6%B3%95%E6%98%AF%E4%B8%80%E4%B8%AA%E6%97%A0%E5%8F%82%E5%87%BD%E6%95%B0%EF%BC%8C%E5%AE%83%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%8C%E8%AF%A5%E5%AF%B9%E8%B1%A1%E6%8B%A5%E6%9C%89%20done%20%E5%92%8C%20value%20%E4%B8%A4%E4%B8%AA%E5%B1%9E%E6%80%A7%EF%BC%9A%20%5Cn*%2F%5Cnvar%20it%20%3D%20makeIterator(%5B%5C%22a%5C%22%2C%20%5C%22b%5C%22%5D)%5Cn%5Cnit.next()%20%2F%2F%20%7B%20value%3A%20%5C%22a%5C%22%2C%20done%3A%20false%20%7D%5Cnit.next()%20%2F%2F%20%7B%20value%3A%20%5C%22b%5C%22%2C%20done%3A%20false%20%7D%5Cnit.next()%20%2F%2F%20%7B%20value%3A%20undefined%2C%20done%3A%20true%20%7D%5Cn%5Cnfunction%20makeIterator(array)%20%7B%5Cn%20%20%20%20var%20nextIndex%20%3D%200%5Cn%20%20%20%20return%20%7B%5Cn%20%20%20%20%20%20%20%20next%3A%20function%20()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20nextIndex%20%3C%20array.length%20%3F%20%7B%20value%3A%20array%5BnextIndex%2B%2B%5D%2C%20done%3A%20false%20%7D%20%3A%20%7B%20value%3A%20undefined%2C%20done%3A%20true%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22id%22%3A%2232284a12%22%7D\"></card><h3 data-lake-id=\"OSWtv\" id=\"OSWtv\"><span data-lake-id=\"u3c54cf85\" id=\"u3c54cf85\">可迭代的迭代器</span></h3><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F*%5Cn%20%20%20%20%E4%BD%BF%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%8F%AF%E8%BF%AD%E4%BB%A3%5Cn%20%20%20%20makeIterator%E5%87%BD%E6%95%B0%E7%94%9F%E6%88%90%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%B9%B6%E6%B2%A1%E6%9C%89%E5%AE%9E%E7%8E%B0%E5%8F%AF%E8%BF%AD%E4%BB%A3%E5%8D%8F%E8%AE%AE%5Cn%20%20%20%20%E6%89%80%E4%BB%A5%E4%B8%8D%E8%83%BD%E5%9C%A8for...of%E7%AD%89%E8%AF%AD%E6%B3%95%E4%B8%AD%E4%BD%BF%E7%94%A8%E3%80%82%5Cn%20%20%20%20%E5%8F%AF%E4%BB%A5%E4%B8%BA%E8%AF%A5%E5%AF%B9%E8%B1%A1%E5%AE%9E%E7%8E%B0%E5%8F%AF%E8%BF%AD%E4%BB%A3%E5%8D%8F%E8%AE%AE%EF%BC%8C%E5%9C%A8%5BSymbol.iterator%5D%E5%87%BD%E6%95%B0%E4%B8%AD%E8%BF%94%E5%9B%9E%E8%AF%A5%E8%BF%AD%E4%BB%A3%E5%99%A8%E8%87%AA%E8%BA%AB%5Cn%20%20%20%20%E4%BB%8E%E6%96%B0%E5%90%8D%E4%BA%86%E4%B8%8B%E5%87%BD%E6%95%B0%E5%90%8D%E7%A7%B0createIterator%5Cn*%2F%5Cnfunction%20createIterator(array)%20%7B%5Cn%20%20%20%20var%20nextIndex%20%3D%200%5Cn%20%20%20%20return%20%7B%5Cn%20%20%20%20%20%20%20%20next%3A%20function%20()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20nextIndex%20%3C%20array.length%20%3F%20%7B%20value%3A%20array%5BnextIndex%2B%2B%5D%2C%20done%3A%20false%20%7D%20%3A%20%7B%20value%3A%20undefined%2C%20done%3A%20true%20%7D%5Cn%20%20%20%20%20%20%20%20%7D%2C%5Cn%20%20%20%20%20%20%20%20%5BSymbol.iterator%5D%3A%20function%20()%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20console.log(%5C%22%E8%BF%94%E5%9B%9E%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8%3A%5C%22%2C%20this)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20this%20%2F%2F%20%E6%B3%A8%E6%84%8F%E8%BF%99%E9%87%8C%E6%98%AF%E5%AF%B9%E8%B1%A1%E8%B0%83%E7%94%A8%E6%A8%A1%E5%BC%8F%EF%BC%8Cthis%20%E6%8C%87%E5%90%91%E7%9A%84%E5%B0%B1%E6%98%AF%E4%B8%8A%E5%B1%82%E7%9A%84%E5%AF%B9%E8%B1%A1%EF%BC%8C%E8%BF%AD%E4%BB%A3%E5%99%A8%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%7D%5Cn%5Cnvar%20iterator%20%3D%20createIterator(%5B1%2C%202%2C%203%5D)%5Cnconsole.log(...iterator)%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22id%22%3A%22ae0eeb50%22%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-06-30T06:12:41.000Z",
  "deleted_at": null,
  "created_at": "2022-06-30T06:09:12.000Z",
  "updated_at": "2022-06-30T06:12:41.000Z",
  "published_at": "2022-06-30T06:12:41.000Z",
  "first_published_at": "2022-06-30T06:10:30.176Z",
  "word_count": 298,
  "cover": null,
  "description": "/*    这是一个手写的迭代器(Iterator)   满足迭代器协议的对象。   迭代器协议: 对象的 next 方法是一个无参函数，它返回一个对象，该对象拥有 done 和 value 两个属性：  */ var it = makeIterator([\"a\", \"b\"])  it.nex...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}