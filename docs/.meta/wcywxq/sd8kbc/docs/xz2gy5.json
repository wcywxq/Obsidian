{
  "id": 72212402,
  "slug": "xz2gy5",
  "title": "图片加载数量限制",
  "book_id": 26225252,
  "book": {
    "id": 26225252,
    "type": "Book",
    "slug": "sd8kbc",
    "name": "笔试 written test",
    "user_id": 732231,
    "description": "笔试相关题目\n1. 原生 API 实现\n2. 业务场景相关问题\n3. LeetCode 算法相关问题",
    "creator_id": 732231,
    "public": 0,
    "items_count": 74,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:38.713Z",
    "updated_at": "2023-11-11T18:15:39.000Z",
    "created_at": "2022-04-04T11:34:53.000Z",
    "namespace": "wcywxq/sd8kbc",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "考察`promise`并发控制\n```javascript\nfunction limitLoad(urls, handler, limit) {\n\tconst sequence = [].concat(urls)\n  let promises = []\n  promises = sequence.splice(0, limit).map((url, index) => {\n  \treturn handler(url).then(() => index)\n  })\n  \n  let p = Promise.race(promises)\n  for (let i = 0; i < sequence.length; i++) {\n  \tp = p.then(res => {\n    \tpromises[res] = handler(sequence[i]).then(() => res)\n      return Promise.race(promises)\n    })\n  }\n}\n\n// 设置要执行的任务\nfunction loadImage(url) {\n\treturn new Promise((resolve, reject) => {\n  \tconsole.log(`---${url.info} start!`)\n    setTimeout(() => {\n      console.log(`${url.info} ok!`)\n      resolve()\n    }, url.time)\n  })\n}\n\nlimitLoad(urls, loadImage, 3)\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><p data-lake-id=\"ua9ef400e\"><span>考察</span><code><span>promise</span></code><span>并发控制</span></p><pre data-lang=\"javascript\"><code>function limitLoad(urls, handler, limit) {\n\tconst sequence = [].concat(urls)\n  let promises = []\n  promises = sequence.splice(0, limit).map((url, index) =&gt; {\n  \treturn handler(url).then(() =&gt; index)\n  })\n  \n  let p = Promise.race(promises)\n  for (let i = 0; i &lt; sequence.length; i++) {\n  \tp = p.then(res =&gt; {\n    \tpromises[res] = handler(sequence[i]).then(() =&gt; res)\n      return Promise.race(promises)\n    })\n  }\n}\n\n// 设置要执行的任务\nfunction loadImage(url) {\n\treturn new Promise((resolve, reject) =&gt; {\n  \tconsole.log(`---${url.info} start!`)\n    setTimeout(() =&gt; {\n      console.log(`${url.info} ok!`)\n      resolve()\n    }, url.time)\n  })\n}\n\nlimitLoad(urls, loadImage, 3)</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><p data-lake-id=\"ua9ef400e\" id=\"ua9ef400e\"><span data-lake-id=\"u2a8b8fcf\" id=\"u2a8b8fcf\">考察</span><code data-lake-id=\"u6802aa3d\" id=\"u6802aa3d\"><span data-lake-id=\"u49768d7f\" id=\"u49768d7f\">promise</span></code><span data-lake-id=\"u075065a3\" id=\"u075065a3\">并发控制</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20limitLoad(urls%2C%20handler%2C%20limit)%20%7B%5Cn%5Ctconst%20sequence%20%3D%20%5B%5D.concat(urls)%5Cn%20%20let%20promises%20%3D%20%5B%5D%5Cn%20%20promises%20%3D%20sequence.splice(0%2C%20limit).map((url%2C%20index)%20%3D%3E%20%7B%5Cn%20%20%5Ctreturn%20handler(url).then(()%20%3D%3E%20index)%5Cn%20%20%7D)%5Cn%20%20%5Cn%20%20let%20p%20%3D%20Promise.race(promises)%5Cn%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%20sequence.length%3B%20i%2B%2B)%20%7B%5Cn%20%20%5Ctp%20%3D%20p.then(res%20%3D%3E%20%7B%5Cn%20%20%20%20%5Ctpromises%5Bres%5D%20%3D%20handler(sequence%5Bi%5D).then(()%20%3D%3E%20res)%5Cn%20%20%20%20%20%20return%20Promise.race(promises)%5Cn%20%20%20%20%7D)%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn%2F%2F%20%E8%AE%BE%E7%BD%AE%E8%A6%81%E6%89%A7%E8%A1%8C%E7%9A%84%E4%BB%BB%E5%8A%A1%5Cnfunction%20loadImage(url)%20%7B%5Cn%5Ctreturn%20new%20Promise((resolve%2C%20reject)%20%3D%3E%20%7B%5Cn%20%20%5Ctconsole.log(%60---%24%7Burl.info%7D%20start!%60)%5Cn%20%20%20%20setTimeout(()%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20console.log(%60%24%7Burl.info%7D%20ok!%60)%5Cn%20%20%20%20%20%20resolve()%5Cn%20%20%20%20%7D%2C%20url.time)%5Cn%20%20%7D)%5Cn%7D%5Cn%5CnlimitLoad(urls%2C%20loadImage%2C%203)%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__height%22%3A578%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22GtCsr%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22height%22%3A578%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:35:11.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:35:11.000Z",
  "updated_at": "2022-05-10T15:16:50.000Z",
  "published_at": "2022-04-04T11:35:11.000Z",
  "first_published_at": "2022-04-04T11:35:10.587Z",
  "word_count": 95,
  "cover": null,
  "description": "考察promise并发控制function limitLoad(urls, handler, limit) { \tconst sequence = [].concat(urls)   let promises = []   promises = sequence.splice(0, limit...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}