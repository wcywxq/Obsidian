{
  "id": 72212462,
  "slug": "cynvvd",
  "title": "版本号比较",
  "book_id": 26225252,
  "book": {
    "id": 26225252,
    "type": "Book",
    "slug": "sd8kbc",
    "name": "笔试 written test",
    "user_id": 732231,
    "description": "笔试相关题目\n1. 原生 API 实现\n2. 业务场景相关问题\n3. LeetCode 算法相关问题",
    "creator_id": 732231,
    "public": 0,
    "items_count": 74,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:38.713Z",
    "updated_at": "2023-11-11T18:15:39.000Z",
    "created_at": "2022-04-04T11:34:53.000Z",
    "namespace": "wcywxq/sd8kbc",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "```\n给你两个版本号 version1 和 version2 ，请你比较它们。\n\n版本号由一个或多个修订号组成，各修订号由一个 '.' 连接。每个修订号由 多位数字 组成，可能包含 前导零 。每个版本号至少包含一个字符。修订号从左到右编号，下标从 0 开始，最左边的修订号下标为 0 ，下一个修订号下标为 1 ，以此类推。例如，2.5.33 和 0.1 都是有效的版本号。\n\n比较版本号时，请按从左到右的顺序依次比较它们的修订号。比较修订号时，只需比较 忽略任何前导零后的整数值 。也就是说，修订号 1 和修订号 001 相等 。如果版本号没有指定某个下标处的修订号，则该修订号视为 0 。例如，版本 1.0 小于版本 1.1 ，因为它们下标为 0 的修订号相同，而下标为 1 的修订号分别为 0 和 1 ，0 < 1 。\n\n返回规则如下：\n\n如果 version1 > version2 返回 1，\n如果 version1 < version2 返回 -1，\n除此之外返回 0。\n```\n```javascript\n// 比较版本号\n\nconst compareVersion = function (version1, version2) {\n    version1 = version1.split(\".\")\n    version2 = version2.split(\".\")\n\n    const len1 = version1.length\n    const len2 = version2.length\n    let maxLen = len1\n    const fillZero = (array, len) => {\n        while (len--) {\n            array.push(0)\n        }\n    }\n\n    if (len1 < len2) {\n        fillZero(version1, len2 - len1)\n        maxLen = len2\n    } else if (len1 > len2) {\n        fillZero(version2, len1 - len2)\n        maxLen = len1\n    }\n\n    for (let i = 0; i < maxLen; i++) {\n        const a = parseInt(version1[i])\n        const b = parseInt(version2[i])\n        if (a === b) {\n            // i++\n        } else if (a > b) {\n            return 1\n        } else {\n            return -1\n        }\n    }\n\n    return 0\n}\n\n// 也可以不补零\nconst compareVersion = function (version1, version2) {\n    version1 = version1.split(\".\")\n    version2 = version2.split(\".\")\n\n    const maxLen = Math.max(version1.length, version2.length)\n\n    for (let i = 0; i < maxLen; i++) {\n        const a = parseInt(version1[i] ?? 0)\n        const b = parseInt(version2[i] ?? 0)\n        if (a === b) {\n            // i++\n        } else if (a > b) {\n            return 1\n        } else {\n            return -1\n        }\n    }\n\n    return 0\n}\n\nconsole.log(compareVersion(\"1.0\", \"1.0.0\"))\n\n// 扩展1比较多个版本号并排序\n\nconst compareMoreVersion = versions => {\n    return versions.sort((a, b) => compareVersion(a, b))\n}\n\nconsole.log(compareMoreVersion([\"1.0\", \"3.1\", \"1.01\"]))\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><pre><code>给你两个版本号 version1 和 version2 ，请你比较它们。\n\n版本号由一个或多个修订号组成，各修订号由一个 '.' 连接。每个修订号由 多位数字 组成，可能包含 前导零 。每个版本号至少包含一个字符。修订号从左到右编号，下标从 0 开始，最左边的修订号下标为 0 ，下一个修订号下标为 1 ，以此类推。例如，2.5.33 和 0.1 都是有效的版本号。\n\n比较版本号时，请按从左到右的顺序依次比较它们的修订号。比较修订号时，只需比较 忽略任何前导零后的整数值 。也就是说，修订号 1 和修订号 001 相等 。如果版本号没有指定某个下标处的修订号，则该修订号视为 0 。例如，版本 1.0 小于版本 1.1 ，因为它们下标为 0 的修订号相同，而下标为 1 的修订号分别为 0 和 1 ，0 &lt; 1 。\n\n返回规则如下：\n\n如果 version1 &gt; version2 返回 1，\n如果 version1 &lt; version2 返回 -1，\n除此之外返回 0。</code></pre><pre data-lang=\"javascript\"><code>// 比较版本号\n\nconst compareVersion = function (version1, version2) {\n    version1 = version1.split(&quot;.&quot;)\n    version2 = version2.split(&quot;.&quot;)\n\n    const len1 = version1.length\n    const len2 = version2.length\n    let maxLen = len1\n    const fillZero = (array, len) =&gt; {\n        while (len--) {\n            array.push(0)\n        }\n    }\n\n    if (len1 &lt; len2) {\n        fillZero(version1, len2 - len1)\n        maxLen = len2\n    } else if (len1 &gt; len2) {\n        fillZero(version2, len1 - len2)\n        maxLen = len1\n    }\n\n    for (let i = 0; i &lt; maxLen; i++) {\n        const a = parseInt(version1[i])\n        const b = parseInt(version2[i])\n        if (a === b) {\n            // i++\n        } else if (a &gt; b) {\n            return 1\n        } else {\n            return -1\n        }\n    }\n\n    return 0\n}\n\n// 也可以不补零\nconst compareVersion = function (version1, version2) {\n    version1 = version1.split(&quot;.&quot;)\n    version2 = version2.split(&quot;.&quot;)\n\n    const maxLen = Math.max(version1.length, version2.length)\n\n    for (let i = 0; i &lt; maxLen; i++) {\n        const a = parseInt(version1[i] ?? 0)\n        const b = parseInt(version2[i] ?? 0)\n        if (a === b) {\n            // i++\n        } else if (a &gt; b) {\n            return 1\n        } else {\n            return -1\n        }\n    }\n\n    return 0\n}\n\nconsole.log(compareVersion(&quot;1.0&quot;, &quot;1.0.0&quot;))\n\n// 扩展1比较多个版本号并排序\n\nconst compareMoreVersion = versions =&gt; {\n    return versions.sort((a, b) =&gt; compareVersion(a, b))\n}\n\nconsole.log(compareMoreVersion([&quot;1.0&quot;, &quot;3.1&quot;, &quot;1.01&quot;]))</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22%E7%BB%99%E4%BD%A0%E4%B8%A4%E4%B8%AA%E7%89%88%E6%9C%AC%E5%8F%B7%20version1%20%E5%92%8C%20version2%20%EF%BC%8C%E8%AF%B7%E4%BD%A0%E6%AF%94%E8%BE%83%E5%AE%83%E4%BB%AC%E3%80%82%5Cn%5Cn%E7%89%88%E6%9C%AC%E5%8F%B7%E7%94%B1%E4%B8%80%E4%B8%AA%E6%88%96%E5%A4%9A%E4%B8%AA%E4%BF%AE%E8%AE%A2%E5%8F%B7%E7%BB%84%E6%88%90%EF%BC%8C%E5%90%84%E4%BF%AE%E8%AE%A2%E5%8F%B7%E7%94%B1%E4%B8%80%E4%B8%AA%20'.'%20%E8%BF%9E%E6%8E%A5%E3%80%82%E6%AF%8F%E4%B8%AA%E4%BF%AE%E8%AE%A2%E5%8F%B7%E7%94%B1%20%E5%A4%9A%E4%BD%8D%E6%95%B0%E5%AD%97%20%E7%BB%84%E6%88%90%EF%BC%8C%E5%8F%AF%E8%83%BD%E5%8C%85%E5%90%AB%20%E5%89%8D%E5%AF%BC%E9%9B%B6%20%E3%80%82%E6%AF%8F%E4%B8%AA%E7%89%88%E6%9C%AC%E5%8F%B7%E8%87%B3%E5%B0%91%E5%8C%85%E5%90%AB%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E3%80%82%E4%BF%AE%E8%AE%A2%E5%8F%B7%E4%BB%8E%E5%B7%A6%E5%88%B0%E5%8F%B3%E7%BC%96%E5%8F%B7%EF%BC%8C%E4%B8%8B%E6%A0%87%E4%BB%8E%200%20%E5%BC%80%E5%A7%8B%EF%BC%8C%E6%9C%80%E5%B7%A6%E8%BE%B9%E7%9A%84%E4%BF%AE%E8%AE%A2%E5%8F%B7%E4%B8%8B%E6%A0%87%E4%B8%BA%200%20%EF%BC%8C%E4%B8%8B%E4%B8%80%E4%B8%AA%E4%BF%AE%E8%AE%A2%E5%8F%B7%E4%B8%8B%E6%A0%87%E4%B8%BA%201%20%EF%BC%8C%E4%BB%A5%E6%AD%A4%E7%B1%BB%E6%8E%A8%E3%80%82%E4%BE%8B%E5%A6%82%EF%BC%8C2.5.33%20%E5%92%8C%200.1%20%E9%83%BD%E6%98%AF%E6%9C%89%E6%95%88%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7%E3%80%82%5Cn%5Cn%E6%AF%94%E8%BE%83%E7%89%88%E6%9C%AC%E5%8F%B7%E6%97%B6%EF%BC%8C%E8%AF%B7%E6%8C%89%E4%BB%8E%E5%B7%A6%E5%88%B0%E5%8F%B3%E7%9A%84%E9%A1%BA%E5%BA%8F%E4%BE%9D%E6%AC%A1%E6%AF%94%E8%BE%83%E5%AE%83%E4%BB%AC%E7%9A%84%E4%BF%AE%E8%AE%A2%E5%8F%B7%E3%80%82%E6%AF%94%E8%BE%83%E4%BF%AE%E8%AE%A2%E5%8F%B7%E6%97%B6%EF%BC%8C%E5%8F%AA%E9%9C%80%E6%AF%94%E8%BE%83%20%E5%BF%BD%E7%95%A5%E4%BB%BB%E4%BD%95%E5%89%8D%E5%AF%BC%E9%9B%B6%E5%90%8E%E7%9A%84%E6%95%B4%E6%95%B0%E5%80%BC%20%E3%80%82%E4%B9%9F%E5%B0%B1%E6%98%AF%E8%AF%B4%EF%BC%8C%E4%BF%AE%E8%AE%A2%E5%8F%B7%201%20%E5%92%8C%E4%BF%AE%E8%AE%A2%E5%8F%B7%20001%20%E7%9B%B8%E7%AD%89%20%E3%80%82%E5%A6%82%E6%9E%9C%E7%89%88%E6%9C%AC%E5%8F%B7%E6%B2%A1%E6%9C%89%E6%8C%87%E5%AE%9A%E6%9F%90%E4%B8%AA%E4%B8%8B%E6%A0%87%E5%A4%84%E7%9A%84%E4%BF%AE%E8%AE%A2%E5%8F%B7%EF%BC%8C%E5%88%99%E8%AF%A5%E4%BF%AE%E8%AE%A2%E5%8F%B7%E8%A7%86%E4%B8%BA%200%20%E3%80%82%E4%BE%8B%E5%A6%82%EF%BC%8C%E7%89%88%E6%9C%AC%201.0%20%E5%B0%8F%E4%BA%8E%E7%89%88%E6%9C%AC%201.1%20%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%83%E4%BB%AC%E4%B8%8B%E6%A0%87%E4%B8%BA%200%20%E7%9A%84%E4%BF%AE%E8%AE%A2%E5%8F%B7%E7%9B%B8%E5%90%8C%EF%BC%8C%E8%80%8C%E4%B8%8B%E6%A0%87%E4%B8%BA%201%20%E7%9A%84%E4%BF%AE%E8%AE%A2%E5%8F%B7%E5%88%86%E5%88%AB%E4%B8%BA%200%20%E5%92%8C%201%20%EF%BC%8C0%20%3C%201%20%E3%80%82%5Cn%5Cn%E8%BF%94%E5%9B%9E%E8%A7%84%E5%88%99%E5%A6%82%E4%B8%8B%EF%BC%9A%5Cn%5Cn%E5%A6%82%E6%9E%9C%C2%A0version1%C2%A0%3E%C2%A0version2%C2%A0%E8%BF%94%E5%9B%9E%C2%A01%EF%BC%8C%5Cn%E5%A6%82%E6%9E%9C%C2%A0version1%C2%A0%3C%C2%A0version2%20%E8%BF%94%E5%9B%9E%20-1%EF%BC%8C%5Cn%E9%99%A4%E6%AD%A4%E4%B9%8B%E5%A4%96%E8%BF%94%E5%9B%9E%200%E3%80%82%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22DzscN%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E6%AF%94%E8%BE%83%E7%89%88%E6%9C%AC%E5%8F%B7%5Cn%5Cnconst%20compareVersion%20%3D%20function%20(version1%2C%20version2)%20%7B%5Cn%20%20%20%20version1%20%3D%20version1.split(%5C%22.%5C%22)%5Cn%20%20%20%20version2%20%3D%20version2.split(%5C%22.%5C%22)%5Cn%5Cn%20%20%20%20const%20len1%20%3D%20version1.length%5Cn%20%20%20%20const%20len2%20%3D%20version2.length%5Cn%20%20%20%20let%20maxLen%20%3D%20len1%5Cn%20%20%20%20const%20fillZero%20%3D%20(array%2C%20len)%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20while%20(len--)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20array.push(0)%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20if%20(len1%20%3C%20len2)%20%7B%5Cn%20%20%20%20%20%20%20%20fillZero(version1%2C%20len2%20-%20len1)%5Cn%20%20%20%20%20%20%20%20maxLen%20%3D%20len2%5Cn%20%20%20%20%7D%20else%20if%20(len1%20%3E%20len2)%20%7B%5Cn%20%20%20%20%20%20%20%20fillZero(version2%2C%20len1%20-%20len2)%5Cn%20%20%20%20%20%20%20%20maxLen%20%3D%20len1%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%20maxLen%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20const%20a%20%3D%20parseInt(version1%5Bi%5D)%5Cn%20%20%20%20%20%20%20%20const%20b%20%3D%20parseInt(version2%5Bi%5D)%5Cn%20%20%20%20%20%20%20%20if%20(a%20%3D%3D%3D%20b)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20i%2B%2B%5Cn%20%20%20%20%20%20%20%20%7D%20else%20if%20(a%20%3E%20b)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%201%5Cn%20%20%20%20%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20-1%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20return%200%5Cn%7D%5Cn%5Cn%2F%2F%20%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%B8%8D%E8%A1%A5%E9%9B%B6%5Cnconst%20compareVersion%20%3D%20function%20(version1%2C%20version2)%20%7B%5Cn%20%20%20%20version1%20%3D%20version1.split(%5C%22.%5C%22)%5Cn%20%20%20%20version2%20%3D%20version2.split(%5C%22.%5C%22)%5Cn%5Cn%20%20%20%20const%20maxLen%20%3D%20Math.max(version1.length%2C%20version2.length)%5Cn%5Cn%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%20maxLen%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20const%20a%20%3D%20parseInt(version1%5Bi%5D%20%3F%3F%200)%5Cn%20%20%20%20%20%20%20%20const%20b%20%3D%20parseInt(version2%5Bi%5D%20%3F%3F%200)%5Cn%20%20%20%20%20%20%20%20if%20(a%20%3D%3D%3D%20b)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20i%2B%2B%5Cn%20%20%20%20%20%20%20%20%7D%20else%20if%20(a%20%3E%20b)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%201%5Cn%20%20%20%20%20%20%20%20%7D%20else%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20-1%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20return%200%5Cn%7D%5Cn%5Cnconsole.log(compareVersion(%5C%221.0%5C%22%2C%20%5C%221.0.0%5C%22))%5Cn%5Cn%2F%2F%20%E6%89%A9%E5%B1%951%E6%AF%94%E8%BE%83%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E5%8F%B7%E5%B9%B6%E6%8E%92%E5%BA%8F%5Cn%5Cnconst%20compareMoreVersion%20%3D%20versions%20%3D%3E%20%7B%5Cn%20%20%20%20return%20versions.sort((a%2C%20b)%20%3D%3E%20compareVersion(a%2C%20b))%5Cn%7D%5Cn%5Cnconsole.log(compareMoreVersion(%5B%5C%221.0%5C%22%2C%20%5C%223.1%5C%22%2C%20%5C%221.01%5C%22%5D))%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B2%2C39%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22mYwyJ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:35:23.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:35:24.000Z",
  "updated_at": "2022-05-10T15:16:47.000Z",
  "published_at": "2022-04-04T11:35:23.000Z",
  "first_published_at": "2022-04-04T11:35:23.489Z",
  "word_count": 536,
  "cover": null,
  "description": "给你两个版本号 version1 和 version2 ，请你比较它们。  版本号由一个或多个修订号组成，各修订号由一个 '.' 连接。每个修订号由 多位数字 组成，可能包含 前导零 。每个版本号至少包含一个字符。修订号从左到右编号，下标从 0 开始，最左边的修订号下标为 0 ，下一个修订号下...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}