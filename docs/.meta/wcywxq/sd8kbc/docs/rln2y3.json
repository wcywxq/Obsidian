{
  "id": 72212453,
  "slug": "rln2y3",
  "title": "查找文章中出现频率最高的词",
  "book_id": 26225252,
  "book": {
    "id": 26225252,
    "type": "Book",
    "slug": "sd8kbc",
    "name": "笔试 written test",
    "user_id": 732231,
    "description": "笔试相关题目\n1. 原生 API 实现\n2. 业务场景相关问题\n3. LeetCode 算法相关问题",
    "creator_id": 732231,
    "public": 0,
    "items_count": 74,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:38.713Z",
    "updated_at": "2023-11-11T18:15:39.000Z",
    "created_at": "2022-04-04T11:34:53.000Z",
    "namespace": "wcywxq/sd8kbc",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "```javascript\nfunction findMostWord(article) {\n  // 合法性判断\n  if (!article) return;\n  // 参数处理\n  article = article.trim().toLowerCase();\n  let wordList = article.match(/[a-z]+/g),\n    visited = [],\n    maxNum = 0,\n    maxWord = \"\";\n  article = \" \" + wordList.join(\"  \") + \" \";\n  // 遍历判断单词出现次数\n  wordList.forEach(function(item) {\n    if (visited.indexOf(item) < 0) {\n      // 加入 visited \n      visited.push(item);\n      let word = new RegExp(\" \" + item + \" \", \"g\"),\n        num = article.match(word).length;\n      if (num > maxNum) {\n        maxNum = num;\n        maxWord = item;\n      }\n    }\n  });\n  return maxWord + \"  \" + maxNum;\n}\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><pre data-lang=\"javascript\"><code>function findMostWord(article) {\n  // 合法性判断\n  if (!article) return;\n  // 参数处理\n  article = article.trim().toLowerCase();\n  let wordList = article.match(/[a-z]+/g),\n    visited = [],\n    maxNum = 0,\n    maxWord = &quot;&quot;;\n  article = &quot; &quot; + wordList.join(&quot;  &quot;) + &quot; &quot;;\n  // 遍历判断单词出现次数\n  wordList.forEach(function(item) {\n    if (visited.indexOf(item) &lt; 0) {\n      // 加入 visited \n      visited.push(item);\n      let word = new RegExp(&quot; &quot; + item + &quot; &quot;, &quot;g&quot;),\n        num = article.match(word).length;\n      if (num &gt; maxNum) {\n        maxNum = num;\n        maxWord = item;\n      }\n    }\n  });\n  return maxWord + &quot;  &quot; + maxNum;\n}</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20findMostWord(article)%20%7B%5Cn%20%20%2F%2F%20%E5%90%88%E6%B3%95%E6%80%A7%E5%88%A4%E6%96%AD%5Cn%20%20if%20(!article)%20return%3B%5Cn%20%20%2F%2F%20%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86%5Cn%20%20article%20%3D%20article.trim().toLowerCase()%3B%5Cn%20%20let%20wordList%20%3D%20article.match(%2F%5Ba-z%5D%2B%2Fg)%2C%5Cn%20%20%20%20visited%20%3D%20%5B%5D%2C%5Cn%20%20%20%20maxNum%20%3D%200%2C%5Cn%20%20%20%20maxWord%20%3D%20%5C%22%5C%22%3B%5Cn%20%20article%20%3D%20%5C%22%20%5C%22%20%2B%20wordList.join(%5C%22%20%20%5C%22)%20%2B%20%5C%22%20%5C%22%3B%5Cn%20%20%2F%2F%20%E9%81%8D%E5%8E%86%E5%88%A4%E6%96%AD%E5%8D%95%E8%AF%8D%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%5Cn%20%20wordList.forEach(function(item)%20%7B%5Cn%20%20%20%20if%20(visited.indexOf(item)%20%3C%200)%20%7B%5Cn%20%20%20%20%20%20%2F%2F%20%E5%8A%A0%E5%85%A5%20visited%20%5Cn%20%20%20%20%20%20visited.push(item)%3B%5Cn%20%20%20%20%20%20let%20word%20%3D%20new%20RegExp(%5C%22%20%5C%22%20%2B%20item%20%2B%20%5C%22%20%5C%22%2C%20%5C%22g%5C%22)%2C%5Cn%20%20%20%20%20%20%20%20num%20%3D%20article.match(word).length%3B%5Cn%20%20%20%20%20%20if%20(num%20%3E%20maxNum)%20%7B%5Cn%20%20%20%20%20%20%20%20maxNum%20%3D%20num%3B%5Cn%20%20%20%20%20%20%20%20maxWord%20%3D%20item%3B%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%7D)%3B%5Cn%20%20return%20maxWord%20%2B%20%5C%22%20%20%5C%22%20%2B%20maxNum%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22JltKQ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:35:21.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:35:21.000Z",
  "updated_at": "2022-05-10T15:16:47.000Z",
  "published_at": "2022-04-04T11:35:21.000Z",
  "first_published_at": "2022-04-04T11:35:21.368Z",
  "word_count": 103,
  "cover": null,
  "description": "function findMostWord(article) {   // 合法性判断   if (!article) return;   // 参数处理   article = article.trim().toLowerCase();   let wordList = article.ma...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}