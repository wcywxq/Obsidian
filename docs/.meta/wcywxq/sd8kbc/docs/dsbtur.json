{
  "id": 81939230,
  "slug": "dsbtur",
  "title": "上传100个文件，同时并发上传数量为5名如何最快完成上传",
  "book_id": 26225252,
  "book": {
    "id": 26225252,
    "type": "Book",
    "slug": "sd8kbc",
    "name": "笔试 written test",
    "user_id": 732231,
    "description": "笔试相关题目\n1. 原生 API 实现\n2. 业务场景相关问题\n3. LeetCode 算法相关问题",
    "creator_id": 732231,
    "public": 0,
    "items_count": 74,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:38.713Z",
    "updated_at": "2023-11-11T18:15:39.000Z",
    "created_at": "2022-04-04T11:34:53.000Z",
    "namespace": "wcywxq/sd8kbc",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "```javascript\nfunction loadImg(url) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {   \n      resolve(url)\n    }, 500)\n  })\n}\n\nfunction limitLoad(urls, handler, limit) {\n  const sequence = [...urls]\n  let list = [] \n  let result = []\n  list = sequence.splice(0, limit).map((v, i) => {    \n    return handler(v).then(url => {     \n      return {url, i}      \n    })\n  })\n  return sequence.reduce((last, v, i) => {   \n    return last.then(() => {      \n      return Promise.race(list)     \n    }).then((data) => {      \n      list[data.i % limit] = handler(v).then(url => {        \n        return {url, i: i + limit}      \n      })\n      result[data.i] = data.url      \n    })\n  }, Promise.resolve()).then(() => {    \n    return Promise.all(list).then((res) => {      \n      res.map(item => {\n        result[item.i] = item.url\n      })\n      return result\n    })\n  })\n}\n\nlimitLoad(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15'], loadImg, 5).then(res => {\n  console.log(res)\n})\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><pre data-language=\"javascript\" id=\"VPYwB\" class=\"ne-codeblock language-javascript\">function loadImg(url) {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {   \n      resolve(url)\n    }, 500)\n  })\n}\n\nfunction limitLoad(urls, handler, limit) {\n  const sequence = [...urls]\n  let list = [] \n  let result = []\n  list = sequence.splice(0, limit).map((v, i) =&gt; {    \n    return handler(v).then(url =&gt; {     \n      return {url, i}      \n    })\n  })\n  return sequence.reduce((last, v, i) =&gt; {   \n    return last.then(() =&gt; {      \n      return Promise.race(list)     \n    }).then((data) =&gt; {      \n      list[data.i % limit] = handler(v).then(url =&gt; {        \n        return {url, i: i + limit}      \n      })\n      result[data.i] = data.url      \n    })\n  }, Promise.resolve()).then(() =&gt; {    \n    return Promise.all(list).then((res) =&gt; {      \n      res.map(item =&gt; {\n        result[item.i] = item.url\n      })\n      return result\n    })\n  })\n}\n\nlimitLoad(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15'], loadImg, 5).then(res =&gt; {\n  console.log(res)\n})</pre></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"paragraphSpacing\" content=\"relax\" /><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22function%20loadImg(url)%20%7B%5Cn%20%20return%20new%20Promise((resolve%2C%20reject)%20%3D%3E%20%7B%5Cn%20%20%20%20setTimeout(()%20%3D%3E%20%7B%20%20%20%5Cn%20%20%20%20%20%20resolve(url)%5Cn%20%20%20%20%7D%2C%20500)%5Cn%20%20%7D)%5Cn%7D%5Cn%5Cnfunction%20limitLoad(urls%2C%20handler%2C%20limit)%20%7B%5Cn%20%20const%20sequence%20%3D%20%5B...urls%5D%5Cn%20%20let%20list%20%3D%20%5B%5D%20%5Cn%20%20let%20result%20%3D%20%5B%5D%5Cn%20%20list%20%3D%20sequence.splice(0%2C%20limit).map((v%2C%20i)%20%3D%3E%20%7B%20%20%20%20%5Cn%20%20%20%20return%20handler(v).then(url%20%3D%3E%20%7B%20%20%20%20%20%5Cn%20%20%20%20%20%20return%20%7Burl%2C%20i%7D%20%20%20%20%20%20%5Cn%20%20%20%20%7D)%5Cn%20%20%7D)%5Cn%20%20return%20sequence.reduce((last%2C%20v%2C%20i)%20%3D%3E%20%7B%20%20%20%5Cn%20%20%20%20return%20last.then(()%20%3D%3E%20%7B%20%20%20%20%20%20%5Cn%20%20%20%20%20%20return%20Promise.race(list)%20%20%20%20%20%5Cn%20%20%20%20%7D).then((data)%20%3D%3E%20%7B%20%20%20%20%20%20%5Cn%20%20%20%20%20%20list%5Bdata.i%20%25%20limit%5D%20%3D%20handler(v).then(url%20%3D%3E%20%7B%20%20%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%20%20return%20%7Burl%2C%20i%3A%20i%20%2B%20limit%7D%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20%20result%5Bdata.i%5D%20%3D%20data.url%20%20%20%20%20%20%5Cn%20%20%20%20%7D)%5Cn%20%20%7D%2C%20Promise.resolve()).then(()%20%3D%3E%20%7B%20%20%20%20%5Cn%20%20%20%20return%20Promise.all(list).then((res)%20%3D%3E%20%7B%20%20%20%20%20%20%5Cn%20%20%20%20%20%20res.map(item%20%3D%3E%20%7B%5Cn%20%20%20%20%20%20%20%20result%5Bitem.i%5D%20%3D%20item.url%5Cn%20%20%20%20%20%20%7D)%5Cn%20%20%20%20%20%20return%20result%5Cn%20%20%20%20%7D)%5Cn%20%20%7D)%5Cn%7D%5Cn%5CnlimitLoad(%5B'1'%2C%20'2'%2C%20'3'%2C%20'4'%2C%20'5'%2C%20'6'%2C%20'7'%2C%20'8'%2C%20'9'%2C%20'10'%2C%20'11'%2C%20'12'%2C%20'13'%2C%20'14'%2C%20'15'%5D%2C%20loadImg%2C%205).then(res%20%3D%3E%20%7B%5Cn%20%20console.log(res)%5Cn%7D)%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22VPYwB%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-06-30T06:51:21.000Z",
  "deleted_at": null,
  "created_at": "2022-06-30T06:50:47.000Z",
  "updated_at": "2022-06-30T06:51:21.000Z",
  "published_at": "2022-06-30T06:51:21.000Z",
  "first_published_at": "2022-06-30T06:51:21.271Z",
  "word_count": 124,
  "cover": null,
  "description": "function loadImg(url) {   return new Promise((resolve, reject) => {     setTimeout(() => {          resolve(url)     }, 500)   }) }  function limit...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}