{
  "id": 72212432,
  "slug": "shzfyg",
  "title": "实现日期格式化函数",
  "book_id": 26225252,
  "book": {
    "id": 26225252,
    "type": "Book",
    "slug": "sd8kbc",
    "name": "笔试 written test",
    "user_id": 732231,
    "description": "笔试相关题目\n1. 原生 API 实现\n2. 业务场景相关问题\n3. LeetCode 算法相关问题",
    "creator_id": 732231,
    "public": 0,
    "items_count": 74,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:38.713Z",
    "updated_at": "2023-11-11T18:15:39.000Z",
    "created_at": "2022-04-04T11:34:53.000Z",
    "namespace": "wcywxq/sd8kbc",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "- 输入\n```javascript\ndateFormat(new Date('2020-12-01'), 'yyyy/MM/dd') // 2020/12/01\ndateFormat(new Date('2020-04-01'), 'yyyy/MM/dd') // 2020/04/01\ndateFormat(new Date('2020-04-01'), 'yyyy年MM月dd日') // 2020年04月01日\n```\n\n- 实现\n```javascript\nconst dateFormat = (dateInput, format)=>{\n    var day = dateInput.getDate() \n    var month = dateInput.getMonth() + 1  \n    var year = dateInput.getFullYear()   \n    format = format.replace(/yyyy/, year)\n    format = format.replace(/MM/,month)\n    format = format.replace(/dd/,day)\n    return format\n}\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><ul><li><span>输入</span></li></ul><pre data-lang=\"javascript\"><code>dateFormat(new Date('2020-12-01'), 'yyyy/MM/dd') // 2020/12/01\ndateFormat(new Date('2020-04-01'), 'yyyy/MM/dd') // 2020/04/01\ndateFormat(new Date('2020-04-01'), 'yyyy年MM月dd日') // 2020年04月01日</code></pre><ul><li><span>实现</span></li></ul><pre data-lang=\"javascript\"><code>const dateFormat = (dateInput, format)=&gt;{\n    var day = dateInput.getDate() \n    var month = dateInput.getMonth() + 1  \n    var year = dateInput.getFullYear()   \n    format = format.replace(/yyyy/, year)\n    format = format.replace(/MM/,month)\n    format = format.replace(/dd/,day)\n    return format\n}</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><ul list=\"ub2d9c194\"><li fid=\"u8bf25a6a\" data-lake-id=\"u80e44e8c\" id=\"u80e44e8c\"><span data-lake-id=\"ud335fbad\" id=\"ud335fbad\">输入</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22dateFormat(new%20Date('2020-12-01')%2C%20'yyyy%2FMM%2Fdd')%20%2F%2F%202020%2F12%2F01%5CndateFormat(new%20Date('2020-04-01')%2C%20'yyyy%2FMM%2Fdd')%20%2F%2F%202020%2F04%2F01%5CndateFormat(new%20Date('2020-04-01')%2C%20'yyyy%E5%B9%B4MM%E6%9C%88dd%E6%97%A5')%20%2F%2F%202020%E5%B9%B404%E6%9C%8801%E6%97%A5%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Night%20Owl%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22mW1Vw%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ul list=\"u9d427f23\"><li fid=\"u2ebb10e9\" data-lake-id=\"u2c3b4057\" id=\"u2c3b4057\"><span data-lake-id=\"u3d3b295c\" id=\"u3d3b295c\">实现</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22const%20dateFormat%20%3D%20(dateInput%2C%20format)%3D%3E%7B%5Cn%20%20%20%20var%20day%20%3D%20dateInput.getDate()%20%5Cn%20%20%20%20var%20month%20%3D%20dateInput.getMonth()%20%2B%201%20%20%5Cn%20%20%20%20var%20year%20%3D%20dateInput.getFullYear()%20%20%20%5Cn%20%20%20%20format%20%3D%20format.replace(%2Fyyyy%2F%2C%20year)%5Cn%20%20%20%20format%20%3D%20format.replace(%2FMM%2F%2Cmonth)%5Cn%20%20%20%20format%20%3D%20format.replace(%2Fdd%2F%2Cday)%5Cn%20%20%20%20return%20format%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Night%20Owl%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22jGKny%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:35:17.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:35:17.000Z",
  "updated_at": "2022-05-10T15:16:48.000Z",
  "published_at": "2022-04-04T11:35:17.000Z",
  "first_published_at": "2022-04-04T11:35:17.047Z",
  "word_count": 62,
  "cover": null,
  "description": "输入dateFormat(new Date('2020-12-01'), 'yyyy/MM/dd') // 2020/12/01 dateFormat(new Date('2020-04-01'), 'yyyy/MM/dd') // 2020/04/01 dateFormat(new Date...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}