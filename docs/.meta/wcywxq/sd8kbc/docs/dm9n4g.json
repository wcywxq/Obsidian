{
  "id": 72212404,
  "slug": "dm9n4g",
  "title": "给 xhr 添加 hook，实现在各个阶段打印日志",
  "book_id": 26225252,
  "book": {
    "id": 26225252,
    "type": "Book",
    "slug": "sd8kbc",
    "name": "笔试 written test",
    "user_id": 732231,
    "description": "笔试相关题目\n1. 原生 API 实现\n2. 业务场景相关问题\n3. LeetCode 算法相关问题",
    "creator_id": 732231,
    "public": 0,
    "items_count": 74,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2023-11-11T18:15:38.713Z",
    "updated_at": "2023-11-11T18:15:39.000Z",
    "created_at": "2022-04-04T11:34:53.000Z",
    "namespace": "wcywxq/sd8kbc",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "> 重写 xhr 的属性和方法\n\n```javascript\nclass XhrHook {\n\tconstructor(beforeHook = {}, afterHook = {}) {\n  \tthis.XHR = window.XMLHttpRequest\n    this.beforeHooks = beforeHook\n    this.afterHooks = afterHook\n    \n    // 初始化\n    this.init()\n  }\n  \n  init() {\n    const _self = this\n  \t// 此处不用剪头函数的问题是因为 this 指向问题，因为实例化后需要指向新构造出的实例上\n    window.XMLHttpRequest = function() {\n    \tthis._xhr = new _self.XHR()\n      _self.overwrite(this)\n    }\n  }\n  \n  overwrite(proxyXHR) {\n  \tfor (let key in proxyXHR._xhr) {\n    \tif (typeof proxyXHR._xhr[key] === 'function') {\n      \tthis.overwriteMethod(key, proxyXHR)\n        continue\n      }\n      this.overwriteAttributes(key, proxyXHR)\n    }\n  }\n  \n  // 重写方法\n  overwriteMethod(key, proxyXHR) {\n  \tlet beforeHooks = this.beforeHooks // 我们应该可以拦截原有行为\n    let afterHooks = this.afterHooks\n    \n    proxyXHR[key] = (...args) => {\n    \t// 拦截\n      if (beforeHooks[key]) {\n      \tconst res = beforeHooks[key].call(proxyXHR, args)\n        if (res === false) return\n      }\n      const res = proxyXHR._xhr[key].apply(proxyXHR._xhr, args)\n      afterHooks[key] && afterHooks[key].call(proxyXHR._xhr, res)\n      return res\n    }\n  }\n  \n  // 重写属性\n  overwriteAttributes(key, proxyXHR) {\n  \tObject.defineProperties(proxyXHR, key, this.setPropertyDescriptor(key, proxyXHR))\n  }\n  \n  setPropertyDescriptor(key, proxyXHR) {\n  \tlet obj = Object.create(null) // 得到一个非常干净的对象\n    let _self = this\n    obj.set = function(val) {\n    \tif (!key.startsWith('on')) {\n      \tproxyXHR[`__${key}`] = val\n        return\n      }\n      if (_self.beforeHooks[key]) {\n      \tthis._xhr[key] = function(...args) {\n        \t_self.beforeHooks[key].call(proxyXHR)\n          val.apply(proxyXHR, args)\n        }\n        return\n      }\n      this._xhr[key] = val\n    }\n    obj.get = function() {\n    \treturn proxyXHR[`__${key}`] || this._xhr[key]\n    }\n    return obj\n  }\n}\n```\n",
  "body_draft": "",
  "body_html": "<!doctype html><blockquote><p data-lake-id=\"ub622456f\"><span>重写 xhr 的属性和方法</span></p></blockquote><pre data-lang=\"javascript\"><code>class XhrHook {\n\tconstructor(beforeHook = {}, afterHook = {}) {\n  \tthis.XHR = window.XMLHttpRequest\n    this.beforeHooks = beforeHook\n    this.afterHooks = afterHook\n    \n    // 初始化\n    this.init()\n  }\n  \n  init() {\n    const _self = this\n  \t// 此处不用剪头函数的问题是因为 this 指向问题，因为实例化后需要指向新构造出的实例上\n    window.XMLHttpRequest = function() {\n    \tthis._xhr = new _self.XHR()\n      _self.overwrite(this)\n    }\n  }\n  \n  overwrite(proxyXHR) {\n  \tfor (let key in proxyXHR._xhr) {\n    \tif (typeof proxyXHR._xhr[key] === 'function') {\n      \tthis.overwriteMethod(key, proxyXHR)\n        continue\n      }\n      this.overwriteAttributes(key, proxyXHR)\n    }\n  }\n  \n  // 重写方法\n  overwriteMethod(key, proxyXHR) {\n  \tlet beforeHooks = this.beforeHooks // 我们应该可以拦截原有行为\n    let afterHooks = this.afterHooks\n    \n    proxyXHR[key] = (...args) =&gt; {\n    \t// 拦截\n      if (beforeHooks[key]) {\n      \tconst res = beforeHooks[key].call(proxyXHR, args)\n        if (res === false) return\n      }\n      const res = proxyXHR._xhr[key].apply(proxyXHR._xhr, args)\n      afterHooks[key] &amp;&amp; afterHooks[key].call(proxyXHR._xhr, res)\n      return res\n    }\n  }\n  \n  // 重写属性\n  overwriteAttributes(key, proxyXHR) {\n  \tObject.defineProperties(proxyXHR, key, this.setPropertyDescriptor(key, proxyXHR))\n  }\n  \n  setPropertyDescriptor(key, proxyXHR) {\n  \tlet obj = Object.create(null) // 得到一个非常干净的对象\n    let _self = this\n    obj.set = function(val) {\n    \tif (!key.startsWith('on')) {\n      \tproxyXHR[`__${key}`] = val\n        return\n      }\n      if (_self.beforeHooks[key]) {\n      \tthis._xhr[key] = function(...args) {\n        \t_self.beforeHooks[key].call(proxyXHR)\n          val.apply(proxyXHR, args)\n        }\n        return\n      }\n      this._xhr[key] = val\n    }\n    obj.get = function() {\n    \treturn proxyXHR[`__${key}`] || this._xhr[key]\n    }\n    return obj\n  }\n}</code></pre>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><blockquote data-lake-id=\"ufe204621\" id=\"ufe204621\"><p data-lake-id=\"ub622456f\" id=\"ub622456f\"><span data-lake-id=\"ucd8e1a81\" id=\"ucd8e1a81\">重写 xhr 的属性和方法</span></p></blockquote><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22class%20XhrHook%20%7B%5Cn%5Ctconstructor(beforeHook%20%3D%20%7B%7D%2C%20afterHook%20%3D%20%7B%7D)%20%7B%5Cn%20%20%5Ctthis.XHR%20%3D%20window.XMLHttpRequest%5Cn%20%20%20%20this.beforeHooks%20%3D%20beforeHook%5Cn%20%20%20%20this.afterHooks%20%3D%20afterHook%5Cn%20%20%20%20%5Cn%20%20%20%20%2F%2F%20%E5%88%9D%E5%A7%8B%E5%8C%96%5Cn%20%20%20%20this.init()%5Cn%20%20%7D%5Cn%20%20%5Cn%20%20init()%20%7B%5Cn%20%20%20%20const%20_self%20%3D%20this%5Cn%20%20%5Ct%2F%2F%20%E6%AD%A4%E5%A4%84%E4%B8%8D%E7%94%A8%E5%89%AA%E5%A4%B4%E5%87%BD%E6%95%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%98%AF%E5%9B%A0%E4%B8%BA%20this%20%E6%8C%87%E5%90%91%E9%97%AE%E9%A2%98%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%90%8E%E9%9C%80%E8%A6%81%E6%8C%87%E5%90%91%E6%96%B0%E6%9E%84%E9%80%A0%E5%87%BA%E7%9A%84%E5%AE%9E%E4%BE%8B%E4%B8%8A%5Cn%20%20%20%20window.XMLHttpRequest%20%3D%20function()%20%7B%5Cn%20%20%20%20%5Ctthis._xhr%20%3D%20new%20_self.XHR()%5Cn%20%20%20%20%20%20_self.overwrite(this)%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20%5Cn%20%20overwrite(proxyXHR)%20%7B%5Cn%20%20%5Ctfor%20(let%20key%20in%20proxyXHR._xhr)%20%7B%5Cn%20%20%20%20%5Ctif%20(typeof%20proxyXHR._xhr%5Bkey%5D%20%3D%3D%3D%20'function')%20%7B%5Cn%20%20%20%20%20%20%5Ctthis.overwriteMethod(key%2C%20proxyXHR)%5Cn%20%20%20%20%20%20%20%20continue%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20this.overwriteAttributes(key%2C%20proxyXHR)%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20%5Cn%20%20%2F%2F%20%E9%87%8D%E5%86%99%E6%96%B9%E6%B3%95%5Cn%20%20overwriteMethod(key%2C%20proxyXHR)%20%7B%5Cn%20%20%5Ctlet%20beforeHooks%20%3D%20this.beforeHooks%20%2F%2F%20%E6%88%91%E4%BB%AC%E5%BA%94%E8%AF%A5%E5%8F%AF%E4%BB%A5%E6%8B%A6%E6%88%AA%E5%8E%9F%E6%9C%89%E8%A1%8C%E4%B8%BA%5Cn%20%20%20%20let%20afterHooks%20%3D%20this.afterHooks%5Cn%20%20%20%20%5Cn%20%20%20%20proxyXHR%5Bkey%5D%20%3D%20(...args)%20%3D%3E%20%7B%5Cn%20%20%20%20%5Ct%2F%2F%20%E6%8B%A6%E6%88%AA%5Cn%20%20%20%20%20%20if%20(beforeHooks%5Bkey%5D)%20%7B%5Cn%20%20%20%20%20%20%5Ctconst%20res%20%3D%20beforeHooks%5Bkey%5D.call(proxyXHR%2C%20args)%5Cn%20%20%20%20%20%20%20%20if%20(res%20%3D%3D%3D%20false)%20return%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20const%20res%20%3D%20proxyXHR._xhr%5Bkey%5D.apply(proxyXHR._xhr%2C%20args)%5Cn%20%20%20%20%20%20afterHooks%5Bkey%5D%20%26%26%20afterHooks%5Bkey%5D.call(proxyXHR._xhr%2C%20res)%5Cn%20%20%20%20%20%20return%20res%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%20%20%5Cn%20%20%2F%2F%20%E9%87%8D%E5%86%99%E5%B1%9E%E6%80%A7%5Cn%20%20overwriteAttributes(key%2C%20proxyXHR)%20%7B%5Cn%20%20%5CtObject.defineProperties(proxyXHR%2C%20key%2C%20this.setPropertyDescriptor(key%2C%20proxyXHR))%5Cn%20%20%7D%5Cn%20%20%5Cn%20%20setPropertyDescriptor(key%2C%20proxyXHR)%20%7B%5Cn%20%20%5Ctlet%20obj%20%3D%20Object.create(null)%20%2F%2F%20%E5%BE%97%E5%88%B0%E4%B8%80%E4%B8%AA%E9%9D%9E%E5%B8%B8%E5%B9%B2%E5%87%80%E7%9A%84%E5%AF%B9%E8%B1%A1%5Cn%20%20%20%20let%20_self%20%3D%20this%5Cn%20%20%20%20obj.set%20%3D%20function(val)%20%7B%5Cn%20%20%20%20%5Ctif%20(!key.startsWith('on'))%20%7B%5Cn%20%20%20%20%20%20%5CtproxyXHR%5B%60__%24%7Bkey%7D%60%5D%20%3D%20val%5Cn%20%20%20%20%20%20%20%20return%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20if%20(_self.beforeHooks%5Bkey%5D)%20%7B%5Cn%20%20%20%20%20%20%5Ctthis._xhr%5Bkey%5D%20%3D%20function(...args)%20%7B%5Cn%20%20%20%20%20%20%20%20%5Ct_self.beforeHooks%5Bkey%5D.call(proxyXHR)%5Cn%20%20%20%20%20%20%20%20%20%20val.apply(proxyXHR%2C%20args)%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20return%5Cn%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20this._xhr%5Bkey%5D%20%3D%20val%5Cn%20%20%20%20%7D%5Cn%20%20%20%20obj.get%20%3D%20function()%20%7B%5Cn%20%20%20%20%5Ctreturn%20proxyXHR%5B%60__%24%7Bkey%7D%60%5D%20%7C%7C%20this._xhr%5Bkey%5D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20obj%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22pdBLQ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-04-04T11:35:11.000Z",
  "deleted_at": null,
  "created_at": "2022-04-04T11:35:11.000Z",
  "updated_at": "2022-05-10T15:16:50.000Z",
  "published_at": "2022-04-04T11:35:11.000Z",
  "first_published_at": "2022-04-04T11:35:10.891Z",
  "word_count": 254,
  "cover": null,
  "description": "重写 xhr 的属性和方法class XhrHook { \tconstructor(beforeHook = {}, afterHook = {}) {   \tthis.XHR = window.XMLHttpRequest     this.beforeHooks = beforeHook ...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}