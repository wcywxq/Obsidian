{
  "id": 67256062,
  "slug": "vobym9",
  "title": "事务",
  "book_id": 24988551,
  "book": {
    "id": 24988551,
    "type": "Book",
    "slug": "qy29pt",
    "name": "数据库相关知识",
    "user_id": 732231,
    "description": "数据库相关知识，如：MongoDB、MySQL",
    "creator_id": 732231,
    "public": 0,
    "items_count": 2,
    "likes_count": 0,
    "watches_count": 1,
    "content_updated_at": "2022-03-13T10:00:48.648Z",
    "updated_at": "2023-11-11T18:10:22.000Z",
    "created_at": "2022-03-03T15:29:23.000Z",
    "namespace": "wcywxq/qy29pt",
    "user": {
      "id": 732231,
      "type": "User",
      "login": "wcywxq",
      "name": "magic",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
      "books_count": 18,
      "public_books_count": 0,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-01-08T14:21:31.000Z",
      "updated_at": "2023-11-13T09:32:35.000Z",
      "_serializer": "v2.user"
    },
    "_serializer": "v2.book"
  },
  "user_id": 732231,
  "creator": {
    "id": 732231,
    "type": "User",
    "login": "wcywxq",
    "name": "magic",
    "description": null,
    "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/732231/1606968271774-avatar/886ad88b-d2cc-4c9e-a674-f70eb51a679c.png",
    "books_count": 18,
    "public_books_count": 0,
    "followers_count": 0,
    "following_count": 0,
    "created_at": "2020-01-08T14:21:31.000Z",
    "updated_at": "2023-11-13T09:32:35.000Z",
    "_serializer": "v2.user"
  },
  "format": "lake",
  "body": "<a name=\"fhe9f\"></a>\n## 基本要素 ACID\n\n- 原子性\n\n事务开始后的所有操作，要么全部昨晚，要么全部不做，不可能停止在中间环节。事务执行过程中出错，会回滚到事物开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体，就像化学中学过的原子，是物质构成的基本单位\n\n- 一致性\n\n事务开始前和结束后，数据库的完整性约束没有被破坏。比如 A 向 B 转账，不可能 A 扣了钱，B 却没收到\n\n- 隔离性\n\n同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如 A 正在从一张银行卡中取钱，在 A 取钱的过程结束钱，B 不能向这张卡转账\n\n- 持久性\n\n事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚\n\n<a name=\"vFPoF\"></a>\n## 事务的并发问题\n\n- 脏读\n\n事务 A 获取了事务 B 更新的数据，然后 B 回滚操作，那么 A 读到的数据是脏数据\n\n- 不可重复读\n\n事务 A 多次读取同一数据，事务 B 在事务 A 多次读取的过程中，对数据做了更新并提交，导致事务 A 多次读取同一数据时，结果不一致\n\n- 幻读\n\n系统管理员 A 将数据库中所有学生的成绩从具体分数改为 ABCDE 等级，但是系统管理员 B 就在这个时候插入了一条具体分数的记录，当系统管理员 A 改结束后发现还有一条记录没有改过来，就好像发生了幻觉一样，这就叫幻读\n\n> 不可重复读和幻读很容易混淆，不可重复读侧重于修改，幻读侧重于新增或删除。解决不可重复读的问题只需要锁住满足条件的行，解决幻读需要锁表\n\n\n<a name=\"hxxGo\"></a>\n## 事务的隔离级别\n| 事务隔离级别 | 脏读 | 不可重复读 | 幻读 |\n| --- | --- | --- | --- |\n| 读未提交(read-uncommited) | ✅ | ✅ | ✅ |\n| 不可重复读(read-commited) | ❌ | ✅ | ✅ |\n| 可重复读(repeatable-read) | ❌ | ❌ | ✅ |\n| 串行化(serializable) | ❌ | ❌ | ❌ |\n\n补充：\n\n- 事务隔离级别为提交时，写数据只会锁住相应的行\n- 事务隔离级别为可重复读时，如果检索条件有索引(包括主键索引)的时候，默认加锁方式是 next-key 锁；如果检索条件没有索引，更新数据时会锁住整张表，一个间隙被事务加了锁，其他事务是不能在这个间隙插入记录的，这样可以防止幻读\n- 事务隔离级别为串行化时，读写数据都会锁住整张表\n- 隔离级别越高，越能保证数据的完整性和一致性，但是对并发性能的影响也越大\n\n\n\n\n\n\n\n",
  "body_draft": "",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h2 id=\"fhe9f\"><span class=\"ne-text\">基本要素 ACID</span></h2><p id=\"u9c063892\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"uf82bdecc\"><span class=\"ne-text\">原子性</span></li></ul><p id=\"ub982efaf\" class=\"ne-p\"><span class=\"ne-text\">事务开始后的所有操作，要么全部昨晚，要么全部不做，不可能停止在中间环节。事务执行过程中出错，会回滚到事物开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体，就像化学中学过的原子，是物质构成的基本单位</span></p><p id=\"ub08b33f3\" class=\"ne-p\"><span class=\"ne-text\"></span></p><ul class=\"ne-ul\"><li id=\"u69da904b\"><span class=\"ne-text\">一致性</span></li></ul><p id=\"uf1c181e7\" class=\"ne-p\"><span class=\"ne-text\">事务开始前和结束后，数据库的完整性约束没有被破坏。比如 A 向 B 转账，不可能 A 扣了钱，B 却没收到</span></p><p id=\"uf9650e61\" class=\"ne-p\"><span class=\"ne-text\"></span></p><ul class=\"ne-ul\"><li id=\"u0f53e28e\"><span class=\"ne-text\">隔离性</span></li></ul><p id=\"u07619115\" class=\"ne-p\"><span class=\"ne-text\">同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如 A 正在从一张银行卡中取钱，在 A 取钱的过程结束钱，B 不能向这张卡转账</span></p><p id=\"u9fa1f7f4\" class=\"ne-p\"><span class=\"ne-text\"></span></p><ul class=\"ne-ul\"><li id=\"u2996f704\"><span class=\"ne-text\">持久性</span></li></ul><p id=\"u5e0649b9\" class=\"ne-p\"><span class=\"ne-text\">事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚</span></p><p id=\"u615e1486\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h2 id=\"vFPoF\"><span class=\"ne-text\">事务的并发问题</span></h2><p id=\"ud8ef27e6\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"ue4a69e6d\"><span class=\"ne-text\">脏读</span></li></ul><p id=\"u4cb92baf\" class=\"ne-p\"><span class=\"ne-text\">事务 A 获取了事务 B 更新的数据，然后 B 回滚操作，那么 A 读到的数据是脏数据</span></p><p id=\"u35ccef9b\" class=\"ne-p\"><span class=\"ne-text\"></span></p><ul class=\"ne-ul\"><li id=\"uddda1fed\"><span class=\"ne-text\">不可重复读</span></li></ul><p id=\"u5152fc0e\" class=\"ne-p\"><span class=\"ne-text\">事务 A 多次读取同一数据，事务 B 在事务 A 多次读取的过程中，对数据做了更新并提交，导致事务 A 多次读取同一数据时，结果不一致</span></p><p id=\"ud579d776\" class=\"ne-p\"><span class=\"ne-text\"></span></p><ul class=\"ne-ul\"><li id=\"ue1433893\"><span class=\"ne-text\">幻读</span></li></ul><p id=\"u287252d6\" class=\"ne-p\"><span class=\"ne-text\">系统管理员 A 将数据库中所有学生的成绩从具体分数改为 ABCDE 等级，但是系统管理员 B 就在这个时候插入了一条具体分数的记录，当系统管理员 A 改结束后发现还有一条记录没有改过来，就好像发生了幻觉一样，这就叫幻读</span></p><p id=\"udfea60e5\" class=\"ne-p\"><span class=\"ne-text\"></span></p><div class=\"ne-quote\"><p id=\"u8eb0557a\" class=\"ne-p\"><span class=\"ne-text\">不可重复读和幻读很容易混淆，不可重复读侧重于修改，幻读侧重于新增或删除。解决不可重复读的问题只需要锁住满足条件的行，解决幻读需要锁表</span></p></div><p id=\"u5fb78b11\" class=\"ne-p\"><span class=\"ne-text\"></span></p><h2 id=\"hxxGo\"><span class=\"ne-text\">事务的隔离级别</span></h2><table id=\"QG7da\" class=\"ne-table\" style=\"width: 651px\"><tbody><tr style=\"height: 33px\"><td width=\"235\"><p id=\"uceb3ddbf\" class=\"ne-p\"><span class=\"ne-text\">事务隔离级别</span></p></td><td width=\"137\"><p id=\"u1b7385b7\" class=\"ne-p\"><span class=\"ne-text\">脏读</span></p></td><td width=\"140\"><p id=\"u555c5d6b\" class=\"ne-p\"><span class=\"ne-text\">不可重复读</span></p></td><td width=\"139\"><p id=\"u69789088\" class=\"ne-p\"><span class=\"ne-text\">幻读</span></p></td></tr><tr style=\"height: 33px\"><td width=\"235\"><p id=\"u708276ea\" class=\"ne-p\"><span class=\"ne-text\">读未提交(read-uncommited)</span></p></td><td width=\"137\"><p id=\"u99f8d3d2\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"140\"><p id=\"u8034241e\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"139\"><p id=\"u9b97a501\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td></tr><tr style=\"height: 33px\"><td width=\"235\"><p id=\"u1ebc3632\" class=\"ne-p\"><span class=\"ne-text\">不可重复读(read-commited)</span></p></td><td width=\"137\"><p id=\"u94308f2a\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"140\"><p id=\"u6bac2af6\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td><td width=\"139\"><p id=\"u72161e72\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td></tr><tr style=\"height: 33px\"><td width=\"235\"><p id=\"u9c71acf4\" class=\"ne-p\"><span class=\"ne-text\">可重复读(repeatable-read)</span></p></td><td width=\"137\"><p id=\"uba5294af\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"140\"><p id=\"uf91b5070\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"139\"><p id=\"u9c43a488\" class=\"ne-p\"><span class=\"ne-text\">✅</span></p></td></tr><tr style=\"height: 33px\"><td width=\"235\"><p id=\"u3336a8f8\" class=\"ne-p\"><span class=\"ne-text\">串行化(serializable)</span></p></td><td width=\"137\"><p id=\"ub2c1445f\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"140\"><p id=\"u2268ebea\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td><td width=\"139\"><p id=\"u4a255c7b\" class=\"ne-p\"><span class=\"ne-text\">❌</span></p></td></tr></tbody></table><p id=\"ub9c0e172\" class=\"ne-p\"><span class=\"ne-text\">补充：</span></p><ul class=\"ne-ul\"><li id=\"u86c64206\"><span class=\"ne-text\">事务隔离级别为提交时，写数据只会锁住相应的行</span></li><li id=\"ud6e31542\"><span class=\"ne-text\">事务隔离级别为可重复读时，如果检索条件有索引(包括主键索引)的时候，默认加锁方式是 next-key 锁；如果检索条件没有索引，更新数据时会锁住整张表，一个间隙被事务加了锁，其他事务是不能在这个间隙插入记录的，这样可以防止幻读</span></li></ul><ul class=\"ne-ul\"><li id=\"u90baa9f4\"><span class=\"ne-text\">事务隔离级别为串行化时，读写数据都会锁住整张表</span></li><li id=\"ub9c0ae81\"><span class=\"ne-text\">隔离级别越高，越能保证数据的完整性和一致性，但是对并发性能的影响也越大</span></li></ul><p id=\"u8c850bbe\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u45da1ee8\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u6336efe8\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u900c314c\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u3c594dc9\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u78e06762\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ude497a84\" class=\"ne-p\"><span class=\"ne-text\"></span></p></div>",
  "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h2 data-lake-id=\"fhe9f\" id=\"fhe9f\"><span data-lake-id=\"u4e384647\" id=\"u4e384647\">基本要素 ACID</span></h2><p data-lake-id=\"u9c063892\" id=\"u9c063892\"><br></p><ul list=\"udfc27a1c\"><li fid=\"uede205d4\" data-lake-id=\"uf82bdecc\" id=\"uf82bdecc\"><span data-lake-id=\"u17b01cf7\" id=\"u17b01cf7\">原子性</span></li></ul><p data-lake-id=\"ub982efaf\" id=\"ub982efaf\"><span data-lake-id=\"ucbe11930\" id=\"ucbe11930\">事务开始后的所有操作，要么全部昨晚，要么全部不做，不可能停止在中间环节。事务执行过程中出错，会回滚到事物开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体，就像化学中学过的原子，是物质构成的基本单位</span></p><p data-lake-id=\"ub08b33f3\" id=\"ub08b33f3\"><span data-lake-id=\"ub9729d58\" id=\"ub9729d58\">​</span><br></p><ul list=\"udfc27a1c\" start=\"2\"><li fid=\"uede205d4\" data-lake-id=\"u69da904b\" id=\"u69da904b\"><span data-lake-id=\"ub99171c0\" id=\"ub99171c0\">一致性</span></li></ul><p data-lake-id=\"uf1c181e7\" id=\"uf1c181e7\"><span data-lake-id=\"u22d76f56\" id=\"u22d76f56\">事务开始前和结束后，数据库的完整性约束没有被破坏。比如 A 向 B 转账，不可能 A 扣了钱，B 却没收到</span></p><p data-lake-id=\"uf9650e61\" id=\"uf9650e61\"><span data-lake-id=\"u9803bcca\" id=\"u9803bcca\">​</span><br></p><ul list=\"udfc27a1c\" start=\"3\"><li fid=\"uede205d4\" data-lake-id=\"u0f53e28e\" id=\"u0f53e28e\"><span data-lake-id=\"u656656e0\" id=\"u656656e0\">隔离性</span></li></ul><p data-lake-id=\"u07619115\" id=\"u07619115\"><span data-lake-id=\"u62a0c51b\" id=\"u62a0c51b\">同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如 A 正在从一张银行卡中取钱，在 A 取钱的过程结束钱，B 不能向这张卡转账</span></p><p data-lake-id=\"u9fa1f7f4\" id=\"u9fa1f7f4\"><span data-lake-id=\"u731cc6aa\" id=\"u731cc6aa\">​</span><br></p><ul list=\"udfc27a1c\" start=\"4\"><li fid=\"uede205d4\" data-lake-id=\"u2996f704\" id=\"u2996f704\"><span data-lake-id=\"u2cd3b715\" id=\"u2cd3b715\">持久性</span></li></ul><p data-lake-id=\"u5e0649b9\" id=\"u5e0649b9\"><span data-lake-id=\"ueadd100f\" id=\"ueadd100f\">事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚</span></p><p data-lake-id=\"u615e1486\" id=\"u615e1486\"><span data-lake-id=\"uf9845a2e\" id=\"uf9845a2e\">​</span><br></p><h2 data-lake-id=\"vFPoF\" id=\"vFPoF\"><span data-lake-id=\"u22cb0a1a\" id=\"u22cb0a1a\">事务的并发问题</span></h2><p data-lake-id=\"ud8ef27e6\" id=\"ud8ef27e6\"><br></p><ul list=\"ud8155928\"><li fid=\"u3e166dbc\" data-lake-id=\"ue4a69e6d\" id=\"ue4a69e6d\"><span data-lake-id=\"uc05f2638\" id=\"uc05f2638\">脏读</span></li></ul><p data-lake-id=\"u4cb92baf\" id=\"u4cb92baf\"><span data-lake-id=\"u2bcb4d50\" id=\"u2bcb4d50\">事务 A 获取了事务 B 更新的数据，然后 B 回滚操作，那么 A 读到的数据是脏数据</span></p><p data-lake-id=\"u35ccef9b\" id=\"u35ccef9b\"><span data-lake-id=\"u35b7ce9f\" id=\"u35b7ce9f\">​</span><br></p><ul list=\"u4eb1fc8a\"><li fid=\"u45e840ea\" data-lake-id=\"uddda1fed\" id=\"uddda1fed\"><span data-lake-id=\"u5c0e3a26\" id=\"u5c0e3a26\">不可重复读</span></li></ul><p data-lake-id=\"u5152fc0e\" id=\"u5152fc0e\"><span data-lake-id=\"ua949e2dc\" id=\"ua949e2dc\">事务 A 多次读取同一数据，事务 B 在事务 A 多次读取的过程中，对数据做了更新并提交，导致事务 A 多次读取同一数据时，结果不一致</span></p><p data-lake-id=\"ud579d776\" id=\"ud579d776\"><span data-lake-id=\"uccaa1448\" id=\"uccaa1448\">​</span><br></p><ul list=\"u4ddfc3b2\"><li fid=\"uad68a3cc\" data-lake-id=\"ue1433893\" id=\"ue1433893\"><span data-lake-id=\"u80b0a93f\" id=\"u80b0a93f\">幻读</span></li></ul><p data-lake-id=\"u287252d6\" id=\"u287252d6\"><span data-lake-id=\"u9b6304d1\" id=\"u9b6304d1\">系统管理员 A 将数据库中所有学生的成绩从具体分数改为 ABCDE 等级，但是系统管理员 B 就在这个时候插入了一条具体分数的记录，当系统管理员 A 改结束后发现还有一条记录没有改过来，就好像发生了幻觉一样，这就叫幻读</span></p><p data-lake-id=\"udfea60e5\" id=\"udfea60e5\"><span data-lake-id=\"ue84ed658\" id=\"ue84ed658\">​</span><br></p><blockquote data-lake-id=\"u4320ea87\" id=\"u4320ea87\"><p data-lake-id=\"u8eb0557a\" id=\"u8eb0557a\"><span data-lake-id=\"u69bcec7f\" id=\"u69bcec7f\">不可重复读和幻读很容易混淆，不可重复读侧重于修改，幻读侧重于新增或删除。解决不可重复读的问题只需要锁住满足条件的行，解决幻读需要锁表</span></p></blockquote><p data-lake-id=\"u5fb78b11\" id=\"u5fb78b11\"><span data-lake-id=\"u77a50837\" id=\"u77a50837\">​</span><br></p><h2 data-lake-id=\"hxxGo\" id=\"hxxGo\"><span data-lake-id=\"u180dbc66\" id=\"u180dbc66\">事务的隔离级别</span></h2><card type=\"block\" name=\"table\" value=\"data:%7B%22id%22%3A%22QG7da%22%2C%22rows%22%3A5%2C%22cols%22%3A4%2C%22html%22%3A%22%3Ctable%20data-lake-id%3D%5C%22QG7da%5C%22%20id%3D%5C%22QG7da%5C%22%20class%3D%5C%22lake-table%5C%22%20style%3D%5C%22width%3A%20651px%5C%22%3E%3Ccolgroup%3E%3Ccol%20width%3D%5C%22235%5C%22%3E%3Ccol%20width%3D%5C%22137%5C%22%3E%3Ccol%20width%3D%5C%22140%5C%22%3E%3Ccol%20width%3D%5C%22139%5C%22%3E%3C%2Fcolgroup%3E%3Ctbody%3E%3Ctr%20data-lake-id%3D%5C%22u2752fe5d%5C%22%20id%3D%5C%22u2752fe5d%5C%22%3E%3Ctd%20data-lake-id%3D%5C%22ua2383945%5C%22%20id%3D%5C%22ua2383945%5C%22%3E%3Cp%20data-lake-id%3D%5C%22uceb3ddbf%5C%22%20id%3D%5C%22uceb3ddbf%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22u2cb1eceb%5C%22%20id%3D%5C%22u2cb1eceb%5C%22%3E%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22u4ea81c54%5C%22%20id%3D%5C%22u4ea81c54%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u1b7385b7%5C%22%20id%3D%5C%22u1b7385b7%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22u0f09af58%5C%22%20id%3D%5C%22u0f09af58%5C%22%3E%E8%84%8F%E8%AF%BB%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22u0c989eb7%5C%22%20id%3D%5C%22u0c989eb7%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u555c5d6b%5C%22%20id%3D%5C%22u555c5d6b%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22ue86d3d0b%5C%22%20id%3D%5C%22ue86d3d0b%5C%22%3E%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22uf3e7f1f6%5C%22%20id%3D%5C%22uf3e7f1f6%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u69789088%5C%22%20id%3D%5C%22u69789088%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22uc66dc9e1%5C%22%20id%3D%5C%22uc66dc9e1%5C%22%3E%E5%B9%BB%E8%AF%BB%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20data-lake-id%3D%5C%22udaf3cc6a%5C%22%20id%3D%5C%22udaf3cc6a%5C%22%3E%3Ctd%20data-lake-id%3D%5C%22ua1e70694%5C%22%20id%3D%5C%22ua1e70694%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u708276ea%5C%22%20id%3D%5C%22u708276ea%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22u9132f211%5C%22%20id%3D%5C%22u9132f211%5C%22%3E%E8%AF%BB%E6%9C%AA%E6%8F%90%E4%BA%A4(read-uncommited)%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22u97fa046c%5C%22%20id%3D%5C%22u97fa046c%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u99f8d3d2%5C%22%20id%3D%5C%22u99f8d3d2%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22ue7c86f63%5C%22%20id%3D%5C%22ue7c86f63%5C%22%3E%E2%9C%85%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22u79281c08%5C%22%20id%3D%5C%22u79281c08%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u8034241e%5C%22%20id%3D%5C%22u8034241e%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22uee086cfb%5C%22%20id%3D%5C%22uee086cfb%5C%22%3E%E2%9C%85%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22ueded4595%5C%22%20id%3D%5C%22ueded4595%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u9b97a501%5C%22%20id%3D%5C%22u9b97a501%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22u86c41fc7%5C%22%20id%3D%5C%22u86c41fc7%5C%22%3E%E2%9C%85%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20data-lake-id%3D%5C%22u2d8f49d1%5C%22%20id%3D%5C%22u2d8f49d1%5C%22%3E%3Ctd%20data-lake-id%3D%5C%22u25e216f2%5C%22%20id%3D%5C%22u25e216f2%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u1ebc3632%5C%22%20id%3D%5C%22u1ebc3632%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22u56b5a658%5C%22%20id%3D%5C%22u56b5a658%5C%22%3E%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB(read-commited)%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22u457def2e%5C%22%20id%3D%5C%22u457def2e%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u94308f2a%5C%22%20id%3D%5C%22u94308f2a%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22ub0cf22e9%5C%22%20id%3D%5C%22ub0cf22e9%5C%22%3E%E2%9D%8C%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22u34ba7af8%5C%22%20id%3D%5C%22u34ba7af8%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u6bac2af6%5C%22%20id%3D%5C%22u6bac2af6%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22u6a1dac7a%5C%22%20id%3D%5C%22u6a1dac7a%5C%22%3E%E2%9C%85%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22ufdf41cf1%5C%22%20id%3D%5C%22ufdf41cf1%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u72161e72%5C%22%20id%3D%5C%22u72161e72%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22ucbb9ae8f%5C%22%20id%3D%5C%22ucbb9ae8f%5C%22%3E%E2%9C%85%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20data-lake-id%3D%5C%22u5dbb0298%5C%22%20id%3D%5C%22u5dbb0298%5C%22%3E%3Ctd%20data-lake-id%3D%5C%22u792aed89%5C%22%20id%3D%5C%22u792aed89%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u9c71acf4%5C%22%20id%3D%5C%22u9c71acf4%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22udcdc28bf%5C%22%20id%3D%5C%22udcdc28bf%5C%22%3E%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB(repeatable-read)%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22u76772e87%5C%22%20id%3D%5C%22u76772e87%5C%22%3E%3Cp%20data-lake-id%3D%5C%22uba5294af%5C%22%20id%3D%5C%22uba5294af%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22uc9b6ff54%5C%22%20id%3D%5C%22uc9b6ff54%5C%22%3E%E2%9D%8C%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22ufb08d81d%5C%22%20id%3D%5C%22ufb08d81d%5C%22%3E%3Cp%20data-lake-id%3D%5C%22uf91b5070%5C%22%20id%3D%5C%22uf91b5070%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22u9f271956%5C%22%20id%3D%5C%22u9f271956%5C%22%3E%E2%9D%8C%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22u4bb2de3b%5C%22%20id%3D%5C%22u4bb2de3b%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u9c43a488%5C%22%20id%3D%5C%22u9c43a488%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22ua432a0ef%5C%22%20id%3D%5C%22ua432a0ef%5C%22%3E%E2%9C%85%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3Ctr%20data-lake-id%3D%5C%22ude483aaa%5C%22%20id%3D%5C%22ude483aaa%5C%22%3E%3Ctd%20data-lake-id%3D%5C%22u50f39983%5C%22%20id%3D%5C%22u50f39983%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u3336a8f8%5C%22%20id%3D%5C%22u3336a8f8%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22uc83ae810%5C%22%20id%3D%5C%22uc83ae810%5C%22%3E%E4%B8%B2%E8%A1%8C%E5%8C%96(serializable)%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22u21cd93ae%5C%22%20id%3D%5C%22u21cd93ae%5C%22%3E%3Cp%20data-lake-id%3D%5C%22ub2c1445f%5C%22%20id%3D%5C%22ub2c1445f%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22ua05e497d%5C%22%20id%3D%5C%22ua05e497d%5C%22%3E%E2%9D%8C%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22u1b668940%5C%22%20id%3D%5C%22u1b668940%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u2268ebea%5C%22%20id%3D%5C%22u2268ebea%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22u59daee84%5C%22%20id%3D%5C%22u59daee84%5C%22%3E%E2%9D%8C%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3Ctd%20data-lake-id%3D%5C%22u5c02dc4c%5C%22%20id%3D%5C%22u5c02dc4c%5C%22%3E%3Cp%20data-lake-id%3D%5C%22u4a255c7b%5C%22%20id%3D%5C%22u4a255c7b%5C%22%3E%3Cspan%20data-lake-id%3D%5C%22u361ef23b%5C%22%20id%3D%5C%22u361ef23b%5C%22%3E%E2%9D%8C%3C%2Fspan%3E%3C%2Fp%3E%3C%2Ftd%3E%3C%2Ftr%3E%3C%2Ftbody%3E%3C%2Ftable%3E%22%2C%22margin%22%3Atrue%7D\"></card><p data-lake-id=\"ub9c0e172\" id=\"ub9c0e172\"><span data-lake-id=\"ue91bb5c2\" id=\"ue91bb5c2\">补充：</span></p><ul list=\"udb27674e\"><li fid=\"udada8661\" data-lake-id=\"u86c64206\" id=\"u86c64206\"><span data-lake-id=\"uc1f71853\" id=\"uc1f71853\">事务隔离级别为提交时，写数据只会锁住相应的行</span></li><li fid=\"udada8661\" data-lake-id=\"ud6e31542\" id=\"ud6e31542\"><span data-lake-id=\"u0848c565\" id=\"u0848c565\">事务隔离级别为可重复读时，如果检索条件有索引(包括主键索引)的时候，默认加锁方式是 next-key 锁；如果检索条件没有索引，更新数据时会锁住整张表，一个间隙被事务加了锁，其他事务是不能在这个间隙插入记录的，这样可以防止幻读</span></li><li fid=\"udada8661\" data-lake-id=\"u90baa9f4\" id=\"u90baa9f4\"><span data-lake-id=\"u2da3d70b\" id=\"u2da3d70b\">事务隔离级别为串行化时，读写数据都会锁住整张表</span></li><li fid=\"udada8661\" data-lake-id=\"ub9c0ae81\" id=\"ub9c0ae81\"><span data-lake-id=\"ud754ad6d\" id=\"ud754ad6d\">隔离级别越高，越能保证数据的完整性和一致性，但是对并发性能的影响也越大</span></li></ul><p data-lake-id=\"u8c850bbe\" id=\"u8c850bbe\"><span data-lake-id=\"uea9deefd\" id=\"uea9deefd\">​</span><br></p><p data-lake-id=\"u45da1ee8\" id=\"u45da1ee8\"><span data-lake-id=\"uc80d0a18\" id=\"uc80d0a18\">​</span><br></p><p data-lake-id=\"u6336efe8\" id=\"u6336efe8\"><span data-lake-id=\"u904a6ec3\" id=\"u904a6ec3\">​</span><br></p><p data-lake-id=\"u900c314c\" id=\"u900c314c\"><span data-lake-id=\"ue72eb704\" id=\"ue72eb704\">​</span><br></p><p data-lake-id=\"u3c594dc9\" id=\"u3c594dc9\"><span data-lake-id=\"ufaeeea28\" id=\"ufaeeea28\">​</span><br></p><p data-lake-id=\"u78e06762\" id=\"u78e06762\"><span data-lake-id=\"u4bdb50d0\" id=\"u4bdb50d0\">​</span><br></p><p data-lake-id=\"ude497a84\" id=\"ude497a84\"><span data-lake-id=\"u857b637d\" id=\"u857b637d\">​</span><br></p>",
  "body_draft_lake": "",
  "public": 0,
  "status": 1,
  "view_status": 0,
  "read_status": 1,
  "likes_count": 0,
  "comments_count": 0,
  "content_updated_at": "2022-02-22T06:45:27.000Z",
  "deleted_at": null,
  "created_at": "2022-02-22T04:22:52.000Z",
  "updated_at": "2022-03-13T10:00:48.000Z",
  "published_at": "2022-02-22T06:45:27.000Z",
  "first_published_at": "2022-02-22T04:23:18.000Z",
  "word_count": 788,
  "cover": null,
  "description": "基本要素 ACID原子性事务开始后的所有操作，要么全部昨晚，要么全部不做，不可能停止在中间环节。事务执行过程中出错，会回滚到事物开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体，就像化学中学过的原子，是物质构成的基本单位一致性事务开始前和结束后，数据库的完整性约束没有...",
  "custom_description": null,
  "hits": 0,
  "_serializer": "v2.doc_detail"
}